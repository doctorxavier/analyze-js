@using IDB.MW.Infrastructure.SecurityService.Enums
@using IDB.MW.Infrastructure.Helpers;
@using IDB.MW.Domain.Session;

<div class="row">
    <div class="col-md-2">
        @Confluence.ButtonBlue(Role.ESG_ADMIN, action : "changeRoleAdmin")
    </div>
    <div class="col-md-2">
        @Confluence.ButtonBlue(Role.ESG_PRIMARY_TEAM_MEMBER, action : "changeRolePrimary")
    </div>
    <div class="col-md-2">
        @Confluence.ButtonBlue(Role.ESG_TEAM_MEMBER, action : "changeRoleMember")
    </div>
    <div class="col-md-2">
        @Confluence.ButtonBlue(Role.ESG_REVIEWER, action : "changeOtherUser")
    </div>

    <div class="col-md-2">
        @Confluence.ButtonBlue("Remove Permissions", action : "removePermissions")
    </div>
</div>
<div class="row">
    <div class="col-md-2">
        @Confluence.ButtonBlue(Permission.ESG_SPECIALIST_WRITE_PERMISSIONS, action : "changePermission")
    </div>
</div>
<script>

    function changeRoleAdmin(source) {
        var response = postUrlWithOptions("@Url.Action( "ChangeRole" , "Mock" , new { area = "Mock" , role = Role.ESG_ADMIN } )", { dataType: 'json' });
        showMessage(response.responseJSON.ErrorMessage, true);
    }

    function changeRolePrimary(source) {
        var response = postUrlWithOptions(
            "@Url.Action("ChangeRole",
                "Mock",
                new { area = "Mock",
                    role = Role.ESG_PRIMARY_TEAM_MEMBER })",
            { dataType: 'json' });
        showMessage(response.responseJSON.ErrorMessage, true);
    }

    function changeRoleMember(source) {
        var response = postUrlWithOptions(
            "@Url.Action("ChangeRole", 
                "Mock", 
                new { area = "Mock", role = Role.ESG_TEAM_MEMBER })",
            { dataType: 'json' });
        showMessage(response.responseJSON.ErrorMessage, true);
    }

    function changeOtherUser(source) {
        var response = postUrlWithOptions("@Url.Action("ChangeRole", "Mock", new { area = "Mock", role = Role.ESG_REVIEWER })", { dataType: 'json' });
        showMessage(response.responseJSON.ErrorMessage, true);
    }

    function changePermission(source) {
        var response = postUrlWithOptions("@Url.Action("ChangePermission", "Mock", new { area = "Mock", permission = Permission.ESG_SPECIALIST_WRITE_PERMISSIONS })", { dataType: 'json' });
        showMessage(response.responseJSON.ErrorMessage, true);
    }

    function removePermissions(source) {
        var response = postUrlWithOptions("@Url.Action("ChangeRole", "Mock", new { area = "Mock" })", { dataType: 'json' });
        showMessage(response.responseJSON.ErrorMessage, true);
    }
</script>
