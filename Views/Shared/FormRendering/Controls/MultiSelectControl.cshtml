@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Domain.Values

@model IDB.MW.Application.Core.ViewModels.FormRendering.FieldDataViewModel

@{
    var selectedItems = new List<string>();
    var values = new List<MultiSelectListItem>();

    if (!string.IsNullOrEmpty(Model.InitialValue))
    {
        selectedItems.AddRange(Model.InitialValue.ToString().Split(','));
    };

    if (Model.ValueList != null)
    {
        values = Model.ValueList.Select(s =>
            new MultiSelectListItem
            {
                Value = s.Key,
                Text = s.Value,
                Selected = selectedItems.Contains(s.Key)
            }).ToList();
    }

    var required = Model.Validation.Code != ValidatorTypeCode.ATTR_NOT_MANDATORY;
    var dataAttributes = Model.Attributes.ToDictionary(x => x.Key, x => x.Value);
}

@Confluence.LabelsGroup(
    Model.Title,
    Confluence.LabelBold(string.Join(", ", values.Where(k => k.Selected).Select(a => a.Text))),
    contentEdit: Model.HasWritePermission ?
        Confluence.InputDropDownMulti(
            Model.Name,
            values,
            dataAttributes: dataAttributes,
            required: required,
            width: "100%",
            disabled: !Model.HasReadPermission
            ) :
        Confluence.InputDropDownMulti(
            Model.Name,
            values,
            dataAttributes: dataAttributes,
            required: required,
            width: "100%",
            disabled: Model.HasReadPermission
            ),
    asterisk: required)