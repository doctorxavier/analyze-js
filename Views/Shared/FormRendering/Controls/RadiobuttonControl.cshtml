@using IDB.Presentation.MVC4.Services.Core.DynamicFormsHelper
@model IDB.MW.Application.Core.ViewModels.FormRendering.FieldDataViewModel

@{
    string selectedValue = Model.InitialValue != null ? Model.InitialValue.ToString() : "";
    var displayValue = Model.ValueList.FirstOrDefault(a => a.Key == selectedValue);
    var displayText = displayValue == null ? "" : displayValue.Value;

    var radioHelperList = new List<HelperResult>();
    var radioHelperListDisabled = new List<HelperResult>();

    foreach (var item in Model.ValueList)
    {
        var isChecked = item.Key == selectedValue;

        radioHelperList.Add(Confluence.InputRadioButton(item.Key,
            Model.Name, isChecked, false, !Model.HasReadPermission, Model.CssClass,
            Model.Attributes.ToDictionary(x => x.Key, x => x.Value),
            item.Value, null, false, true));

        radioHelperListDisabled.Add(Confluence.InputRadioButton(item.Key,
            Model.Name, isChecked, false, Model.HasReadPermission, Model.CssClass,
            Model.Attributes.ToDictionary(x => x.Key, x => x.Value),
            item.Value, null, false, true));
    }
}

@Confluence.LabelsGroup(title: Model.Title,
                        contentRead: Confluence.LabelBold(displayText),
                        contentListEdit: Model.HasWritePermission ? radioHelperList : radioHelperListDisabled,
                        asterisk: Model.Validation.Code == "ATTR_MANDATORY"
                        )
