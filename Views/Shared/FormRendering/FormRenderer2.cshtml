@using System.Web.Script.Serialization
@using IDB.MW.Application.AttributesModule.ViewModels.AttributesService.Layouts
@using IDB.MW.Domain.Contracts.ModelRepositories.Security
@using IDB.MW.Domain.Session
@using IDB.MW.Infrastructure.Data.Optima.Repositories.Models
@using Newtonsoft.Json.Linq
@model IDB.MW.Application.AttributesModule.ViewModels.AttributesService.AttributeFormViewModel

@{

    //JObject json = JObject.Parse(Model.Layout);

    JavaScriptSerializer j = new JavaScriptSerializer();
    Formulary formulary = (Formulary)j.Deserialize(Model.Layout, typeof(Formulary));


    //if (ViewData["pageName"] == null)
    //{
    //    throw new Exception("'pageName' key is not found in ViewData");
    //}

    //string pageName = ViewData["pageName"].ToString();


    //ISecurityModelRepository objSecurityModelRepository = new SecurityModelRepository();

    //var operationNumber = IDBContext.Current.Operation ?? string.Empty;
    //var arrPermissions = IDBContext.Current.Permissions ?? new List<string>();

    //Model.SecurityFieldAccess = objSecurityModelRepository.GetFieldBehaviorByPermissions(operationNumber, pageName, arrPermissions, 0, 0);
}
<style>


    .attributesSectionLabel {
        margin-left: 15px;
        margin-bottom: 30px;
        margin-top: 30px;
    } 

    .attributesGroupLabel {
        margin-bottom: 30px;
    }

    .attributeRightColumnGray {
        padding-left:  16px;
        padding-right: 16px;
    }
        .attributeRightColumnGray:not(:last-child) {
            border-right: 1px #bbbbbc solid;
        }

    .row-eq-height {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
    }

    .LendingParent div.LabelsGroup,
    .LendingChild div.LabelsGroup {
        min-height: 30px;
    }

</style>
<div class="">

    @if (Model != null)
    {
        //var
    <div class="row">
        @foreach (var section in formulary.Sections)
        {
            //@Confluence.LabelSubTitleGroup(section.GroupLabel)
            <div class="col-md-12">
                @Confluence.LabelSubTitleGroup(section.GroupLabel, htmlClass: "attributesSectionLabel")

                @foreach (var layout in section.Layouts)
                {
                    <div class="row row-eq-height">
                        @foreach (var cell in layout.Cells)
                        {
                            <div class="attributeRightColumnGray @cell.Class">
                                @foreach (var element in cell.Elements)
                                {
                                    switch (element.Type)
                                    {
                                        case "GroupLabel": @Confluence.LabelSubTitleGroup(element.Code,htmlClass:"attributesGroupLabel"); break;
                                        case "Attribute":
                                            var field = Model.Attributes.FirstOrDefault(o => o.Name == element.Code);
                                            if (field != null)
                                            {
                                                @Html.Partial("FormRendering/FieldRenderer", field); 
                                            }
                                            break;
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
    }
</div>
