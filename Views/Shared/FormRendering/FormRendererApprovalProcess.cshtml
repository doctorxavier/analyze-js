@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.Services.Core.DynamicFormsHelper
@using IDB.MW.Domain.Session
@model IDB.MW.Application.Core.ViewModels.FormRendering.FieldDataViewModel

<style type="text/css">
    .informationplace.approval {
        width: auto;
        margin-left: 20px;
        vertical-align: middle;
    }

    @@media(min-width: 1366px) {
        .noteHeader {
            margin-right: -20%;
            margin-top: -4%;
            margin-left: 60%;
            width: 330px;
        }
    }

    @@media(max-width: 1366px) {
        .LabelsGroup div.noteHeader {
            margin-right: -30%;
            margin-top: -8%;
            margin-left: 70%;
            width: 330px;
        }
    }
</style>
<div class="LabelsGroup">
    @if (Model.AutomaticValue != "")
    {
        <div class="noteHeader" 
             data-pagemode="read"
             style="background: #f6f7f8;
                            font: normal 14px 'OpenSans';
                            color: #333333;
                            position:absolute;
						    z-index: 99;
                            display:none">
            <img id="imgCloseText"
                 style="width:20px;
                        float:right;
                        filter: alpha(opacity=60);
                        -moz-opacity: 0.6;
                        opacity: 0.6;"
                 src="~/Images/icons/btn-delete.png"
                 onclick="$('.noteHeader').toggle()">
        

        
                <div style="margin-left:15px">
                    <div id="approvalTitle">
                        @Localization.GetText("Automatically Calculated Approval Process")
                    </div>
                    <div id="approvalValue" style="font-weight: bold;">
                        <b></b>
                    </div>
                    <div id="approvalJusficationTitle">
                        <b></b>
                    </div>
                    <div id="approvalJusficationText" style="font-weight: bold;">
                       <b></b>
                    </div>
                </div>
        </div>
    }

    <label class="lgTit" style="display:inline">@Model.Title</label>
    @if (Model.IsAutomaticAndManual)
    {
        <a class="informationplace approval" 
           data-pagemode="read" 
           href="javascript:void(0)" 
           onclick="$(this).closest('.approval-data-content').find('.noteHeader').toggle()">
            <span class="icoInformation"></span>
        </a>
    }

    <div class="hide">
        <input type="hidden" class="approval-automatic-value" value="@Model.AutomaticValue" />
    </div>

    
    <div data-pagemode="read">
        <label class="lgCont">
            @if ((Model.ValueList != null) && Model.ValueList.Any() && !string.IsNullOrWhiteSpace(Model.InitialValue))
            {
                var item = Model.ValueList.FirstOrDefault(x => x.Key == Model.InitialValue);
                if (item != null)
                {
                    <label class="labelNormal bold">@item.Value</label>
                }
            }
        </label>
    </div>

    <script type="text/javascript">

        var hasApprovalEditPermission = JSON.parse(String("@IDBContext.Current.HasPermission("Edit Approval Attribute")").toLowerCase());
        var isIgrLon = JSON.parse(String("@Model.IsIgrLon").toLowerCase());
        var isAutomaticProcess = JSON.parse(String("@Model.IsAutomaticProcess").toLowerCase());

    </script>
	
	
	<script type="text/javascript">

	$(document).ready(function() {
		if (!isIgrLon) {
		    $('#autoapproval-title').remove();
		    $('#justificationField').remove();
		}
		else if (!hasApprovalEditPermission) {
		    $('#Justification').attr({ 'readonly': 'readonly' }).css({ 'border': '0', 'background': 'transparent' });
		}
	});

	</script>
	

    @if ((Model.IsIgrLon && IDBContext.Current.HasPermission("Edit Approval Attribute")) || !Model.IsIgrLon)
    {
        <div data-pagemode="edit" class="lgCont" id="editmode-approval-tooltip-content">
            @Confluence.InputDropDown(
            Model.InitialValue,
            Model.Name,
            Model.ValueList == null ? null :
            Model.ValueList.Select(s => new SelectListItem
            {
                Value = s.Key,
                Text = s.Value,
                Selected = s.Key == Model.InitialValue,
                Group = new SelectListGroup { Name = s.Parent }
            }),
            true,
            Model.CssClass, false, true,
            Model.Attributes.ToDictionary(x => x.Key, x => x.Value),
            width: "100%",
            parentValue: Model.Parent != null,
            disabled: !Model.HasReadPermission)

        </div>
		
    }
    else
    {
        <div data-pagemode="edit">
			
            <label class="lgCont">
                @if ((Model.ValueList != null) && Model.ValueList.Any() && !string.IsNullOrWhiteSpace(Model.InitialValue))
                {
                    var item = Model.ValueList.FirstOrDefault(x => x.Key == Model.InitialValue);
                    if (item != null)
                    {
                        <label class="labelNormal bold">@item.Value</label>
                    }
                }
            </label>
			
        </div>

    }

    @if (Model.IsIgrLon)
    {
        <div data-pagemode="edit" style="padding-top: 15px" id="autoapproval-title">
		    <div class="LabelsGroup">
			    <div>
				    <label class="lgTit" id="approvalProcessTitle"></label>
			    </div>
			    <label class="lgCont">
				    <label class="labelNormal bold" id="approvalProcessValue"></label>
			    </label> 
		    </div>
	    </div>
    }

</div>
