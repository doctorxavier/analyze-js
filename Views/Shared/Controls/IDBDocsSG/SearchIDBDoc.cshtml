@using IDB.Presentation.MVC4.Helpers
@using IDB.Architecture.Language
@model IDB.Presentation.MVC4.Models.Documents.SearchDocumentModalViewModel

<div data-id="@Model.SearchModalId">
    <ul class="tab03" data-tab=".vex [data-id=@Model.SearchModalId] [data-id-selector=tabContainer]">
        <li class="active" data-tab-id="search" data-tab-active="true" data-tab-url="@Url.Action("SearchIDBDocSearchFormSG", "DocumentModal", new { area = "" })">
            @Localization.GetText("Document.Tabs.Search")
        </li>
    </ul>

    <div class="row">
        <div class="col-md-12">
            <div class="modalContent" data-id="modalContent">
                <div data-id-selector="tabContainer">
                    @Html.Partial("Controls/IDBDocsSG/SearchIDBDocSearchForm")
                </div>
                <div data-id="modalButtonsContainer" class="footer-search-add-modal">
                    <div data-id="search-result-count" class="search-result-count">
                        @*<input type="hidden" name="count"/>
                        <span data-id="total" class="total"></span>
                        <span data-id="selected" class="selected"></span>*@
                    </div>
                    <div class="footer-search-add-moda-buttons">
                        @Display.ButtonLink(Localization.GetText("Document.Button.Cancel"), attributes: new Dictionary<string, string>() { { "data-id", "cancelButton" } })
                        @Display.Button01(Localization.GetText("Document.Button.Search"), attributes: new Dictionary<string, string>() { { "data-id", "performButton" } })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.ScriptBlock(
    @<script type="text/javascript">

    registerCallback(function () {
        // Action for cancel button
        $(document).off("click", "[data-id=@Model.SearchModalId] [data-id=cancelButton]");
        $(document).on("click", "[data-id=@Model.SearchModalId] [data-id=cancelButton]", function () {
            var button = $(this);
            var modalContainer = button.parents("[data-id=@Model.SearchModalId]");
            var vexModal = modalContainer.parents(".vex");
            vex.closeByID(vexModal.data().vex.id);
        });

        // Action when is pressed the button "ok/search/submit..."
        $(document).off("click", "[data-id=@Model.SearchModalId] [data-id=performButton]");
        $(document).on("click", "[data-id=@Model.SearchModalId] [data-id=performButton]", function () {
            var button = $(this);
            var modalContent = button.parents("[data-id=modalContent]");
            var tabContainer = modalContent.find('[data-id-selector=tabContainer]');

            //var searchContainer = modalContent.find('[data-id-selector=searchContainer]');

            var isSearchForm = tabContainer.find("[data-id-selector=search-form]").length != 0;
            var isSearchFormResults = tabContainer.find("[data-id-selector=search-form-results]").length != 0;

            if (isSearchForm) {
                executeSearch(tabContainer, button, '@Localization.GetText("Document.Button.Send")');
            }
            else if (isSearchFormResults) {
                executeSendSelected(tabContainer, button);
            }
        });

        //JS For Search TAB
        $(document).off("click", "[data-id=@Model.SearchModalId] [name=chkInputCorrespondence]");
        $(document).on("click", "[data-id=@Model.SearchModalId] [name=chkInputCorrespondence]", function () {
            var source = $(this);
            var inputOutput = source.parents('.row:first').next('[data-id-selector=output-input-container]');
            var input = inputOutput.find('[data-id-selector=input-correspondence-container]');
            var output = inputOutput.find('[data-id-selector=output-correspondence-container]');
            input.toggleClass('hide');
            inputOutput.addClass('hide');
            if (!input.hasClass('hide') || !output.hasClass('hide')) {
                inputOutput.removeClass('hide');
            }
        });

        $(document).off("click", "[data-id=@Model.SearchModalId] [name=chkOutputCorrespondence]");
        $(document).on("click", "[data-id=@Model.SearchModalId] [name=chkOutputCorrespondence]", function () {
            var source = $(this);
            var inputOutput = source.parents('.row:first').next('[data-id-selector=output-input-container]');
            var input = inputOutput.find('[data-id-selector=input-correspondence-container]');
            var output = inputOutput.find('[data-id-selector=output-correspondence-container]');
            output.toggleClass('hide');
            inputOutput.addClass('hide');
            if (!input.hasClass('hide') || !output.hasClass('hide')) {
                inputOutput.removeClass('hide');
            }
        });

        $(document).off("click", "[data-id=@Model.SearchModalId] [data-id=clearFilters]");
        $(document).on("click", "[data-id=@Model.SearchModalId] [data-id=clearFilters]", function () {
            var source = $(this);
            var modalContent = source.parents("[data-id=modalContent]");
            var button = modalContent.find("[data-id=modalButtonsContainer] [data-id=performButton]");
            var buttonSearchFormText = '@Localization.GetText("Document.Button.Search")';
            button.html(buttonSearchFormText);

            var tabContainer = modalContent.find('[data-id-selector=tabContainer]');

            tabContainer.load('@Url.Action("SearchIDBDocSearchFormSG", "DocumentModal", new { area = "" })');
        });

        $(document).off("click", "[data-id=@Model.SearchModalId] [data-id=selectableDocument]");
        $(document).on("click", "[data-id=@Model.SearchModalId] [data-id=selectableDocument]", function () {
            var source = $(this);
            var document = source.children(".documentLabel");

            @if (!Model.MultipleSelection)
                {
                    @:source.siblings(".document-box").find(".documentLabel").removeClass("selected");
                                                                                                                            }

            document.toggleClass('selected');

            var allSelectedDocuments = source.parent().find('.documentLabel.selected');
            //$('[data-id=search-result-count] span[data-id=selected]').html(String.format('({0} selected)', allSelectedDocuments.length));

            var preview = source.parents("[data-id-selector=result-container-main]").children(".documentPreview");


            var preview = source.parents("[data-id-selector=result-container-main]").children("[data-id-selector=document-preview]");

            if (document.hasClass('selected')) {
                try {
                    var documentData = $.parseJSON(source.attr('data-json'));
                    preview.find('[data-id-selector=documentName]').text(documentData.DocumentName != null ? documentData.DocumentName : '');
                    preview.find('[data-id-selector=documentDate]').text(documentData.CreationDate != null ? documentData.CreationDate : '');
                    preview.find('[data-id-selector=idbNumber]').text(documentData.DocumentNumber != null ? documentData.DocumentNumber : '');
                    preview.find('[data-id-selector=docDescription]').text(documentData.Description != null ? documentData.Description : '');
                    preview.find('[data-id-selector=docAuthor]').text(documentData.FullName != null ? documentData.FullName : '');
                    preview.find('[data-id-selector=operationNumber]').text(documentData.MultiLoans != null ? documentData.MultiLoans : '');
                    preview.find('[data-id-selector=contractNumber]').text(documentData.MultiLoans != null ? documentData.MultiLoans : '');
                }
                catch (e) {
                }
            }
            else {
                preview.find('[data-id-selector=documentName]').html('&nbsp;');
                preview.find('[data-id-selector=documentDate]').html('&nbsp;');
                preview.find('[data-id-selector=idbNumber]').html('&nbsp;');
                preview.find('[data-id-selector=docDescription]').html('&nbsp;');
                preview.find('[data-id-selector=docAuthor]').html('&nbsp;');
                preview.find('[data-id-selector=operationNumber]').html('&nbsp;');
                preview.find('[data-id-selector=contractNumber]').html('&nbsp;');
            }
        });

        function executeSearch(tabContainer, button, actionButtonText) {
            postUrl('@Url.Action("SearchIDBDocumentsSG", "DocumentModal", new { area = "" })', serializeContainer(tabContainer))
                .done(function (data) {
                    tabContainer.html(data);
                    button.html(actionButtonText);
                });
        }

        function executeSendSelected(tabContainer, button) {

            var documentContainer = tabContainer.find("[data-id-selector=documents-container]");
            var documentList;

            if (documentContainer.length > 0) {
                documentList = documentContainer.children(".document-box").children(".selected").parent();
            } else {
                documentList = $(".result-container-main").find("tr.selected");
            }

            var documentsObject = [];
            documentList.each(function (index, element) {
                documentsObject.push($.parseJSON($(element).attr('data-json')));
            });

            @if (!string.IsNullOrEmpty(Model.TargetFunction))
            {
                @:window["@Model.TargetFunction"](documentsObject, 'selected');
            }

            var modalContainer = button.parents("[data-id=@Model.SearchModalId]");
            var vexModal = modalContainer.parents(".vex");
            vex.closeByID(vexModal.data().vex.id);
        }
    });

    </script>)