@using Newtonsoft.Json

@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.Architecture.Language

@model List<IDB.MW.Infrastructure.Documents.Messages.SearchDocumentQuery>
@{
    var i = 0;
}
<script type="text/javascript">
    $("#tabla01Pag").sortableConfluence();

    function afterOrder() {
        tableSetting();
    }

    tableSetting();

    function tableSetting() {
        $("#tabla01Pag").selectableConfluence(true);
    }

    function afterSelect(row) {
        if (row.hasClass('selected')) {
            row.removeClass("selected").removeClass("row-selected");
        } else {
            var tbody = row.closest('tbody');
            row.addClass("selected").addClass("row-selected");
        }  
    }
</script>
<div class="document-result-region" data-id-selector="search-form-results">
    <div class="documentToolbar mb20">
        <div class="col-md-6 resultsContainer">
            @Confluence.Label(Model.Count.ToString() + " " + Localization.GetText("documents"))
        </div>
        <div class="col-md-6 text-right">
            @Confluence.LabelLink(Localization.GetText("Common.ClearAll"), dataAttributes: new Dictionary<string, string> { { "id", "clearFilters" } })
        </div>
    </div>
    <div data-id-selector="result-container-main" class="result-container-main">
            <table id="tabla01Pag" class="tableNormal">
                <thead>
                    <tr>
                        <th width="40px"></th>
                        <th class="sort">@Localization.GetText("Document.Box.IDBDocNumber")</th>
                        <th class="sort">@Localization.GetText("Document.Filter.DocumentName")</th>
                        <th class="sort" order-type="date">@Localization.GetText("Created")</th>
                        <th class="sort">@Localization.GetText("Document.Filter.IDBAuthorId")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var document in Model)
                    {
                        if (string.IsNullOrEmpty(document.DocumentNumber))
                        {
                            continue;
                        }
                        i++;
                        <tr data-id="@i" data-id-selector="selectableDocument" data-json="@JsonConvert.SerializeObject(document, Formatting.None)">
                            <td>
                                <span class="dm-selectedRow"></span>
                            </td>
                            @{
                                var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentNumber);
                            }
                            <td><a href=@secureUrl target="_blank">@document.DocumentNumber</a></td>

                            <td title="@document.DocumentName">
                                <div class="w230 text-break-points">
                                    @document.DocumentName
                                </div>
                            </td>
                            <td>@Confluence.LabelGetDate(document.CreationDate.AsDateTime())</td>
                            <td title="@document.FullName">@document.AuthorId</td>
                        </tr>
                    }
                </tbody>
            </table>
        <div class="clearfix"></div>
    </div>
</div>

<script type="text/javascript">
    $('[data-id=search-result-count] span[data-id=total]').html('@Model.Count documents');
    $('[data-id=search-result-count] span[data-id=selected]').html('(0 selected)');
    $('[data-id=search-result-count] input').val('@Model.Count');
</script>
