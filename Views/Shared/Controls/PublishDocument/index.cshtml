@using IDB.Architecture.Language

@{
    var Languages = new List<string> { Language.EN, Language.ES, Language.FR, Language.PT };
    var LanguageList = Languages.Select(item => new SelectListItem
    {
        Value = item,
        Text = item.ToUpper()
    });
}

<div class="container-fluid">
    <form name="frmPublishValidDocument"
          id="frmPublishValidDocument"
          data-target="@Url.Action("PublishDocument", "Disclose", new { area = "" })">
        @Html.Hidden("DocumentNumber", null)
        @Html.Hidden("OperationNumber", null)
        @Html.Hidden("StageDescription", null)
        @Html.Hidden("FileExtension", null)
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Confluence.Label(Localization.GetText("DM.Disclose.Modal.DocumentName"))
                    @Confluence.InputText(null, "DocumentName", required: true, width: "90%", id: "DocumentName")
                    <label id="lblFileExtension" name="lblFileExtension" class="labelNormal" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Confluence.Label(Localization.GetText("DM.Disclose.Modal.Author"))
                    @Confluence.InputDropDownAsync(null,
                   "AuthorId",
                   Url.Action("SearchUser", "Disclose", new { area = "" }),
                   width: "100%",
                   resetOnClick: false)
                </div>
            </div>
        </div>
        <div class="row mt10">
            <div class="col-md-6">
                <div class="form-group">
                    @Confluence.Label(Localization.GetText("DM.Disclose.Modal.Language"))
                    @Confluence.InputDropDown(null, "Language", LanguageList, required: true, width: "100%")
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Confluence.Label(Localization.GetText("DM.Disclose.Modal.Activities"))
                    @Confluence.InputDropDown(null,
                       "StageCode",
                       new List<SelectListItem>(),
                       required: true,
                       width: "100%",
                       dataAttributes: new Dictionary<string, string>
                       {
                           { "targetUri",  Url.Action("DisclosureActivities", "Disclose", new { area = "" })}
                       })
                </div>
            </div>
        </div>
    </form>
</div>