@using IDB.MW.Domain.Values;
@using IDB.Presentation.MVC4.Helpers
@model IDB.MW.Application.AdministrationModule.ViewModels.RuleEngService.RuleEngViewModel
@{
    Layout = "~/Areas/AdministrationSecondPhase/Views/Shared/_Layout.cshtml";
    var dropdownRuleEngGroup = Model.RuleGroupModule != null ?
        Html.BuildSelectItemList(Model.RuleGroupModule,
            o => o.Text,
            o => o.Value).ToList() :
        new List<SelectListItem>();
    var dropdownSource = Model.Source != null ?
        Html.BuildSelectItemList(Model.Source,
            o => o.Text,
            o => o.Value).ToList() :
        new List<SelectListItem>();
}

<div data-id="importRuleModal">
    <button data-id="buttonImportRuleModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="importRuleModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("AD.RE.ImportRule")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "save"]'
            data-custom-button-save-id="send"
            data-custom-button-save="@Localization.GetText("OP.OD.Save")"
            data-custom-button-save-style="buttonBlue"
            data-custom-button-save-callback="addRule"
            data-custom-button-save-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("OP.OD.Cancel")"
            data-custom-button-cancel-style="buttonLink"
            data-custom-modal-onclose=""
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="importRuleModal" class="hide modalBody"></div>
</div>

<div data-id="testRuleModal">
    <button data-id="buttonTestRuleModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="testRuleModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("AD.RE.Test")"
            data-custom-modal-validate="false"
            data-custom-modal-onclose=""
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="testRuleModal" class="hide modalBody"></div>
</div>

<div id="rulesEdit" class="content-expandable"
     data-parsley-validate="data-parsley-validate"
     data-url="@Url.Action("RulesCreateAndEditSave", "RuleEngSave", new {area = "AdministrationSecondPhase", idRule = Model.RuleEngId})">
    <input type="hidden" id="hidViewModel" value="@Model.SerializedViewModel" />
    <div class="col-md-12 mb40">
        @Confluence.Navigation(Confluence.LabelMainTitle(Localization.GetText("AD.RE.Rule")), Url.Action(controllerName: "RuleEngView", actionName: "SearchRules"))
    </div>

    <div class="header">
        <div class="row">
            <div class="col-md-12">
                @Html.Partial("Partials/buttonsEdit", false)
                <div class="text-right">
                    <div data-pagemode="edit">
                        <br />
                        @Confluence.ButtonBlue(Localization.GetText("AD.RE.ImportRule"), "importRule", "importRule")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            @Confluence.LabelBold(Localization.GetText("AD.RE.Module"))
        </div>
    </div>

    <div class="row mb20">
        <div data-pagemode="read">
            <div class="col-md-4">
                @Confluence.Label(Model.Module)
            </div>
        </div>
        <div data-pagemode="edit">
            <div class="col-md-4">
                @Confluence.InputDropDown(Model.ModuleId.ToString(),
               "SearchRuleModule",
               dropdownRuleEngGroup,
               width: "100%",
               required: true)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            @Confluence.LabelBold(Localization.GetText("MD.Management.Table.Code"))
        </div>
        <div class="col-md-9">
            @Confluence.LabelBold(Localization.GetText("OP.IN.Name"))
        </div>
    </div>

    <div class="row mb20">
        <div data-pagemode="read">
            <div id="codeRule" class="col-md-3">
                @Confluence.Label(Model.Code)
            </div>
            <div id="nameRule" class="col-md-9">
                @Confluence.Label(Model.Name)
            </div>
        </div>
        <div data-pagemode="edit">
            <div class="col-md-3">
                @Confluence.InputText(Model.Code, "SearchRuleCode", width: "100%", required: true)
            </div>
            <div class="col-md-9">
                @Confluence.InputText(Model.Name, "SearchRuleName", width: "100%", required: true)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-9">
            @Confluence.LabelBold(Localization.GetText("OP.AP.Documents.Description"))
        </div>
    </div>
    <div class="row mb20">
        <div data-pagemode="read">
            <div class="col-md-9">
                @Confluence.Label(Model.Description)
            </div>
            <div class="col-md-3">
                @Confluence.InputCheckbox(Model.IsActive, "activeREAD", "activeREAD", Localization.GetText("COMMON.Active"), disabled: true)
            </div>
        </div>
        <div data-pagemode="edit">
            <div class="col-md-9">
                @Confluence.InputText(Model.Description, "SearchRuleDescription", width: "100%", required: true)
            </div>
            <div class="col-md-3">
                @Confluence.InputCheckbox(Model.IsActive, "activeRE", "activeRE", Localization.GetText("COMMON.Active"))
            </div>
        </div>
    </div>

    <div data-pagemode="edit">
        <div class="row">
            <div class="col-md-5">
                @Confluence.LabelBold(Localization.GetText("AD.RE.SourceInformation"))
                <div class="mb20">
                    @Confluence.InputDropDown(null, "SelectSourceInformation", dropdownSource, width: "100%", required: false)
                </div>
                @Confluence.LabelBold(Localization.GetText("OP.CR.CreationForm.Attributes"))
                <div class="mb20">
                    @Confluence.InputDropDown(null, "SelectAttributes", null, width: "100%", required: false, disabled: true)
                </div>
            </div>
            <div class="col-md-7">
                <br />
                <div data-idb-fieldname="tblParam">
                    @Html.Partial("Partials/ParamTable")
                </div>
            </div>
        </div>
    </div>

    <div>
        @Confluence.InputHidden(Model.MaxOrder.ToString(), "maxValueOrder")
    </div>

    <div data-idb-fieldname="tblResponsibleUnits">
        @Html.Partial("Partials/ConditionsTable", Model.RuleEngCondition)
    </div>

    <div class="header">
        <div class="row">
            <div class="col-md-12">
                @Html.Partial("Partials/buttonsEdit", true)
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            @if (Model.RuleEngId == 0){
                <text>
            var success = enterEditMode(false, $("#rulesEdit"), false);
            if (success) {
                enterEditMode(false, $('[data-id=headerButtons]'), false);
                $('[name="importRule"]').addClass('hidden');
            }
            </text>
            }
        });

        function edit(source) {
            var success = enterEditMode(false, $("#rulesEdit"), false);
            if (success) {
                enterEditMode(false, $('[data-id=headerButtons]'), false);
            }
        }

        function cancel() {
            var msg = "@Localization.GetText("OP.IN.Message.Cancelnstitutions")";
            confirmAction(msg).done(function (pressOk) {
                if (pressOk) {
                    exitEditMode(true, $('#rulesEdit'), true, true);
                    window.location.href = '@Url.Action(controllerName: "RuleEngView", actionName: "RulesCreateAndEdit")' + "?idRule=" + '@Model.RuleEngId' + "&module=" + '@Model.Module';
                }
            });
        }

        function saveRuleEng() {
            $('[name="SearchRuleCode"]').next('ul.parsley-errors-list').find('li').remove();
            $('[name="SearchRuleCode"]').next('ul.parsley-errors-list').removeClass('filled');
            var code = $('[name="SearchRuleCode"]').val();
            var idRule = parseInt('@Model.RuleEngId');
            if ($('#RuleConditionTable tbody tr').length > 0) {
                if (idRule > 0) {
                    var urlActualCode = "@Url.Action("GetCodeActual", "RuleEngView", new { area = "AdministrationSecondPhase" })";
                    var isActualCode = postUrl(urlActualCode, { ruleEngId: idRule, code: code }).responseJSON.Data;
                    if (isActualCode) {
                        $('#RuleTable tr[data-id="1"]').addClass('hidden');
                        $('#RuleTable tr[data-id="2"]').addClass('hidden');
                        var response = saveContainer($('#rulesEdit'), '#hidViewModel', true, $('#headerButtons'), null, null, null, null, false);
                        if (response !== false) {
                            response.done(function (data) {
                                if (data.IsValid) {
                                    window.location.href = '@Url.Action(controllerName: "RuleEngView", actionName: "RulesCreateAndEdit")' + "?idRule=" + data.RuleId + "&module=" + data.Module;
                                } else {
                                    showMessage(data.ErrorMessage);
                                }
                            });
                        }
                    } else {
                        saveRule(code);
                    }
                } else {
                    saveRule(code);
                }
            } else {
                showMessage('@Localization.GetText("OP.FD.INSERT.ROWS.IN.CONDITIONAL.TABLE")');
            }
        }

        function saveRule(code) {
            var url = "@Url.Action("GetCodeAvailable", "RuleEngView", new { area = "AdministrationSecondPhase" })";
            var isAvailable = postUrl(url, { code: code }).responseJSON.Data;
            if (isAvailable) {
                $('#RuleTable tr[data-id="1"]').addClass('hidden');
                $('#RuleTable tr[data-id="2"]').addClass('hidden');
                var response = saveContainer($('#rulesEdit'), '#hidViewModel', true, $('#headerButtons'), null, null, null, null, false);
                if (response !== false) {
                    response.done(function (data) {
                        if (data.IsValid) {
                            window.location.href = '@Url.Action(controllerName: "RuleEngView", actionName: "RulesCreateAndEdit")' + "?idRule=" + data.RuleId + "&module=" + data.Module;
                        } else {
                            showMessage(data.ErrorMessage);
                        }
                    });
                }
            } else {
                showMessage('@Localization.GetText("AD.RE.Message.CodeNotAvailable")');
                var ruleCodeError = $('[name="SearchRuleCode"]').next('ul.parsley-errors-list');
                var codeError = '@Localization.GetText("AD.RE.CodeInUse")';
                ruleCodeError.addClass('filled');
                ruleCodeError.append('<li class="parsley-required">' + codeError + '</li>');
            }
        }

        function deleteRule(source) {
            var msg = '@Localization.GetText("OP.FD.Preparation.DeleteFund")';
            confirmAction(msg).done(function (pressOk) {
                if (pressOk) {
                    var row = source.closest('tr');
                    row.remove();
                }
            });
        }

        function newParam() {
            var settingCode = '@string.Empty';
            var settingName = '@string.Empty';
            var element = '@string.Empty';
            var parameter = $('[name="SearchRuleGroupFirstParameter"]').closest('div.inputSearch').attr('class').indexOf('hidden') !== -1;
            var operator = $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').attr('class').indexOf('hidden') !== -1;
            var value = $('[name="SearchRuleGroupFirstValues"]').closest('div.inputSearch').attr('class').indexOf('hidden') !== -1;
            var textDecimalValue = $('#txtValues').attr('class') !== 'hidden';
            var textValue = $('#txtValuesNormalText').attr('class') !== 'hidden';
            var container = $("#RuleConditionTable").find('tbody');
            var parameterName = $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"] a[dd-selected]').text();
            var parameterNameCode = $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"] a[dd-selected]').attr('dd-value');
            var parameterVal = $('[name="SearchRuleGroupFirstParameter_text"]').val();
            var operatorName = decodeURI($('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"] a[dd-selected]').attr('dd-value'));
            var valueName = $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"] a[dd-selected]').text();
            var valueNameCode = $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"] a[dd-selected]').attr('dd-value');
            var valueVal = $('[name="SearchRuleGroupFirstValues_text"]').val();
            var decimalValue = $('[name="textFirstValues"]').val();
            var normalTextValue = $('[name="textNormalFirstValues"]').val();
            var lastOrderValue = parseInt($('[name="maxValueOrder"]').val()) + 1;
            var operatorValue = $('#id-SearchRuleGroupFirstOperator').find('.valueText').text();
            var sourceName = $('#id-SelectSourceInformation').find('.valueText').text();
            var ruleEngElementName = $('#id-SelectAttributes').find('.valueText').text();

            if (!parameter && !operator && !value && !textDecimalValue && !textValue) {
                if ((parameterName != '' && parameterName == parameterVal) && operatorName != '' && (valueName != '' && valueName == valueVal)) {
                    if (operatorValue === '@RulesEngAttributes.LIKE') {
                        settingCode = "='" + parameterNameCode + "';;" + operatorName + "'%" + valueNameCode + "%'";
                        settingName = parameterNameCode + " " + operatorName + " '%" + valueNameCode + "%'";
                    } else {
                        settingCode = "='" + parameterNameCode + "';;" + operatorName + "'" + valueNameCode + "'";
                        settingName = parameterNameCode + " " + operatorName + " " + valueNameCode;
                    }

                    element = $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"] a[dd-selected]').text();

                    $.get("@Url.Action("GetRowCondition", "RuleEngView")",
                    {
                        idRule: '@Model.RuleEngId',
                        element: element,
                        settingName: settingName,
                        settingCode: settingCode,
                        lastOrderValue: lastOrderValue
                    },
                    function (data) {
                        $('[name="maxValueOrder"]').val(lastOrderValue);
                        $('#id-SearchRuleGroupFirstParameter').FirstorDefault();
                        $('[name="SearchRuleGroupFirstParameter"]').Clean();
                        $('[name="SearchRuleGroupFirstParameter_text"]').val("");
                        $('#id-SearchRuleGroupFirstOperator').FirstorDefault();
                        $('#id-SearchRuleGroupFirstValues').FirstorDefault();
                        $('[name="SearchRuleGroupFirstValues"]').Clean();
                        $('[name="SearchRuleGroupFirstValues_text"]').val("");
                        $('[name="SearchRuleGroupFirstValues"]').closest('div.inputSearch').addClass('hidden');
                        $('#btnNewParameter').addClass('hidden');
                        $(container).prepend(data);
                        enterEditMode(false, $(container), false);
                    });
                }

                return;
            }
            if (parameter && !operator && value && textDecimalValue && !textValue) {
                if (operatorName != '' && decimalValue != '') {
                    if (operatorValue === '@RulesEngAttributes.LIKE') {
                        settingCode = operatorName + " '%" + decimalValue + "%'";
                        settingName = operatorName + " '%" + decimalValue + "%'";
                    } else {
                        settingCode = operatorName + decimalValue;
                        settingName = operatorName + " " + decimalValue;
                    }

                    element = $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"] a[dd-selected]').text();
                    $.get("@Url.Action("GetRowCondition", "RuleEngView")",
                    {
                        idRule: '@Model.RuleEngId',
                        element: element,
                        settingName: settingName,
                        settingCode: settingCode,
                        lastOrderValue: lastOrderValue
                    },
                    function (data) {
                        $('[name="maxValueOrder"]').val(lastOrderValue);
                        $('#id-SearchRuleGroupFirstOperator').FirstorDefault();
                        $('[name="textFirstValues"]').val('0.00');
                        $('[name="textFirstValues"]').attr('value', '0.00');
                        $(container).prepend(data);
                        enterEditMode(false, $(container), false);
                    });
                }

                return;
            }
            if (parameter && !operator && !value && !textDecimalValue && !textValue) {
                if (operatorName != '' && (valueName != '' && valueName == valueVal)) {
                    if (sourceName == '@RulesEngAttributes.PARAMETERS') {
                        var url = "@Url.Action("VariableName", "RuleEngView", new { area = "AdministrationSecondPhase" })";
                        var variableName = postUrl(url, { ruleEngElementName: ruleEngElementName }).responseJSON.Data;

                        if (operatorValue === '@RulesEngAttributes.LIKE') {
                            settingCode = "'" + valueNameCode + "';;" + operatorName + "'%" + variableName + "%'";
                            settingName = valueNameCode + operatorName + variableName;
                        } else {
                            settingCode = "'" + valueNameCode + "';;" + operatorName + "'" + variableName + "'";
                            settingName = valueNameCode + operatorName + variableName;
                        }
                    } else {
                        if (operatorValue === '@RulesEngAttributes.LIKE') {
                            settingCode = operatorName + "'%" + valueNameCode + "%'";
                            settingName = operatorName + " '%" + valueNameCode + "%'";
                        } else {
                            settingCode = operatorName + "'" + valueNameCode + "'";
                            settingName = operatorName + " " + valueNameCode;
                        }
                    }

                    element = $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"] a[dd-selected]').text();
                    $.get("@Url.Action("GetRowCondition", "RuleEngView")",
                    {
                        idRule: '@Model.RuleEngId',
                        element: element,
                        settingName: settingName,
                        settingCode: settingCode,
                        lastOrderValue: lastOrderValue
                    },
                    function (data) {
                        $('[name="maxValueOrder"]').val(lastOrderValue);
                        $('#id-SearchRuleGroupFirstOperator').FirstorDefault();
                        $('#id-SearchRuleGroupFirstValues').FirstorDefault();
                        $('[name="SearchRuleGroupFirstValues"]').Clean();
                        $('[name="SearchRuleGroupFirstValues_text"]').val("");
                        $(container).prepend(data);
                        enterEditMode(false, $(container), false);
                    });
                }

                return;
            }
            if (parameter && !operator && value && !textDecimalValue && textValue) {
                if (operatorName != '' && normalTextValue != '') {
                    if (operatorValue === '@RulesEngAttributes.LIKE') {
                        settingCode = operatorName + "'%" + normalTextValue + "%'";
                        settingName = operatorName + " '%" + normalTextValue + "%'";
                    } else {
                        settingCode = operatorName + "'" + normalTextValue + "'";
                        settingName = operatorName + " " + normalTextValue;
                    }

                    element = $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"] a[dd-selected]').text();
                    $.get("@Url.Action("GetRowCondition", "RuleEngView")",
                    {
                        idRule: '@Model.RuleEngId',
                        element: element,
                        settingName: settingName,
                        settingCode: settingCode,
                        lastOrderValue: lastOrderValue
                    },
                    function (data) {
                        $('[name="maxValueOrder"]').val(lastOrderValue);
                        $('#id-SearchRuleGroupFirstOperator').FirstorDefault();
                        $('[name="textNormalFirstValues"]').val('');
                        $('[name="textNormalFirstValues"]').removeAttr('value');
                        $(container).prepend(data);
                        enterEditMode(false, $(container), false);
                    });
                }

                return;
            }
            if (!parameter && !operator && value && !textDecimalValue && textValue) {
                if ((parameterName != '' && parameterName == parameterVal) && operatorName != '' && normalTextValue != '') {
                    if (operatorValue === '@RulesEngAttributes.LIKE') {
                        settingCode = "='" + parameterNameCode + "';;" + operatorName + "'%" + normalTextValue + "%'";
                        settingName = parameterNameCode + " " + operatorName + " '%" + normalTextValue + "%'";
                    } else {
                        settingCode = "='" + parameterNameCode + "';;" + operatorName + "'" + normalTextValue + "'";
                        settingName = parameterNameCode + " " + operatorName + " " + normalTextValue;
                    }

                    element = $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"] a[dd-selected]').text();
                    $.get("@Url.Action("GetRowCondition", "RuleEngView")",
                    {
                        idRule: '@Model.RuleEngId',
                        element: element,
                        settingName: settingName,
                        settingCode: settingCode,
                        lastOrderValue: lastOrderValue
                    },
                    function (data) {
                        $('[name="maxValueOrder"]').val(lastOrderValue);
                        $('#id-SearchRuleGroupFirstParameter').FirstorDefault();
                        $('[name="SearchRuleGroupFirstParameter"]').Clean();
                        $('[name="SearchRuleGroupFirstParameter_text"]').val("");
                        $('#id-SearchRuleGroupFirstOperator').FirstorDefault();
                        $('[name="textNormalFirstValues"]').val('');
                        $('[name="textNormalFirstValues"]').removeAttr('value');
                        $(container).prepend(data);
                        enterEditMode(false, $(container), false);
                    });
                }

                return;
            }
        }

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-SelectSourceInformation"] a', function () {
            $('#RuleTable tr[data-id="1"]').addClass('hidden');
            $('#RuleTable tr[data-id="2"]').addClass('hidden');
            $('#btnNewParameter').addClass('hidden');
            $('[name="SearchRuleGroupFirstValues_text"]').val('');
            $('[name="SearchRuleGroupFirstParameter_text"]').val('');

            var item = $(this).attr("dd-value");
            if (item !== "") {

                var url = "@Url.Action("GetItems", "RuleEngView", new { area = "AdministrationSecondPhase" })";
                var response = postUrl(url, { item: item, type: "attributes" }).responseJSON.Data;

                $("#id-SelectAttributes").removeAttr("disabled");

                var listdata = $.map(response.GetItemsGroup, function (item) {
                    return '<li><a dd-value="' + item.Value + '">' + item.Text + '</a></li>';
                });

                listdata.unshift("<li><a dd-value>(select an option)</a></li>");

                $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"]').html(listdata.join(""));


                $('[name="SelectAttributes"]').attr("data-parsley-required", "true");
                $('ul.dropdown-menu[aria-labelledby="id-SelectAttributes"]').FirstorDefault();

            } else {
                $('[name="SelectAttributes"]').first().val("");
                $('[id="id-SelectAttributes"]').prop("disabled", true);
                $('[name="SelectAttributes"]').FirstorDefault();
            }
        });

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-SelectAttributes"] a', function () {
            $('#RuleTable tr[data-id="1"]').removeClass('hidden');
            $('#RuleTable tr[data-id="2"]').addClass('hidden');
            $('[name="SearchRuleGroupFirstParameter"]').closest('div.inputSearch').addClass('hidden');
            $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').addClass('hidden');
            $('[name="SearchRuleGroupFirstValues"]').closest('div.inputSearch').addClass('hidden');
            $('#txtValues').addClass('hidden');
            $('#txtValuesNormalText').addClass('hidden');
            $('#btnNewParameter').addClass('hidden');
            $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"] li').remove();
            $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupSecondParameter"] li').remove();
            $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"] li').remove();
            $('[name="textNormalFirstValues"]').val('');
            $('[name="textFirstValues"]').attr('value', 0.00);
            $('[name="SearchRuleGroupFirstValues_text"]').val('');
            $('[name="SearchRuleGroupFirstParameter_text"]').val('');

            var item = $(this).attr("dd-value");
            if (item !== "") {
                var url = "@Url.Action("GetAttributeParameters", "RuleEngView", new { area = "AdministrationSecondPhase" })";
                var response = postUrl(url, { item: item, type: "@string.Empty" }).responseJSON.Data;
                if (!response.IsInputManual) {
                    if (response.NumberOfSources > 1) {
                        $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').removeClass('hidden');
                        var listdataInd = $.map(response.Indicators, function (item) {
                            return '<li><a dd-value="' + encodeURI(item) + '">' + item + '</a></li>';
                        });

                        listdataInd.unshift("<li><a dd-value>(select an option)</a></li>");
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').html(listdataInd.join(""));
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').FirstorDefault();
                        $('[name="SearchRuleGroupFirstParameter"]').closest('div.inputSearch').removeClass('hidden');

                        var listdataParam = $.map(response.Parameters, function (item) {
                            return '<li class="hidden"><a dd-value="' + item.Value + '" dd-text="' + item.Text + '">' + item.Text + '</a></li>';
                        });

                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"]').html(listdataParam.join(""));
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"]').FirstorDefault();
                    } else {
                        $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').removeClass('hidden');
                        var listdataInd = $.map(response.Indicators, function (item) {
                            return '<li><a dd-value="' + encodeURI(item) + '">' + item + '</a></li>';
                        });

                        listdataInd.unshift("<li><a dd-value>(select an option)</a></li>");
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').html(listdataInd.join(""));
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').FirstorDefault();
                        $('[name="SearchRuleGroupFirstValues"]').closest('div.inputSearch').removeClass('hidden');

                        var listdataValue = $.map(response.Parameters, function (item) {
                            return '<li class="hidden"><a dd-value="' + item.Value + '" dd-text="' + item.Text + '">' + item.Text + '</a></li>';
                        });

                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"]').html(listdataValue.join(""));
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"]').FirstorDefault();
                        $('#normalDrpValues').removeClass('hidden');
                        $('#btnNewParameter').removeClass('hidden');
                    }
                } else if (response.InputManualType === "@RulesEngAttributes.NUMERIC") {
                    $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').removeClass('hidden');
                    var listdataInd = $.map(response.Indicators, function (item) {
                        return '<li><a dd-value="' + encodeURI(item) + '">' + item + '</a></li>';
                    });

                    listdataInd.unshift("<li><a dd-value>(select an option)</a></li>");
                    $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').html(listdataInd.join(""));
                    $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').FirstorDefault();
                    $('#txtValues').removeClass('hidden');

                    if (response.NumberOfSources > 0) {
                        $('[name="SearchRuleGroupFirstParameter"]').closest('div.inputSearch').removeClass('hidden');
                        var listdataParamNum = $.map(response.Parameters, function (item) {
                            return '<li class="hidden"><a dd-value="' + item.Value + '" dd-text="' + item.Text + '">' + item.Text + '</a></li>';
                        });

                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"]').html(listdataParamNum.join(""));
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"]').FirstorDefault();
                    }
                    $('#btnNewParameter').removeClass('hidden');
                }
                else {
                    $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').removeClass('hidden');
                    var listdataInd = $.map(response.Indicators, function (item) {
                        return '<li><a dd-value="' + encodeURI(item) + '">' + item + '</a></li>';
                    });

                    listdataInd.unshift("<li><a dd-value>(select an option)</a></li>");
                    $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').html(listdataInd.join(""));
                    $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstOperator"]').FirstorDefault();
                    $('#txtValuesNormalText').removeClass('hidden');

                    if (response.NumberOfSources > 0) {
                        $('[name="SearchRuleGroupFirstParameter"]').closest('div.inputSearch').removeClass('hidden');
                        var listdataParamText = $.map(response.Parameters, function (item) {
                            return '<li class="hidden"><a dd-value="' + item.Value + '" dd-text="' + item.Text + '">' + item.Text + '</a></li>';
                        });

                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"]').html(listdataParamText.join(""));
                        $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"]').FirstorDefault();
                    }
                    $('#btnNewParameter').removeClass('hidden');
                }
            } else {
                $('#RuleTable tr[data-id="1"]').addClass('hidden');
                $('#RuleTable tr[data-id="2"]').addClass('hidden');
                $('#btnNewParameter').addClass('hidden');
            }
        });

        function cleanParam() {
            $('[name="SearchRuleGroupFirstParameter"]').closest('div.inputSearch').addClass('hidden');
            $('#IndividualParameterFirst').addClass('hidden');
            $('#id-SearchRuleGroupFirstOperator').closest('div.dropdown').addClass('hidden');
            $('#normalDrpValues').addClass('hidden');
            $('#txtValues').addClass('hidden');
            $('#txtValuesNormalText').addClass('hidden');
            $('[name="SelectAttributes"]').attr("data-parsley-required", "false");
        }

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstParameter"] a', function () {
            $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupSecondParameter"] li').remove();
            var type = $('[name="SelectAttributes"]').val();
            var item = $(this).attr("dd-value");
            if (item !== "") {
                $('#normalDrpValues').removeClass('hidden');
                $('[name="SearchRuleGroupFirstValues"]').closest('div.inputSearch').removeClass('hidden');
                var url = "@Url.Action("GetAttributeValues", "RuleEngView", new { area = "AdministrationSecondPhase" })";
                var response = postUrl(url, { item: item, type: type }).responseJSON.Data;

                var listdataParam = $.map(response, function (item) {
                    return '<li class="hidden"><a dd-value="' + item.Value + '" dd-text="' + item.Text + '">' + item.Text + '</a></li>';
                });
                
                $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"]').html(listdataParam.join(""));
                $('ul.dropdown-menu[aria-labelledby="id-SearchRuleGroupFirstValues"]').FirstorDefault();
                $('#normalDrpValues').removeClass('hidden');
                $('#btnNewParameter').removeClass('hidden');
            } else {
                $('[name="SelectAttributes"]').first().val("");
                $('[id="id-SelectAttributes"]').prop("disabled", true);
                $('[name="SelectAttributes"]').FirstorDefault();
            }
        });

        $(document).ready(function () {
            $('#RuleConditionTable').paginationConfluense(25);
            $('#RuleConditionTable').sortableConfluense();
        });

        $(document).on('click', '[name="SearchRuleCode"]', function () {
            $(this).next('ul.parsley-errors-list').find('li').remove();
            $(this).next('ul.parsley-errors-list').removeClass('filled');
        });

        function importRule() {
            var groupId = parseInt($('[name="SearchRuleModule"]').val());

            var url = '@Url.Action(
                "ImportRule",
                "RuleEngView",
                new { area = "AdministrationSecondPhase" })';

            postUrlWithOptions(url, { async: false }, { groupId: groupId })
                .done(function (data) {
                    $('#importRuleModal').html(data);
                    $('[data-id="buttonImportRuleModal"]').click();
                    allowMultiPopUp();
                });
        }

        function testRule() {
            var code = $('#codeRule').find('label').text();
            var name = $('#nameRule').find('label').text();

            var url = '@Url.Action(
                "TestRule",
                "RuleEngView",
                new { area = "AdministrationSecondPhase" })';

            postUrlWithOptions(
                url,
                { async: false },
                {
                    code: code,
                    name: name
                })
                .done(function (data) {
                    $('#testRuleModal').html(data);
                    $('[data-id="buttonTestRuleModal"]').click();
                    allowMultiPopUp();
                });
        }

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-RuleEngCode"] a', function () {
            var item = $(this).attr("dd-value");
            SearchRuleCode(item);
        });

        function SearchRuleCode(item) {

            if (item !== "") {

                var url = "@Url.Action("GetRuleEngItems", "RuleEngView", new { area = "AdministrationSecondPhase" })";
                var response = postUrl(url, { item: item }).responseJSON.Data;

                $('#ruleNameValue').find('label').text(response.Name);
                $('#ruleDescriptionValue').find('label').text(response.Description);

                postUrlWithOptions("@Url.Action("RulesConditions", "RuleEngView", new{area="AdministrationSecondPhase"})",
                    { async: false },
                    {
                        ruleId: item
                    })
                .done(function (data) {
                    var resultSearchPanel = $('#tableImportRulesConditional');
                    resultSearchPanel.html(data);
                    bindHandlers(resultSearchPanel);
                    $('#ImportRuleConditionTable').paginationConfluense(@RulesEngAttributes.MAX_PAGINATION);
                    $("#ImportRuleConditionTable").sortableConfluense();
                });
            }
        }

        $('[name="RuleEngCode_text"]').keyup(function (event) {
            if (event.which == '@RulesEngAttributes.ENTER_VALUE') {
                var item = $(this).closest('div').find('[dd-text=' + $(this).val() + ']').attr("dd-value");

                SearchRuleCode(item);
            }
        });

        function addRule() {
            var anyRuleSelected = false;
            var container = $("#RuleConditionTable").find('tbody');
            var elements = $('#ImportRuleConditionTable tbody tr');

            if (elements.length > 0)
            {
                elements.each(function () {
                    var isSelectedCondition = $(this).find('[name="importRule"]').prop('checked');

                    if (isSelectedCondition) {
                        anyRuleSelected = true;
                        var conditionId = $(this).find('[name="conditionIdValue"]').val();
                        var order = parseInt($('[name="maxValueOrder"]').val()) + 1;
                        var element = $(this).find('td:eq(2) .labelNormal').text();
                        var setting = $(this).find('td:eq(3) .labelNormal').text();
                        var settingCode = $(this).find('[name="settingCode"]').val();
                        var active = $(this).find('[name="activeRead"]').prop('checked');
                        var group = order;
                        var not = $(this).find('[name="isNotRead"]').prop('checked');

                        postUrlWithOptions("@Url.Action("ImportConditionsRules", "RuleEngView", new{area="AdministrationSecondPhase"})",
                        { async: false },
                        {
                            conditionId: conditionId,
                            order: order,
                            element: element,
                            setting: setting,
                            settingCode: settingCode,
                            active: active,
                            groupNumber: group,
                            not: not
                        })
                        .done(function (data) {
                            $(container).prepend(data);
                            enterEditMode(false, $(container), false);
                            vex.close();
                            $('[name="maxValueOrder"]').val(order);
                        });
                    }              
                });

                if(!anyRuleSelected)
                {
                    showMessage('@Localization.GetText("GLOBAL.BR.MSG.ATLSTONE")');
                }
            }
            else {
                showMessage('@Localization.GetText("GLOBAL.BR.MSG.NORSLT")');
            }         
        }

        function loadRules() {
            var ruleCode = $('[name="ruleCode"]').val();
            var ruleName = $('[name="ruleName"]').val();
            var ruleId = parseInt('@Model.RuleEngId');
            var numberRegister = $('[name="numberRegister"]').val();
            var operationNumber = $('[name="operationNumber"]').val();
            var container = $('#TestRuleTable').find('tbody');

            postUrlWithOptions("@Url.Action("LoadTestRules", "RuleEngView", new{area="AdministrationSecondPhase"})",
                { async: false },
                {
                    ruleId: ruleId,
                    ruleName: ruleName,
                    ruleCode: ruleCode,
                    numberRegister: numberRegister,
                    operationNumber: operationNumber
                })
                .done(function (data) {
                    $(container).find('tr').remove();
                    $(container).prepend(data);
                    $('[name="SqlSentences"]').val($('[name="SqlSentence"]').val());
                    $('[name="SqlSentence"]').remove();
                });
        }

        function cancelTestRules() {
            vex.close();
        }

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-SearchRuleModule"] a', function () {
            var item = $(this).attr("dd-value");
            var importRule = $('[name="importRule"]');

            if (item !== "") {
                importRule.removeClass('hidden');
            } else {
                importRule.addClass('hidden');
            }
        });

        var input;

        function showAllParameters() {

            input = $('[name=SearchRuleGroupFirstParameter_text]');
            showAll(input);
        }

        function showAllValues() {

            input = $('[name=SearchRuleGroupFirstValues_text]');
            showAll(input);
        }

        var parentDiv;

        function hideParentDiv(event) {
            parentDiv.removeClass('open');
            $(document).off('click', hideParentDiv);
        }

        function showAll(input) {
            parentDiv = input.closest('div');
            var dropdown = parentDiv.find('ul.dropdown-menu');
            var hidden = parentDiv.find('input.hidden');
            var element = dropdown.find('a[dd-value]');

            input.val('');

            dropdown.find('li').removeClass('hidden');
            hidden.val('');
            parentDiv.addClass('open');

            element.on('mouseover', function () {
                dropdown.find('[dd-selected]').removeAttr('dd-selected');
                $(this).attr('dd-selected', '');
            });

            element.on('click',function () {
                input.val($(this).text());
                hidden.val($(this).attr('dd-value'));
                hidden.trigger('change');
                parentDiv.removeClass('open');
            });

            $(document).on('click', hideParentDiv);

            input.focus();
        }

    </script>
}