@using IDB.MVCControls.DataTable.Helpers
@model List<IDB.MW.Application.AttributesModule.ViewModels.AttributesService.RowSearchAttributeLayoutViewModel>
    @if (Model != null)
    {
        if (Model.Count > 0 || Model.Count == 0)
        {
            if (Model.Count == 0)
            {
                <div id="msgResult" class="col-md-12 mb20">@Confluence.Label(Model.Count + "")@Localization.GetText("OPUS.Search.Results")</div>
            }
            else
            {
                <div id="msgResult" class="col-md-12 mb20">@Confluence.Label(Model.Count + "")@Localization.GetText("OPUS.Search.Results")</div>
            }

            <div class="dataTable">
                @{
            var config = Html.RenderDataTable(Model);
            config.Name("AttributeTable")
                .AddPrimaryKeyToName(false)
                .Columns(columns =>
                {
                    columns.Bound(c => c.AttributeId).Hidden(true);
                    columns.Template(c => Confluence.ButtonLink(c.Section, dataNavigation: Url.Action(controllerName: "AttributeView", actionName: "AttributeLayoutEditor", routeValues: new { area = "AdministrationSecondPhase", operationTypeId = c.OperationTypeId, relationshipId = c.RelationshipTypeId, sectionId = c.SectionId }))).Header(Localization.GetText("TCM.MC.Filter.Section"));
                    columns.Bound(c => c.OperationType).Header(Localization.GetText("OP.CR.CreationForm.BD.OperationType"));
                    columns.Bound(c => c.RelationshipType).Header(Localization.GetText("OP.CR.RelatedOperation.RelationshipType"));
                    

                });

            config.TableClass = "tableNormal endSpacing";

            @Html.Partial("Controls/DataTable", config)
                }
            </div>
        }
    }
