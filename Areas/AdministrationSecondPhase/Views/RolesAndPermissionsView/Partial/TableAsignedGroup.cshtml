
@using IDB.MVCControls.DataTable.Helpers
@model List<IDB.MW.Application.AdministrationModule.ViewModels.RolesAndPermissions.RowAssignedGroupViewModel>

<div class="row row-header">
    <div class="col-md-12 subtitleGroup">
        @Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.AssignedGroups")
    </div>
</div>

<div class="col-md-6 mb20" style="margin-left: -15px">
    @{

        var config = Html.RenderDataTable(Model);
        config.Name("AssignedGroupTable")
            .Columns(columns =>
            {
                columns.Template(c => Confluence.Label(c.GroupName)).
                    EditableTemplate(row => ViewBag.IsAd == false ? Confluence.InputDropDown(row.GroupId.ToString(), "GroupIdValue", ViewBag.ListGroup) : Confluence.ListHelpers(new List<HelperResult> { Confluence.InputHidden(row.GroupId.ToString(), "GroupIdValue"), Confluence.Label(row.GroupName) })).CssHeaderClass("w400").Header(ViewBag.Rtype);
                columns.Template(c => Confluence.Label(c.SecurityGroup)).Header(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.Group"))
                    .EditableTemplate(row => Confluence.InputText(row.SecurityGroup, "SecurityGroup", width: "100%", required: !ViewBag.IsAd));
                    columns.Bound(c => string.Empty).Attribute("data-pagemode", y => "edit").HeaderAttribute("data-pagemode", "edit").EditableTemplate(row => ViewBag.IsAd==false? Confluence.ButtonTrash(null, action: "removeRowGroupAssigned"):null).CssHeaderClass("w30");
                columns.Bound(c => c.GroupId)
                .EditableTemplate(row =>
                    Confluence.ListHelpers(new List<HelperResult>()
                    {
                        Confluence.InputText(row.RowId.ToString(), "RowId"),
                    }))
                .Hidden(true);
               
            });

        config.TableClass = "tableNormal endSpacing";

    @Html.Partial("Controls/DataTable", config)
    }

    @if (ViewBag.IsAd == false)
    {
        <div class="container-fluid mt30">
            <div class="row text-center" data-pagemode="edit">
                @Confluence.ButtonAddNewRows(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.NewGroup"), "AssignedGroupTable", action: "addRowGroupAssigned")
            </div>
        </div>
    }
    @Confluence.InputHidden(ViewBag.IsAd==true?"true":"false","IsADTable")

</div>