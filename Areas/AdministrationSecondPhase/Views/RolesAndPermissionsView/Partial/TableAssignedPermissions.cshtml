@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.AdministrationModule.ViewModels.RolesAndPermissions
@using IDB.Presentation.MVC4.Helpers

@model List<RowAssignedPermissionsViewModel>

<div class="row row-header">
    <div class="col-md-12 subtitleGroup">
        @Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.AssignedPermissions")
    </div>
</div>

@helper SelectItemPermission(string name, string select , IEnumerable<MultiSelectListItem> elements, 
                            string values = "", string width = null)
{
    <div class="inputSearch input-group select2-bootstrap-append">
        <select class="form-control @select"
                name="@name"
                multiple="multiple"
                data-width="@width"
                data-ajax--url="@Url.Action("SearchDetailPermission", "RolesAndPermissionsView", 
                new {area = "AdministrationSecondPhase", name})">

            @if ((elements != null) && elements.Any() && values != "")
            {
                string[] val = values.Split(',');
                foreach (var items in val)
                {
                    foreach (var listItem in elements)
                    {
                        if (listItem.Value == items)
                        {
                            <option value="@listItem.Value" @(new MvcHtmlString("selected"))>
                                @listItem.Text
                            </option>
                        }
                    }
                }
            }
            </select>
        </div>
    }

    @{
        var config = Html.RenderDataTable(Model);
        config.Name("RPTable")
            .Columns(columns =>
            {
                columns.Bound(c => c.Permission).Persistent()
                    .Header(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.Permission"))
                    .CssHeaderClass("w200");
                columns.Bound(c => c.Description)
                    .Header(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.Description"))
                    .Persistent().CssClass("description")
                    .EditableTemplate(row =>
                        Confluence.InputHidden(row.PermissionId.ToString(), "listPermission"))
                    .CssHeaderClass("w250");
                columns.Template(c => Confluence.Label(c.CountryText))
                    .EditableTemplate(row =>
                        SelectItemPermission("listCountry",
                        "srch-term",
                        ViewBag.ListCountryMulti,
                        values: string.Join(",", row.CountryList),
                        width: "100%"))
                    .Header(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.Country"))
                    .CssHeaderClass("w100");
                columns.Template(c => Confluence.Label(c.DivisionText))
                    .EditableTemplate(row =>
                        SelectItemPermission("listDivision",
                        "srch-term",
                        ViewBag.ListDivisionMulti,
                        values: string.Join(",", row.DivisionList),
                        width: "100%"))
                    .Header(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.Division"))
                    .CssHeaderClass("w100");
                columns.Template(c => Confluence.Label(c.OperationTypeText))
                    .EditableTemplate(row =>
                       SelectItemPermission("listOperationType",
                       "srch-term",
                       ViewBag.ListOperationTypeMulti,
                       values: string.Join(",", row.OperationTypeList),
                        width: "100%"))
                    .Header(Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.Operationtype"))
                    .CssHeaderClass("w100");
                columns.Template(c => Confluence.LabelGetDropDown(c.Type ? "1" : "0", ViewBag.ListType))
                    .EditableTemplate(row =>
                        Confluence.InputDropDown(row.Type ? "1" : "0",
                            "listType",
                            ViewBag.ListType,
                            width: "100%"))
                    .Header("Type")
                    .CssHeaderClass("w100");
                columns.Bound(c => string.Empty).Attribute("data-pagemode", y => "edit")
                    .HeaderAttribute("data-pagemode", "edit")
                    .EditableTemplate(row => Confluence.ButtonTrash(null, action: "removeRowPer"))
                    .CssHeaderClass("w100");
                columns.Bound(c => c.RolePermissionId)
                    .EditableTemplate(row =>
                        Confluence.InputHidden(row.RolePermissionId.ToString(), "RolePermissionId"))
                    .Hidden(true);
            });
        config.TableClass = "tableNormal";
        @Html.Partial("Controls/DataTable", config)
    }

    <div class="container-fluid mt30">
        <div class="row text-center" data-pagemode="edit">
            @Confluence.ButtonAddNewRows(
                Localization.GetText("OP.RP.CreateNewAndModifyRolePermission.NewPermission"),
                "RPTable",
                action: "addNewRowTable")
        </div>
    </div>





    -
