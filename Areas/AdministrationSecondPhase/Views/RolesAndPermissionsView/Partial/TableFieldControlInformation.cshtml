@using IDB.MVCControls.DataTable.Helpers
@*@model List<IDB.MW.Application.AdministrationModule.ViewModels.RolesAndPermissions.TableFieldViewModel>*@
@model List<IDB.MW.Application.AdministrationModule.ViewModels.RolesAndPermissions.TableFieldViewModel>

    <div id="tableFieldNewRole" class="tableNormal" data-pagemode="edit">
        @{
            var config = Html.RenderDataTable(Model);
            config.Name("FieldTable")
                .Columns(columns =>
                {
                    columns.Bound(c => string.Empty).EditableTemplate(row => Confluence.InputDropDown(string.Empty, "NewField", (List<SelectListItem>)ViewBag.Field, parentValue: true)).Header(Localization.GetText("OP.RP.ControlInformation.Field"));
                    columns.Bound(c => string.Empty).EditableTemplate(row => Confluence.InputCheckbox(false, "NewHidden", "chkHidden", string.Empty)).Header(Localization.GetText("OP.RP.ControlInformation.Hidden"));
                    columns.Bound(c => string.Empty).EditableTemplate(row => Confluence.InputCheckbox(false, "NewReadOnly", "chkReadOnly", string.Empty, labelBold: true)).Header(Localization.GetText("OP.RP.ControlInformation.ReadOnly"));
                    columns.Bound(c => string.Empty).EditableTemplate(row => Confluence.InputCheckbox(false, "NewRequired", "chkRequired", string.Empty, labelBold: true)).Header(Localization.GetText("OP.RP.ControlInformation.Required"));
                    columns.Bound(c => string.Empty).EditableTemplate(row => Confluence.ButtonTrash(null, action: "removeRowNewRule"));
                });
            config.TableClass = "tableField";
            @Html.Partial("Controls/DataTable", config)
        }

        <div class="container-fluid mt30">
            <div class="row text-center" @*data-pagemode="edit"*@>
                @Confluence.ButtonAddNewRows(Localization.GetText("OP.RP.ControlInformation.AddNewRule"), "tableFieldNewRole", action: "addNewRuleTable")
            </div>
        </div>
    </div>
