@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.AdministrationModule.ViewModels.RolesAndPermissions

@model List<RowSearchRoleAndPermissionViewModel>

@{
    var config = Html.RenderDataTable(Model);
    config.Name("roleAndPermissionsTable")
        .Columns(columns =>
        {
            columns.Template(c => Confluence.ButtonLink(c.Role, htmlClass: "text-left nopadding", dataNavigation: Url.Action(controllerName: "RolesAndPermissionsView", actionName: "RolesAndPermissionsCreateAndEdit", routeValues: new { idRolePermission = c.ConvergenceRoleId }))).Header(Localization.GetText("OP.RP.RolesAndPermission.Role")).CssHeaderClass("w100").Persistent();
            columns.Template(c => Confluence.LabelGetDate(c.EffectiveDate)).Header(Localization.GetText("Effective Date")).CssHeaderClass("w200").Persistent();
            columns.Template(c => Confluence.LabelGetDate(c.ExpirationDate)).Header(Localization.GetText("OP.RP.RolesAndPermission.ExpirationDate")).CssHeaderClass("w200").Persistent();
            columns.Bound(c => c.Permissions).Header(Localization.GetText("OP.RP.RolesAndPermission.Permissions")).CssHeaderClass("w700").Persistent();
            columns.Template(c => Confluence.LabelGetDate(c.LastUpdate)).Header(Localization.GetText("OP.RP.RolesAndPermission.LastUpdated")).CssHeaderClass("w200").Persistent();
            columns.Bound(c => c.ModifiedBy).Header(Localization.GetText("OP.RP.RolesAndPermission.ModifiedBy")).CssHeaderClass("w200").Persistent();
            
        });
    config.TableClass = "tableNormal";
    @Html.Partial("Controls/DataTable", config)
}

<div class="col-md-12 btn-excel text-right">
    @Confluence.ButtonExcel("xls", "downloadReport")
</div>