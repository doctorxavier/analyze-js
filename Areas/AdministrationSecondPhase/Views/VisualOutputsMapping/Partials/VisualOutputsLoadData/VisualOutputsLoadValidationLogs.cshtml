@using IDB.Architecture.Language
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Areas.AdministrationSecondPhase.Helpers

@using System.Globalization;

@model IList<IDB.MW.Application.AdministrationModule.ViewModels.VisualOutputsMapping.VOLoadValidationsLogViewModel>

@{
    var pageSize = ConfigurationServiceFactory.Current.GetApplicationSettings().SearchPageSize;
}
<div class="partialTable">
    <div class="modal-header" style="background-color:#3275c7;">
        <h5 class="modal-title col-form-label" id="exampleModalLabel">@(Model != null && Model.Any() ? (Model.First().OperationNumber + " - ") : string.Empty) Load Summary</h5>
        @Confluence.ButtonClose(
                name: "cancelx",
                clase: "vex-close button-modal-content",
                dataAttributes: new Dictionary<string, string> { { "dismiss", "modal" } })
    </div>
    <div class="modal-body">
        <div class="row row-body-40 ml5">
            <span id="numElements">@(Model != null && Model.Any() ? Model.Count() : 0)</span> @Localization.GetText("OPUS.Search.Results").HtmlEncode()
            @Confluence.InputDropDown(
                pageSize.ToString((CultureInfo.InvariantCulture)),
                name: "resultPerPageFilterModal",
                elements: VisualOutputsMappingHelper.GetNumberOfResultsPerPage(),
                required: false,
                placeholder: Localization.GetText("OPUS.Search.Placeholder.ResultsPerPage"),
                showEmptyOption: false,
                orderAsc: false)
        </div>
        <div class="row row-body-40">
            <div class="col-md-12">
                <table id="visualOutputLoadValidationsLog" class="tableNormal
                       visualOutputLoadValidationsLog mb20 tablePagination" style="width:868px;">
                    <thead>
                        <tr data-id="">
                            <th class="center sort">
                                @Localization.GetText("Operation")
                            </th>
                            <th class="center sort">
                                @Localization.GetText("Component")
                            </th>
                            <th class="center sort">
                                @Localization.GetText("Output Name")
                            </th>
                            <th class="center sort">
                                @Localization.GetText("Output - Year")
                            </th>
                            <th class="center sort">
                                @Localization.GetText("Object")
                            </th>
                            <th class="center sort">
                                @Localization.GetText("Action")
                            </th>
                            <th class="center sort">
                                @Localization.GetText("Conflict")
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var visualOutputValidationLog in Model)
                            {
                                <tr data-id="@visualOutputValidationLog.OperationNumber + - + @visualOutputValidationLog.VOObject">
                                    <td>@visualOutputValidationLog.OperationNumber</td>
                                    <td>@visualOutputValidationLog.Component</td>
                                    <td>@visualOutputValidationLog.OutputName</td>
                                    <td>@visualOutputValidationLog.OutputYear</td>
                                    <td>@visualOutputValidationLog.VOObject</td>
                                    <td>@visualOutputValidationLog.Action</td>
                                    <td>@visualOutputValidationLog.Conflict</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        @Confluence.ButtonBlue("Close", dataAttributes: new Dictionary<string, string> { { "dismiss", "modal" } })
    </div>
</div>