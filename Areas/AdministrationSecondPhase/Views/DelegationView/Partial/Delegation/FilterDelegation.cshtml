@model IDB.MW.Application.AdministrationModule.ViewModels.Delegation.DelegationFilterViewModel

@{ var disabled = !(ViewBag.DelegationAdminPermission == true || ViewBag.IsDelegator == true); }
@{ var disabledDelegator = ViewBag.DelegationAdminPermission != true; }

    <div class="filterNormal">
        <div class="col-md-12">
            <div class="col-md-4 filterName">
                @if (disabledDelegator == true)
                {
                    @Confluence.LabelsGroup(Localization.GetText("OP.DE.SE.DelegatorAuthorizer"),
                    Confluence.Label(Model.DelegatorName),
                    Confluence.InputDropDownAsync(IDBContext.Current.UserName, "SearchDelegatorName", Url.Action("GetUsersList", "DelegationView", new { area = "AdministrationSecondPhase" }),
                    textSelected: ViewBag.FullName, required: true, disabled: disabledDelegator, width: "100%", validateOnChange: true, resetOnClick: false, dataAttributes: new Dictionary<string, string> { { "disabled-delegator", disabledDelegator.ToString() } }), false)
                }
                else
                {
                    @Confluence.LabelsGroup(Localization.GetText("OP.DE.SE.DelegatorAuthorizer"),
                    Confluence.Label(Model.DelegatorName),
                    Confluence.InputDropDownAsync(Model.DelegatorUserName, "SearchDelegatorName", Url.Action("GetUsersList", "DelegationView", new {area = "AdministrationSecondPhase"}), textSelected: Model.DelegatorName, required: true, disabled: disabledDelegator, width: "100%", resetOnClick:false),
                    false)
                }
            </div>
            <div class="col-md-4">
                @Confluence.LabelsGroup(Localization.GetText("OP.DE.SE.OperationNumber"),
                         Confluence.Label(Model.OperationNumber),
                                  Confluence.InputText(Model.OperationNumber, "OperationNumberFilter", required: false, disabled: disabled, width: "100%"),
                    false)
            </div>
            <div class="col-md-4 filterGroup">
                @Confluence.LabelsGroup(Localization.GetText("OP.DE.SE.Role"),
                             Confluence.LabelGetDropDown(Model.RoleId.ToString(), (List<SelectListItem>)ViewBag.Roles),
                             Confluence.InputDropDown(Model.RoleId.ToString(), "RoleFilter", (List<SelectListItem>)ViewBag.Roles, required: false, disabled: disabled, width: "100%"), false)

            </div>
        </div>

        <div class="float-right mt20">
            <span data-pagemode="read">
                @Confluence.ButtonBlue(Localization.GetText("OP.RP.ControlInformation.ClearAll"), action: "cleanDelegatorButton", disabled: true)
                @Confluence.ButtonBlue(Localization.GetText("OP.RP.ControlInformation.Filter"), action: "searchDelegatorFilter", disabled: true)
            </span>
            <span data-pagemode="edit">
                @Confluence.ButtonBlue(Localization.GetText("OP.RP.ControlInformation.ClearAll"), action: "cleanDelegatorButton", disabled: disabled)
                @Confluence.ButtonBlue(Localization.GetText("OP.RP.ControlInformation.Filter"), action: "searchDelegatorFilter", disabled: disabled)
            </span>
        </div>
    </div>

