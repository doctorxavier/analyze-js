@using IDB.MW.Application.AdministrationModule.ViewModels.Delegation
@model AssignPermissionsTaskViewModel
@{
    var listId = new List<string>();
    listId.Add("ModulesWorkflowContainer");

    var assignSubDelegation = (ViewBag.AssignSubDelegation != null);
    if (assignSubDelegation)
    {
        listId.Add("subdelegationContainer");
    }

    int column = Convert.ToInt32(Math.Round((double)Model.Modules.Count / 3, 0));
    int iModules = 0;
}

<div class="col-md-12 delegationContainerCollapse">
    @Confluence.ButtonColapseAll(listId, isCollapsed: true)
</div>

<input type="hidden" id="NewhidViewModel" value="@ViewBag.SerializedViewModelNew" />

<table id="ModulesWorkflowContainer" class="tableNormal mb30">
    <thead>
        <tr>
            <th class="tree icon pt10">
                @Confluence.ButtonExpandTable(isCollapsed: true)
            </th>
            <td>
                @Confluence.LabelMainSubTitle(Localization.GetText("Delegation.Partial.ModulesWorkflows"), htmlClass: "w330 mt0 ml0 mb0 floatLeft")
                <div class="w300 pt5 floatLeft">
                    <div data-pagemode="edit" class="subfont showDataEdit">
                        @Confluence.InputCheckbox(false, "selectAllModulesWorkflow", label: Localization.GetText("Delegation.Partial.AuthorizeEverything"), labelBold: true)
                    </div>
                </div>
            </td>
        </tr>
    </thead>
    <tbody>
        <tr class="hide">
            <td colspan="3">
                <div class="row" id="subdelegation">
                    <div class="col-md-1 mt30"></div>
                    <div class="col-md-10 delegationColumnFix mt30">
                        <div class="row">
                            @if (Model.Modules.Count > 0)
                            {
                                foreach (var module in Model.Modules.OrderBy(x => x.Value))
                                {
                                    if (iModules == 0)
                                    {
                                        @Html.Raw("<div class=\"delegationColumnsBlocks col-md-4 pb30\">");
                                    }

                                    <div class="col-md-12 pl0 pb10 pt10" data-pagemode="read">
                                        @Confluence.InputCheckbox(module.IsChecked, module.Code, label: Localization.GetText(module.Value), labelBold: true, disabled: true)
                                    </div>

                                    <div class="col-md-12 pl0 pb10 pt10" data-pagemode="edit">
                                        @Confluence.InputCheckbox(module.IsChecked, module.Code, label: Localization.GetText(module.Value), labelBold: true, dataAttributes: new Dictionary<string, string> { { "id", module.Code } })
                                    </div>

                                    if (module.WorkFlows.Count > 0)
                                    {
                                        foreach (var workflow in module.WorkFlows.OrderBy(x => x.Value))
                                        {
                                            if (workflow.DelegateByAmount == true)
                                            {
                                                <div class="pr0 col-md-12 pl25 pb10 pt10" id="delegateTask" amount-parent>
                                                    <div id="readTask" data-pagemode="read">
                                                        @Confluence.InputCheckbox(workflow.IsChecked, "chkAmount_" + workflow.Code, label: workflow.Value, labelBold: true, disabled: true)
                                                    </div>
                                                    <div id="editTask" data-pagemode="edit">
                                                        @Confluence.InputCheckbox(workflow.IsChecked, "chkAmount_" + workflow.Code, label: workflow.Value, labelBold: true, disabled: (workflow.HaveRule && workflow.IsChecked), dataAttributes: new Dictionary<string, string> { { "children", "task-Parent" }, { "parent", module.Code } })
                                                    </div>
                                                    <div class="col-md-12 mt10 pr0 pl0 @(workflow.IsChecked ? string.Empty : "hide") " amount-children>
                                                        <div class="col-md-6 verticalLine" id="delegateTask">
                                                            <div id="readMinAmount" data-pagemode="read">
                                                                @Confluence.InputCheckbox(false, "chkSetMinAmount", label: Localization.GetText("Set Minimun Amount"), labelBold: true, disabled: true)
                                                                @Confluence.InputMoney(workflow.MinAmount, "txt_chkSetMinAmount", required: false, decimalPrecision: 2, disabled: true, width: "100%", htmlClass: "mt5", dataAttributes: new Dictionary<string, string> { { "orig-value", workflow.MinAmount != null ? workflow.MinAmount.ToString() : string.Empty } }, isReadOnly: true)
                                                            </div>
                                                            <div id="editMinAmount" data-pagemode="edit">
                                                                @Confluence.InputCheckbox(false, "chkSetMinAmount", label: "Set Minimun Amount", labelBold: true, disabled: workflow.HaveRule, dataAttributes: new Dictionary<string, string> { { "children", "task-Parent" } })
                                                                @Confluence.InputMoney(workflow.MinAmount, "txt_chkSetMinAmount", required: false, decimalPrecision: 2, disabled: true, width: "100%", htmlClass: "mt5", dataAttributes: new Dictionary<string, string> { { "orig-value", workflow.MinAmount != null ? workflow.MinAmount.ToString() : string.Empty } })
                                                                <ul class="parsley-errors-list"></ul>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6" id="delegateTask">
                                                            <div id="readMaxAmount" data-pagemode="read">
                                                                @Confluence.InputCheckbox(false, "chkSetMaxAmount", label: Localization.GetText("Set Maximun Amount"), labelBold: true, disabled: true)
                                                                @Confluence.InputMoney(workflow.MaxAmount, "txt_chkSetMaxAmount", required: false, decimalPrecision: 2, disabled: true, width: "100%", htmlClass: "mt5", dataAttributes: new Dictionary<string, string> { { "orig-value", workflow.MaxAmount != null ? workflow.MaxAmount.ToString() : string.Empty } }, isReadOnly: true)
                                                            </div>
                                                            <div id="editMaxAmount" data-pagemode="edit">
                                                                @Confluence.InputCheckbox(false, "chkSetMaxAmount", label: Localization.GetText("Set Maximun Amount"), labelBold: true, disabled: workflow.HaveRule, dataAttributes: new Dictionary<string, string> { { "children", "task-Parent" } })
                                                                @Confluence.InputMoney(workflow.MaxAmount, "txt_chkSetMaxAmount", required: false, decimalPrecision: 2, disabled: true, width: "100%", htmlClass: "mt5", dataAttributes: new Dictionary<string, string> { { "orig-value", workflow.MaxAmount != null ? workflow.MaxAmount.ToString() : string.Empty } })
                                                                <ul class="parsley-errors-list"></ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="" id="delegateTask">
                                                    <div id="readTask" class="col-md-12 pl25 pb10 pt10" data-pagemode="read">
                                                        @Confluence.InputCheckbox(workflow.IsChecked, workflow.Code, label: Localization.GetText(workflow.Value), labelBold: true, disabled: true)
                                                    </div>
                                                    <div id="editTask" class="col-md-12 pl25 pb10 pt10" data-pagemode="edit">
                                                        @Confluence.InputCheckbox(workflow.IsChecked, workflow.Code, label: Localization.GetText(workflow.Value), labelBold: true, dataAttributes: new Dictionary<string, string> { { "parent", module.Code } })
                                                    </div>
                                                </div>
                                            }

                                        }
                                    }

                                    if (iModules == column)
                                    {
                                        @Html.Raw("</div>");
                                        iModules = -1;
                                    }

                                    iModules++;
                                }
                            }
                        </div>
                    </div>
                    <div class="col-md-1 mt30"></div>
                </div>

            </td>
        </tr>
    </tbody>
</table>

@if (assignSubDelegation)
{
    <table id="subdelegationContainer" class="tableNormal mb30">
        <thead>
            <tr>
                <th class="tree icon pt10">
                    @Confluence.ButtonExpandTable(isCollapsed: true)
                </th>
                <td>
                    @Confluence.LabelMainSubTitle(Localization.GetText("Delegation.Label.MoreOptions"), htmlClass: "w330 mt0 ml0 mb0 floatLeft")
                    <div class="w150 pt5 floatLeft">
                        <div data-pagemode="edit" class="subfont showDataEdit">
                            @Confluence.InputCheckbox(ViewBag.SubDelegationAllSelected, "selectAllSubdelegate", id: "selectAllSubdelegate", label: Localization.GetText("Delegation.Partial.SelectAll"), labelBold: true)
                        </div>
                    </div>
                </td>
            </tr>
        </thead>
        <tbody>
            <tr class="hide">
                <td colspan="3">
                    @if (ViewBag.AssignSubDelegation != null)
                    {
                        <div class="row" id="subdelegation">
                            <div class="col-md-1 mt30"></div>
                            <div class="col-md-10 delegationColumnFix mt30">
                                <div class="row">
                                    <div class="delegationColumnsBlocks col-md-4 pb30">
                                        <table class="tableNormal reCollapsetable">
                                            @CreateTitleTable(Localization.GetText("R6.DEL.AuthorizationData.Subdelegation.CountryDepartment"))
                                            <tbody>
                                                @foreach (var item in ViewBag.AssignSubDelegation.Departments)
                                                {
                                                    if (item.DepartmentSelected || !item.DepartmentEnable)
                                                    {
                                                        <tr class="ab childrenParentSelect">
                                                            <td></td>
                                                            <td class="itemCheckDelegation pl0" id="Subdelegate">
                                                                <div id="readDelegatePermissions" data-pagemode="read">
                                                                    @Confluence.InputCheckbox(item.DepartmentSelected, item.DepartmentControlName, label: item.DepartmentDescription.Replace('_', ' '), labelBold: true, disabled: true)
                                                                </div>
                                                                <div id="editDelegatePermissions" data-pagemode="edit" class="countryCheckboxs">
                                                                    @Confluence.InputCheckbox(item.DepartmentSelected, item.DepartmentControlName, label: item.DepartmentDescription.Replace('_', ' '), labelBold: true, disabled: item.DepartmentEnable, dataAttributes: new Dictionary<string, string> { { "parent", "select-Parent" } })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                        <table class="tableNormal mt30 reCollapsetable">
                                            @CreateTitleTable(Localization.GetText("R6.DEL.AuthorizationData.Subdelegation.Country"))
                                            <tbody>
                                                @foreach (var item in ViewBag.AssignSubDelegation.Countries)
                                                {
                                                    if (item.CountrySelected || !item.CountryEnable)
                                                    {
                                                        <tr class="ab childrenItemSelect">
                                                            <td></td>
                                                            <td class="itemCheckDelegation pl0" id="Subdelegate">
                                                                <div id="readDelegatePermissions" data-pagemode="read">
                                                                    @Confluence.InputCheckbox(item.CountrySelected, item.CountryControlName, label: item.CountryDescription.Replace('_', ' '), labelBold: true, disabled: true)
                                                                </div>
                                                                <div id="editDelegatePermissions" data-pagemode="edit">
                                                                    @Confluence.InputCheckbox(name:item.CountryControlName, label: item.CountryDescription.Replace('_', ' '), labelBold: true, disabled: item.CountryEnable, dataAttributes: new Dictionary<string, string> { { "children", item.CountryParent } }, isChecked: true)
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="delegationColumnsBlocks col-md-4 pb30">
                                        <table class="tableNormal reCollapsetable">
                                            @CreateTitleTable(Localization.GetText("R6.DEL.AuthorizationData.Subdelegation.SectorDepartment"))
                                            <tbody>
                                                @foreach (var item in ViewBag.AssignSubDelegation.Sectors)
                                                {
                                                    if (item.SectorSelected || !item.SectorEnabled)
                                                    {
                                                        <tr class="ab childrenParentSelect">
                                                            <td></td>
                                                            <td class="itemCheckDelegation pl0" id="Subdelegate">
                                                                <div id="readDelegatePermissions" data-pagemode="read">
                                                                    @Confluence.InputCheckbox(item.SectorSelected, item.SectorControlName, label: item.SectorName.Replace('_', ' '), labelBold: true, disabled: true)
                                                                </div>
                                                                <div id="editDelegatePermissions" data-pagemode="edit" class="sectorCheckboxs">
                                                                    @Confluence.InputCheckbox(item.SectorSelected, item.SectorControlName, label: item.SectorName.Replace('_', ' '), labelBold: true, disabled: item.SectorEnabled, dataAttributes: new Dictionary<string, string> { { "parent", "select-Parent" } })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                        <table class="tableNormal mt30 reCollapsetable">
                                            @CreateTitleTable(Localization.GetText("R6.DEL.AuthorizationData.Subdelegation.Divisions"))
                                            <tbody>
                                                @foreach (var item in ViewBag.AssignSubDelegation.Divisions)
                                                {
                                                    if (item.DivisionSelected || !item.DivisionEnable)
                                                    {
                                                        <tr class="ab childrenItemSelect">
                                                            <td></td>
                                                            <td class="itemCheckDelegation pl0" id="Subdelegate">
                                                                <div id="readDelegatePermissions" data-pagemode="read">
                                                                    @Confluence.InputCheckbox(item.DivisionSelected, item.DivisionControlName, label: item.DivisionName.Replace('_', ' '), labelBold: true, disabled: true)
                                                                </div>
                                                                <div id="editDelegatePermissions" data-pagemode="edit">
                                                                    @Confluence.InputCheckbox(item.DivisionSelected, item.DivisionControlName, label: item.DivisionName.Replace('_', ' '), labelBold: true, disabled: item.DivisionEnable, dataAttributes: new Dictionary<string, string> { { "children", item.SectorDepartmentCode } })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="delegationColumnsBlocks col-md-4 pb30">
                                        <table class="tableNormal reCollapsetable">
                                            @CreateTitleTable(Localization.GetText("R6.DEL.AuthorizationData.Subdelegation.OperationType"))
                                            <tbody class="operationTypeData">
                                                @foreach (var item in ViewBag.AssignSubDelegation.OperationTypes)
                                                {
                                                    <tr class="ab childrenParentSelect">
                                                        <td></td>
                                                        <td class="itemCheckDelegation pl0" id="Subdelegate">
                                                            <div id="readDelegatePermissions" data-pagemode="read">
                                                                @Confluence.InputCheckbox(item.OperationTypeSelected, item.OperationTypeControlName, label: item.OperationTypeName.Replace('_', ' '), labelBold: true, disabled: true)
                                                            </div>
                                                            <div id="editDelegatePermissions" data-pagemode="edit">
                                                                @Confluence.InputCheckbox(item.OperationTypeSelected, item.OperationTypeControlName, label: item.OperationTypeName.Replace('_', ' '), labelBold: true, dataAttributes: new Dictionary<string, string> { { "parent", "select-Parent" } })
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        @if ((object)ViewBag.AssignSubDelegation.Attributes != null)
                                        {
                                            <table id="attributeTable" class="tableNormal tableAttribute AssignAttributes mt30 reCollapsetable">
                                                @Html.Partial("Partial/Delegation/AssignAttributes", (object)ViewBag.AssignSubDelegation.Attributes)
                                            </table>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1 mt30"></div>
                        </div>
                    }
                </td>
            </tr>
        </tbody>
    </table>
}

@helper CreateTitleTable(string title)
{
    <thead>
        <tr>
            <th class="tree icon pt10 w30">
                @Confluence.ButtonExpandTable()
            </th>
            <td class="pt0">
                <h3 class="delegationTitle mt0 ml0 mb0">@Confluence.Label(title)</h3>
            </td>
        </tr>
    </thead>
}