@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.OPUSModule.Enums
@model List<IDB.MW.Application.AdministrationModule.ViewModels.Delegation.TableDelegatorViewModel>

<div id="DelegatorTableContent" class="tableNormal">
    @{
        var config = Html.RenderDataTable(Model);
        config.Name("DelegatorTable")
            .Columns(columns =>
            {
                columns.Template(c => Confluence.InputCheckbox(c.IsSelected, "", disabled: true))
                    .EditableTemplate(row => Confluence.InputCheckbox((row.DelegationGroupId != null || row.IsSelected), "SelectDelegator", disabled: row.DelegationGroupId != null));
                columns.Bound(c => c.FullName).Header(Localization.GetText("OP.DE.SE.RE.Table.FullName")).CssHeaderClass("sort sortTing").Persistent();
                columns.Bound(c => c.UserName).Header(Localization.GetText("OP.DE.SE.RE.Table.UserName")).CssHeaderClass("sort sortTing").Persistent();
                columns.Bound(c => c.OrganizationalUnit).Header(Localization.GetText("OP.DE.SE.RE.Table.OrganizationalUnit")).CssHeaderClass("sort sortTing").Persistent();
                columns.Bound(c => c.Country).Header(Localization.GetText("OP.DE.SE.RE.Table.Country")).CssHeaderClass("sort sortTing").Persistent().CssClass("country");
                columns.Bound(c => c.CountryDept).Header(Localization.GetText("OP.DE.SE.RE.Table.CountryDept")).CssHeaderClass("sort sortTing").Persistent().CssClass("cDepartment");
                columns.Bound(c => c.Dept).Header(Localization.GetText("OP.DE.SE.RE.Table.Dept")).CssHeaderClass("sort sortTing").Persistent().CssClass("department");
                columns.Bound(c => c.Division).Header(Localization.GetText("OP.DE.SE.RE.Table.Division")).CssHeaderClass("sort sortTing").Persistent().CssClass("division");
                columns.Bound(c => c.Global.Contains(DelegationEnum.IDB) ? DelegationEnum.YES : DelegationEnum.NO).Header(Localization.GetText("OP.DE.SE.RE.Table.Global")).CssHeaderClass("sort sortTing").Persistent();
                columns.Bound(c => c.OperationNumber).Header(Localization.GetText("OP.DE.SE.RE.Table.OperationNumber")).CssHeaderClass("sort sortTing").Persistent().CssClass("operationNumber");
                columns.Template(c => Confluence.LabelGetDropDown(c.RoleId, ViewBag.Roles)).CssClass("delegate-role").Header(Localization.GetText("OP.DE.SE.RE.Table.Role")).CssHeaderClass("sort sortTing").Persistent();
                columns.Bound(c => string.Empty).CssClass("hide").CssHeaderClass("hide")
                        .EditableTemplate(row => Confluence.ListHelpers(new List<HelperResult>
            {
                        Confluence.InputHidden(row.OperationId.ToString(), "operationIdDelegator"),
                        Confluence.InputHidden(row.OrgUnitId.ToString(), "orgUnitIdDelegator"),
                        Confluence.InputHidden(row.RoleId.ToString(), "roleIdDelegator"),
                        Confluence.InputHidden(row.UserName, "userNameDelegator"),
                        Confluence.InputHidden(row.OperationNumber, "OperationNumber"),
                        Confluence.InputRadioButton(row.ValueRadioButton, row.DelegationGroupId != null ? row.OperationNumber : "SelectDelegator", (row.DelegationGroupId != null || row.IsSelected), false, disabled: row.DelegationGroupId != null),
                        Confluence.InputHidden(row.ValueRadioButton + (ViewBag.HasDelegation ? "|-" : "|0"), "SelectDelegatorHidden")
            })).CssClass("hide");

            });
        config.TableClass = "tableNormal mb10";
        @Html.Partial("Controls/DataTable", config)
    }
</div>

<div class="col-md-12 mt20 mb30">
    <div class="pull-right">
        @Confluence.ButtonExcel("xls", "downloadDelegatorExport", false, new Dictionary<string, string> { { "idb-fieldname", "btnXls" } }, "floatRight")
    </div>
    <div class="pull-right">
        @Confluence.ButtonPdf("pdf", "downloadDelegatorExport", false, new Dictionary<string, string> { { "idb-fieldname", "btnPdf" } }, "floatRight")
    </div>
</div>

<span data-pagemode="edit">
    @Confluence.InputHidden(value: ViewBag.OperationsToSave, name: "operationsToBeSaved", id: "operationsToBeSaved")
</span>