@using IDB.Architecture.Extensions;
@using IDB.MW.Application.AdministrationModule.ViewModels.Help;

@model IList<HelpItemViewModel>

@{ 
    int results = Model.HasAny() ? Model.Count : 0;
}

<div class="row mb10">
    <div class="col-md-12 mt10 text-right">
        <span class="mr10">
            @Confluence.LabelBold(
                results.ToString(),
                dataAttributes: new Dictionary<string, string> { { "id", "results" } })
            @Confluence.LabelBold(Localization.GetText("CM.Table.Results"))
        </span>
    </div>
</div>
<div class="row-body-10">
    <table id="tableData" class="tableNormal help-table">
        <thead>
            <tr>
                <th class="col-md-2 sort">
                    @Localization.GetText("AP.HELP.Title.Module")
                </th>
                <th class="col-md-3 sort">
                    @Localization.GetText("AP.HELP.Title.Description")
                </th>
                <th class="col-md-4 sort">
                    @Localization.GetText("AP.HELP.Title.URLs")
                </th>
                <th class="col-md-3 sort">
                    @Localization.GetText("AP.HELP.Title.ViewCode")
                </th>
                <th class="sort">
                    @Localization.GetText("COMMON.Active")
                </th>
                <th class="hide" data-pagemode="edit"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.HasAny())
            {
                foreach (var view in Model)
                {
                    <tr id=@view.Id data-id=@view.Id>
                        <td class="col-md-2">
                            @Confluence.Label(view.Module)
                        </td>
                        <td class="col-md-3">
                            @Confluence.LabelLink(
                                view.Description,
                                dataNavigation: Url.Action(
                                    controllerName: "Help",
                                    actionName: "Details",
                                    routeValues: new { id = view.Id }),
                                htmlClass: "text-left nopadding")
                        </td>
                        <td class="col-md-4">
                            @Html.Partial("Partial/_TableUrls", view)
                        </td>
                        <td class="col-md-3">
                            @Confluence.Label(
                                text: view.ViewCodes,
                                htmlClass: "help-multiline")
                        </td>
                        <td>
                            @Confluence.InputCheckbox(
                                view.IsActive,
                                "isActive",
                                disabled: true,
                                htmlClass: "help-floatCenter")
                        </td>
                        <td class="hide text-center"
                            data-pagemode="edit"
                            data-id="@view.Id"
                            style="width:40px">
                            @Confluence.ButtonTrash(null, action: "deleteRow")
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div id="emptyTable" class="mt10 ml10 hide">
        @Confluence.Label(Localization.GetText("CM.Table.Empty"))
    </div>
</div>