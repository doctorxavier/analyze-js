@using IDB.MW.Application.AdministrationModule.ViewModels.GenericCase

@model ClausesViewModel

@{
    Layout = "~/Areas/AdministrationSecondPhase/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/Modules/AdministrationSecondPhase/GenericCase/main.css")
@Scripts.Render("~/Scripts/AdministrationSecondPhase/GenericCases/Clauses")

<div class="row mb50">
    @Confluence.LabelMainTitle(Localization.GetText("AP.GC.Clauses.Title"))
</div>

<div class="row mb100"
     id="aditional-data"
     data-parsley-validate="data-parsley-validate">
    <div class="col-md-4">
        @Confluence.LabelsGroup(
        title: Localization.GetText("COMMON.OperationNumber"),
        contentAlways: Confluence.InputDropDownAsync(
            value: null,
            name: "operation-number",
            clearTextOnNoResult: true,
            required: true,
            minCharacter: 4,
            placeholder: Localization.GetText("AP.GC.Placeholder.OperationNumber"),
            resetOnClick: false,
            width: "100%",
            searchUrl: Url.Action(
                "GetOperationNumbers",
                "GenericCasesView",
                new { area = "AdministrationSecondPhase" }),
            dataAttributes: new Dictionary<string, string> {
                { "field-name", "OperationId" },
                {
                    "url",
                    Url.Action(
                        "GetContractsAndClauses",
                        "GenericCasesView",
                        new { area = "AdministrationSecondPhase" })
                }
            }),
        asterisk: true)
    </div>
    <div class="col-md-8">
        <div class="LabelsGroup">
            <label class="lgTit mb15">
                @Localization.GetText("OP.AP.Transaction")
                @Confluence.LabelAsterisk()
            </label>
            <div class="lgCont">
                @Confluence.InputRadioButton(
                    value: null,
                    name: "transaction-type",
                    id: "transaction-type-workflow",
                    isChecked: false,
                    required: true,
                    label: Localization.GetText("AP.GC.Title.Workflow"),
                    htmlClass: "mr40 mb5",
                    dataAttributes: new Dictionary<string, string>
                    {
                        { "target", "#workflow-fields" }
                    })
                @Confluence.InputRadioButton(
                    value: null,
                    name: "transaction-type",
                    id: "transaction-type-elegibility",
                    isChecked: false,
                    required: true,
                    label: Localization.GetText("AP.GC.Title.Elegibility"),
                    htmlClass: "mr40 mb5",
                    dataAttributes: new Dictionary<string, string>
                    {
                        { "target", "#elegibility-fields" }
                    })
                @Confluence.InputRadioButton(
                    value: null,
                    name: "transaction-type",
                    id: "transaction-type-extension",
                    isChecked: false,
                    required: true,
                    label: Localization.GetText("AP.GC.Title.ClauseExtension"),
                    htmlClass: "mr40 mb5",
                    dataAttributes: new Dictionary<string, string>
                    {
                        { "target", "#clause-extension-fields" }
                    })
            </div>
        </div>
    </div>
</div>

@Html.Partial("Partial/_ContractAndClauseFields", Model)
@Html.Partial("Partial/_DataPatchData")

<div class="row pull-right">
    <div>
        @Confluence.ButtonBlue(
            text: Localization.GetText("CM.Button.ClearAll"),
            name: "clear-all",
            action: "clearAll")
        @Confluence.ButtonOrange(
            text: Localization.GetText("CM.Button.Execute"),
            name: "execute",
            action: "execute",
            dataAttributes: new Dictionary<string, string> {
                { "url", Url.Action(actionName: "ExecuteClause") }
            })
    </div>
</div>