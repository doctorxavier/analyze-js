@using IDB.MW.Application.ESW_CIPModule.ViewModels;

@model ProposalViewModel

<div id="ESWCIPDeliverables">
    <div class="grouping-section">        
        <p>@Confluence.Label(Localization.GetText("R6.Proposal.PDeliverables.Instructions.Title"))</p>
    </div>

    <div class="grouping-section">
        <p>@Confluence.Label(string.Format(Localization.GetText("R6.Proposal.PDeliverables.Instruction"), Model.ProposalType))</p>
    </div>


    <div class="dataTables_wrapper no-footer" id="deliverablesDiv">
        <table id="ESWCIPDeliverablesTable" class="tableNormal mb20 maxw1200" data-idb-fieldname="tblESWCIPDeliverables">
            <thead>
                <tr role="row">
                    <th class="col-md-4">@Localization.GetText("R6.Proposal.PDeliverables.Title")</th>
                    <th class="col-md-6">@Localization.GetText("R6.Proposal.PDeliverables.DeliverableName")</th>
                    <th class="col-md-1">@Localization.GetText("R6.Proposal.PDeliverables.PlanedDate")</th>
                    <th class="col-md-1">@Localization.GetText("R6.Proposal.ProposalList.Actions")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Deliverables)
                {
                    <tr role="row" data-id="" class="rowContent">
                        <td>
                            <span data-pagemode="read">
                                @Confluence.Label(item.TypeCode + " - " + item.TypeName)
                            </span>
                            <span data-pagemode="edit">
                                @Confluence.InputDropDown(value: item.Type, name: "Type", elements: ViewBag.DeliverableTypes, width: "100%", required: false)
                                @Confluence.InputHidden(value: item.DeliverableId.ToString(), name: "DeliverableId", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "inputHiddenBudgetId" } })
                            </span>
                        </td>

                        <td>
                            <span data-pagemode="read">@Confluence.Label(item.Name)</span>
                            <span data-pagemode="edit">@Confluence.InputText(value: item.Name, name: "Name", width: "100%", required: false, maxLength: 60)</span>
                        </td>

                        <td class="text-center">
                            <span data-pagemode="read">@Confluence.Label(item.PlannedDate.ToString("dd MMM yyyy"))</span>
                            <span data-pagemode="edit">@Confluence.InputDatePicker(value: item.PlannedDate, name: "PlannedDate", required: true)</span>
                        </td>
                        <td class="text-center">
                            @if (item.CanDeleted)
                            {
                                <span data-pagemode="read">@Confluence.ButtonTrash(text: string.Empty, disabled: true)</span>
                                <span data-pagemode="edit">@Confluence.ButtonTrash(text: string.Empty, action: "deleteDeliverable", dataAttributes: new Dictionary<string, string> { { "deliverableId", item.DeliverableId.ToString() } })</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>

        </table>

        <div class="col-md-12">
            <div data-pagemode="edit" class="text-center">
                @Confluence.ButtonAddNewRows(Localization.GetText("R6.Proposal.PDeliverables.AddDeliverable"), "ESWCIPDeliverablesTable", "btnAddNewDeliverable", action: "addNewDeliverable", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnNewOperation" } })
            </div>

            <div data-pagemode="edit" class="text-center">
                @Confluence.InputHidden(value: "|", name: "deleteDeliverables")
            </div>
        </div>
    </div>
</div>