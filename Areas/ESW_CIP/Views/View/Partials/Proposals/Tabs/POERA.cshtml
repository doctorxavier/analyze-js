@using IDB.MW.Application.ESW_CIPModule.Enums;
@using IDB.MW.Application.ESW_CIPModule.ViewModels;

@model ProposalViewModel


@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))
{
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.StateESW"), 
        Model.Oera.Objectives, 
        "inputTextObjectives", 
        Localization.GetText("R6.Proposal.TabObjective.MouseOver1ESW"))
}

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_CIP))
{ 
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.StateCIP"), 
        Model.Oera.Objectives, 
        "inputTextObjectives", 
        Localization.GetText("R6.Proposal.TabObjective.MouseOver1CIP"))
}

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))    
{   
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.MainQuestion"), 
        Model.Oera.MainQuestions, 
        "inputTextMainQuestions")
}

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))
{
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.QuestionAsked"), 
        Model.Oera.EarlierLiteratureQuestions, 
        "inputTextEarlierLiteratureQuestions")
}

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))
{
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.MainOutput"),
        Model.Oera.MainOutputs, "inputTextMainOutputs", 
        Localization.GetText("R6.Proposal.TabObjective.MouseOver4"))
}
else
{
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.MainOutput"), 
        Model.Oera.MainOutputs, 
        "inputTextMainOutputs", 
        Localization.GetText("R6.Proposal.TabObjective.MouseOver4CIP"))
}

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))
{ 
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.Methodological"), 
        Model.Oera.MethodologicalApproach, 
        "inputTextMethodologicalApproach")
}

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))
{ 
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.Strategy"), 
        Model.Oera.StrategyAndActivities, 
        "inputTextStrategyAndActivities", 
        Localization.GetText("R6.Proposal.TabObjective.MouseOver5"))
}

@*@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_ESW))
    {
        @ESWCIP.TitleWithInputText(Localization.GetText("R6.Proposal.TabObjective.NameOfPeerReview"), Model.NameOfPeerReview, "inputTextNameOfPeerReview")
        @ESWCIP.TitleWithNotRequiredInputText(Localization.GetText("R6.Proposal.TabObjective.AdditionalTechnicalInformation"), Model.AdditionalTechnicalInformation, "inputTextAdditionalTechnicalInformation")
    }*@

@if (Model.ProposalType.Equals(ESWCIPEnums.TYPE_CIP))
{
    @ESWCIP.TitleWithInputText(
        Localization.GetText("R6.Proposal.TabObjective.ReportDeliverables"), 
        Model.Oera.ReportDeliverables, 
        "inputTextReportDeliverables")
}

<br />
<br />
<br />
<br />
<br />      
<br />
<br />

<div class="col-md-12">
    <div class="row centeredContent">
        @Html.Partial("Partials/Proposals/Tabs/ESWCIPDocuments", Model)
    </div>

    <div data-pagemode="edit">
        <div class="row maxw990 text-right">
            @Confluence.ButtonBlue(
                text: Localization.GetText("R6.Proposal.TabObjectiveDocuments.AddDoc"),
                name: "documentsAdd",
                dataAttributes: new Dictionary<string, string>
                {
                    { "id", "ESWCIPDocuments-add" },
                    { "modal-allowclose", "true" },
                    { "custom-modal", "ESWCIPDocuments-modal-add" },
                    { "custom-modal-validate", "false" },
                    { "custom-modal-title", "Add Documents" },
                    { "idb-fieldname", "btnAddDocuments" }
                })
            <br />
            <br />
        </div>
    </div>
</div>
