@using IDB.MW.Application.BEOProcurementModule.ViewModels.FirmProcurement
@using IDB.MW.Application.BEOProcurementModule.Enums

@model FirmProcurementViewModel

@{
    var controlPermission = "beo-procurement-details-edit-control";
    var isReadMode = ViewBag.IsReadOnly ?? false;
}

<div data-id="headerButtons" class="float-right mb40">
    <div data-type="contentButtons" data-id="#linktabIdentification">
        @{
            if (Model.Stage <= ProcurementStageEnum.Preparation &&
                Model.Status == ProcurementStatusEnum.Active &&
                !isReadMode)
            {
                @Confluence.ButtonBlue(Localization.GetText("Common.Edit"), name: "EditIdentification", htmlClass: "own-hide",
                dataAttributes: new Dictionary<string, string> { { "idb-fieldname", controlPermission } })
            }
        }
    </div>
    <div data-type="contentButtons" data-id="#linktabPreparation">
        @{
            if (Model.Stage <= ProcurementStageEnum.Preparation &&
                Model.Status == ProcurementStatusEnum.Active &&
                !isReadMode)
            {
                @Confluence.ButtonBlue(Localization.GetText("Common.Edit"), name: "EditPreparation", htmlClass: "own-hide",
                dataAttributes: new Dictionary<string, string> { { "idb-fieldname", controlPermission } })
            }
        }
    </div>
    <div data-type="contentButtons" data-id="#linktabEvaluation">
        @{
            if (Model.Stage == ProcurementStageEnum.Evaluation &&
                Model.Status == ProcurementStatusEnum.Active &&
                !isReadMode)
            {
                @Confluence.ButtonBlue(Localization.GetText("Common.Edit"), name: "EditEvaluation", htmlClass: "own-hide",
                dataAttributes: new Dictionary<string, string> { { "idb-fieldname", controlPermission } })
            }
        }
    </div>
    <div data-type="contentButtons" data-id="#linktabNegotiation">
        @{
            if (Model.Stage == ProcurementStageEnum.Negotiation &&
                Model.Status == ProcurementStatusEnum.Active &&
                !isReadMode)
            {
                @Confluence.ButtonBlue(Localization.GetText("Common.Edit"), name: "EditNegotiation", htmlClass: "own-hide",
                dataAttributes: new Dictionary<string, string> { { "idb-fieldname", controlPermission } })
            }
        }
    </div>
    <div data-type="contentButtons" data-id="#linktabExecution">
        @{
            if (Model.Stage == ProcurementStageEnum.Execution &&
                Model.Status == ProcurementStatusEnum.Active &&
                !isReadMode)
            {
                @Confluence.ButtonBlue(Localization.GetText("Common.Edit"), name: "EditExecution", htmlClass: "own-hide",
                dataAttributes: new Dictionary<string, string> { { "idb-fieldname", controlPermission } })
            }
        }
    </div>
</div>