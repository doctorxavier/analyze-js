@using System.Globalization;
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.Architecture.ApplicationParameter
@using IDB.MW.Application.BEOProcurementModule.ViewModels.FirmProcurement

@model List<ProposalSummaryRowViewModel>

    @{

        if (ViewBag.FirmList == null)
        {
            ViewBag.FirmList = new List<SelectListItem>();
        }

        if (ViewBag.ScoringStatusList == null)
        {
            ViewBag.ScoringStatusList = new List<SelectListItem>();
        }

        if (ViewBag.CurrencyList == null)
        {
            ViewBag.CurrencyList = new List<SelectListItem>();
        }

        var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
        var formatDecimal = appSettings.FormatDecimal;
        var formatDate = appSettings.FormatDate;

        var config = Html.RenderDataTable(Model)
            .Name("ProposalSummary")
            .AddPrimaryKeyToName(false)
            .PrimaryKey(x => x.OfferId.ToString(CultureInfo.InvariantCulture))
            .UseDataTableNet(true)
            .UsePageMode(false)
            .Columns(columns =>
            {
                columns.Template(c => Confluence.InputCheckbox(isChecked: c.IsWinner, name: "SummaryWinner", disabled: true))
                    .Orderable(false)
                    .CssClass("textalign-center evaFirmScoringWinner")
                    .CssHeaderClass("evaFirmScoringWinner")
                    .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.ProposalSummary.Winners"))
                    .Hidden(false);
                columns.Template(c => Confluence.LabelGetDropDown(c.OfferId, ViewBag.FirmList, false))
                    .Orderable(false)
                    .CssClass("evaProposalSumFirmName")
                    .CssHeaderClass("evaProposalSumFirmName")
                    .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.ProposalSummary.FirmNameShortListed"))
                    .Hidden(false);
                columns.Template(c => Confluence.LabelGetDropDown(c.CurrencyId.ToString(), ViewBag.CurrencyList, false))
                   .Orderable(false)
                   .CssClass("colCurrencyRead")
                   .CssHeaderClass("colCurrencyRead")
                   .Header(Localization.GetText("COMMON.Currency"))
                   .Hidden(false);
                columns.Template(c => AmountFormat(c.Price))
                    .Orderable(false)
                    .CssClass("textalign-right colAmount")
                    .CssHeaderClass("colAmount")
                    .Header(Localization.GetText("COMMON.Price"))
                    .Hidden(false);
                columns.Template(c => Confluence.LabelGetDropDown(c.StatusId.ToString(), ViewBag.ScoringStatusList, false))
                    .Orderable(false)
                    .CssClass("evaFirmScoringStatus")
                    .CssHeaderClass("evaFirmScoringStatus")
                    .Header(Localization.GetText("COMMON.Status"))
                    .Hidden(false);
                columns.Bound(c => c.Comment)
                    .Orderable(false)
                    .CssClass("evaComments")
                    .CssHeaderClass("evaComments")
                    .Header(Localization.GetText("COMMON.Comments"))
                    .Hidden(false);
            })
        ;
        config.TableClass = "tableNormal";

    }

    <table class="table-transparent mb10">
        <tbody>
            <tr>
                <td class="table-transparent-text">
                    <div class="mb5 aligment">
                        @Confluence.LabelMainSubTitle(Localization.GetText("TCP.FirmProcurement.TableTitle.PriceProposalReview"))
                    </div>

                    @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableSubTitle.ProposalSummaryFirstRow"))
                </td>
            </tr>
        </tbody>
    </table>

    <div class="row mb20">
        <div class="col-xs-12">
            @Html.Partial("Controls/DataTable", config)
        </div>
    </div>

    @helper AmountFormat(decimal? amount)
{
    if (amount != null)
    {
        var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
        var formatDecimal = appSettings.FormatDecimal;

        <div> @FormatHelper.Format(amount, formatDecimal)</div>
    }
}
