@using IDB.Presentation.MVC4.Helpers

@using IDB.MW.Application.BEOProcurementModule.ViewModels.FirmProcurement
@using IDB.Presentation.MVC4.Areas.BEOProcurement.Components
@using IDB.Presentation.MVC4.Areas.BEOProcurement.Helper.ConstantHelper
@using IDB.Architecture.ApplicationParameter




@model NegotiationViewModel

@if (Model.Modality != Modality.TaskSingleSourceSelection && Model.Modality != Modality.SingleSourceSelection)
{
<div class="row">
    <div class="col-xs-9">
        @Html.Partial("ReadPartial/DatatableFinalFirmScorings", Model)
    </div>
</div>
}
<div class="row">
    <div class="col-xs-12 mb40">
        @Html.Partial("ReadPartial/DataTableDocsSimple",
        new SimpleDocViewModel
        {
            HasLink = true,
            LinkURL = AppParameter.GetText("Template.Site.Url.BEO.Templates"),
            Prefix = string.Empty,
            SimpleTable = Model.ComunicationsTable,
            SubTitle = Localization.GetText("TCP.FirmProcurement.TableSubTitle.CommunicationsRelatedDocs"),
            TableName = "NegComunications",
            Title = Localization.GetText("TCP.FirmProcurement.TableTitle.CommunicationsOtherRelatedDocuments")
        })
    </div>
</div>

<div class="row">
    <div class="col-xs-12 mb40">
        @Html.Partial("ReadPartial/DatatableDocsFirm",
        new FirmDocViewModel
        {
            HasLink = true,
            LinkURL = AppParameter.GetText("Template.Site.Url.BEO.Templates"),
            Prefix = string.Empty,
            Rows = Model.Negotiations,
            SubTitle = Localization.GetText("TCP.FirmProcurement.TableSubTitle.NegotiationMinutes"),
            TableName = "Negotiations",
            IsWinner = true,
            FirmList =  ViewBag.FirmListMinutes,
            Title = Localization.GetText("TCP.FirmProcurement.TableTitle.NegotiationMinutes"),
        })
    </div>
</div>

@if (Model.Modality != Modality.Framework)
{
    <div class="row mb20">
        <div class="col-xs-12 mb40">
            @Html.Partial("ReadPartial/DatatableCommitFunds", Model)
        </div>
        <div class="col-xs-12">
            @Html.Partial("ReadPartial/DatatableCommitFundsCompleted",
        new CommitFundsViewModel
        {
            IsTotal = false,
            Prefix = string.Empty,
            Rows = Model.CommitFundsSecond,
            TableName = "NegCommitFundsSecond"
        })
        </div>

        <div class="col-xs-12 font12 mb5">
            @Html.Partial("ReadPartial/DatatableCommitFundsSimpleLegend")
        </div>

        <div class="col-xs-12 font12 mb40">
            @Html.Partial("ReadPartial/DatatableNegCommitFundsSimpleLegend")
        </div>

    </div>
}    

<div class="row">
    <div class="col-xs-12 mb40">
        @Html.Partial("ReadPartial/DatatableContractDates", Model)
    </div>
</div>

<div class="row">
    <div class="col-xs-12 mb35">
        @Html.Partial("ReadPartial/DatatableContractDocs", Model.ContractDocs)
    </div>
</div>

@if (Model.Modality != Modality.TaskSingleSourceSelection && Model.Modality != Modality.SingleSourceSelection)
{
    <div class="row">
        <div class="col-xs-12 aligment mb25">
            @Confluence.LabelMainSubTitle(Localization.GetText("TCP.FirmProcurement.TableTitle.Protests"))
            <div class="mb10">
                @Confluence.Label(Localization.GetText("TCP.FirmProcurement.RadioButtonText.Protests"))
            </div>

            @Confluence.InputRadioButton("True", "HasProtest", Model.HasProtest, label: Localization.GetText("Common.Yes"), isInLine: true, disabled: true)
            @Confluence.InputRadioButton("False", "HasProtest", !Model.HasProtest, label: Localization.GetText("Common.No"), isInLine: true, htmlClass: "radiobutton-default ml20", disabled: true)

        </div>
    </div>

<div class="row" name="protestSection">
    <div class="col-xs-12 ">
        @Html.Partial("ReadPartial/DatatableProtestDocs", Model.ProtestDocs)
    </div>
    <div class="col-xs-12 mb40">
        @Confluence.InputCheckbox(Model.IsCertifyProtest, name: "IsCertifyProtest", label: Localization.GetText("TCP.FirmProcurement.CheckboxText.Protest"), disabled: true)
    </div>
</div>

}
<div class="mb10 pt30 aligment">
    @Confluence.LabelMainSubTitle(Localization.GetText("TCP.FirmProcurement.TableTitle.NegotiationChecklist"))
</div>

<div class="mb10">
    @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableSubTitle.ContractChecklist"))
</div>

<div class="row mb40">
    <div class="col-xs-12">
        @(Html.Checklist("NegChecklist")
            .Items(Model.Checklist)
            .HeaderItemName(Localization.GetText("TCP.FirmProcurement.TableHeader.ChecklistItem"))
            .HeaderMandatory(Localization.GetText("TCP.FirmProcurement.TableHeader.Mandatory"))
            .HeaderCompleted(Localization.GetText("TCP.FirmProcurement.TableHeader.Completed"))
            .HeaderDateCompleted(Localization.GetText("TCP.FirmProcurement.TableHeader.DateCompleted"))
            .HeaderUser(Localization.GetText("COMMON.User"))
            .ValidateOnLoad(false)
            .Editable(false)
        )
    </div>
</div>

@Html.ScriptBlock(

    @<script type="text/javascript">
        registerCallback(function () {

            checkShowStatus("HasProtest", "protestSection");

            $(document).on('change', '[name="HasProtest"]', function () {
                checkShowStatus("HasProtest", "protestSection");
            });
        });
    </script>
        )
