@using System.Globalization;
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MVCControls.General.Helpers

@using IDB.MW.Application.BEOProcurementModule.ViewModels.FirmProcurement

@model CommitFundsViewModel

@{


    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var formatDate = appSettings.FormatDate;

    var config = Html.RenderDataTable(Model.Rows)
        .Name(Model.TableName)
        .AddPrimaryKeyToName(false)
        .PrimaryKey(x => x.Id.ToString(CultureInfo.InvariantCulture))
        .UseDataTableNet(false)
        .UsePageMode(false)
        .Columns(columns =>
        {
            columns.Template(ColumnId)
                .Orderable(false)
                .CssClass("")
                .CssHeaderClass("")
                .Header(Localization.GetText(""))
                .HeaderAttribute("style", "")
                .Hidden(true);
            columns.Template(c => ColumnIsIdentification(c, false))
                .Orderable(false)
                .CssClass("")
                .CssHeaderClass("")
                .Header("")
                .HeaderAttribute("style", "")
                .Hidden(true);
            columns.Template(c => ColumnApprovalNumber(c, false))
                .Orderable(false)
                .CssClass("negAdministrativeON")
                .CssHeaderClass("negAdministrativeON")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.OperationNumber"))
                .Hidden(false);
            columns.Template(c => ColumnCurrentlyAvailable(c, false))
                .Orderable(false)
                .CssClass("textalign-right negAdministrativeTableColumn")
                .CssHeaderClass("negAdministrativeTableColumn")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.FundsAvailableAtStart"))
                .Hidden(false);
            columns.Template(c => ColumnOriginalEstimate(c, false))
                .Orderable(false)
                .CssClass("textalign-right negAdministrativeTableColumn")
                .CssHeaderClass("negAdministrativeTableColumn")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.OriginalProcurementEstimate"))
                .Hidden(false);
            columns.Template(c => ColumnPONumber(c, false))
                .Orderable(false)
                .CssClass("textalign-center negAdministrativePOColumn")
                .CssHeaderClass("negAdministrativePOColumn")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.PONumber"))
                .Hidden(false);
            columns.Template(c => ColumnPOAmount(c, false))
                .Orderable(false)
                .CssClass("textalign-right negAdministrativePOColumn")
                .CssHeaderClass("negAdministrativePOColumn")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.POAmount"))
                .Hidden(false);
            columns.Template(ColumnActions)
                .Orderable(false)
                .CssClass("colAction90")
                .CssHeaderClass("colAction90")
                .Header(Localization.GetText("COMMON.Action"))
                .Hidden(false);
        })
        .RowTemplates(x =>
        {
            x.Create(RowTemplateType.FirstRow, t => DrawRowTemplate(new CommitFundRowViewModel()));
            x.Create(RowTemplateType.LastRow, y => subtotalLine(Model.Rows));
        })
    ;
    config.TableClass = "tableNormal";
}

@helper ColumnId(CommitFundRowViewModel row)
{
    @row.Id
}

@helper ColumnIsIdentification(CommitFundRowViewModel row, bool isTemplate)
{
    @Confluence.InputText(value: row.IsIdentification.ToString(), name: Model.TableName + "-IsIdentificationHidden", disabled: isTemplate)
}

@helper ColumnApprovalNumber(CommitFundRowViewModel row, bool isTemplate)
{
    if (isTemplate || !row.IsIdentification)
    {
        @Confluence.InputDropDownAsync(
                    value: row.ApprovalNumber,
                    textSelected: row.ApprovalNumber,
                    name: Model.TableName + "-ProductActivityNumber",
                    searchUrl: Url.Action("FindOperationsAmount", "FirmProcurement", new { area = "Procurement" }),
                    disabled: isTemplate,
                    width: "100%",
                    dataAttributes: new Dictionary<string, string>() { { "parsley-noRepeatValue", "[name=" + Model.TableName + "-ProductActivityNumber" + "]" } })
    }
    else
    {
        @Confluence.Label(row.ApprovalNumber)
        @Confluence.InputText(
            row.ApprovalNumber,
            name: Model.TableName + "-ProductActivityNumber",
            htmlClass: "hide",
            required: false)
    }
}

@helper ColumnCurrentlyAvailable(CommitFundRowViewModel row, bool isTemplate)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatIntegerDolar = appSettings.FormatIntegerDolar;

    if (isTemplate || !row.IsIdentification)
    {
        @Confluence.Label(Localization.GetText("COMMON.NotApplicable"))
    }
    else
    {
        @Confluence.Label(FormatHelper.Format(row.TotalFundsCurrentlyAvailable, formatIntegerDolar))
    }
}

@helper ColumnOriginalEstimate(CommitFundRowViewModel row, bool isTemplate)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatIntegerDolar = appSettings.FormatIntegerDolar;

    if (isTemplate || !row.IsIdentification)
    {
        @Confluence.Label(Localization.GetText("COMMON.NotApplicable"))
    }
    else
    {
        @Confluence.Label(FormatHelper.Format(row.OriginalProcurementEstimate, formatIntegerDolar))
    }
    @Confluence.InputText(
        value: row.OriginalProcurementEstimate.ToString(),
        name: Model.TableName + "-fundsAvailableAtStartHidden",
        disabled: isTemplate,
        required: false,
        htmlClass: "hide")
}

@helper ColumnPONumber(CommitFundRowViewModel row, bool isTemplate)
{
    @Confluence.InputNumberText(row.PONumber, name: Model.TableName + "-PONumber", width: "100%", disabled: isTemplate, required: false)
    @Confluence.InputText(value: row.PONumber != null ? row.PONumber.ToString() : null, name: Model.TableName + "-hiddenPONumber", disabled: isTemplate, htmlClass: "hide", required: true, dataAttributes: !isTemplate ? new Dictionary<string, string>() { { "optional-required", "true" } } : null)
}

@helper ColumnPOAmount(CommitFundRowViewModel row, bool isTemplate)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatIntegerDolar = appSettings.FormatIntegerDolar;
    <span data-section="POAmount">
        @FormatHelper.Format(row.POAmount, formatIntegerDolar)
    </span>
    @Confluence.InputText(value: row.POAmount.ToString(), name: Model.TableName + "-POAmount", disabled: isTemplate, htmlClass: "hide", required: false)
}

@helper ColumnActions(CommitFundRowViewModel row)
{
    if (row.ApprovalNumber != "Subtotal" && row.ApprovalNumber != "Total" && !row.IsIdentification)
    {
        <div class="textalign-center">
            @Confluence.ButtonTrash("", "RemoveRow")
        </div>
    }
}
<div class="col-xs-12 pl0 font-14">
    @Confluence.LabelSubTitleGroup(Localization.GetText("TCP.FirmProcurement.TableSubTitle.CommitFundsSecond"))
</div>

<div class="row mb20">
    <div class="col-xs-12">
        @Html.Partial("Controls/DataTable", config)
    </div>
</div>


<div class="row mb5">
    <div class="col-xs-12 font12">
        @Html.Partial("EditPartial/DatatableCommitFundsSimpleLegend")
    </div>

</div>

<div class="row mb20">
    <div class="col-xs-12 font12">
        @Html.Partial("EditPartial/DatatableNegCommitFundsSimpleLegend")
    </div>
</div>

<div class="row mb30">
    <div class="col-xs-12 text-center">
        @Confluence.ButtonAddNewRows(Localization.GetText("TCP.FirmProcurement.Button.AddFundingSource"), "", name: "addNewRow", dataAttributes: new Dictionary<string, string> { { "linked-table", Model.TableName } })
    </div>
</div>


@helper DrawRowTemplate(CommitFundRowViewModel c)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var formatDate = appSettings.FormatDate;

    <tr class="template hide">
        <td class=" hide">
            @ColumnId(c)
        </td>
        <td class="hide">
            @ColumnIsIdentification(c, true)
        </td>
        <td class="negAdministrativeON">
            @ColumnApprovalNumber(c, true)
        </td>
        <td class="textalign-right negAdministrativeTableColumn" name="fundsAvailableAtStart">
            @ColumnCurrentlyAvailable(c, true)
        </td>
        <td class="textalign-right negAdministrativeTableColumn" name="originalProcurementStimate">
            @ColumnOriginalEstimate(c, true)
        </td>
        <td class="negAdministrativePOColumn">
            @ColumnPONumber(c, true)
        </td>
        <td class="textalign-right negAdministrativePOColumn" name="">
            @ColumnPOAmount(c, true)
        </td>
        <td class="colAction90">
            @ColumnActions(c)
        </td>
    </tr>
}

@helper subtotalLine(List<CommitFundRowViewModel> list)
{

    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatIntegerDolar;
    var availableSubtotal = list.Sum(x => x.TotalFundsCurrentlyAvailable);
    var originalSubtotal = list.Sum(x => x.OriginalProcurementEstimate);
    var poAmountSubtotal = list.Sum(x => x.POAmount);
    var tableName = Model.TableName;

    <tr class="sumAmountsColor">
        <td class=" hide"></td>
        <td class=" ">
            @Confluence.Label(
                text: Localization.GetText("TCP.FirmProcurement.TableSubtotal.Subtotal"),
                htmlClass: "bold")
        </td>
        <td class="textalign-right w200" name="fundsAvailableAtStart">
            <div class="bold textalign-right">
                @Confluence.Label(FormatHelper.Format(availableSubtotal, formatDecimal), htmlClass: "bold TotalFunds-" + tableName)
            </div>
        </td>
        <td class="textalign-right w200 hide" name="fundsAvailableAtStartHidden"></td>
        <td class="textalign-right w200" name="originalProcurementStimate">
            <div class="bold textalign-right">
                @Confluence.Label(FormatHelper.Format(originalSubtotal, formatDecimal), htmlClass: "bold OriginalFunds-" + tableName)
            </div>
        </td>
        <td class="textalign-right w200 hide" name="originalProcurementStimateHidden"></td>
        <td class="textalign-center w200"></td>
        <td class="textalign-right w200">
            <div class="bold textalign-right">
                @Confluence.Label(FormatHelper.Format(poAmountSubtotal, formatDecimal), htmlClass: "bold FinalPO-" + tableName)
            </div>
        </td>
        <td class="textalign-right w200 hide"></td>
        <td class="textalign-center w85"></td>
    </tr>
}