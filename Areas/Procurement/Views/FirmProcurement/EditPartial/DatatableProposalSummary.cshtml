@using System.Globalization
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Application.BEOProcurementModule.ViewModels.FirmProcurement
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.Architecture.ApplicationParameter

@model List<ProposalSummaryRowViewModel>

@{
    if (ViewBag.FirmList == null)
    {
        ViewBag.FirmList = new List<SelectListItem>();
    }
    if (ViewBag.StatusList == null)
    {
        ViewBag.StatusList = new List<SelectListItem>();
    }

    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var formatDate = appSettings.FormatDate;
    var tableName = "ProposalSummary";

    var config = Html.RenderDataTable(Model)
        .Name(tableName)
        .AddPrimaryKeyToName(false)
        .PrimaryKey(x => x.OfferId.ToString(CultureInfo.InvariantCulture))
        .UseDataTableNet(false)
        .UsePageMode(false)
        .Columns(columns =>
        {
            columns.Template(ColumnWinner)
                .Orderable(false)
                .CssClass("textalign-center evaFirmScoringWinner")
                .CssHeaderClass("evaFirmScoringWinner")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.ProposalSummary.Winners"))
                .Hidden(false);
            columns.Template(ColumnFirmName)
                .Orderable(false)
                .CssClass("colAmount")
                .CssHeaderClass("colAmount")
                .Header(Localization.GetText("TCP.FirmProcurement.TableHeader.ProposalSummary.FirmNameShortListed"))
                .Hidden(false);
            columns.Template(ColumnCurrency)
               .Orderable(false)
               .CssClass("colCurrencyEdit")
               .CssHeaderClass("colCurrencyEdit")
               .Header(Localization.GetText("COMMON.Currency"))
               .Hidden(false);
            columns.Template(ColumnPrice)
                .Orderable(false)
                .CssClass("textalign-right colAmount")
                .CssHeaderClass("colAmount")
                .Header(Localization.GetText("COMMON.Price"))
                .Hidden(false);
            columns.Template(ColumnStatus)
                .Orderable(false)
                .CssClass("evaFirmScoringStatus")
                .CssHeaderClass("evaFirmScoringStatus")
                .Header(Localization.GetText("COMMON.Status"))
                .Hidden(false);
            columns.Template(ColumnComment)
                .Orderable(false)
                .CssClass("evaComments")
                .CssHeaderClass("evaComments")
                .Header(Localization.GetText("COMMON.Comments"))
                .Hidden(false);
        })
    ;
    config.TableClass = "tableNormal";
}


<table class="table-transparent mb10">
    <tbody>
        <tr>
            <td class="table-transparent-text">
                <div class="mb5 aligment">
                    @Confluence.LabelMainSubTitle(Localization.GetText("TCP.FirmProcurement.TableTitle.PriceProposalReview"))
                </div>

                @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableSubTitle.ProposalSummaryFirstRow"))
            </td>
        </tr>
    </tbody>
</table>

<div class="row mb20">
    <div class="col-xs-12">
        @Html.Partial("Controls/DataTable", config)
    </div>
</div>
@helper ColumnWinner(ProposalSummaryRowViewModel c)
{
    var tableName = "ProposalSummary";

    @Confluence.InputCheckbox(
            isChecked: c.IsWinner,
            name: tableName + "-Winner",
            disabled: false)

}

@helper ColumnFirmName(ProposalSummaryRowViewModel c)
{
    @Confluence.LabelGetDropDown(c.OfferId, ViewBag.FirmList, false)
}

@helper ColumnCurrency(ProposalSummaryRowViewModel c)
{
    var tableName = "ProposalSummary";
    var dataAttr = new Dictionary<string, string>()
    {
        { "optional-required", "true" }
    };

    <div name="currencyChange">
        @Confluence.InputDropDown(
                value: c.CurrencyId.ToString(),
                name: tableName + "-Currency",
                elements: ViewBag.CurrencyList,
                disabled: false,
                orderAsc: false,
                width: "100%",
                required: false,
                dataAttributes: dataAttr)
    </div>
}

@helper ColumnPrice(ProposalSummaryRowViewModel c)
{
    var dataAttr = new Dictionary<string, string>()
    {
        { "optional-required", "true" }
    };
    var tableName = "ProposalSummary";
    @Confluence.InputDecimal(c.Price,
        tableName + "-Price",
        disabled: false,
        width: "100%",
        maxValue:
        "999999999999",
        decimalPrecision: 2,
        required: false,
        dataAttributes: dataAttr)
}

@helper ColumnStatus(ProposalSummaryRowViewModel c)
{
    var dataAttr = new Dictionary<string, string>()
    {
        { "optional-required", "true" }
    };
    var tableName = "ProposalSummary";
    @Confluence.InputDropDown(
        c.StatusId.ToString(),
        tableName + "-StatusId",
        ViewBag.ScoringStatusList,
        disabled: false,
        width: "100%",
        htmlClass: "textalign-right",
        required: false,
        dataAttributes: dataAttr)
}

@helper ColumnComment(ProposalSummaryRowViewModel c)
{
    var tableName = "ProposalSummary";
    @Confluence.InputText(
        c.Comment,
        tableName + "-Comment",
        disabled: false,
        width: "100%",
        required: false)
}
