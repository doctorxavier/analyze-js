@using System.Globalization;

@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MVCControls.General.Helpers
@using IDB.Architecture.ApplicationParameter
@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Application.BEOProcurementModule.ViewModels.FirmProcurement
@using IDB.Presentation.MVC4.Areas.BEOProcurement.Helper.ConstantHelper
@using IDB.MW.Application.BEOProcurementModule.Enums
@using IDB.MW.Infrastructure.BaseClasses
@using IDB.MW.Application.Core.ViewModels

@model ExecutionViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;
    var formatDecimal = appSettings.FormatDecimal;
    var formatInteger = appSettings.FormatInteger;
    var formatDolarDecimal = appSettings.FormatIntegerDolar;

    var dataAttributeOptionalRequired = new Dictionary<string, string>() { { "optional-required", "true" } };

    if (ViewBag.FirmListWinner == null)
    {
        ViewBag.FirmListWinner = new List<SelectListItem>();
    }

    var cmdCollection = (CustomEnumDictionary<MasterDataViewModel>)ViewBag.CMDCollection;

    var dataAttr = new Dictionary<string, string>()
    {
        { "optional-required", "true" }
    };

}

<div class="row">
    <div class="col-xs-12 mb40">
        @Html.Partial("EditPartial/ContractModification", new ContractModificationViewModel { Modality = Model.Modality, ContractModificationsViewModels = Model.ContractModifications })
    </div>
</div>

<div class="row mb20">
    <div class="col-xs-12 mb40">
        <div class="mb5 aligment">
            @Confluence.LabelMainSubTitle(Localization.GetText("TCP.FirmProcurement.TableTitle.SanctionsNonPerformance"))
        </div>
        <div class="mb10">
            @Confluence.Label(Localization.GetText("TCP.FirmProcurement.RadioButtonText.SanctionsNonPerformance"))
        </div>

        @Confluence.InputRadioButton("True", "radioSanctionsNonPerformance", Model.HasSanctions, label: Localization.GetText("Common.Yes"), isInLine: true, disabled: false)

        @Confluence.InputRadioButton("False", "radioSanctionsNonPerformance", !Model.HasSanctions, label: Localization.GetText("Common.No"), isInLine: true, htmlClass: "radiobutton-default ml20", disabled: false)

    </div>
    <div class="col-xs-12" name="divContractNonPerformance">

        <div class="row mb5">
            <div class="col-xs-2">
                @Confluence.Label(Localization.GetText("TCP.FirmProcurement.SanctionsStartDate"))
            </div>
            <div class="col-xs-2">
                @Confluence.Label(Localization.GetText("TCP.FirmProcurement.SanctionsEndDate"))
            </div>
        </div>

        <div class="row mb5">
            <div class="col-xs-2">
                @Confluence.InputDatePicker(
                    value: Model.SanctionsStartDate,
                    name: "inputSanctionsStartDate",
                    htmlClass: "customDatepicker",
                    required: false,
                    dataAttributes: dataAttributeOptionalRequired)
            </div>
            <div class="col-xs-2">
                @Confluence.InputDatePicker(
                    value: Model.SanctionsEndDate,
                    name: "inputSanctionsEndDate",
                    htmlClass: "customDatepicker",
                    required: false,
                    dataAttributes: dataAttributeOptionalRequired)
            </div>
        </div>

        <div class="row">
            <div class="col-xs-12 ">
                @Html.Partial("EditPartial/DatatableDocsFirm",
                new FirmDocViewModel
                {
                    HasLink = false,
                    LinkURL = string.Empty,
                    Prefix = string.Empty,
                    Rows = Model.SanctionDocs,
                    SubTitle = Localization.GetText("TCP.FirmProcurement.TableSubTitle.SanctionsNonPerformance"),
                    TableName = "SanctionDocs",
                    Title = string.Empty,
                    IsWinner = true
                })
            </div>
        </div>
        @Confluence.InputText("sanction", "sanctionPerformedName", htmlClass: "hide mb10", dataAttributes: new Dictionary<string, string> { { "parsley-sanctionsFirmsExecution", "true" } })
        <div>
            <div class="mb10">
                @Confluence.Label(Localization.GetText("Comments"), htmlClass: "bold")
            </div>
            <div class="mb40">
                @Confluence.InputTextArea(
                    Model.SanctionComments,
                    "SanctionComment",
                    isReadOnly: false,
                    width: "100%",
                    height: "100px",
                    required: false,
                    dataAttributes: dataAttributeOptionalRequired)
            </div>
        </div>
    </div>
</div>

<div class="row mb10">
    <div class="col-xs-12 aligment">
        @Confluence.LabelMainSubTitle(Localization.GetText("TCP.FirmProcurement.TableTitle.FirmEvaluation"))
    </div>
</div>

<div class="row">
    <div class="col-xs-3">
        @Confluence.Label(Localization.GetText("COMMON.Name"))
    </div>
    <div class="col-xs-2">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableHeader.FirmNationality"))
    </div>
    <div class="col-xs-4 pl55">

        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableHeader.OriginalAmountContract"))
    </div>
    <div class="col-xs-3">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableHeader.FinalAmountContract"))
    </div>
</div>

<div class="row mb20">
    <div class="col-xs-3">
        @Confluence.Label(text: Model.FirmEvaluation.Name, htmlClass: "bold")
    </div>
    <div class="col-xs-2">
        @Confluence.Label(text: Model.FirmEvaluation.FirmNationality, htmlClass: "bold")
    </div>
    <div class="col-xs-4 pl55">
        @Confluence.Label(text: FormatHelper.Format(Model.FirmEvaluation.OriginalAmountContract, formatDolarDecimal), htmlClass: "bold")
    </div>
    <div class="col-xs-3">
        @Confluence.Label(text: FormatHelper.Format(Model.FirmEvaluation.FinalAmountContract, formatDolarDecimal), htmlClass: "bold")
    </div>
</div>

<div class="row">
    <div class="col-xs-3">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableHeader.ContractStartDate"))
    </div>
    <div class="col-xs-2">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableHeader.OriginalEndDate"))
    </div>
    <div class="col-xs-4 pl55">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.FirmPerformanceEvaluation.NewEndDate"))
    </div>
    <div class="col-xs-3">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.FirmPerformanceEvaluation.ExtensionDays"))
    </div>
</div>

<div class="row mb40">
    <div class="col-xs-3">
        @Confluence.Label(text: FormatHelper.Format(Model.FirmEvaluation.ContractStartDate, formatDate), htmlClass: "bold")
    </div>
    <div class="col-xs-2">
        @Confluence.Label(text: FormatHelper.Format(Model.FirmEvaluation.OriginalContractEndDate, formatDate), htmlClass: "bold")
    </div>
    <div class="col-xs-4 pl55">
        @Confluence.Label(text: FormatHelper.Format(Model.FirmEvaluation.NewContractEndDate, formatDate), htmlClass: "bold")
    </div>
    <div class="col-xs-3">
        @Confluence.Label(text: FormatHelper.Format(Model.FirmEvaluation.ExtensionInDays, formatInteger), htmlClass: "bold")
    </div>
</div>

<div class="row mb20">
    <div class="col-xs-12">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableHeader.BriefDescription"))
    </div>
    <div class="col-xs-12">
        @Confluence.InputTextArea(
                value: Model.FirmEvaluation.BriefDescription,
                name: "BriefDescription",
                isReadOnly: false,
                width: "100%",
                height: "100px",
                required: false,
                dataAttributes: dataAttributeOptionalRequired)
    </div>
</div>

<div class="row">
    <div class="col-xs-12 mb40">
        @Html.Partial("EditPartial/DatatableFirmEvaluation", Model.FirmEvaluation)
    </div>
</div>

<div class="row mb10">
    <div class="col-xs-12">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TableOptions.PerformanceEvaluation.RecommendConsultingFirm"))
    </div>
    <div class="col-xs-12">
        @Confluence.InputRadioButton(
            value: "True",
            name: "Recomended",
            isChecked: Model.FirmEvaluation.IsRecomend.HasValue && Model.FirmEvaluation.IsRecomend.Value,
            label: Localization.GetText("COMMON.Yes"),
            disabled: false,
            required: false,
            dataAttributes: dataAttr)

        @Confluence.InputRadioButton(
            value: "False",
            name: "Recomended",
            isChecked: Model.FirmEvaluation.IsRecomend.HasValue && !Model.FirmEvaluation.IsRecomend.Value,
            label: Localization.GetText("COMMON.No"),
            disabled: false,
            required: false,
            dataAttributes: dataAttr)

    </div>
</div>

<div class="row mb40">
    <div class="col-xs-12">
        @Confluence.Label(Localization.GetText("TCP.FirmProcurement.TextAreaTitle.RecommendedExplanation"))
    </div>
    <div class="col-xs-12">
        @Confluence.InputTextArea(
            value: Model.FirmEvaluation.GeneralComments,
            name: "generalCommentText",
            isReadOnly: false,
            width: "100%",
            htmlClass: "generalCommentsArea",
            maxLength: 1500,
            required: false,
            dataAttributes: dataAttributeOptionalRequired)
    </div>
</div>

<div class="row">
    <div class="col-xs-12 mb40">
        @Html.Partial("EditPartial/DataTableDocsSimple",
        new SimpleDocViewModel
        {
            HasLink = true,
            LinkURL = AppParameter.GetText("Template.Site.Url.BEO.Templates"),
            Prefix = string.Empty,
            SimpleTable = Model.ExecutionDocsTable,
            SubTitle = Localization.GetText("TCP.FirmProcurement.TableSubTitle.CommunicationsRelatedDocs"),
            TableName = "ExecutionDocs",
            Title = Localization.GetText("TCP.FirmProcurement.TableTitle.CommunicationsOtherRelatedDocuments")
        })
    </div>
</div>

@Html.ScriptBlock(

    @<script type="text/javascript">
        registerCallback(function () {
            checkShowStatus("radioSanctionsNonPerformance", "divContractNonPerformance");

            $(document).on('change', '[data-target-section]', function () {

                var source = $(this);
                var value = source.val();
                var selector = String.format('[data-section="{0}"]', source.attr('data-target-section'));
                var region = $(selector);

                var inputYes = $('input[name="radioContractModifications"][value="True"]');
                var inputIsCertifyModifications = region.find('input[name="IsCertifyModifications"]');

                if (value == 'True') {
                    inputIsCertifyModifications.attr('required', 'required');

                } else {
                    inputIsCertifyModifications.removeAttr('required');
                }

                changeVisibilityByInput(source, region);
            });

            $(document).on('change', '[name="radioSanctionsNonPerformance"]', function () {
                checkShowStatus("radioSanctionsNonPerformance", "divContractNonPerformance");

            });

            $(document).on('click', 'input[name*="answer-"]', function () {
                var averageEvaluationValue = calculateOverallPerformance();
                var overallPerformance = $('label.overallPerformance');

                overallPerformance.text(averageEvaluationValue);
                overallPerformance.val(averageEvaluationValue);
            });

            $(document).ready(function () {
                $('[data-target-section]:checked').change();
            });



            window.ParsleyValidator.addValidator('sanctionsFirmsExecution', function (value) {

                var result = true;
                var table = $('#SanctionDocs');
                var trs = table.find('tbody tr:not(.template)');
                var sanctionIds = trs.find('input[name*="DocumentNumber"]');
                var count = 0;

                var isSanction = $('[name="radioSanctionsNonPerformance"]:checked').val() == 'True';

                if (isSanction) {
                    result = sanctionIds.length > 0;
                }

                return result;
            })
           .addMessage('en', 'sanctionsFirmsExecution', '@(Localization.GetText("TCP.BeoProcurement.Execution.SanctionTable"))');

        });

        function calculateOverallPerformance() {
            var rbEvaluationList = $('input[name*="answer-"]:checked');
            var values = 0;
            var average = 0.00;

            rbEvaluationList.each(function (key, input) {
                var item = $(input);
                var value = item.attr('value');

                values = values + parseInt(value);
            });

            average = parseFloat(values / 6);

            return average.toFixed(2);
        }
    </script>
                                                                     )
