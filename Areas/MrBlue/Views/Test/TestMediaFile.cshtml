@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.SecurityService.Enums
@using System.Web.Script.Serialization
@using Newtonsoft.Json
@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.Models.Documents

@{
    ViewBag.IDModal = "ModalMediaFile";
}

@model  List<IDB.MW.Application.MrBlueModule.ViewModels.ManageMediaFiles.ManageMediaFilesRowViewModel>

<div data-name="document-section">
    <div class="row row-header">
        <div class="col-md-12">
            @Html.Partial("DocumentsMediaTable", new IDB.Presentation.MVC4.Areas.MrBlue.Models.DocumentMediaTableViewModel
       {
           Documents = Model,
           ShowAddButton = true,
           DocumentTableName = "documentMediaTable",
           AddFunctionName = "addDocumentMedia",
           CanDelete = true,
           BeforeDeleteFuncionName = null
       })

        </div>
    </div>
</div>


@Html.ScriptBlock(
    @<script type="text/javascript">

        registerCallback(function () {
            enterEditMode(false, $('div[data-name="document-section"]'), false);
        });
      
        function addDocumentMedia(documentList, tableDocumentMedia) {
            //Var Table
            var table = $('#' + tableDocumentMedia);
            var templateTr = $('#' + tableDocumentMedia + ' tbody tr:first');
            var rowIds = getIdsTable(tableDocumentMedia);

            for (var i = 0; i < documentList.length; i++) {
                var documentMedia = documentList[i];
                if (documentMedia != null) {

                    var documentMediaId = documentMedia.MediaId;
                    var documentMediaUser = "TodoUser";
                    var documentMediaDate = documentMedia.Date;
                    var documentMediaDescrition = documentMedia.Description;

                    var foundId = $.inArray(documentMediaId.toString(), rowIds) > -1;

                    if (!foundId) {

                        var clonedTr = templateTr.clone(false).appendTo('#' + tableDocumentMedia + ' tbody');
                        clonedTr.find('input[name=' + tableDocumentMedia + '-RowId]').attr('data-persist-new', documentMediaId);
                        clonedTr.find('input[name=' + tableDocumentMedia + '-RowId]').val(documentMediaId);
                        clonedTr.find("td:eq(1)").html(documentMediaUser);
                        clonedTr.find("td:eq(2)").html(documentMediaDate);
                        clonedTr.find("td:eq(3)").html(documentMediaDescrition);
                        clonedTr.attr("data-new-id", "new");
                        clonedTr.attr("data-id", documentMediaId);
                        bindHandlers(clonedTr);
                        clonedTr.removeClass("hide");
                    }
                }
            }
        }

        function getMostRecentRowId(tableId) {

            var maximum = null;

            $('#' + tableId + ' tbody tr:visible').each(function () {
                var value = parseInt($(this).attr('data-id'));
                maximum = (value > maximum) ? value : maximum;
            });

            return maximum;
        }

        function getIdsTable(tableId) {

            var myValIds = [];

            $('#' + tableId + ' tbody tr:visible').map(function () {
                myValIds.push($(this).attr('data-id'));
            });

            return myValIds;
        }


    </script>)