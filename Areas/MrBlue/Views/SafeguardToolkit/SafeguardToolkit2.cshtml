@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.SecurityService.Enums
@using System.Web.Script.Serialization
@using IDB.Architecture.Language
@using IDB.MW.Infrastructure.Configuration.Contracts
@using IDB.MW.Application.MrBlueModule.Enums

@model IDB.MW.Application.MrBlueModule.ViewModels.SafeguardToolkit.SafeguardToolkitStep2ViewModel

@{
    var devMode = ConfigurationServiceFactory.Current.GetApplicationSettings().IsDevelopmentMode;
}

<div class="page">
    <div id="Data"
         data-parsley-validate="data-parsley-validate"
         data-parsley-excluded="[disabled]"
         data-loadurl="@Url.Action("SafeguardToolkit2", "SafeguardToolkit", new { area = "MrBlue" })"
         data-url="@Url.Action("SaveSafeguardToolkit2", "SafeguardToolkit",
             new
             {
                 area = "MrBlue",
                 creationMode = ViewBag.CreationMode,
                 previousVersionId = Model.SafeguardToolkitId
             })">

        @if(Model != null)
        {
            @Html.Partial("Partials/Step2/SafeguardToolkit2Partial", Model);
        }
    </div>
</div>

@section scripts{

    @ModuleScripts.KeyWordsToolkit(Url)
    @ModuleScripts.TableFunctions()
    @MrBlue.ParsleyOptionalFunctions()
    @MrBlue.DynamicQuestionnaire(Model.SafeguardPolicyFilter)
    @MrBlue.RadioButtonFix()

    <script type="text/javascript">

        registerCallback(function () {
            enterEditMode(false, $('#Data'), false);
            enterEditMode(false, $('#Data'), false);
            forceClickNegativeAnswer();
        });


        function forceClickNegativeAnswer() {
            var noArray = ["no".toLowerCase(),
                "no".toLowerCase(),
                "no".toLowerCase(),
                "no".toLowerCase()];

            $('span.radiobutton-default-text label').each(function () {
                var source = $(this);
                var input = source.closest('label.radiobutton-default').find('input[type="radio"]');
                var text = source.html();

                if (noArray.contains(text.toLowerCase()) && input.is(':checked')) {
                    input.click();
                }
            });
        }

        function clickModelDashboard() {
            var button = $('button[name="buttonCancelRedirect"]');
            var buttonLink = button.attr('data-url');
            window.location.assign(buttonLink);
        }

        function save() {

            var container = $('#Data');
            transformRequiredToOptional(container);
            var response = saveContainer(container, '#hidViewModel', false, null, null, false);

            if (response !== false) {
                response.done(function (data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage != "") {
                        showMessage(data.ErrorMessage);
                    } else if (data.IsValid == true) {
                        var url = '@Html.Raw(Url.Action("SafeguardToolkitRedirect", "SafeguardToolkit",
                        new {
                            area = "MrBlue",
                            fromStep = SafeguardToolkitStepEnum.Dashboard,
                            navigator = StepNavigatorEnum.Cancel
                        }))&versionId=' + data.VersionId;
                        window.location.assign(url);
                    }
                });
            }
            return response;
        }

        function next(source) {

            var container = $('#Data');
            transformOptionalRequiredToRequired(container);
            var response = saveContainer(container, '#hidViewModel', false, null, null, false);

            if (response !== false) {
                response.done(function (data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage != "") {
                        showMessage(data.ErrorMessage);
                    }
                    else if (data.IsValid == true) {
                        var url = '@Html.Raw(Url.Action("SafeguardToolkitRedirect", "SafeguardToolkit",
                        new {
                            area = "MrBlue",
                            fromStep = SafeguardToolkitStepEnum.Step2,
                            navigator = StepNavigatorEnum.Next, creationMode =
                                  ViewBag.CreationMode == SafeguardToolkitCreationModeEnum.NewFromSelected
                                  ? SafeguardToolkitCreationModeEnum.Draft
                                  : ViewBag.CreationMode }))&versionId=' + data.VersionId;
                        window.location.assign(url);
                    }
                });

                return response;
            }
        }
        
    </script>
}
