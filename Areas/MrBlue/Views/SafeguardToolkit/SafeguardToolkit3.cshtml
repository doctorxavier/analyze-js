@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.SecurityService.Enums
@using System.Web.Script.Serialization
@using Newtonsoft.Json
@using IDB.Architecture.Language
@using IDB.MW.Application.MrBlueModule.Enums

@model IDB.MW.Application.MrBlueModule.ViewModels.SafeguardToolkit.SafeguardToolkitStep3ViewModel

@{
    var devMode = ConfigurationServiceFactory.Current.GetApplicationSettings().IsDevelopmentMode;
}

<div class="page safeguard-toolkit-step-3">
    <div id="Data"
         data-parsley-validate="data-parsley-validate"
         data-parsley-excluded="[disabled]"
         data-loadurl="@Url.Action( "SafeguardToolkit3" , "View" , new { area = "MrBlue" } )"
         data-url="@Url.Action("SaveSafeguardToolkit3", "SafeguardToolkit", new { area = "MrBlue" })">

        @if(Model != null)
        {
            @Html.Partial("Partials/Step3/SafeguardToolkit3Partial", Model);
        }
    </div>
</div>

@section scripts{

    @ModuleScripts.KeyWordsToolkit(Url)
    @ModuleScripts.TableFunctions()
    @MrBlue.ParsleyOptionalFunctions()
    @MrBlue.DynamicQuestionnaire(Model.ImpactsChecklist)
    @MrBlue.RadioButtonFix()

    <script type="text/javascript">

        registerCallback(function () {
            enterEditMode(false, $('#Data'), false);
        });

        function clickModelDashboard() {
            var button = $('button[name="buttonCancelRedirect"]');
            var buttonLink = button.attr('data-url');
            window.location.assign(buttonLink);
        }

        function save() {

            var container = $('#Data');
            transformRequiredToOptional(container);
            var response = saveContainer(container, '#hidViewModel', false, null, null, false);

            if (response !== false) {
                response.done(function (data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage != "") {
                        showMessage(data.ErrorMessage);
                    } else if (data.IsValid == true) {
                        var url = '@Html.Raw(Url.Action("SafeguardToolkitRedirect", "SafeguardToolkit",
                        new {
                            area = "MrBlue",
                            fromStep = SafeguardToolkitStepEnum.Dashboard,
                            navigator = StepNavigatorEnum.Cancel
                        }))&versionId=' + data.VersionId;
                        window.location.assign(url);
                    }
                });
            }
            return response;
        }

        function next() {

            var container = $('#Data');
            transformOptionalRequiredToRequired(container);
            var response = saveContainer(container, '#hidViewModel', false, null, null, false);

            if (response !== false) {
                response.done(function (data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage != "") {
                        showMessage(data.ErrorMessage);
                    }
                    else if (data.IsValid == true) {
                        var url = '@Html.Raw(Url.Action("SafeguardToolkitRedirect", "SafeguardToolkit", new { area = "MrBlue", versionId = Model.SafeguardToolkitId, fromStep = SafeguardToolkitStepEnum.Step3, navigator = StepNavigatorEnum.Next, creationMode = ViewBag.CreationMode }))&isNew=' + '@ViewBag.isNew';
                        window.location.assign(url);
                    }
                });

                return response;
            }
        }
    </script>
}
