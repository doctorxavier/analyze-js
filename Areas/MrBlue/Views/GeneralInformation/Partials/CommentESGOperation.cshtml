@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using System.Globalization
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Models
@using IDB.Architecture.Language
@using IDB.MW.Application.MrBlueModule.ViewModels.GeneralInformation

@model GeneralInformationViewModel

@{
    var formatDecimal = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDecimal;
    var expRegDecimal = ConfigurationServiceFactory.Current.GetApplicationSettings().ValidationDecimalExpReg;
    var devMode = ConfigurationServiceFactory.Current.GetApplicationSettings().IsDevelopmentMode;

}

@if(Model.SustainabilityComponents != null)
{
    <div class="row mb20 font-body">
        <div class="col-md-12">
            @{

    var config2 = Html.RenderDataTable(Model.CommentsESGOperation);
    config2.Name("ESGOperationComments")
    .PrimaryKey(m => m.CommentId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(false)
    .Columns(columns =>
    {
        columns.Bound(c => c.User).Persistent()
        .Header(Localization.GetText(Localization.GetText("MrBlue.ESG.ESGOperationComments.User")));

        columns.Bound(c => c.Date).Persistent()
        .Header(Localization.GetText(Localization.GetText("MrBlue.ESG.ESGOperationComments.DateTime")));

        columns.Bound(c => c.Comment).Persistent().CssClass("period")
        .Header(Localization.GetText(Localization.GetText("MrBlue.ESG.ESGOperationComments.Comment")));

        columns.Template(columnAction)
        .Persistent()
        .Header(Localization.GetText(Localization.GetText("MrBlue.ESG.ESGOperationComments.Action")))
        .Center();

        columns.Template(columnExpandable)
        .Persistent();

    }).RowTemplates(rows => rows.Create(RowTemplateType.AllRows, item => ShowCommentRow(item)));

    config2.TableClass = "tableNormal";

    @helper columnAction(CommentsViewModel model)
{
    <span data-pagemode="edit">
        @Confluence.ButtonTrash(
                string.Empty,
                name : "removeComments",
                action : "removeComments",
                disabled : !model.IsEditable)
    </span>
}

                @helper columnExpandable(CommentsViewModel viewmodel)
{
                @Display.ExpandableTriangleButton(string.Format("#ESGOperationComments [data-name='detail-Comment-{0}']",
        viewmodel.CommentId),
        markTargetAsExpanded : false)
}

                @helper ShowCommentRow(CommentsViewModel viewmodel)
{
                <tr class="skip template dont-hide-at-edit own-hide" data-name="detail-Comment-@viewmodel.CommentId" row-detail="true">
                    <td colspan="5" data-pagemode="read">
                        @Confluence.InputTextArea(viewmodel.Comment, "comment",
                required : false,
                isReadOnly : false,
                disabled : !viewmodel.IsEditable,
                width : "100%",
                height : "100px",
                dataAttributes : new Dictionary<string, string> { { "id" ,
                viewmodel.CommentId.ToString() } })
                    </td>
                    <td colspan="5" data-pagemode="edit">
                        @Confluence.InputTextArea(viewmodel.Comment, "comment",
                required : true,
                isReadOnly : false,
                width : "100%",
                height : "100px",
                dataAttributes : new Dictionary<string, string> { { "id" ,
                viewmodel.CommentId.ToString() } })
                    </td>
                </tr>
}


    config2.RowTemplates(x =>
    {
        x.Create(RowTemplateType.FirstRow,
            @<tr class="hide" style="vertical-align:top;" data-name="templateSustainabilityComponents ">
                <td>
                    <span>@ViewBag.CurrentUser</span>
                </td>
                <td>
                    <label></label>
                </td>
                <td class="period">
                    <label name="contentComment"><span style="font-weight:bold;">@Localization.GetText("MrBlue.ESG.ESGOperationComments.NewComment")</span></label>
                </td>
                <td>
                    @Confluence.ButtonTrash(
                     string.Empty,
                     name : "removeComments",
                     action : "removeComments")
                </td>
                <td>
                    @Display.ExpandableTriangleButton("#ESGOperationComments [data-name='detail-Comment-XXX']",
                     markTargetAsExpanded : false)
                </td>
            </tr>);
    });

    config2.RowTemplates(x =>
    {
        x.Create(RowTemplateType.FirstRow,
            @<tr class="skip template dont-hide-at-edit own-hide" data-name="detail-Comment-XXX" row-detail="true">
                <td colspan="5" data-pagemode="edit">
                    @Confluence.InputTextArea(string.Empty, "comment",
                required : true,
                isReadOnly : false,
                disabled : true,
                width : "100%",
                height : "100px",
                dataAttributes : new Dictionary<string, string> { { "id", "-1" } })
                </td>
            </tr>);
    });

    @Html.Partial("Controls/DataTable", config2)

            }
            <div class="col-md-12 text-center" data-pagemode="edit" style="margin-top:40px;">
                @Confluence.ButtonAddNewRows(
                    Localization.GetText("MrBlue.ESG.ESGOperationComments.New"),
                    "newESGOperationComments",
                    action : "newESGOperationComments"
                )
            </div>
        </div>
    </div>
}
