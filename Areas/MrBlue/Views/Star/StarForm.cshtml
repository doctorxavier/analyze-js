@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Application.MrBlueModule.ViewModels.Star
@using IDB.Presentation.MVC4.Models.Mock;

@model StarViewModel

@Html.Partial("_MockReadWritePermissions", MockReadWritePermissionsViewModel.Create(Permission.ESG_SPECIALIST_WRITE_PERMISSIONS))

<div class="row">
    <div class="col-md-12">
        @if (!Model.IsReadOnly)
        {
            @Html.Partial("Partials/buttons")
        }
        else
        { 
             @Html.Partial("Partials/buttonCancel")
        }
        @Confluence.LabelTitleGroup(Localization.GetText("MrBlue.Star.FormTitle"))
    </div>
</div>

<div class="page">
    @if (ViewBag.ReadRole ?? false)
    {
        <div id="Data"
             data-parsley-validate="data-parsley-validate"
             data-parsley-excluded="[disabled]"
             data-url="@Url.Action("SaveStarForm", "Star", new { area = "MrBlue" })">


            @if (Model != null)
            {
                @Html.Partial("Partials/StarFormPartial", Model)
            }
        </div>
    }
</div>
<div class="row">
    <div class="col-md-12">
        @if (!Model.IsReadOnly)
        {
            @Html.Partial("Partials/buttons")
        }
        else
        { 
             @Html.Partial("Partials/buttonCancel")
        }
    </div>
</div>
@section scripts{

    @ModuleScripts.KeyWordsToolkit(Url)
    @MrBlue.DynamicQuestionnaire(Model.StarDynamicQuestionnaire)
    @MrBlue.RadioButtonFix()

    <script type="text/javascript">
        registerCallback(function() {
            enterEditMode(false, $('#Data'), false);
            questionarieWithoutBorder();
            disabledSafeguardPerfomance();
        });

        function disabledSafeguardPerfomance() {
            var questionSafeguard = $('#ST009');
            var contentQuestionSafeguard = questionSafeguard.val();
            var regionQuestion = questionSafeguard.closest('div.esgAnswerContainer');
            var label = '<label class="labelNormal bold readOnlyLabel">' + contentQuestionSafeguard + '</label>';
            regionQuestion.html(label);
        }

        function questionarieWithoutBorder() {
            $('div.esgQuestionGroupContainer').addClass('questionarieWithoutBorder');
        }

        function save() {
            var response = saveContainer($('#Data'), '#hidViewModel', false, null, null, false);
            var resp = $.Deferred();
            if (response !== false) {
                response.done(function(data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage !== "") {
                        showMessage(data.ErrorMessage);
                    } else if (data.IsValid) {
                        redirectToDashboard();
                    }
                    resp.resolve(data);
                });
            }
        }

        function finalize() {
            $('[name="isFinalize"]').val(true);
            var resp = $.Deferred();
            var response = saveContainer($('#Data'), '#hidViewModel', false, null, null, false);
            if (response !== false) {
                response.done(function(data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage !== "") {
                        showMessage(data.ErrorMessage);
                    } else if (data.IsValid) {
                        redirectToDashboard();
                    }
                    resp.resolve(data);
                });
            }
        }


        function cancel() {
            redirectToDashboard();
        }

        function redirectToDashboard() {
            var url = '@Url.Action("StarDashboard", "Star", new {area = "MrBlue"})';
            setTimeout(showLoader, 1000);
            window.location.assign(url);
        }

    </script>
}