@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.SecurityService.Enums
@using System.Web.Script.Serialization
@using Newtonsoft.Json
@using IDB.Architecture.Language
@using IDB.MW.Application.MrBlueModule.ViewModels.HighRisk

@model HighRiskViewModel

@{
    var devMode = ConfigurationServiceFactory.Current.GetApplicationSettings().IsDevelopmentMode;
}

@Html.Partial("_MockReadWritePermissions", IDB.Presentation.MVC4.Models.Mock.MockReadWritePermissionsViewModel.Create(Permission.ESG_SPECIALIST_WRITE_PERMISSIONS))

<div class="row">
    <div class="col-md-12">
        @Html.Partial("Partials/buttons")
        @Confluence.LabelTitleGroup(Localization.GetText("MrBlue.HighRisk.FormTitle"))
    </div>
</div>

<div class="page">
    @if (ViewBag.ReadRole ?? false)
    {
        <div id="Data"
             data-parsley-validate="data-parsley-validate"
             data-parsley-excluded="[disabled]"
             data-url="@Url.Action("SaveHighRiskForm", "HighRisk", new { area = "MrBlue" })">


            @if (Model != null)
            {
                @Html.Partial("Partials/HighRiskFormPartial", Model)
            }
        </div>
    }
</div>
<div class="row">
    <div class="col-md-12">
        @Html.Partial("Partials/buttons")
    </div>
</div>
@section scripts{
    
    @ModuleScripts.KeyWordsToolkit(Url)
    @MrBlue.DynamicQuestionnaire(Model.HighRiskDynamicQuestionnaire)
    @MrBlue.RadioButtonFix()

    <script type="text/javascript">

        registerCallback(function () {
            enterEditMode(false, $('#Data'), false);
            initParsley();
        });

        function save() {
            var url = '@Url.Action("SaveHighRiskForm", "HighRisk", new { area = "MrBlue" })';
            var response = saveContainer($('#Data'), '#hidViewModel', false, null, null, false);
            if (response !== false) {
                response
                    .done(function (data) {
                        if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage != "") {
                            showMessage(data.ErrorMessage);
                        }
                        else if (data.IsValid) {
                            redirectToDashboard();
                        }
                        resp.resolve(data);
                        setStatus(false);
                    });
            }
        }

        function cancel() {
            redirectToDashboard();
        }
        function redirectToDashboard() {
            var url = '@Url.Action("HighRiskDashboard", "HighRisk", new { area = "MrBlue" })';
            window.location.assign(url);
        }
    </script>
}