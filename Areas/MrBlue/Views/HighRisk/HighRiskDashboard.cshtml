@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.SecurityService.Enums
@using System.Web.Script.Serialization
@using Newtonsoft.Json
@using IDB.Architecture.Language
@using IDB.MW.Application.MrBlueModule.ViewModels.HighRisk

@model HighRiskDashboardViewModel

@{
    var devMode = ConfigurationServiceFactory.Current.GetApplicationSettings().IsDevelopmentMode;
}

@Html.Partial("_MockReadWritePermissions",
IDB.Presentation.MVC4.Models.Mock.MockReadWritePermissionsViewModel.Create(Permission.ESG_SPECIALIST_WRITE_PERMISSIONS))

<div class="row mb20">
    <div class="col-md-12 mb20">
        @Confluence.LabelTitleGroup(Localization.GetText("MrBlue.HighRisk.HighRiskTitle"))
    </div>
    <div id="fr-header-fillinformation">
        <div class="informationplace fillinformation">
            <div class="icoInformation"></div>
            <div class="information-text">
                @Localization.GetText("MrBlue.HighRisk.About")
            </div>
        </div>
    </div>
</div>

@if(ViewBag.ReadRole ?? false)
{
    <div class="page">
        <div id="Data" data-parsley-validate="data-parsley-validate" data-parsley-excluded="[disabled]">
            @MrBlue.AlertDeleteQuestionnarieModal()
            @if(Model != null)
            {
                @Html.Partial("Partials/HighRiskDashboardPartial", Model);
            }
        </div>
    </div>
}
@section scripts{

    @ModuleScripts.TableFunctions()
    @MrBlue.SelectRow()
    @MrBlue.HistoryTablesCommon()
    @MrBlue.RadioButtonFix()

    <script type="text/javascript">

        registerCallback(function () {

            $(document).on('click', '#historyTable tbody tr td:not(.dataTables_empty)', openReport);

            $(document).on('click', '#historyTable tbody td button', function (e) {
                e.stopPropagation();
            });

            $(document).on('click', '#historyTable button[name="removeStarDraftRow"]', function () {
                var sourceTr = $(this).closest('tr');
                setTextDeleteQuestionnarieDefault(sourceTr, "textDeleteAlertHighRisk");
            });

            if (isDisabledMostRecentButton('historyTable')) {
                $('button[name="buttonNewFromMostRecent"]').attr('disabled', 'disabled');
            }
        });

        function downloadHistoryReport(source) {
            var fecha = $(source).closest('tr').find('td').first().find('span').first().html();
            var versionId = source.closest('tr').attr('data-id')
            var url = "@Url.Action("HighRiskDownload", "HighRisk", new { area = "MrBlue" })?versionId=" + versionId + "&fecha=" + fecha;
            window.open(url, '_blank');

        }
        function openReport(source) {
            var versionId = $(source.currentTarget).closest('tr').attr('data-id');
            var url = "@Url.Action("HighRiskForm", "HighRisk", new { area = "MrBlue", isEditable = false })&versionId=" + versionId + '&mostRecent=false';
            window.location.assign(url);
        }

        function newReportFromMostRecent() {
            var versionId = getMostRecentByInputRowId('historyTable');
            var url = '@Url.Action("HighRiskForm", "HighRisk", new { area = "MrBlue", isEditable = true })&versionId=' + versionId + '&mostRecent=true';
            window.location.assign(url);
        }

        function newReport() {
            var url = '@Url.Action("HighRiskForm", "HighRisk", new { area = "MrBlue", isEditable = true })';
            window.location.assign(url);
        }
    </script>
}
