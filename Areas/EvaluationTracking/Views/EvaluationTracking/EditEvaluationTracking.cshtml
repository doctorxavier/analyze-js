@model List<IDB.MW.Domain.Models.Architecture.EvaluationTracking.EvaluationTrackingModel>
@{
    ViewBag.Title = "EditEvaluationTracking";
}
@section CSS
{
    <link rel="stylesheet" href="@Url.Content("~/Content/esmartGeneral.css")" />
    <link rel="stylesheet" href="@Url.Content("~/Content/modulos.css")" />
    <link rel="stylesheet" href="@Url.Content("~/Content/general.css")" />
    <link rel="stylesheet" href="@Url.Content("~/Content/Modules/EvaluationTracking/EvaluationTracking.css?v=01")" />
    <link rel="stylesheet" href="@Url.Content("~/Content/Modules/EvaluationTracking/VerifyContent.css")" />
}
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/EvaluationTracking/VerifyContent/main.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/modal/modal.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/botonActivo/botonActivo.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/EvaluationTracking/editMain.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/EvaluationTracking/tableFold.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Document/addDocument.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/typeCharacterValidator.js")"></script>

@Html.Hidden("hdnVerifyContentUrl", Url.Action("VerifyContent", "VerifyContent",
new { area = "EvaluationTracking" }))

@Html.Hidden("hdnVerifyContentUrlSave", Url.Action("VerifyContentSave", "VerifyContent",
new { area = "EvaluationTracking" }))
@Html.Hidden("hdnCreateEvaluation", Url.Action("Create", "EvaluationTracking",
new { area = "EvaluationTracking" }))

@Html.Hidden("hdnResultsMatrixId", Model[0].ResultsMatrix.ResultsMatrixId)
@Html.HiddenFor(model => Model[0].FundingModel.EvaluationTrackingFundingId)
@Html.Hidden("CodeNotChangedReason", (string)ViewBag.CodeNotChangedReason)
<div class="mod_contenido_central">
    

    @using (Html.BeginForm("Edit", "EvaluationTracking", FormMethod.Post,
        new { @id = "FormEvaluationTracking" }))
    {
        <h3 class="headingh2 w40">@Localization.GetText("Evaluation Tracking")</h3>
        <div class="editingButtons">
            <input id="lnkVerifyContent" type="button" href="javascript:void(0)"
                   class="verify verifyButton btn btn-1 btn-primary marginBtnDetails"
                   value="@Localization.GetText("Verify Content")">
            <a href="@(Url.Action("Index", "EvaluationTracking",
            new { area = "EvaluationTracking", operationNumber = Model[0].OperationNumber}) )"
               title="@Localization.GetText("Cancel")" class="btn btn-1 btn-secondary">
                <span>@Localization.GetText("Cancel")</span>
            </a>
            <input data-route="@Url.Action("Edit", "EvaluationTracking")"
                   data-route-check="@Url.Action("StageValidation", "EvaluationTracking")"
                   data-route-save-documents="@Url.Action("SaveDocuments", "EvaluationTracking")"
                   type="button" class="bSave btn btn-1 btn-primary_2" value="@Localization.GetText("Save") ">
        </div>

        <div class="operationData dataDetails">
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("PMR Cycle")</p>
                <p>@Model[0].ResultsMatrix.PmrCycle.NameEn</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Last Update")</p>
                <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.LastUpdateDate)</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("PMR Validation stage")</p>
                <p>@Html.DisplayFor(x => Model[0].ResultsMatrix.ValidationStage.NameEn)</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Chief of Operations validation date")</p>
                <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.COValidationDate)</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Division Chief validation date")</p>
                <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.DCValidationDate)</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Country representative validation date")</p>
                <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.CRValidationDate)</p>
            </div>
        </div>

        <div class="editingButtonsEdit marginBottom2">
            <table>
                <tr>
                    <td class="verticalAlignMiddle">
                        <div class="btn btn-action-group activo">
                            <label class="btn btn-action-fondo" for="btn-actionid">
                                <span class="btn btn-action-punto">@Localization.GetText("Punto Blanco")</span>
                            </label>
                            <input type="button" class="btn btn-action"
                                   value="@Localization.GetText("Collapse All")" id="btn-actionid">
                        </div>
                    </td>
                    <td class="verticalAlignMiddle showTxt">@Localization.GetText("Show")</td>
                    <td class="verticalAlignMiddle">
                        <div class="editingButtonsEdit">
                            <a href="javascript:void(0);" id="lnkShowDisaggregation"
                               class="btn btn-primary btnEvaluations CancelledEvaluations floatRight"
                               title="@Localization.GetText("EvaluationTracking.CancelledEvaluations")">
                                @Localization.GetText("EvaluationTracking.CancelledEvaluations")
                            </a>
                            <a href="javascript:void(0);" id="lnkHideDisaggregation"
                               class="btn btn-secondary btnEvaluations floatRight hidden"
                               title="@Localization.GetText("EvaluationTracking.ActiveEvaluations")">
                                @Localization.GetText("EvaluationTracking.ActiveEvaluations")
                            </a>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div class="container">
            <div id="dvFunding" class="leftPadding10 hideNI displayNone">
                <div class="inline-block w25">
                    <div class="inline-block w90 leftMargin10">
                        @Html.DropDownListFor(model => Model[0].FundingModel.SourceId,
                        new SelectList(Model[0].GetSourceOfFunding, "ConvergenceMasterDataId", "Name"),
                        new
                        {
                            @class = "w100 kendoDropDown selectCustom MarginBox"
                        })
                    </div>
                </div>
                <div class="inline-block w24">
                    <div class="inline-block w90 leftMargin10">
                        @Html.TextBoxFor(model => Model[0].FundingModel.Amount,
                        new
                        {
                            @class = "TextBoxEvaluation MarginBox currencyCharacthers"
                        })
                    </div>
                </div>
                <div class="inline-block w24">
                    <div class="inline-block w90 leftMargin10">
                        @Html.TextBoxFor(model => Model[0].FundingModel.Code,
                        new
                        {
                            @class = "TextBoxEvaluation MarginBox"
                        })
                    </div>
                </div>
                <div class="inline-block w8 iconDeleteClon">
                    <input type="button" class="operationButton removeIcon deleteFunding"
                           id="DeleteFunding" />
                </div>
                <br />
            </div>
            <div id="kendo-dialog" style="height: 100%"></div>
            <input type="hidden" id="completeDocument" class="verifySave" />

            @foreach (var modelItem in Model)
            {
                var displayClass = modelItem.EvaluationTrackingId > 0 ? "displayBlock" : "displayNone template";
                var cancelledClass = modelItem.StageName == Localization.GetText("Cancelled") ? "Cancelled" : string.Empty;

                    <div class="font08em hideNI @displayClass evaluation-tracking-block @cancelledClass" id="CountET">
                    <input type="hidden" class="evaluation-tracking-id" value="@modelItem.EvaluationTrackingId" />

                    @if (modelItem.MethodologyCurrentId != null)
                    {
                        <input type="hidden" class="metodology-current-id" value="@modelItem.MethodologyCurrentId" />
                    }
                    else
                    {
                        <input type="hidden" class="metodology-current-id" value="@string.Empty" />
                    }
                    
                    <div class="mod_tabla_impacts table_outputs milestone">
                        <div class="minimizeTable">
                            <div class="minimizeBar">
                                <div class="tableOperator" style="z-index: 1;">Minimize/Maximize</div>
                            </div>
                            <div class="operatorBar"></div>
                            <div class="inline-block w90 verticalMargin10">
                                @Html.HiddenFor(model => modelItem.ResultsMatrixId)
                                @Html.HiddenFor(model => modelItem.EvaluationTrackingId)
                                @Html.HiddenFor(model => modelItem.FundingModel.EvaluationTrackingFundingId)
                                @Html.TextBoxFor(
                                    model => modelItem.Name,
                                    new
                                    {
                                        @class = "ReadValueTitle borderTitle modelItemName",
                                        @placeholder = "Name of Evaluation"
                                    })
                            </div>
                            <div class="tableGrid">
                                <div class="inline-block inputContainer w24">
                                    <div class="inline-block w90 verticalMargin10 MethodologyWidth">
                                        <label for="MethodologyDem"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom w110p">
                                            @Localization.GetText("EvaluationTracking.Metodology.DEM")
                                        </label>
                                        <br />
                                        @Html.DropDownListFor(model => modelItem.MethodologyPerDiemId,
                                        new SelectList(modelItem.GetMethodologyDem, "ConvergenceMasterDataId", "Name",
                                            modelItem.MethodologyPerDiemId),
                                            new
                                            {
                                                @class = "MethodologyDem w100 kendoDropDown selectCustom MarginBox ",
                                                @disabled = "disabled"
                                            })
                                    </div>
                                </div>
                                <div class="inline-block inputContainer w24">
                                    <div class="inline-block w90 verticalMargin10 marginLeft60p MethodologyWidth">
                                        <label for="CurrentEvaluation"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom w110p">
                                            @Localization.GetText("EvaluationTracking.Metodology.Current")
                                        </label>
                                        <br />
                                        <a id="MethodologyCurrentFilter" class="aStyle"
                                           data-route="@Url.Action("FilterStage", "EvaluationTracking")"></a>
                                        @Html.DropDownListFor(model => modelItem.MethodologyCurrentId,
                                        new SelectList(modelItem.GetMethodologyCurrent, "ConvergenceMasterDataId", "Name",
                                            modelItem.MethodologyCurrentId),
                                            new
                                            {
                                                @class = "MethodologyCurrent w100 kendoDropDown selectCustom MarginBox",
                                                @id = "MethodologyCurrent"
                                            })
                                    </div>
                                </div>
                                <div class="inline-block inputContainer w24 marginRight80">
                                    <div class="inline-block w90 verticalMargin10 marginLeft120p">
                                        <label for="Stage" class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("Stage")
                                        </label>
                                        <div id="dvStageLoading" class="inline-block" style="display:none">
                                            <img src="~/Content/images/loading.gif">
                                        </div>
                                        <br />
                                        @Html.DropDownListFor(model => modelItem.StageId,
                                        new SelectList(modelItem.GetStage, "ConvergenceMasterDataId", "Name",
                                            modelItem.StageId),
                                            new
                                            {
                                                @class = "StageId w100 kendoDropDown selectCustom TextBoxEvaluation MarginBox",
                                                @id = "StageId"

                                            })
                                    </div>
                                </div>

                                <div class="verticalMargin10 changedTxt displayBlock" id="QuasiExperimentalOther">
                                    <img class="verticalAlignMiddle" src="~/Images/Modulos/ResultsMatrix/warning.png" />
                                    <label for="QuasiExperimentalOther"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom">
                                        @Localization.GetText("EvaluationTracking.QuasiExperimentalOther.Specific.Msg")
                                    </label>
                                </div>

                                <div class="verticalMargin10 changedTxt displayBlock cancelJustification"
                                     id="dCancelJustification">
                                    <label for="CancelJustification"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom">
                                        @Localization.GetText("If the evaluation was Cancelled, explain the reasons below:")
                                    </label>
                                    <br />
                                    @Html.TextAreaFor(model => modelItem.CancelJustification,
                                    new
                                    {
                                        rows = 3,
                                        cols = 250,
                                        style = "width: 80%; height: 60px;",
                                        @class = "MarginBox changedMethodology"
                                    })
                                </div>

                                <div class="verticalMargin10 changedTxt displayBlock" id="dChangedMethodology">
                                    <label for="ChangedMethodology"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom">
                                        @Localization.GetText("EvaluationTracking.Metodology.Change")
                                    </label>
                                    <br />
                                    @Html.TextAreaFor(model => modelItem.ExplainChangeReasons,
                                    new
                                    {
                                        rows = 3,
                                        cols = 250,
                                        style = "width: 80%; height: 60px;",
                                        @class = "MarginBox changedMethodology ExplainChangeReasons"
                                    })
                                </div>

                                <div class="inline-block w24">
                                    <div class="inline-block w90 verticalMargin10">
                                        <label for="DataReport"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom w110p">
                                            @Localization.GetText("EvaluationTracking.Expected.Data")
                                        </label>
                                        <br />
                                        <div class="dateSelect datadetails">
                                            <div class="dateSelect">
                                                <label for="datepicker0">
                                                    @Html.TextBoxFor(model => modelItem.ExpectedDateFinalReport,
                                                    new
                                                    {
                                                        @class = "datepicker MarginBox datePicker0",
                                                        name = "datePicker0",
                                                        placeholder = "DD MMM YYYY",
                                                        Value = String.Format("{0:dd MMM yyy}",
                                                        modelItem.ExpectedDateFinalReport)
                                                    })
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="inline-block w90 verticalMargin10">
                                        <label for="MainIntervention"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.MainTopicOfTheIntervention")
                                        </label>
                                        <br />
                                        @Html.DropDownListFor(model => modelItem.TopicModel.MainTopicInterventionId,
                                        new SelectList(modelItem.GetMainTopicIntervention, "ConvergenceMasterDataId", "Name",
                                            modelItem.TopicModel.MainTopicInterventionId),
                                            new
                                            {
                                                @id = "boxIntervention",
                                                @class = "w100 kendoDropDown selectCustom MarginBox"
                                            })
                                    </div>
                                </div>
                                <div class="inline-block w24">
                                    <div class="inline-block w90 verticalMargin10">
                                        <label for="Responsible"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.Responsible")
                                        </label>
                                        <br />
                                        @Html.DropDownListFor(model => modelItem.ResponsibleId,
                                        new SelectList(modelItem.GetResponsible, "ConvergenceMasterDataId", "Name",
                                            modelItem.ResponsibleId),
                                            new
                                            {
                                                @class = "ResponsibleId w100 kendoDropDown selectCustom MarginBox",
                                                @id = "ResponsibleId"
                                            })
                                    </div>
                                    <div class="inline-block w90 verticalMargin10">
                                        <label for="TopicIntervention"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.OtherTopicOfTheIntervention")
                                        </label>
                                        <br />
                                        @Html.ListBoxFor(model => modelItem.TopicModel.SelectedTopicInterventionId,
                                        new MultiSelectList(
                                            modelItem.GetTopicIntervention, "ConvergenceMasterDataId", "Name",
                                            modelItem.TopicModel.SelectedTopicInterventionId),
                                            new
                                            {
                                                @class = "w100 MultiSelectCustom MarginBox h100px"
                                            })
                                    </div>
                                </div>
                                <div class="inline-block w24 minHeightResponsible">
                                    <div class="inline-block w90 verticalMargin10 responsableInfoBlock"
                                         style="visibility: hidden">
                                        <label for="InformationResponsible"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.InformationOnResponsible")
                                        </label>
                                        <br />
                                        @Html.TextBoxFor(model => modelItem.ResponsibleInfo,
                                        new
                                        {
                                            @class = "TextBoxEvaluation MarginBox ResponsibleInfo",
                                            @id = "ResponsibleInfo"
                                        })
                                    </div>
                                    <div class="inline-block w90 verticalMargin10">
                                        <label for="MainTopicEvaluation"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.MainTopicOfTheEvaluation")
                                        </label>
                                        <br />
                                        @Html.DropDownListFor(model => modelItem.TopicModel.MainTopicEvaluationId,
                                        new SelectList(modelItem.GetTopicEvaluation, "ConvergenceMasterDataId", "Name",
                                            modelItem.TopicModel.MainTopicEvaluationId),
                                            new
                                            {
                                                @id = "boxEvaluation",
                                                @class = "w100 kendoDropDown selectCustom MarginBox"
                                            })
                                    </div>
                                </div>
                                <div class="inline-block w24 VerticalButton" id="OtherTopicsOfEvaluationsBlock">
                                    <div class="inline-block w90 verticalMargin10">
                                        <label for="OtherEvaluation"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.OtherTopicsOfTheEvaluation")
                                        </label>
                                        <br />
                                        @Html.ListBoxFor(model => modelItem.TopicModel.SelectedTopicEvaluationId,
                                        new MultiSelectList(
                                            modelItem.GetMainTopicEvaluation, "ConvergenceMasterDataId", "Name",
                                            modelItem.TopicModel.SelectedTopicEvaluationId),
                                            new
                                            {
                                                @class = "w100 MultiSelectCustom MarginBox h100px"
                                            })
                                    </div>
                                </div>

                                <h4 class="headingh2 width75p">@Localization.GetText("EvaluationTracking.Funding")</h4>
                                <div class="editingButtonsEditFunding marginRight2Con5">
                                    <input type="button" class="addFunding btn btn-primary"
                                           value="@Localization.GetText("EvaluationTracking.AddFunding") ">
                                </div>

                                <div class="leftPadding10 hideNI displayBlock">
                                    <div class="inline-block w24">
                                        <div class="inline-block w90 leftMargin10">
                                            <label for="SourceOfFunding"
                                                   class="inline-block verticalAlignMiddle noPadding labelCustom">
                                                @Localization.GetText("EvaluationTracking.SourceOfFunding")
                                            </label>
                                        </div>
                                    </div>
                                    <div class="leftPadding10 inline-block w24">
                                        <div class="inline-block w90 leftMargin10">
                                            <label for="Amount"
                                                   class="inline-block verticalAlignMiddle noPadding labelCustom">
                                                @Localization.GetText("EvaluationTracking.AmountInUSDThousands")
                                            </label>
                                        </div>
                                    </div>
                                    <div class="inline-block w24">
                                        <div class="inline-block w90 leftMargin10">
                                            <label for="Code"
                                                   class="inline-block verticalAlignMiddle noPadding labelCustom">
                                                @Localization.GetText("Code")
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div id="dvAllFundings" class="allFundings">
                                    <select name="deletedFundingId" multiple="multiple"
                                            class="deletedFundings aStyle"></select>

                                    @foreach (var modelFunding in modelItem.EvaluationTrackingFunding
                                    .Where(p => p.EvaluationTrackingId == modelItem.EvaluationTrackingId)
                                    .Select((value, index) => new { Value = value, Index = index }))
                                    {
                                        <div id="dvFunding-@modelFunding.Index"
                                             class="leftPadding10 hideNI displayBlock">
                                            <div class="inline-block w25">
                                                <div class="inline-block w90 leftMargin10">
                                                    @Html.HiddenFor(model => modelFunding.Value.EvaluationTrackingId)
                                                    @Html.DropDownListFor(model => modelFunding.Value.SourceId,
                                                    new SelectList(
                                                        modelItem.GetSourceOfFunding, "ConvergenceMasterDataId", "Name",
                                                        modelFunding.Value.SourceId),
                                                        new
                                                        {
                                                            @class = "w100 kendoDropDown selectCustom MarginBox SourceFunding"
                                                        })
                                                </div>
                                            </div>
                                            <div class="inline-block w24">
                                                <div class="inline-block w90 leftMargin10">
                                                    @Html.TextBoxFor(model => modelFunding.Value.Amount,
                                                    new
                                                    {
                                                        @class = "TextBoxEvaluation MarginBox currencyCharacthers"
                                                    })
                                                </div>
                                            </div>
                                            <div class="inline-block w24">
                                                <div class="inline-block w90 leftMargin10">
                                                    @Html.TextBoxFor(model => modelFunding.Value.Code,
                                                    new
                                                    {
                                                        @class = "TextBoxEvaluation MarginBox CodeFunding"
                                                    })
                                                </div>
                                            </div>
                                            <div class="inline-block w8 iconDelete">
                                                <input type="button"
                                                       class="operationButton removeIcon deleteFunding"
                                                       id="DeleteFunding" />
                                                @Html.HiddenFor(model => modelFunding.Value.EvaluationTrackingFundingId)
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="AlignTitles hideNI marginTop30px displayBlock">
                                    <div class="inline-block inputContainer w24">
                                        <div class="inline-block w90 marginBottom2">
                                            <label for="TotalAmount"
                                                   class="inline-block verticalAlignMiddle noPadding labelCustom">
                                                @Localization.GetText("EvaluationTracking.TotalAmountInUSD")
                                            </label>
                                            <br />
                                            @Html.TextBoxFor(model => modelItem.TotalAmount,
                                            new
                                            {
                                                @class = "TextBoxEvaluation MarginBox currencyCharacthers"
                                            })
                                        </div>
                                    </div>
                                </div>

                                <h4 class="headingh2">@Localization.GetText("Comments")</h4>
                                <div class="AlignTitles hideNI displayBlock">
                                    <div class="inline-block">
                                        <div class="inline-block verticalMargin10">
                                            @Html.TextAreaFor(model => modelItem.Comment,
                                            new
                                            {
                                                rows = "5",
                                                cols = "350",
                                                style = "width: 80%; height: 150px;"
                                            })
                                        </div>
                                    </div>
                                </div>

                                <script id="template" type="text/x-kendo-template">
                                    <div class="toolbar">
                                        <h4 class="headingh2 headingh2Document"> @Localization.GetText("Documents")</h4>
                                        <div class="marginRight2Con5">
                                            <input type="button"
                                                   class="btn btn-primary k-button k-button-icontext k-grid-add"
                                                   value="@Localization.GetText("DM.Add.Document") ">
                                        </div>
                                    </div>
                                </script>

                                @Html.DropDownListFor(x => modelItem.DocumentModel.StageDocumentId,
                                new SelectList(modelItem.GetStage, "ConvergenceMasterDataId", "Name",
                                        modelItem.DocumentModel.StageDocumentId),
                                        new
                                        {
                                            @style = "display:none",
                                            @id = "StageDocumentId"
                                        })

                                @Html.DropDownListFor(x => modelItem.DocumentModel.TypeOfDocumentId,
                                    new SelectList(modelItem.GetTypeDocument, "ConvergenceMasterDataId", "Name",
                                        modelItem.DocumentModel.TypeOfDocumentId),
                                        new
                                        {
                                            @style = "display:none",
                                            @id = "TypeOfDocumentId",
                                            @class = "TypeOfDocument"
                                        })
                                @Html.DropDownListFor(x => modelItem.DocumentModel.DocumentPermissionsId,
                                    new SelectList(modelItem.GetDocumentPermission, "ConvergenceMasterDataId", "Name",
                                        modelItem.DocumentModel.DocumentPermissionsId),
                                        new
                                        {
                                            @style = "display:none",
                                            @id = "DocumentPermissionsId"
                                        })

                                @{var addDocumentUrl = Url.Action("DocumentAdd",
                                      new
                                      {
                                          area = "EvaluationTracking",
                                          operationId = modelItem.ResultsMatrix.OperationId,
                                          mainOperationNumber = modelItem.OperationNumber,
                                          DocumentEvaluationTrackingId = "documentevaluationtrackingid",
                                          StageId = "stageid",
                                          TypeOfDocumentId = "typeofdocumentid",
                                          DocumentPermissionsId = "documentpermissionsid",
                                          Description = "description",
                                          DocumentDate = "documentdate",
                                          parentEntityId = 0,
                                          subParentEntityId = 0,
                                          subsubParentEntityId = 0,
                                          entityRelated = "EVALUATION_TRACKING_DOCUMENT",
                                          entityRegisterId = modelItem.EvaluationTrackingId,
                                          isFirstTime = true
                                      });}

                                <div class="AlignTitles hideNI displayBlock">
                                    <div class="inline-block">
                                        <div data-routedoc="@(Url.Action("TablePartial","EvaluationTracking")
                                            )?idEvaluationDocument=@modelItem.EvaluationTrackingId"
                                             data-routeurl="@addDocumentUrl"
                                             class="gridDiv mod_style mod_tabla_plegable mod_style_plegable tableContainer">
                                            @Html.Partial("~/Areas/EvaluationTracking/Views/" +
                                                "EvaluationTracking/Partial/_DocumentTablePartial.cshtml",
                                                 modelItem.DocumentEvaluationTracking)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                if (modelItem.EvaluationTrackingId > 0) 
                {
                    <div class="operationData"></div>
                }

                <ul class="type-of-documents aStyle">
                    @foreach (var item in modelItem.GetTypeDocumentString)
                    {
                        <li>
                            @item
                        </li>
                    }
                </ul>

                <ul class="stageStringList aStyle">
                    @foreach (var item in modelItem.GetAllStageString)
                    {
                        <li>
                            @item
                        </li>
                    }
                </ul>
            }

        </div>
        <div class="editingButtons">
            <input id="lnkVerifyContent" type="button" href="javascript:void(0)"
                   class="verify verifyButton btn btn-1 btn-primary marginBtnDetails" value="@Localization.GetText("Verify Content") ">
            <a href="@(Url.Action("Index", "EvaluationTracking",
            new { area = "EvaluationTracking", operationNumber = Model[0].OperationNumber}))"
               title="@Localization.GetText("Cancel")" class="btn btn-1 btn-secondary">
                <span>@Localization.GetText("Cancel")</span>
            </a>
            <input data-route="@Url.Action("Edit", "EvaluationTracking")"
                   data-route-check="@Url.Action("StageValidation", "EvaluationTracking")"
                   data-route-save-documents="@Url.Action("SaveDocuments", "EvaluationTracking")"
                   type="button" class="bSave btn btn-1 btn-primary_2" value="@Localization.GetText("Save") ">
        </div>
    }
    <div class="mod_style">
        <div class="k-toolbar">
           <input type="button" 
                id="createNewEvaluation" 
                data-url-new="@(Url.Action("CreateNewEvaluation", "EvaluationTracking", new { area = "EvaluationTracking", operationNumber = Model[0].OperationNumber }))"
                title="@Localization.GetText("EvaluationTracking.NewEvaluation")" 
                class="k-button newIndicator" 
                value="@Localization.GetText("EvaluationTracking.NewEvaluation")"></div>
    </div>
</div>

@Confluence.Loader()
<div id="confirmWindow" class="aStyle">
    <div class="dinamicModal k-window-content k-content" data-role="window" tabindex="0"
         style="overflow: visible;">
        <div style="padding: 20px;">
            @Localization.GetText("This action cannot be undone, are you sure you wish to continue?")
        </div>
        <div class="pie pieReassign">
            <div class="botones">
                <a title="Cancel" class="cancel" href="javascript:void(0)"
                   onclick="GridDeleteDocumentCloseDialog()">Cancel</a>
                <label for="deleteItem">
                    <input type="button" value="OK" class="btn btn-primary"
                           onclick="GridDeleteDocument()">
                </label>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        hideLoader();
    });
    function showLoader() {
        $("#layoutLoadingDiv").show();
    }
    function hideLoader() {
        $("#layoutLoadingDiv").hide();
    }

    var ErrorsMessages = {};
    ErrorsMessages.NameError = "@Localization.GetText("Introduce the name of the evaluation")";
    ErrorsMessages.CancelJustificationError = "@Localization.GetText(
        "Introduce the justification for the change of the methodology")";
    ErrorsMessages.DateError = "@Localization.GetText("Introduce the date of the final evaluation")";
    ErrorsMessages.ResponsibleError = "@Localization.GetText(
        "Introduce the information on responsible for the evaluation")";
    ErrorsMessages.InterventionError = "@Localization.GetText("ET.Intervention.Validation.Error")";
    ErrorsMessages.EvaluationError = "@Localization.GetText("ET.Evaluation.Validation.Error")";
    ErrorsMessages.CancelError = "@Localization.GetText(
        "Introduce the justification for the cancellation of the evaluation")";
    ErrorsMessages.FundingError = "@Localization.GetText("Introduce the code of the funding")";
    ErrorsMessages.MetodologyCurrentError = "@Localization.GetText(
        "ET.MetodologyCurrent.Validation.Error")";
    ErrorsMessages.StageError = "@Localization.GetText("ET.Evaluation.Stage.Validation.Error")";

    var cancelledName = "@Localization.GetText("Cancelled")";
    var projectTeam = "@Localization.GetText("EvaluationTracking.Project.Team")";
    var fundingLoan = "@Localization.GetText("EvaluationTracking.Loan")";
    var fundingTC = "@Localization.GetText("EvaluationTracking.TC")";
    var fundingESW = "@Localization.GetText("EvaluationTracking.ESW")";
    var quasiExperimentalOther = "@Localization.GetText("EvaluationTracking.QuasiExperimentalOther")";

    function callAddDocument() {
        idbCloseKendoWindow();
        $('#completeDocument').val("accept").trigger('change');
    }
    function documentAdd() {       
        idbCloseKendoWindow();
        $('#completeDocument').val("accept").trigger('change');
        showLoader();
    }

</script>