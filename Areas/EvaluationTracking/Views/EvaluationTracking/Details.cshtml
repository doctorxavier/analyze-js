@model List<IDB.MW.Domain.Models.Architecture.EvaluationTracking.EvaluationTrackingModel>
@{
    ViewBag.Title = "Details";
}
@section CSS
{
    <link rel="stylesheet" href="@Url.Content("~/Content/esmartGeneral.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/modulos.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/general.css")" />
    <link rel="stylesheet" type="text/css"
          href="@Url.Content("~/Content/Modules/EvaluationTracking/EvaluationTracking.css?")" />
    <link rel="stylesheet" type="text/css"
          href="@Url.Content("~/Content/Modules/EvaluationTracking/VerifyContent.css")" />
}

<script type="text/javascript"
        src="@Url.Content("~/Scripts/Modules/EvaluationTracking/VerifyContent/main.js?")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/modal/modal.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/botonActivo/botonActivo.js")"></script>
<script type="text/javascript"
        src="@Url.Content("~/Scripts/Modules/EvaluationTracking/detailsMain.js")"></script>
<script type="text/javascript"
        src="@Url.Content("~/Scripts/Modules/EvaluationTracking/tableFold.js")"></script>

@Html.Hidden("hdnVerifyContentUrl", Url.Action("VerifyContent", "VerifyContent",
new { area = "EvaluationTracking" }))

@Html.Hidden("hdnResultsMatrixId", Model[0].ResultsMatrix.ResultsMatrixId)

<div class="mod_contenido_central">
    <h3 class="headingh2 w40">@Localization.GetText("Evaluation Tracking")</h3>
    <div class="editingButtons">
        <input id="lnkVerifyContent" type="button" href="javascript:void(0)"
               class="verify verifyButton btn btn-1 btn-primary marginBtnDetails"
               value="@Localization.GetText("Verify Content")">
        @if (Model[0].ResultsMatrix.ValidationStage.NameEn == "Draft"
            && Html.HasPermission("Evaluation Tracking Write") )
        {
            <a href="@(Url.Action("EditEvaluationTracking", "EvaluationTracking",
            new { area = "EvaluationTracking", operationNumber = Model[0].OperationNumber}))"
               title="@Localization.GetText("Edit")" class="btn btn-1 btn-primary">
                <span>@Localization.GetText("Edit")</span>
            </a>
        }
    </div>

    <div class="operationData dataDetails">
        <div class="data4">
            <p class="dataTitle">@Localization.GetText("PMR Cycle")</p>
            <p>@Model[0].ResultsMatrix.PmrCycle.NameEn</p>
        </div>
        <div class="data4">
            <p class="dataTitle">@Localization.GetText("Last Update")</p>
            <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.LastUpdateDate)</p>
        </div>
        <div class="data4">
            <p class="dataTitle">@Localization.GetText("PMR Validation stage")</p>
            <p>@Html.DisplayFor(x => Model[0].ResultsMatrix.ValidationStage.NameEn)</p>
        </div>
        <div class="data4">
            <p class="dataTitle">@Localization.GetText("Chief of Operations validation date")</p>
            <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.COValidationDate)</p>
        </div>
        <div class="data4">
            <p class="dataTitle">@Localization.GetText("Division Chief validation date")</p>
            <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.DCValidationDate)</p>
        </div>
        <div class="data4">
            <p class="dataTitle">@Localization.GetText("Country representative validation date")</p>
            <p>@String.Format("{0:dd MMM yyyy}", Model[0].ResultsMatrix.CRValidationDate)</p>
        </div>
    </div>

    <div class="editingButtonsEdit">
        <table>
            <tr>
                <td class="verticalAlignMiddle">
                    <div class="btn btn-action-group activo">
                        <label class="btn btn-action-fondo" for="btn-actionid">
                            <span class="btn btn-action-punto">@Localization.GetText("Punto Blanco")</span>
                        </label>
                        <input type="button" class="btn btn-action"
                               value="@Localization.GetText("Collapse All")" id="btn-actionid">
                    </div>
                </td>
                <td class="verticalAlignMiddle showTxt">@Localization.GetText("Show")</td>
                <td class="verticalAlignMiddle">
                    <div class="editingButtonsEdit">
                        <a href="javascript:void(0);" id="lnkShowDisaggregation"
                           class="btn btn-primary btnEvaluations CancelledEvaluations floatRight"
                           title="@Localization.GetText("EvaluationTracking.CancelledEvaluations")">
                            @Localization.GetText("EvaluationTracking.CancelledEvaluations")
                        </a>
                        <a href="javascript:void(0);" id="lnkHideDisaggregation"
                           class="btn btn-secondary btnEvaluations floatRight hidden"
                           title="@Localization.GetText("EvaluationTracking.ActiveEvaluations")">
                            @Localization.GetText("EvaluationTracking.ActiveEvaluations")
                        </a>
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <div class="container">
        @foreach (var modelItem in Model)
        {
            <div class="font08em hideNI displayBlock evaluation-tracking-block @(
            modelItem.StageName == Localization.GetText("Cancelled") ? "Cancelled" : "")">
                <div class="mod_tabla_impacts table_outputs milestone">
                    <div class="minimizeTable">
                        <div class="minimizeBar">
                            <div class="tableOperator">Minimize/Maximize</div>
                        </div>
                        <div class="operatorBar"></div>
                        <div class="inline-block w90 verticalMargin10">
                            @Html.LabelForModel(modelItem.Name, new { @class = "ReadValueTitle" })
                        </div>
                        <div class="tableGrid">

                            <div class="inline-block inputContainer w24">
                                <div class="inline-block w90 verticalMargin10 MethodologyWidth">
                                    <label for="EvaluationDem"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom w110p">
                                        @Localization.GetText("EvaluationTracking.Metodology.DEM")
                                    </label>
                                    @Html.LabelForModel(modelItem.MethodologyPerDiemName, new { @class = "ReadValue" })
                                </div>
                            </div>
                            <div class="inline-block inputContainer w24">
                                <div class="inline-block w90 verticalMargin10 marginLeft60p MethodologyWidth">
                                    <label for="CurrentEvaluation"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom w110p">
                                        @Localization.GetText("EvaluationTracking.Metodology.Current")
                                    </label>
                                    @Html.LabelForModel(modelItem.MethodologyCurrentName,
                                    new { @class = "ReadValue" })
                                </div>
                            </div>
                            <div class="inline-block inputContainer w24 marginRight80">
                                <div class="inline-block w90 verticalMargin10 marginLeft120p">
                                    <label for="Stage"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom ">
                                        @Localization.GetText("Stage")
                                    </label>
                                    @Html.LabelForModel(modelItem.StageName,
                                    new { @class = "ReadValue" })
                                </div>
                            </div>

                            @{ string quasiExperimentalOther = Localization.GetText("EvaluationTracking.QuasiExperimentalOther");
                             if (modelItem.MethodologyPerDiemName == modelItem.MethodologyCurrentName
                                 && modelItem.MethodologyCurrentName == quasiExperimentalOther)
                             {
                                <div class="verticalMargin10 changedTxt displayBlock" id="QuasiExperimentalOther">
                                    <img class="verticalAlignMiddle" src="~/Images/Modulos/ResultsMatrix/warning.png" />
                                    <label for="QuasiExperimentalOther"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom">
                                        @Localization.GetText("EvaluationTracking.QuasiExperimentalOther.Specific.Msg")
                                    </label>
                                </div>
                             }
                            }

                            @if (modelItem.StageName == Localization.GetText("Cancelled"))
                            {
                                <div class="verticalMargin10 changedTxt displayBlock" id="dCancelJustification">
                                    <label for="CancelJustification"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom">
                                        @Localization.GetText("If the evaluation was Cancelled, explain the reasons below:")
                                    </label>
                                    <br />
                                    @Html.LabelForModel(modelItem.CancelJustification,
                                    new
                                    {
                                        rows = 3,
                                        cols = 250,
                                        style = "width: 80%; height: 60px;",
                                        @class = "MarginBox ReadValue"
                                    })
                                </div>
                            }

                            @if (ViewBag.CodeNotChangedReason != "ETMETHB2009")
                            {
                                if (modelItem.MethodologyPerDiemId != modelItem.MethodologyCurrentId)
                                {
                                    <div class="verticalMargin10 changedTxt displayBlock" id="dChangedMethodology">
                                        <label for="ChangedMethodology"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom">
                                            @Localization.GetText("EvaluationTracking.Metodology.Change")
                                        </label>
                                        <br />
                                        @Html.LabelForModel(modelItem.ExplainChangeReasons,
                                    new
                                    {
                                        rows = 3,
                                        cols = 250,
                                        style = "width: 80%; height: 60px;",
                                        @class = "MarginBox ReadValue"
                                    })
                                    </div>
                                }
                            }
                            <div class="inline-block w24">
                                <div class="inline-block w90 verticalMargin10">
                                    <label for="DataReport"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom w110p">
                                        @Localization.GetText("EvaluationTracking.Expected.Data")
                                    </label>
                                    @Html.LabelForModel(String.Format("{0:dd MMM yyy}", modelItem.ExpectedDateFinalReport),
                                    new { @class = "ReadValue" })
                                </div>
                                <div class="inline-block w90 verticalMargin10">
                                    <label for="MainIntervention"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                        @Localization.GetText("EvaluationTracking.MainTopicOfTheIntervention")
                                    </label>
                                    @Html.LabelForModel(modelItem.TopicModel.MainTopicIntervention,
                                    new { @class = "ReadValue block w100" })
                                </div>
                            </div>
                            <div class="inline-block w24">
                                <div class="inline-block w90 verticalMargin10">
                                    <label for="Responsible"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                        @Localization.GetText("EvaluationTracking.Responsible")
                                    </label>
                                    @Html.LabelForModel(modelItem.ResponsibleName,
                                    new { @class = "ReadValue" })
                                </div>
                                <div class="inline-block w90 verticalMargin10">
                                    <label for="TopicIntervention"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                        @Localization.GetText("EvaluationTracking.OtherTopicOfTheIntervention")
                                    </label>
                                    @foreach (var item in modelItem.TopicModel.OtherTopicIntervention)
                                    {
                                        <label class="ReadValue block w100">
                                            @Html.DisplayFor(model => item)
                                        </label>
                                    }
                                </div>
                            </div>
                            <div class="inline-block w24">
                                <div class="inline-block w90 verticalMargin10 minHeightResponsible">
                                    @if (modelItem.ResponsibleInfo != null)
                                    {
                                        <label for="InformationResponsible"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                            @Localization.GetText("EvaluationTracking.InformationOnResponsible")
                                        </label>
                                        @Html.LabelForModel(modelItem.ResponsibleInfo,
                                        new { @class = "ReadValue" })
                                    }
                                </div>
                                <div class="inline-block w90 verticalMargin10">
                                    <label for="MainTopicEvaluation"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                        @Localization.GetText("EvaluationTracking.MainTopicOfTheEvaluation")
                                    </label>
                                    @Html.LabelForModel(modelItem.TopicModel.MainTopicEvaluation,
                                    new { @class = "ReadValue block w100" })
                                </div>
                            </div>
                            <div class="inline-block inputContainer w24 VerticalButtonDetails">
                                <div class="inline-block w90 verticalMargin10">
                                    <label for="OtherEvaluation"
                                           class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                        @Localization.GetText("EvaluationTracking.OtherTopicsOfTheEvaluation")
                                    </label>
                                    <label class="ReadValue block w100">
                                        @foreach (var item in modelItem.TopicModel.OtherTopicEvaluation)
                                        {
                                            <label class="ReadValue block w100">
                                                @Html.DisplayFor(model => item)
                                            </label>
                                        }
                                    </label>
                                </div>
                            </div>

                            <h4 class="headingh2 width75p">@Localization.GetText("EvaluationTracking.Funding")</h4>
                            <div class="AlignTitles hideNI displayBlock">
                                <div class="inline-block w24">
                                    <div class="inline-block w90 leftMargin10">
                                        <label for="SourceOfFunding"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                            @Localization.GetText("EvaluationTracking.SourceOfFunding")
                                        </label>
                                    </div>
                                </div>
                                <div class="inline-block w24">
                                    <div class="inline-block w90 leftMargin10">
                                        <label for="Amount"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                            @Localization.GetText("EvaluationTracking.AmountInUSDThousands")
                                        </label>
                                    </div>
                                </div>
                                <div class="inline-block w24">
                                    <div class="inline-block w90 leftMargin10">
                                        <label for="Code"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                            @Localization.GetText("Code")
                                        </label>
                                    </div>
                                </div>
                            </div>
                            @if (modelItem.EvaluationTrackingFunding.Count > 0)
                            {
                                foreach (var modelFunding in modelItem.EvaluationTrackingFunding
                                .Where(p => p.EvaluationTrackingId == modelItem.EvaluationTrackingId))
                                {
                                    <div class="AlignTitles hideNI displayBlock h30px">
                                        <div class="inline-block w24">
                                            <div class="inline-block w90 marginLeft5">
                                                @Html.LabelForModel(modelFunding.SourceFundingName,
                                                new { @class = "ReadValue" })
                                            </div>
                                        </div>
                                        <div class="inline-block w24">
                                            <div class="inline-block w90 marginLeft5">
                                                <label class="ReadValue">
                                                    @Html.DisplayFor(model => modelFunding.Amount)
                                                </label>
                                            </div>
                                        </div>

                                        <div class="inline-block w24">
                                            <div class="inline-block w90 marginLeft5">
                                                @Html.LabelForModel(modelFunding.Code,
                                                new { @class = "ReadValue" })
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            <div class="AlignTitles hideNI marginTop30px displayBlock">
                                <div class="block inputContainer w24">
                                    <div class="inline-block w90 marginBottom2">
                                        <label for="TotalAmount"
                                               class="inline-block verticalAlignMiddle noPadding labelCustom marginLabelBottom">
                                            @Localization.GetText("EvaluationTracking.TotalAmountInUSD")
                                        </label>
                                        <label class="ReadValue">
                                            @Html.DisplayFor(model => modelItem.TotalAmount)
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <h4 class="headingh2 w95">@Localization.GetText("Comments")</h4>
                            <div class="AlignTitles hideNI displayBlock">
                                <div class="inline-block">
                                    <div class="inline-block verticalMargin10 w90">
                                        @Html.LabelForModel(String.Format("{0:dd MMM yyy}", modelItem.RegisterDate),
                                        new
                                        {
                                            @class = "labelCustom",
                                            @style = "margin-right: 20px;"
                                        })
                                        @Html.LabelForModel(modelItem.RegisterUser,
                                        new { @class = "ReadValue" })
                                        <br /><br />
                                        @Html.LabelForModel(modelItem.Comment,
                                        new { @class = "labelCustom" })
                                    </div>
                                </div>
                            </div>

                            <h4 class="headingh2">@Localization.GetText("Documents")</h4>
                            <div class="AlignTitles hideNI displayBlock">
                                <div class="inline-block">
                                    <div class="mod_style mod_tabla_plegable mod_style_plegable tableContainer">
                                        <table id="documentsEvaluation"
                                               data-role="documentsEvaluation" data-requestfilter="">
                                            <thead>
                                                <tr>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:15%">
                                                        @Localization.GetText("Stage")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:15%">
                                                        @Localization.GetText("EvaluationTracking.TypeOfDocument")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:14%">
                                                        @Localization.GetText("EvaluationTracking.NameOfDocument")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:18%">
                                                        @Localization.GetText("Description")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:12%">
                                                        @Localization.GetText("EvaluationTracking.DocumentCreationDate")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:6%">
                                                        @Localization.GetText("IDB Doc Number")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:10%">
                                                        @Localization.GetText("EvaluationTracking.DocumentPermission")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:8%">
                                                        @Localization.GetText("User")
                                                    </th>
                                                    <th class="btn_azul_oscuro verticalAlignMiddle" style="width:2%">
                                                        @Localization.GetText("Action")
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (modelItem.DocumentEvaluationTracking.Count > 0)
                                                {
                                                    foreach (var modelDoc in modelItem.DocumentEvaluationTracking
                                                        .Where(x => x.EvaluationTrackingId == modelItem.EvaluationTrackingId))
                                                    {
                                                        <tr>
                                                            <td class="tdResults">
                                                                @Html.LabelForModel(modelDoc.StageName,
                                                                 new { @class = "labelCustom" })
                                                            </td>

                                                            <td class="tdResults">
                                                                @Html.LabelForModel(modelDoc.TypeOfDocumentName,
                                                                 new { @class = "labelCustom" })
                                                            </td>
                                                            <td class="tdResults">
                                                                @if (modelDoc.DocumentName != null)
                                                                {
                                                                    var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(modelDoc.DocumentReference);

                                                                    if (modelDoc.CreatedBy == IDBContext.Current.UserName
                                                                                                                && modelDoc.DocumentPermissionsName == "Only me")
                                                                    {
                                                                    <a href=@secureUrl target="_blank">@modelDoc.DocumentReference</a>
                                                                    }
                                                                    else if (modelDoc.DocumentPermissionsName == "Team Members"
                                                                    && modelItem.DocumentModel
                                                                    .UserTeamMember.Contains(IDBContext.Current.UserName))
                                                                    {
                                                                    <a href=@secureUrl target="_blank">@modelDoc.DocumentReference</a>
                                                                    }
                                                                    else if (modelDoc.DocumentPermissionsName == "All")
                                                                    {
                                                                        <a href=@secureUrl target="_blank">@modelDoc.DocumentReference</a>
                                                                    }
                                                                    else
                                                                    {
                                                                        @modelDoc.DocumentName
                                                                    }
                                                                }
                                                            </td>

                                                            <td class="tdResults">
                                                                @Html.LabelForModel(modelDoc.Description,
                                                                 new { @class = "labelCustom" })
                                                            </td>
                                                            <td class="tdResults">
                                                                @Html.LabelForModel(String.Format("{0:dd MMM yyy}",
                                                                 modelDoc.DocumentCreationDate),
                                                                 new
                                                                 {
                                                                     @class = "labelCustom"
                                                                 })
                                                            </td>
                                                            <td class="tdResults">
                                                                @Html.DisplayFor(model => modelDoc.DocumentReference,
                                                                 new { @class = "labelCustom" })
                                                            </td>
                                                            <td class="tdResults">
                                                                @Html.LabelForModel(modelDoc.DocumentPermissionsName,
                                                                 new { @class = "labelCustom" })
                                                            </td>
                                                            <td class="tdResults">
                                                                @Html.LabelForModel(modelDoc.CreatedBy,
                                                                 new { @class = "labelCustom" })
                                                            </td>
                                                            <td class="tdResults"></td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="operationData"></div>
            </div>
        }
    </div>

    <div class="editingButtons">
        <input type="button" href="javascript:void(0)" class="verify verifyButton btn btn-1 btn-primary marginBtnDetails"
               value="@Localization.GetText("Verify Content") ">
        @if (Model[0].ResultsMatrix.ValidationStage.NameEn == "Draft"
            && Html.HasPermission("Evaluation Tracking Write"))
        {
            <a href="@(Url.Action("EditEvaluationTracking", "EvaluationTracking",
                new { area = "EvaluationTracking", operationNumber = Model[0].OperationNumber}))"
               title="@Localization.GetText("Edit")" class="btn btn-1 btn-primary">
                <span>@Localization.GetText("Edit")</span>
            </a>
        }
    </div>
</div>