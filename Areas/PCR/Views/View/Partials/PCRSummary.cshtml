@using IDB.MVCControls.General.Helpers
@using IDB.MW.DomainModel.Entities.PCRModule.Enums
@using IDB.Presentation.MVC4.Helpers
@model IDB.MW.Application.PCRModule.ViewModels.ChecklistService.PCRSummaryViewModel

<div class="row buttom-Padding">
    <div class="col-md-12 text-right">
        <br />
        @Html.Partial("Partials/Controls/PCRSummaryButtons")
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <h4 class="headingh3">@Localization.GetText("PCR.Summary.Contribution")</h4>
    </div>
    <div class="col-md-6 text-right">
        <span data-pagemode="read">
            @if (ViewBag.ReadRole && Model.PCRId != 0)
            {
                <button class="btn btn-primary" data-action="downloadReport"><span class="glyphicon glyphicon-arrow-down"></span>&nbsp;@Localization.GetText("PCR.Summary.Download")</button>
                if (ViewBag.TeamRole || ViewBag.SPDRole)
                {
                    <button class="btn btn-primary pull-right" data-modal-allowclose="true" data-modal="verifyContentModal">@Localization.GetText("PCR.FollowUpService.Verify.Title")</button>
                }
            }
         </span>
    </div>
</div>
    <input type="hidden" id="hidViewModel" value="@ViewBag.SerializedViewModel" />

    <h4 class="headingh5">@Localization.GetText("PCR.Summary.IDBObjectives")</h4>
    <div class="row">
        <div class="col-md-12 row-body-40">
            <p class="line-item-height">
                @Localization.GetText("PCR.Summary.IDBObjectives.Lending")<br />
                <span data-pagemode="read">
                    @(((string)ViewBag.TextLendingProgram).HtmlEncode())
                </span>
            </p>
            @if (ViewBag.WritePermissionStage)
            {
                <div data-pagemode="edit">
                    @Html.MultiDropDownList("cboLendingProgram", (List<MultiSelectListItem>)ViewBag.LendingProgramItems, false, new
                    {
                        data_showParentGroup = "true"
                    })
                </div>
            }
        </div>
        <div class="col-md-12">
            @(ControlTemplatesPCR.FieldComments(Model.PCRUserCommentList.Where(c => c.IDBObjetivesType == PCRCommentFieldTypeEnum.LendingProgram).ToList(), 
            PCRCommentFieldTypeEnum.LendingProgram, 
            Model.PCRCurrentStageType, 
            Model.PCRUserCommentList.FirstOrDefault(c => c.IDBObjetivesType == PCRCommentFieldTypeEnum.LendingProgram && 
                c.PCRStage == Model.PCRCurrentStageType), 
            ViewBag.StageName, 
            ViewBag.UserName, 
            ViewBag.WritePermissionStage, 
            ViewBag.ReadRole))
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 row-body-40">
            <p>
                @Localization.GetText("PCR.Summary.IDBObjectives.RegionalDev")<br />
                <span data-pagemode="read" class="line-item-height">
                    <b>@Model.SelectedRegionalDevelopmentGoals</b>
                </span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 row-body-40">
            <p class="line-item-height">
                @Localization.GetText("PCR.Summary.IDBObjectives.BankOutput")<br />
                <span>
                    <b>@Model.SelectedBankOutputContribution</b>
                </span>
            </p>
        </div>
    </div>

    <h4 class="headingh5">@Localization.GetText("PCR.Summary.CountryObjectives")</h4>
    <div class="row">
        <div class="col-md-12 row-body-40">
            @if (ViewBag.WritePermissionStage)
            {
                <p class="line-item-height">
                    @Localization.GetText("PCR.Summary.CountryObjectives.Objective")<br />
                    <span data-pagemode="read" style="white-space: pre-line">
                        <b>@Model.CountryObjective</b>
                    </span>
                </p>
    <div data-pagemode="edit">
        <b><textarea id="txtCountryObjective" name="countryObjective" maxlength="600" data-parsley-maxlength="600">@(string.IsNullOrWhiteSpace(Model.CountryObjective) ? "" : Model.CountryObjective)</textarea></b>
    </div>
            }
            else
            {
                <p class="line-item-height">
                    @Localization.GetText("PCR.Summary.CountryObjectives.Objective")<br />
                    <span style="white-space: pre-line">
                        <b>@Model.CountryObjective</b>
                    </span>
                </p>
            }
        </div>
        <div class="col-md-12">
            @ControlTemplatesPCR.FieldComments(Model.PCRUserCommentList.Where(c => c.IDBObjetivesType == PCRCommentFieldTypeEnum.CountryStrategy).ToList(),
            PCRCommentFieldTypeEnum.CountryStrategy,
            Model.PCRCurrentStageType, 
            Model.PCRUserCommentList.FirstOrDefault(c => c.IDBObjetivesType == PCRCommentFieldTypeEnum.CountryStrategy && 
                c.PCRStage == Model.PCRCurrentStageType),
            ViewBag.StageName, 
            ViewBag.UserName, 
            ViewBag.WritePermissionStage, 
            ViewBag.ReadRole, 
            !string.IsNullOrWhiteSpace(Model.ProgramRelevance))
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 row-body-40">
            @if (ViewBag.WritePermissionStage)
            {
                <p class="line-item-height">
                    @Localization.GetText("PCR.Summary.CountryObjectives.Relevance")<br />
                    <span data-pagemode="read" style="white-space: pre-line">
                        <b>@Model.ProgramRelevance</b>
                    </span>
                </p>
                <div data-pagemode="edit">
                    <b><textarea id="txtProgramRelevance" name="programRelevance" maxlength="600" data-parsley-maxlength="600">@(string.IsNullOrWhiteSpace(Model.ProgramRelevance) ? "" : Model.ProgramRelevance)</textarea></b>
                </div>
            }
            else
            {
                <p class="line-item-height">
                    @Localization.GetText("PCR.Summary.CountryObjectives.Relevance")<br />
                    <span style="white-space: pre-line">
                        <b>@Model.ProgramRelevance</b>
                    </span>
                </p>
            }
        </div>
        <div class="col-md-12" data-test="true">
            @ControlTemplatesPCR.FieldComments(Model.PCRUserCommentList.Where(c => c.IDBObjetivesType == PCRCommentFieldTypeEnum.RelevanceProgram).ToList(), 
            PCRCommentFieldTypeEnum.RelevanceProgram, 
            Model.PCRCurrentStageType, 
            Model.PCRUserCommentList.FirstOrDefault(c => c.IDBObjetivesType == PCRCommentFieldTypeEnum.RelevanceProgram && 
                c.PCRStage == Model.PCRCurrentStageType), 
            ViewBag.StageName, 
            ViewBag.UserName, 
            ViewBag.WritePermissionStage,
            ViewBag.ReadRole, 
            !string.IsNullOrWhiteSpace(Model.CountryObjective))
        </div>
    </div>

    <h4 class="headingh3">@Localization.GetText("PCR.Summary.Core")</h4>
    <div class="row">
        <div class="col-md-12">
            <table class="gridTable table table-striped highlight-first-row ignore-first-row">
                <thead>
                    <tr>
                        <th>@Localization.GetText("PCR.Summary.Core.ColDescription")</th>
                        <th>@Localization.GetText("PCR.Summary.Core.ColScore")</th>
                        <th>@Localization.GetText("PCR.Summary.Core.ColWeight")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.SummaryEffectivenessCoreList)
                    {
                        <tr>
                            @if (item.RowLevel.Equals(0))
                            {
                                <td>@item.Description</td>

                                if (item.WeightOfScore != null && item.WeightOfScore.Value == 0)
                                {
                                    <td></td>
                                }
                                else
                                {

                                    if (@item.Category == null)
                                    {
                                        <td>@FormatHelper.Format(@item.Score, "#0.00")</td>
                                    }
                                    else
                                    {
                                        <td>@FormatHelper.Format(@item.Score, "#0.00") - @item.Category</td>
                                    }
                                }
                            }
                            else
                            {
                                <td><span class="indent">@item.Description</span></td>
                                if (@item.Category == null)
                                {
                                    <td><span class="indent">@FormatHelper.Format(@item.Score, "#0.00")</span></td>
                                }
                                else
                                {
                                    <td><span class="indent">@FormatHelper.Format(@item.Score, "#0.00") - @item.Category</span></td>
                                }
                            }
                            @if (@item.WeightOfScore != null)
                            {
                                if (item.WeightOfScore.Value == 0)
                                {
                                    <td></td>
                                }
                                else
                                {
                                    if (item.RowLevel.Equals(0))
                                    {
                                        <td>@FormatHelper.Format(item.WeightOfScore * 100, "#0")</td>
                                    }
                                    else
                                    {
                                        <td><span class="indent">@FormatHelper.Format(item.WeightOfScore * 100, "#0")</span></td>
                                    }
                                }
                            }
                            else
                            {
                                <td></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <br />
    <h4 class="headingh3">@Localization.GetText("PCR.Summary.NonCore")</h4>
    <div class="row">
        <div class="col-md-12">
            <table class="gridTable table table-striped">
                <thead>
                    <tr>
                        <th>@Localization.GetText("PCR.Summary.NonCore.ColDescription")</th>
                        <th>@Localization.GetText("PCR.Summary.NonCore.colClassification")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.SummaryEffectivenessNonCoreList)
                    {
                        <tr>
                            <td>@item.Description</td>
                            @if (item.Score.Equals(-1M))
                            {
                                <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.NA")</td>
                            }
                            else
                            {
                                if (item.IsBoolValue)
                                {
                                    if (item.Score.HasValue)
                                    {
                                        if (item.Score.Equals(0M))
                                        {
                                            <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.Unsatisfactory")</td>
                                        }
                                        else
                                        {
                                            <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.Satisfactory")</td>
                                        }
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                                else
                                {
                                    if (item.Score.HasValue)
                                    {
                                        switch (Convert.ToInt32(item.Score.Value))
                                        {
                                            case 0:
                                                <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.Unsatisfactory")</td>
                                                break;
                                            case 1:
                                            <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.Satisfactory")</td>
                                                break;
                                            case 2:
                                            <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.PartiallyUnsatisfactory")</td>
                                                break;
                                            case 3:
                                            <td>@Localization.GetText("PCR.Summary.NonCoreCriterion.PartiallySatisfactory")</td>
                                                break;
                                        }
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <br />
    @if (ViewBag.CurrentStage == PCRStageTypeEnum.SPDPreValidationStage || ViewBag.CurrentStage == PCRStageTypeEnum.TeamLeaderValidationStage || ViewBag.CurrentStage == PCRStageTypeEnum.SPDValidationStage)
    {
        <h4 class="headingh3">@Localization.GetText("PCR.Summary.Notes")</h4>
        <div class="row">
            <div class="col-md-12">
                @if (ViewBag.SPDRole && ViewBag.WritePermissionStage && ViewBag.CurrentStage != PCRStageTypeEnum.TeamLeaderValidationStage)
                {
                    <span data-pagemode="read" style="white-space: pre-line">
                        <b>@Model.EffectivenessNote</b>
                    </span>
                    <span data-pagemode="edit">
                        <b>
                            <textarea id="txteffectivenessNote" name="effectivenessNote" maxlength="5000"
                                      data-parsley-maxlength="5000" style="height: 250px">@Model.EffectivenessNote
                            </textarea>
                        </b>
                    </span>
                }
                else
                {
                    <span style="white-space: pre-line">
                        <b>@Model.EffectivenessNote</b>
                    </span>
                }
            </div>
        </div>
        <br />
    }
    <div class="row">
        <div class="col-md-12 text-right">
            @Html.Partial("Partials/Controls/PCRSummaryButtons")
        </div>
    </div>
    <div id="verifyContentModal" class="hide">
        @Html.Partial("Partials/Modals/PCRFollowUpVerify", (IDB.MW.Application.PCRModule.ViewModels.FollowUpService.PCRFollowUpVerifyViewModel)ViewBag.Verify)
    </div>
