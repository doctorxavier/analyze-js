@using System.Linq
@using IDB.Presentation.MVC4.Helpers
@using NewConfluence
@model IDB.MW.Application.PCRModule.ViewModels.FollowUpService.PCRFollowUpOldMethodologyViewModel

@{
    var options = Html.BuildSelectItemList(
        Model.YesNoOption,
        o => o.GetLocalizedName(),
        o => o.MasterId.ToString());

    var classifications = Html.BuildSelectItemList(
        Model.ObjetiveClassifications,
        o => o.GetLocalizedName(),
        o => o.MasterId.ToString());
}

<div class="col-md-4">
    <div class="row row-header font-header">
        <div class="col-md-6">PCR @Localization.GetText("OP.RP.ControlInformation.Required")</div>
        <div class="col-md-6">@Localization.GetText("PCR.FollowUp.CanceledInfo")</div>
    </div>

    <div class="row row-body-50 font-body">
        <div class="col-md-6">
            <div @(HTMLEncodeHelper.GetPCREncodedDisplayStyle(Model.IsModeEdit))>
                @Confluence.InputDropDown(
                    value: Model.RequiredOptionId.ToString(),
                    name: "RequiredOptionId",
                    elements: options,
                    width: "100%",
                    showEmptyOption: false,
                    placeholder: null,
                    disabled: !Model.IsOldRequiredWritePermission)

                @Confluence.InputHidden(value: Model.RequiredOptionId.ToString(), name: "RequiredOptionId")
                @Confluence.InputHidden(value: Model.IsPCRRequired.ToString(), name: "IsPCRRequired")
            </div>

            @if (!Model.IsModeEdit)
            {
                @FunctionConfluence.GetSelectedText(Model.RequiredOptionId.ToString(), options.ToList())
            }
        </div>
        <div class="col-md-6">
            <div @(HTMLEncodeHelper.GetPCREncodedDisplayStyle(Model.IsModeEdit))>
                @Confluence.InputDropDown(
                    value: Model.CanceledOptionId.ToString(),
                    name: "CanceledOptionId",
                    elements: options,
                    width: "100%",
                    showEmptyOption: false,
                    placeholder: null,
                    disabled: !Model.IsOldCanceledWritePermission)

                @Confluence.InputHidden(value: Model.CanceledOptionId.ToString(), name: "CanceledOptionId")
                @Confluence.InputHidden(value: Model.IsPCRCanceled.ToString(), name: "IsPCRCanceled")
            </div>

            @if (!Model.IsModeEdit)
            {
                @FunctionConfluence.GetSelectedText(Model.CanceledOptionId.ToString(), options.ToList())
            }
        </div>
    </div>

    <div id="PCRJustificacionContainer"
         @(HTMLEncodeHelper.GetPCREncodedDisplayStyle(Model.IsOldWritePermission))>
        <div class="row row-header font-header">
            <div class="col-md-12">@Localization.GetText("COMMON.Justification")</div>
        </div>

        <div class="row row-body-50 font-body">
            <div class="col-md-12">
                @Confluence.InputTextArea(
                    value: Model.PCRJustification,
                    name: "PCRJustification",
                    width: "100%",
                    height: "100px",
                    isReadOnly: !Model.IsModeEdit)
            </div>
        </div>
    </div>

    <div class="row row-header font-header">
        <div class="col-md-12">
            @Localization.GetText("PCR.Old.Objetives.Classification")
        </div>
    </div>

    <div class="row row-body-50 font-body">
        <div class="col-md-12">
            @if (Model.IsModeEdit)
            {
                @Confluence.InputDropDown(
                    value: Model.PCRClassificationId.ToString(),
                    name: "PCRClassificationId",
                    elements: classifications,
                    width: "100%",
                    required: false)
            }
            else
            {
                @FunctionConfluence.GetSelectedText(
                    Model.PCRClassificationId.ToString(),
                    classifications.ToList())
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    Control._SetPermissions('isSPDCoordinator', @Model.IsSPDCoordinator.ToString().ToLower());
    Control._SetPermissions(
        'isCanceledWritePermission', @Model.IsOldCanceledWritePermission.ToString().ToLower());
    Control._SetPermissions(
        'isRequiredWritePermission', @Model.IsOldRequiredWritePermission.ToString().ToLower());
</script>