@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Infrastructure.SecurityService.Enums
@model IDB.MW.Application.PCRModule.ViewModels.ChecklistService.HeaderViewModel
<div class="header header-margin-bottom">
    <h3 class="headingh2">@ViewBag.Title</h3>
    @if (ViewBag.IsPCRRequired != null && ViewBag.IsPCRRequired)
    {
    <div class="row row-margin-top-40-bottom-10" id="headerInnerSection">
        <div class="col-md-2">
            <p>
                @Localization.GetText("PCR.Header.LastUpdate")<br />
                @if ((Model != null) && (Model.LastUpdate != null))
                {
                    <b>@IDB.MVCControls.General.Helpers.FormatHelper.Format(Convert.ToDateTime(Model.LastUpdate))</b>
                }
            </p>
        </div>

        <div class="col-md-2">
            <p>
                @Localization.GetText("PCR.Header.Status")<br />
                @if ((Model != null) && (Model.PCRValidationStatus != null))
                {
                    <b>@Model.PCRValidationStatus</b>
                }
            </p>
        </div>
        <div class="col-md-2">
            <p>
                @Localization.GetText("PCR.Header.TLPreValDate")<br />
                @if ((Model != null) && (Model.TeamPrevalidationDate != null))
                {
                    <b>@IDB.MVCControls.General.Helpers.FormatHelper.Format(Convert.ToDateTime(Model.TeamPrevalidationDate))</b>
                }
            </p>
        </div>
        <div class="col-md-2">
            <p>
                @Localization.GetText("PCR.Header.SPDPreValDate")<br />
                @if ((Model != null) && (Model.SPDPrevalidationDate != null))
                {
                    <b>@IDB.MVCControls.General.Helpers.FormatHelper.Format(Convert.ToDateTime(Model.SPDPrevalidationDate))</b>
                }
            </p>
        </div>
        <div class="col-md-2">
            <p>
                @Localization.GetText("PCR.Header.TLValDate")<br />
                @if ((Model != null) && (Model.TeamValidationDate != null))
                {
                    <b>@IDB.MVCControls.General.Helpers.FormatHelper.Format(Convert.ToDateTime(Model.TeamValidationDate))</b>
                }
            </p>
        </div>
        <div class="col-md-2">
            <p>
                @Localization.GetText("PCR.Header.SPDValDate")<br />
                @if ((Model != null) && (Model.SPDValidationDate != null))
                {
                    <b>@IDB.MVCControls.General.Helpers.FormatHelper.Format(Convert.ToDateTime(Model.SPDValidationDate))</b>
                }
            </p>
        </div>
    </div>
    }
    else
    {
        <h4 class="headingh4">@Localization.GetText("PCR.Header.ThePCRIsNotRequiredAtThisStage")</h4>
        if (Model.NotRequiredComment != null)
        {
            <p>@Model.NotRequiredComment.Comment</p>
        }
    }
    <div class="row hide" id="95Error">
        <div class="col-md-12">
            <p class="line-item-height">
                @(((string)ViewBag.ErrorMessage).ProcessStringForView())
            </p>
        </div>
    </div>

   
    <div class="row hide">
        <div class="col-md-12">
            <button class="btn btn-primary" data-action="setReadAccess">Read Access</button>
            <button class="btn btn-primary" data-action="setTeamLeaderAccess">Team Leader Access</button>
            <button class="btn btn-primary" data-action="setSPDAccess">SPD Access</button>
            <button class="btn btn-primary" data-action="removePermission">Refresh Permissions</button>
        </div>
    </div>
</div>

@Html.ScriptBlock(
    @<script type="text/javascript">
        function setReadAccess(source)
        {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.ConvergenceReadPermission })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function setTeamLeaderAccess(source)
        {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.PCRTeamLeaderWrite })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function setSPDAccess(source)
        {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.PCRSPDLeaderWrite })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function removePermission(source)
        {
            var response = postUrlWithOptions("@Url.Action("RemovePermission", "PCRMock", new { area = "PCR" })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }


    </script>
    )