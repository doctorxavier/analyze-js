@using IDB.MVCControls.General.Helpers
@using IDB.MW.Application.PCRModule.Enums
@using IDB.Presentation.MVC4.Helpers
@model IDB.MW.Application.PCRModule.ViewModels.FollowUpService.Tasks.PCRFollowUpTask20ViewModel
@{
    var previous = Model.Parent.Tasks.FirstOrDefault(t => t.TaskNumber == Model.TaskNumber - 1);
    var lastCompletedTask = previous == null ? null :
            Model.Parent.Tasks.FirstOrDefault(t => t.TaskNumber == Model.TaskNumber - 1).CompletedDate;
}
<div class="row @(Model.IsCurrent ? "currentTask" : "")"
     data-id="@(Model.TaskNumber)"
     data-last-completed-date="@lastCompletedTask">
    <div class="col-md-1">
        <span class="cellContainer">&nbsp;</span>
    </div>
    <div class="col-md-7">
        <span @(Model.IsCurrent ? ViewBag.Header.PCRFollowUpTimelineStatus == PCRFollowUpTimelineStatusEnum.OnTime ? Html.Raw("class=\"current onTime cellContainer\"") : Html.Raw("class=\"current delayed cellContainer\"") : Html.Raw("class=\"cellContainer\"")) data-tooltip-showonclasspresent="current" data-tooltip-title="" data-tooltip="@Model.Parent.Header.PCRFollowUpStateName: @Model.Parent.Header.PCRFollowUpTimelineStatusName @(Model.Parent.Header.PCRFollowUpTimelineStatus == PCRFollowUpTimelineStatusEnum.Delayed ? " " + Localization.GetText("PCR.FollowUp.Status.By") + " " + Model.Parent.Header.NumberofDaysDelayed + " " + Localization.GetText("PCR.FollowUp.Status.Days") : "")">@Model.TaskNumber. @Model.TaskName</span>
    </div>
    <div class="col-md-2">
        <span class="cellContainer">@Model.RoleName</span>
    </div>
    <div class="col-md-2">
        <span class="cellContainer">@FormatHelper.Format(Model.OriginalDeadline)</span>
    </div>
    <div class="col-md-2">
        <span class="cellContainer updatedDeadLine" data-date="@Model.UpdatedDeadline">@FormatHelper.Format(Model.UpdatedDeadline)</span>
    </div>
    <div class="col-md-2">        
        @if (Model.IsCurrent && Model.IsEnabledCompletionDate)
        {
            <span data-pagemode="edit" class="datepickerspan spanpicker_@(Model.TaskNumber)">
                <input type="text"
                       class="datepicker"
                       name="txtCompletedDate"
                       data-tasknormal="true"
                       data-isspdcoord="@(ViewBag.SPDCoord)"
                       data-taskidpicker="@(Model.TaskNumber)"
                       @(!Model.IsEnabledCompletionDate ? "disabled" : "")
                       @(ViewBag.FollowUpWriteRole ? "data-parsley-required=true" : "")
                       @(ViewBag.FollowUpWriteRole ? "data-parsley-trigger=change" : "") />
            </span>
        }
        else
        {
            if (ViewBag.SPDCoord
                && ViewBag.IsModeEdit 
                && Model.CompletedDate.HasValue)
            {
                <span data-pagemode="edit" class="cellContainer datepickerspan spanpicker_@(Model.TaskNumber)">
                    <input type="text"
                           class="datepicker"
                           name="txtCompletedDate_@(Model.TaskNumber)"
                           data-tasknormal="false"
                           data-isspdcoord="@(ViewBag.SPDCoord)"
                           data-taskidpicker="@(Model.TaskNumber)"
                           @(ViewBag.FollowUpWriteRole ? "data-parsley-required=true" : "")
                           @(ViewBag.FollowUpWriteRole ? "data-parsley-trigger=change" : "") />
                    <input class="clseditpcrcoord" type="hidden" name="editpcrcoord_@(Model.TaskNumber)" value="true" />
                </span>

            }
            else
            {
                <span class="cellContainer completedDate" 
                      @(Model.IsCurrent && Model.IsEnabledCompletionDate ? "data-pagemode=read" : "") 
                      data-date="@Model.CompletedDate">@FormatHelper.Format(Model.CompletedDate)
                </span>
            }
        }
    </div>
</div>

<div data-pagemode="read">
    <aside class="row">
        <div class="col-md-1"></div>
        <div class="col-md-6">
            <p class="row">
                <div class="col-md-2"></div>
                <div class="col-md-12">
                    @Localization.GetText("PCR.FollowUp.TabTasks.Government")<br />
                    <b>@(Model.IsDisclosure.HasValue ? (Model.IsDisclosure.Value ? Localization.GetText("PCR.FollowUp.Yes") : Localization.GetText("PCR.FollowUp.No")) : "")</b>
                </div>
            </p>
        </div>
    </aside>
</div>

<div data-pagemode="edit">
    <aside class="row">
        <div class="col-md-1"></div>
        <div class="col-md-6">
            <p class="row">
                <div class="col-md-2"></div>
                <div class="col-md-12">
                    @Localization.GetText("PCR.FollowUp.TabTasks.Government")<br/>
                    @if (Model.IsCurrent)
                    {
                        @ControlTemplatesPCR.RadioButtonWithDefaultValue(Model.IsDisclosure, null, "isDisclosure", ViewBag.FollowUpWriteRole ? true : false)
                    }
                    else
                    {
                        <b>@(Model.IsDisclosure.HasValue ? (Model.IsDisclosure.Value ? Localization.GetText("PCR.FollowUp.Yes") : Localization.GetText("PCR.FollowUp.No")) : "")</b>
                    }
                </div>
            </p>
        </div>
    </aside>
</div>
