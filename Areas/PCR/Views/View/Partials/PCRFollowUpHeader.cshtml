@using IDB.MW.Application.PCRModule.Enums
@using IDB.MW.Domain.Values
@using IDB.MW.Infrastructure.SecurityService.Enums
@using IDB.Presentation.MVC4.Helpers

@model IDB.MW.Application.PCRModule.ViewModels.FollowUpService.PCRFollowUpViewModel

@{
    var lockScreen = (bool)ViewBag.LockScreen;
    var showInfoHeader = (ViewBag.IsPCRRequired != null && ViewBag.IsPCRRequired) ?
        true : ViewBag.SPDCoord;
    var commentNotRequired = string.Empty;
}

<div class="header header-margin-bottom">
    <h2>
        @ViewBag.Title

        @if (showInfoHeader && ViewBag.FollowUpActivationRole)
        {
            <span class="pull-right">
                @Html.Partial("Partials/Controls/PCRFollowUpButtons", lockScreen)
            </span>
        }
    </h2>
    <div class="row">
        <div class="col-md-12">
            <h4>
                @Localization.GetText("EvaluationTracking.VerifyMethodology")
            </h4>
            <p class="pcrTitleMethodology"><b>@Model.MethodologyType</b></p>
        </div>
    </div>
    <br />

    @if (!showInfoHeader && Model.MethodologyType != PCRConstants.METHODOLOGY_2017)
    {
        <h4 class="headingh4">@Localization.GetText("PCR.Header.ThePCRIsNotRequiredAtThisStage")</h4>

        if (Model.NotRequiredComment != null)
        {
            <p>@Model.NotRequiredComment.Comment</p>
        }
    }

    @if (showInfoHeader)
    {
        <div class="row row-body-40 row-body-p marginTopHigh">
            <div class="col-md-4">
                <div class="row">
                    <div class="col-md-12">
                        <h4 class="headingh3">@Localization.GetText("PCR.FollowUp.PCRStatus")</h4>
                        @if (Model.Header.PCRFollowUpState != PCRFollowUpStateEnum.None)
                        {
                            @Localization.GetText("PCR.FollowUp.PCRRequired")<br />
                            if (Model.Header.CurrentTask > 1)
                            {
                                @ControlTemplatesPCR.RadioButtonRequired(
                            @Model.IsRequired,
                            true,
                            "isRequired",
                            true,
                            ViewBag.PCRRequiredRole)
                            }
                            else
                            {
                                @ControlTemplatesPCR.RadioButtonRequired(
                            @Model.IsRequired,
                            true,
                            "isRequired",
                            false,
                            ViewBag.PCRRequiredRole)

                                if (!@Model.IsRequired && Model.Header.CurrentTask == 1)
                                {
                                    if (@Model.NotRequiredComment != null)
                                    {
                                        commentNotRequired = Model.NotRequiredComment.Comment;
                                        <br />
                                        <div class="" id="divLabelNotRequiredReason"
                                             name="divLabelNotRequiredReason">
                                            <p>@commentNotRequired</p>
                                        </div>
                                    }
                                }
                                <div data-pagemode="edit"
                                     class="showDataEdit hide"
                                     id="divTxtNotRequiredReason"
                                     name="divTxtNotRequiredReason">
                                    <b>
                                        <textarea id="txtNotRequiredReason"
                                                  name="txtNotRequiredReason"
                                                  maxlength="600"
                                                  class="form-control"
                                                  rows="5"
                                                  data-parsley-maxlength="600">
                                            @commentNotRequired
                                        </textarea>
                                    </b>
                                </div>
                            }
                            <br />
                            <p>
                                @Localization.GetText("PCR.FollowUp.PCRStatus")<br />
                                <b>@Model.Header.PCRFollowUpStateName: @Model.Header.PCRFollowUpTimelineStatusName @(Model.Header.PCRFollowUpTimelineStatus == PCRFollowUpTimelineStatusEnum.Delayed ? " " + Localization.GetText("PCR.FollowUp.Status.By") + " " + Model.Header.NumberofDaysDelayed + " " + Localization.GetText("PCR.FollowUp.Status.Days") : "")</b>
                            </p>
                            if (!Model.Header.ShowDisbursed && Model.Header.NumberofDaysRemaining >=
                                    0 &&
                                Model.Header.PCRFollowUpState ==
                                    PCRFollowUpStateEnum.EligibleForPreparation)
                            {
                                <br />
                                <p>
                                    @Localization.GetText("PCR.FollowUp.NumberofDaysRemaining")<br />
                                    @Localization.GetText("PCR.FollowUp.NumberofDays")<br />
                                    <b>@Model.Header.NumberofDaysRemaining</b>
                                </p>
                            }
                        }
                    </div>
                </div>
                <br />
                @if (Model.IsInSeries)
                {
                    <div class="row">
                        @if (Model.SeriesCode != null)
                        {
                            <div class="col-md-12" data-pagemode="read">
                                @Localization.GetText("PCR.FollowUP.Series.Code")
                            </div>
                        }
                        else
                        {
                            <div class="col-md-12" data-pagemode="read">
                                @Localization.GetText("PCR.FollowUp.Series.Read")
                            </div>
                        }
                        <div class="col-md-12" data-pagemode="edit">
                            @Localization.GetText("PCR.FollowUp.Series.Edit")
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <p>
                                <span data-pagemode="read">
                                    <b>@Model.SeriesCode</b>
                                </span>
                            </p>
                            <div data-pagemode="edit">
                                <input type="text" name="seriesCode" data-parsley-maxlength="50" value="@Model.SeriesCode" />
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-12">
                            @Localization.GetText("PCR.FollowUP.Series.LastOperation")
                        </div>
                    </div>
                    <div class="row row-body-40">
                        <div class="col-md-10">
                            <b>@ControlTemplatesPCR.RadioButtonWithDefaultValue(Model.IsLastInSeries, false, "isLastInSeries")</b>
                        </div>
                    </div>
                    <br />
                }
            </div>
            <div class="col-md-8">
                <h4 class="headingh3">@Localization.GetText("PCR.FollowUp.ListRoles")</h4>
                <ul class="blockgrid roleList">
                    @foreach (var role in Model.Roles)
                    {
                        <li>
                            <p class="line-role">
                                <span class="roleName">@role.RoleName</span><br />
                                @foreach (var user in role.Users) { <b>@user.FullName</b><br/> }
                            </p>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }

    <div class="row hide">
        <div class="col-md-12">
            <button class="btn btn-warning" data-action="setReadAccess">Read Access</button>
            <button class="btn btn-warning" data-action="setFollowUpWrite">FollowUp Write</button>
            <button class="btn btn-warning" data-action="setRequiredWrite">Required Write</button>
            <button class="btn btn-warning" data-action="setFollowUpActivation">FollowUp Activation</button>
            <button class="btn btn-warning" data-action="removePermission">Refresh Permissions</button>
        </div>
    </div>
    <div class="row hide" id="95Error">
        <div class="col-md-12">
            <p class="line-item-height">
                @if (Model.MethodologyType != PCRConstants.METHODOLOGY_2017)
                {
                    @(((string)ViewBag.ErrorMessage).ProcessStringForView())
                }
            </p>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            @if (ViewBag.FollowUpActivationRole && Model.Header.CurrentTask == null && !ViewBag.CancelledOperation)
            {
                <button class="btn btn-warning" name="enabledScreens" data-action="forceFollowUpActivation">@Localization.GetText("PCR.FollowUp.Activation")</button>
            }
        </div>
    </div>
</div>

@Html.ScriptBlock(
    @<script type="text/javascript">

        function setReadAccess(source) {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.ConvergenceReadPermission })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function setFollowUpWrite(source) {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.PCRFollowUpWritePermission })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function setRequiredWrite(source) {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.PCRRequiredWritePermission })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function setFollowUpActivation(source) {
            var response = postUrlWithOptions("@Url.Action("ChangeRole", "PCRMock", new { area = "PCR", rol = (int)ActionEnum.PCRFollowUpActivationWritePermission })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

        function removePermission(source) {
            var response = postUrlWithOptions("@Url.Action("RemovePermission", "PCRMock", new { area = "PCR" })", { dataType: 'json' });
            showMessage(response.responseJSON.ErrorMessage, true);
        }

    </script>)
