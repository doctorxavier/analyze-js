@using IDB.MW.Application.SiscorModule.Enums;
@using IDB.Architecture.Language
@using Areas.Siscor


@model IDB.MW.Application.SiscorModule.ViewModels.CorrespondenceGridViewModel

<input type="hidden" id="hiddenModel" value="" />
@if (Model.ViewTo == 0 || (Model.ViewTo > 0 && Model.Correspondences.Count() > 0))
{
    <table id="tabla01" class="tableNormal">
        <thead>
            <tr>

                <th class="sort">@Localization.GetText("SC.SC.Correspondence.Labels.SiscorNumber")</th>
                <th class="sort dateHeader" order-type="date">@Localization.GetText("SC.SC.Correspondence.Labels.SubmissionDate")</th>
                @if (String.IsNullOrEmpty(Model.OperationNumber))
                {
                    <th class="sort ">@Localization.GetText("OP.MS.ReportFilter.OperationNumber")</th>
                }

                <th class="sort">@Localization.GetText("SC.SC.Correspondence.Labels.MainDocument")</th>
                <th class="sort">@Localization.GetText("SC.SC.Correspondence.Labels.AttachedDocument")</th>

                <th class="sort">@Localization.GetText("SC.SC.Correspondence.Labels.Subject")</th>
                <th class="sort">@Localization.GetText("SC.SC.Correspondence.Labels.BusinessArea")</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.Correspondences)
            {
                <tr data-id="@item.CorrespondenceId">
                    <td class="siscorInputNumber">@SiscorNumber(item)</td>

                    <td>@Confluence.LabelGetDate(item.SubmissionDate)</td>
                    @if (string.IsNullOrEmpty(Model.OperationNumber))
                    {
                        <td class="operationNumberColumn">@Confluence.Label(text: item.OperationNumber)</td>
                    }

                    <td>@DocumentNumberP(item)</td>
                    <td>@DocumentNumberA(item)</td>

                    <td>@Confluence.Label(text: item.Subject)</td>
                    <td>
                        @Confluence.Label(text: item.BusinessArea)
                        <input type="hidden" id="hiddenBACode" value="@item.BusinessAreaCode" />
                        <input type="hidden" id="hiddenOperationNumber" value="@item.OperationNumber" />
                    </td>

                    <td>
                        <button class="buttonShowRow" onclick="CollapseRowTable(this)">
                            <span class="caret"></span>
                        </button>
                    </td>
                </tr>
                <tr data-row-parent-id="@item.CorrespondenceId">
                    <td colspan="9">
                        @Comments(item)
                    </td>
                </tr>
            }

        </tbody>
    </table>
}

@helper SiscorNumber(IDB.MW.Application.SiscorModule.ViewModels.CorrespondenceViewModel item)
{
if (item.SISCORNumber.DocType.Equals(SiscorEnums.INPUT))
{
        <span>@Confluence.Label(text: item.SISCORNumber.ToString(), htmlClass: "siscorNotLinkNumber")</span>
}
else
{
        <span>@Confluence.LabelLink(text: item.SISCORNumber.ToString(), action: "SCSiscorOutputNumberLink")</span>
}
}

@helper Comments(IDB.MW.Application.SiscorModule.ViewModels.CorrespondenceViewModel item)
{
    @Confluence.LabelBold(Localization.GetText("SC.SC.Response.Labels.Comments"), htmlClass: "inlineBlock mb10")

foreach (var comment in item.Comments)
{
        <span>
            @Confluence.InputCommentBox(
            section1: Confluence.Label(comment.UserName),
            section2: Confluence.Label(comment.Date),
            section3: null, value: comment.Comment, name: "textComment",
            isReadOnly: true,
            disabled: true)
        </span>
}
}

@helper DocumentNumberP(IDB.MW.Application.SiscorModule.ViewModels.CorrespondenceViewModel item)
{

foreach (var documentNumber in item.DocumentsP)
{
        <span>
            @Confluence.LabelLink(text: documentNumber,
            action: "downloadDocument",
            dataAttributes: new Dictionary<string, string> { { "DocNumber", Convert.ToString(documentNumber) }, { "idb-fieldname", "btnDownloadDocument01" } })
        </span>
}
}

@helper DocumentNumberA(IDB.MW.Application.SiscorModule.ViewModels.CorrespondenceViewModel item)
{
    <span>
        @SiscorHelper.LabelsLinksInGroup(action: "downloadDocument", elements: item.DocumentsA, listSize: 2, htmlClass: "documentLink")

    </span>

}
