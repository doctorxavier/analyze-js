@using IDB.MW.Application.SiscorModule.Enums;
@using Areas.Siscor
@model IDB.MW.Application.SiscorModule.ViewModels.SiscorResponseInformationViewModel

<div id="ResponseInformation" class="createOutput explain">
    <div class="row">
        <div class="col-md-12 ">
            @Confluence.LabelTitleGroup(text: Localization.GetText("SC.SC.Response.TitleOutputInformation"))
        </div>
    </div>
    <div class="row mt20">
        <div class="col-md-3 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Correspondence.Labels.SiscorNumber"),
                contentEdit: Confluence.Label(Model.SiscorNumber, htmlClass: "SiscorNumber"), contentRead: "")
            <input hidden name="SiscorNumber" value="@Model.SiscorNumber" />
        </div>
        <div class="col-md-3 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Correspondence.Labels.MainDocument"),
                contentEdit: SiscorHelper.LabelsLinksInGroup(action: "downloadDocument", elements: Model.DocumentNumberP, listSize: 1, htmlClass: "documentLink")
                , contentRead: "")
            <input hidden name="DocumentNumber" value="@Model.DocumentNumberP.First()" />
            <input hidden name="DocumentURL" value="@Model.URL" />
        </div>
        <div class="col-md-3 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Correspondence.Labels.AttachedDocument"),
               contentEdit: SiscorHelper.LabelsLinksInGroup(action: "downloadDocument", elements: Model.DocumentNumberA, listSize: 4, htmlClass: "documentLink")
               , contentRead: "")
            <input hidden name="DocumentNumber" value="@Model.DocumentNumberA" />
            <input hidden name="DocumentURL" value="@Model.URL" />
        </div>
    </div>
    @if ((Model.SiscorNumber == null) && (Model.DocumentNumberP == null))
    {

    <!-- operation number or search for operation number -->
        if (string.IsNullOrWhiteSpace(IDBContext.Current.Operation))
        {
            @*<div class="row mt20">
                <div class="col-md-6 ">
                    @Confluence.LabelsGroup(title: Localization.GetText("OP.MS.ReportFilter.OperationNumber"),
                                   contentEdit: Confluence.InputDropDownAsync(value: "", name: "OperationNumber",
                                   width: "50%", required: false,
                                   dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "ddlOperationNumber" } },
                                   searchUrl: Url.Action("GetOperationNumber", "Response", new { area = "Siscor" })),
                                   contentRead: "", asterisk: true)
                </div>
                <div class="col-md-6">
                    @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Response.Labels.Contract"), contentRead: "",
                    contentEdit: Confluence.InputText(value: Model.Contract, name: "Contract", isReadOnly:true), asterisk: false)
                </div>
            </div>

        }
        else
        {*@
            <div class="row mt20">
                <div class="hide">
                    @Confluence.LabelsGroup(title: Localization.GetText("OP.MS.ReportFilter.OperationNumber"),
                        contentEdit: Confluence.InputText(Model.Operation, "OperationNumber", isReadOnly: true),
                        contentRead: "")
                </div>
                <div class="col-md-12">
                    @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Response.Labels.Contract"), contentRead: "",
                    contentEdit: Confluence.InputText(value: Model.Contract, name: "Contract", isReadOnly: true))
                </div>
            </div>
        }
    }
    <div class="row mt20">
        <div class="col-md-6 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Response.Labels.BusinessArea"), contentRead: "",
                     contentEdit: Confluence.InputTextArea(value: Model.BusinessArea,
                              name: "BusinessArea", width: "100%",
                                       disabled: true))


            <input hidden name="DocumentURL" value="@Model.URL" />
            <input hidden name="BusinessAreaCode" value="@Model.BusinessAreaCode" /></div>
        <div class="col-md-6 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Response.Labels.SendDate"),
            contentEdit: Confluence.LabelGetDate(DateTime.Now, bold: true),
            contentRead: "")
        </div>
    </div>
    <div class="row mt20">
        <div class="col-md-6 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Response.Labels.Subject"),
                                       contentEdit: Confluence.InputTextArea(value: Model.Subject,
                                       name: "Subject", width: "100%", height: "100px",
                                                disabled: true),
                                       contentRead: "")
        </div>
        <div class="col-md-6 ">
            @Confluence.LabelsGroup(title: Localization.GetText("SC.SC.Response.Labels.Organization"),
                              contentEdit: Confluence.InputTextArea(value: Model.Organization,
                              name: "Organization", width: "100%",
                                       disabled: true),
                              contentRead: "")
        </div>
    </div>
</div>