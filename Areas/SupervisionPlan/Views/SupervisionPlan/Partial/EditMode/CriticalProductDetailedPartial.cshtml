@using IDB.MW.Business.SupervisionPlan.ViewModels.SupervisionPlan
@model SummaryModel

@{
    var counter = 0;
}

<div class="mb30">
    <label class="labelNormal">@Html.Raw(Localization.GetText("SP.Summary.CriticalProduct.AssociateLegend"))</label>
</div>

@Confluence.ButtonColapse("tableCriticalDetailed", expandText: Localization.GetText("GLOBAL.CONTROL.EXPANDALL"), collapseText: Localization.GetText("GLOBAL.CONTROL.COLLAPSEALL"))
@Confluence.InputHidden(null, "criticalDelete")

<table class="tableNormal mb10" id="tableCriticalDetailed">
    <thead>
        <tr>
            <td class="treeNumber"></td>
            <th class="noBackground"></th>
            <th>@Localization.GetText("SP.Summary.CriticalProductTable.CPDescription")</th>
            <th class="w150">@Localization.GetText("SP.Summary.CriticalProductTable.PlannedDate")</th>
            <th class="w80">@Localization.GetText("SP.Summary.CriticalProductTable.Quarter")</th>
            <th class="w140">@Localization.GetText("SP.Summary.CriticalProductTable.Compliance")</th>
            <th class="w150">@Localization.GetText("SP.Summary.CriticalProductTable.CompletionDate")</th>
            <th class="pwAction">@Localization.GetText("SP.Summary.ActivitiesTable.File.Action")</th>
        </tr>
    </thead>
    <tbody data-tbody>
        @foreach (var critical in Model.CriticalModel.CriticalsProducts)
            {
                counter++;
            <tr data-id="@counter" critical-main critical-data-id="@critical.CriticalProductId" data-versionid="@critical.SupervisionPlanVersionId" name="criticalProduct">
                <td class="treeNumber pt20">@counter</td>
                <td class="noBackground tree icon pt20">@Confluence.ButtonShowRowExpand(true)</td>
                <td>@Confluence.InputText(critical.Description, "Description", width: "100%", required: true)</td>
                <td>@Confluence.InputDatePicker(critical.PlannedDate, "PlannedDate", width: "100%", required: true)</td>
                <td name="quarter" class="text-center">
                    @if (critical.QuarterId != null)
                    {
                        @Model.CriticalModel.LocalizedQuarterValue[critical.QuarterId.Value]
                    }
                </td>
                <td>@Confluence.InputDropDown(string.IsNullOrEmpty(critical.DetailedComplianceId.ToString()) ? ViewBag.Compliance[0].Value : critical.DetailedComplianceId.ToString(), "Compliance", ViewBag.Compliance, width: "120px", showEmptyOption: false, orderAsc: false, placeholder: null, dataAttributes: new Dictionary<string, string> { { "idCompleted", ViewBag.SpCompleted.Id.ToString() } })</td>
                <td class="text-center">
                  
                @Confluence.InputDatePicker(critical.CompletionDate, "CompletionDate", width: "100%", disabled: true, maxDate: DateTime.Today)
            </td>
                <td class="text-center">
                    @Confluence.ButtonTrash("", action: "DelCriticalProductDetailed")
                </td>
            </tr>
            <tr data-row-parent-id="@counter" output-children critical-data-id="@critical.CriticalProductId" class="showChildRow">
                <td class="treeNumber pt35">@counter.1</td>
                <td class="tree"><span></span></td>
                <td colspan="6" class="pr0 pl50">
                    <div class="col-md-12 mt10 pr0">
                        <table class="tableNormal mb10 skinGray" id="CriticalOutput">
                            <thead class=@(critical.Outputs != null && critical.Outputs.Count > 0 ? "" : "hide")>
                                <tr>
                                    <th class="perw45">@Localization.GetText("SP.Summary.CriticalProductTable.ProjectOutput.ComponentName")</th>
                                    <th class="perw45">@Localization.GetText("SP.Summary.CriticalProductTable.ProjectOutput.ProjectOutput")</th>
                                    <th class="pwAction">@Localization.GetText("SP.Summary.CriticalProductTable.ProjectOutput.Action")</th>
                                </tr>
                            </thead>
                            <tbody critical-data-id="@critical.CriticalProductId">
                                @foreach (var output in critical.Outputs)
                                    {
                                    <tr data-id critical-data-id="@critical.CriticalProductId" data-output-id="@output.Id">
                                        <td class="componentName">@output.Component</td>
                                        <td class="OutputDefinition">@output.ProjectName</td>
                                        <td class="text-center">@Confluence.ButtonTrash("", action: "deleteOutput")</td>
                                    </tr>
                                        if (output.Milestones != null)
                                        {
                                            foreach (var milestone in output.Milestones)
                                            {
                                    <tr data-id critical-data-id="@critical.CriticalProductId" data-output-id="@output.Id" data-milestone-id="@milestone.MilestoneId">
                                        <td class="pl50" colspan="2">@Localization.GetText("Milestone"): @milestone.MilestonesName</td>
                                        <td class="text-center">@Confluence.ButtonTrash("", action: "deleteMilestones")</td>
                                    </tr>

                                            }
                                        }

                                    }
                            </tbody>
                        </table>
                        <div class="text-center">
                            @Confluence.ButtonAddNewRows(Localization.GetText("SP.Summary.ModalMilestone.Title"), null, action: "addoutputbutton")
                        </div>
                    </div>
                </td>
            </tr>
                <tr data-row-parent-id="@counter" risk-children critical-data-id="@critical.CriticalProductId" class="showChildRow">
                    <td class="treeNumber pt35">@counter.2</td>
                    <td class="tree"><span></span></td>
                    <td colspan="8" class="pr0 pl50">
                        <div class="col-md-12 mt10 pr0">
                            <table class="tableNormal mb10 skinGray" id="Criticalrisk">
                                <thead class=@(critical.Risks != null && critical.Risks.Count > 0 ? "" : "hide")>
                                <tr>
                                    <th>@Localization.GetText("SP.Summary.Risk.Description")</th>
                                    <th class="maxw100 minw100 w100">@Localization.GetText("SP.Summary.Risk.Type")</th>
                                    <th class="maxw140 minw140 w140">@Localization.GetText("SP.Summary.Risk.Probability")</th>
                                    <th class="pwAction">@Localization.GetText("SP.Summary.Risk.Action")</th>
                                </tr>
                                </thead>
                                <tbody critical-data-id="@critical.CriticalProductId">
                                    @foreach (var risk in critical.Risks)
                                    {
                                    <tr data-id data-risk-id="@risk.Id">
                                        <td class="textLonguer">@risk.Description</td>
                                        <td class="maxw140 minw140 w140">@risk.Type</td>
                                        <td class="maxw140 minw140 w140">@risk.Probability</td>
                                        <td class="text-center">@Confluence.ButtonTrash("", action: "deleteRisk")</td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                            <div class="text-center">
                                @Confluence.ButtonAddNewRows(Localization.GetText("SP.Summary.Risk.Add"), null, action: "addriskbutton")
                            </div>
                        </div>
                    </td>
                </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td></td>
            <td></td>
            <td colspan="8" class="pr0 pl50">
                <div class="col-md-12 mt10 pr0">
                    <div class="text-center mt50">
                        @Confluence.ButtonAddNewRows(Localization.GetText("SP.Summary.CriticalProduct.Add"), "addCritical", action: "NewCriticalProductDetailed", htmlClass: "bold")
                    </div>
                </div>
            </td>
        </tr>
    </tfoot>
</table>


<div data-id="ModalRegion">
    <button data-id="buttonNewRisk" class="buttonBlue hide"
            data-modal-allowclose="true"
            data-custom-modal="addNewRisk"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("SP.Summary.Risk.Add")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "add"]'
            data-custom-button-add-id="add"
            data-custom-button-add="@Localization.GetText("SP.Summary.Add")"
            data-custom-button-add-style="btn btn-primary"
            data-custom-button-add-callback="addRisk"
            data-custom-button-add-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("SP.Summary.Cancel")"
            data-custom-button-cancel-style="btn btn-link"
            data-custom-button-cancel-callback=""
            data-custom-modal-closeonoverlayclick="false">
        Modal
    </button>

    <div id="addNewRisk" class="hide"></div>
</div>



<div data-id="ModalRegion">
    <button data-id="buttonNewOutput" class="buttonBlue hide"
            data-modal-allowclose="true"
            data-custom-modal="addNewOutput"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("SP.Summary.ModalMilestone.Title")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "add"]'
            data-custom-button-add-id="add"
            data-custom-button-add="@Localization.GetText("SP.Summary.Add")"
            data-custom-button-add-style="btn btn-primary"
            data-custom-button-add-callback="addOutput"
            data-custom-button-add-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("SP.Summary.Cancel")"
            data-custom-button-cancel-style="btn btn-link"
            data-custom-button-cancel-callback=""
            data-custom-modal-closeonoverlayclick="false">
        Modal
    </button>

    <div id="addNewOutput" class="hide"></div>
</div>
