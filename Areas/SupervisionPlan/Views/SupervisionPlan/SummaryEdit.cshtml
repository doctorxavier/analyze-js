@using IDB.MW.Business.SupervisionPlan.ViewModels.SupervisionPlan
@using IDB.MW.Domain.Values

@model SummaryModel
@{
    Layout = "~/Areas/SupervisionPlan/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Summary", "SupervisionPlan", FormMethod.Post, new { area = "SupervisionPlan", id = "mainSummaryForm" }))
{
    @Confluence.InputHidden(ViewBag.OperationNumber, "operationNumber")
    @Confluence.InputHidden(ViewBag.Year.ToString(), "year")
    @Confluence.InputHidden(ViewBag.Tab.ToString(), "tab")
}

@using (Html.BeginForm("DetailsPlanVersionApprovalRequest", "SupervisionPlanLegacy", FormMethod.Post, new { area = "SupervisionPlan", id = "requestForm" }))
{
    @Confluence.InputHidden(ViewBag.OperationNumber, "operationNumber")
    @Confluence.InputHidden(ViewBag.Year.ToString(), "year")
    @Confluence.InputHidden(Model.SupervisionPlan.ActualVersion.SupervisionPlanVersionId.ToString(), "planVersionId")
}

<div class="row col-md-12 mb20">
    @Confluence.LabelMainTitle(Localization.GetText("SP.Summary.TextTitle"))
</div>

@Confluence.ButtonColapseAll(new List<string> { "tableSummary" })

<div class="col-md-12 mb20">
    <table id="tableSummary" class="tableNormal mb20">
        <thead>
            <tr>
                <th class="sort" order-type="numeric">@Localization.GetText("SP.Summary.SupervisionPlanTable.Year")</th>
                <th class="sort">@Localization.GetText("SP.Summary.SupervisionPlanTable.Modality")</th>
                <th class="sort">@Localization.GetText("SP.Summary.SupervisionPlanTable.Status")</th>
                <th class="sort" order-type="date">@Localization.GetText("SP.Summary.SupervisionPlanTable.LastUpdated")</th>
                <th class="sort" order-type="date">@Localization.GetText("SP.Summary.SupervisionPlanTable.CreationDate")</th>
                <th class="sort" order-type="date">@Localization.GetText("SP.Summary.SupervisionPlanTable.ValidationDate")</th>
                <th class="text-center">@Localization.GetText("SP.Summary.SupervisionPlanTable.Action")</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var plan in Model.SupervisionsPlans.Where(plan => plan.ActualVersion != null).Where(plan => plan.ActualVersion.SupervisionPlanVersionId != Model.VersionId))
            {
                <tr data-id="@plan.SupervisionPlanId" class="@((bool)ViewBag.LoadCollapse ? "hide" : "")">
                    <td class="text-center">@Confluence.LabelLink(plan.Year.ToString(), htmlClass: "disabled bold")</td>
                    <td class="text-center">@(plan.ActualVersion != null && plan.ActualVersion.Modality != null ? plan.ActualVersion.Modality.GetLanguageCode(Localization.CurrentLanguage) : "Simplified")</td>
                    <td class="text-center">@(plan.ActualVersion != null ? plan.ActualVersion.ValidationStage.Name : string.Empty)</td>
                    <td class="text-center">@(plan.ActualVersion != null && plan.ActualVersion.Modified.HasValue ? plan.ActualVersion.Modified.Value.ToString("dd MMM yyy") : "")</td>
                    <td class="text-center">@(plan.ActualVersion != null && plan.ActualVersion.Created.HasValue ? plan.ActualVersion.Created.Value.ToString("dd MMM yyy") : "")</td>
                    <td class="text-center">@(plan.ActualVersion != null && plan.ActualVersion.ValidationDate.HasValue ? plan.ActualVersion.ValidationDate.Value.ToString("dd MMM yyy") : "")</td>
                    <td class="text-center">@Html.Partial("Partial/RowButtons", plan)</td>
                </tr>
            }
        </tbody>
    </table>

    <a name="titleSPYear">
        <div class="row col-md-12 mb10">
            @Confluence.LabelMainTitle(string.Format("{0} {1}", Localization.GetText("SP.Summary.SupervisionPlan"), ViewBag.Year))
        </div>
    </a>
    <div class="requestZone"></div>
    <div id="tabs">
        @Confluence.Tabs(new Dictionary<string, string>
    {
        {"CriticalProducts", Localization.GetText("SP.Summary.SupervisionPlanTable.CriticalProducts")},
        {"Activities", Localization.GetText("SP.Summary.SupervisionPlanTable.Activities")},
        {"Budget", Localization.GetText("SP.Summary.SupervisionPlanTable.Budget")}
    }, ViewBag.Tab)
    </div>
    <div class="tab-content">
        <div class="tab-pane" id="CriticalProducts" data-id-tab="1"
             data-parsley-validate="data-parsley-validate"
             data-parsley-excluded="[disabled]"
             data-url=""
             data-loadurl="">
            @Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/ActionButtons.cshtml")
            @(Model.ModalityType == SpGlobalValues.SpDetailed ? Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/EditMode/CriticalProductDetailedPartial.cshtml") : Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/EditMode/CriticalProductSimplifiedPartial.cshtml"))
            <div class="actionDownB hide">@Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/ActionButtons.cshtml")</div>
        </div>

        <div class="tab-pane" id="Activities" data-id-tab="2"
             data-parsley-validate="data-parsley-validate"
             data-parsley-excluded="[disabled]"
             data-url=""
             data-loadurl="">
            @Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/ActionButtons.cshtml")
            @(Model.ModalityType == SpGlobalValues.SpDetailed ? Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/EditMode/ActivitiesDetailedPartial.cshtml") : Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/EditMode/ActivitiesSimplifiedPartial.cshtml"))
            <div class="actionDownB hide">@Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/ActionButtons.cshtml")</div>
        </div>

        <div class="tab-pane" id="Budget" data-id-tab="3"
             data-parsley-validate="data-parsley-validate"
             data-parsley-excluded="[disabled]"
             data-url=""
             data-loadurl="">
            @Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/ActionButtons.cshtml")
            @(Model.ModalityType == SpGlobalValues.SpDetailed ? Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/ReadMode/BudgetPartial.cshtml", Model) : Html.Partial("~/Areas/SupervisionPlan/Views/SupervisionPlan/Partial/EditMode/BudgetPartialSimplified.cshtml", Model))
        </div>
    </div>
</div>

<div id="divPriorVersion" hidden="hidden">
    <button data-id="buttonPriorVersion" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="priorVersionModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("SP.Summary.PriorVersions")"
            data-custom-modal-validate="false"
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="priorVersionModal" class="hide modalBody"></div>
</div>

<div data-id="ModalNewCritical">
    <button data-id="newCritical" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newCriticalContentModal"
            data-custom-modal-title="@Localization.GetText("SP.Summary.Warning")"
            data-custom-modal-validate="false"
            data-custom-buttons='["ok"]'
            data-custom-button-ok-id="ok"
            data-custom-button-ok="@Localization.GetText("SP.Summary.Ok")"
            data-custom-button-ok-style="buttonBlue"
            data-custom-button-ok-callback="addreturnViewRow"
            data-custom-button-ok-closeatend="false"></button>
    <div id="newCriticalContentModal" class="hide modalBody"></div>
</div>


@Confluence.InputHidden(null, "delDocumentCancel")
@section JS
{
    <script type="text/javascript">
    function cancel() {
        if ($('.tab-pane.active').attr('id') === "Activities") {
            $.ajax({
                type: "POST",
                url: "@Url.Action("deleteDocumentsActivities", "SupervisionPlan", new {area = "SupervisionPlan"})",
                data: { documents: $('[name="delDocumentCancel"]').val() }
            }).done(function(data) {
                showLoaderOptional();
                $('#mainSummaryForm').submit();
            });
        } else {
            showLoaderOptional();
            $('#mainSummaryForm').submit();
        }
    }

    $(document).ready(function() {
        showLoaderOptional();
        $('#tabs').find('.tabs').find('li').removeAttr('onclick').addClass('disabled');
        $('#tableSummary').sortableConfluense(false);
        setTimeout(function() {
            window.location = '#titleSPYear';
            hideLoaderOptional();
            BlockCDateReadyDraftRej();
        }, 1000);
        budgetTabSummatory();
        showHideTables();
        hideLoader();
        disableEditOnBudget();
        disableCompletionDateReady();
        fixIEFocus();
        disableCompletionDate();
        ValidateNumber();
        hideshowDownButton();
        blockCompletionDateActivities();



        @if ((bool) ViewBag.LoadCollapse)
            {
                <text>
        $('[dd-contenedores=",tableSummary,"]').click();
        </text>
            }
        ifContainDocument();
    });

    function BlockCDateReadyDraftRej() {
        if ('@ViewBag.NoEditCompletitionDate' === 'True') {
            $("input[name='CompletionDate']").attr("disabled", true);
        }
    }

    function disableEditOnBudget() {
        if ($('.tab-pane.active').attr('id') === "Budget" && '@Model.ModalityType' === '@SpGlobalValues.SpDetailed') {
            $(this).find('.buttonBlue[data-action="edit"]').remove();
        }
    }

    function priorVersion(source) {
        var idPriorVersion = $(source).closest('tr').attr('data-id');
        var url = '@Url.Action("PriorPlanVersionPartial", "SupervisionPlan", new {area = "SupervisionPlan"})' + "?supervisioPlanId=" + idPriorVersion;
        postUrlWithOptions(url, { async: false })
            .done(function(data) {
                $('#priorVersionModal').html(data);
                $('[data-id="buttonPriorVersion"]').click();
            })
            .fail(function(jqXhr, textStatus, errorThrown) {
                showMessage(errorThrown);
            });
    }

    function DownloadDocument(source) {
        var formatDoc = source.attr('name');
        var supervisionPlanId = $(source).closest('tr').attr('data-id');
        var operationId = '@Model.OperationId';
        var url = '@Url.Action("ExportSupervisionPlanReport", "SupervisionPlanLegacy", new
                       {area = "SupervisionPlan"})' + "?SupervisionPlanId=" + supervisionPlanId + "&operation_id=" + operationId + "&language=EN" + "&ExportType=" + formatDoc;


        var data = { SupervisionPlanId: supervisionPlanId, operation_id: operationId, language: "EN", ExportType: formatDoc };
        postUrlWithOptions(url, null, data).done(function() {
            window.open(url, '_blank');
        });
    }

    function saveCriticalSimplified() {
        var model = new Array();
        $("#tableCriticalSimplified tbody tr[data-id]").each(function() {
            var id = $(this).attr('data-id');
            var description = $(this).find("input[name='CriticalDescription']").val();
            var quarter = $(this).find("input[name='Quarter']").val();
            var complianceId;
            if ($(this).find("input[name='Compliance']").val() === "1") {
                complianceId = "true";
            } else {
                complianceId = "false";
            }

            model.push({ CriticalProductId: id, Description: description, QuarterId: quarter, Compliance: complianceId });
        });
        var versionId = $('input[name="planVersionId"]').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveCriticalProducSimplified", "SupervisionPlan", new {area = "SupervisionPlan"})",
            data: { dataSave: model, spVersionId: versionId }
        }).done(function(data) {
            if (!data.IsValid) {
                showMessage(data.ErrorMessage);
                hideLoaderOptional();
                return false;
            }
        });
        return true;
    }

    function saveCriticalDetailed() {
        var result = true;
        if (result) {
            var critical = new Array();
            $('#tableCriticalDetailed').find('tr[critical-main]').each(function() {
                var id = $(this).attr('critical-data-id');
                if ($(this).is('[data-new-row]')) {
                    id = "0";
                }

                var description = $(this).find("input[name='Description']").val();
                var plannedDate = $(this).find("input[name='PlannedDate']").val();
                var compliance = $(this).find("input[name='Compliance']").val();
                var completionDate = $(this).find("input[name='CompletionDate']").val();
                var quarter = $(this).find('td[name]').text().trim();
                var output = new Array();

                $(this).closest('tbody').find('tr[data-row-parent-id="' + $(this).attr('data-id') + '"][output-children]').find('tr[data-id]').not('[data-milestone-id]').each(function() {
                    var outputId = $(this).attr('data-output-id');
                    var milestone = "";
                    $(this).closest('tbody').find('tr[data-output-id="' + outputId + '"][data-milestone-id]').each(function() {
                        milestone = milestone + $(this).attr('data-milestone-id') + ",";
                    });

                    output.push({
                        Output: outputId,
                        Milestones: milestone
                    });
                });

                var riskId = "";

                $(this).closest('tbody').find('tr[data-row-parent-id="' + $(this).attr('data-id') + '"][risk-children]').find('tr[data-id]').each(function() {
                    riskId = riskId + $(this).attr('data-risk-id') + ",";
                });


                critical.push({
                    Id: id,
                    Description: description,
                    PlannedDate: plannedDate,
                    DetailedComplianceId: compliance,
                    Compliance: compliance,
                    CompletionDate: completionDate,
                    Outputs: output,
                    Risks: riskId,
                    quarterName: quarter
                });
            });

            var versionmodelDetailedId = $('input[name="planVersionId"]').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveCriticalDetailed", "SupervisionPlan", new {area = "SupervisionPlan"})",
                data: { spVersionId: versionmodelDetailedId, dataSave: critical, delcritical: $('[name="criticalDelete"]').val() }
            }).done(function(data) {
                if (!data.IsValid) {
                    showMessage(data.ErrorMessage);
                }
                hideLoaderOptional();
            });
        }
        return result;
    }

    function saveActivitiesSimplified() {

        var activities = new Array();
        var spId = $('input[name="planVersionId"]').val();
        $('#tableActivitySimplified').find('tr[data-activities]').each(function() {
            var id = $(this).attr("data-id");
            var type = $(this).find('[name="type"]').val();
            var planeed = $(this).find('[name="planned"]').val();
            var actual = $(this).find('[name="actual"]').val();
            var document = new Array();

            $(this).closest('tbody').find('[data-row-parent-id="' + id + '"]').find('tbody').find('tr').each(function() {
                var id = $(this).find('[name="idDocument"]').val();
                var description = $(this).find('[name="Description"]').val();
                var docReference = $(this).find('[name="docReference"]').val();
                document.push({
                    Id: id,
                    Description: description,
                    DocNumber: docReference
                });
            });

            if ($(this).is('[new-activity]')) {
                id = "0";
            }

            activities.push({
                Id: id,
                Type: type,
                Planeed: planeed,
                Actual: actual,
                Document: document
            });
        });

        showLoaderOptional();

        $.ajax({
            type: "POST",
            url: "@Url.Action("ActivitiesSave", "SupervisionPlan", new {area = "SupervisionPlan"})",
            data: { supervisionPlanVersionId: spId, activities: activities, delactivities: $('[name="activityDelete"]').val() }
        }).done(function(data) {
            if (!data.IsValid) {
                showMessage(data.ErrorMessage);
                hideLoaderOptional();
                return false;
            }
        });
        return true;
    }

    function downloadDocument(target) {
        var docNumber = $(target).closest('tr').find('[name="docReference"]').val().trim();

        var url = '@Url.Action("DownloadDocument", "DocumentModal", new {area = ""})' + '?documentNumber=' + docNumber;
        window.open(url, '_blank');
    }

    function removeDoc(target) {
        $(target).closest('tr').remove();
        ifContainDocument();
        ifContainDocument();
    }

    function saveActivitiesDetailed() {
        var activities = new Array();
        $('#tableActivityDetailed').find('tr[activity-main]').each(function() {
            var id = $(this).attr("activity-id");
            if ($(this).is('[new-activity]')) {
                id = "0";
            }

            var type = $(this).find('[name="ActivityType"]').val();
            var description = $(this).find('[name="Description"]').val();
            var planeedDate = $(this).find('[name="PlanedDate"]').val();
            var source = $(this).find('[name="Source"]').val();
            var cost = $(this).find('[name="Cost"]').val();
            var completitionDate = $(this).find('[name="CompletionDate"]').val();
            var criticals = "";
            var document = new Array();

            $('#tableActivityDetailed').find('tr[data-row-parent-id="' + $(this).attr("data-id") + '"][critical-activity]')
                .find('tr[data-critical-id]').each(function() {
                    criticals = criticals + $(this).attr('data-critical-id') + ',';
                });

            if (criticals.length !== 0) {
                criticals = criticals.substr(0, criticals.length - 1);
            }

            $('#tableActivityDetailed').find('tr[data-row-parent-id="' + $(this).attr("data-id") + '"][critical-document]')
                .find('tbody tr').each(function() {
                    var id = $(this).find('[name="idDocument"]').val();
                    var description = $(this).find('[name="Description"]').val();
                    var docReference = $(this).find('[name="docReference"]').val();
                    document.push({
                        Id: id,
                        Description: description,
                        DocNumber: docReference
                    });
                });

            activities.push({
                Id: id,
                Type: type,
                Description: description,
                PlaneedDate: planeedDate,
                Source: source,
                Cost: cost,
                CompletitionDate: completitionDate,
                Criticals: criticals,
                Document: document
            });
        });

        showLoaderOptional();

        $.ajax({
            type: "POST",
            url: "@Url.Action("ActivitiesSaveDetailed", "SupervisionPlan", new {area = "SupervisionPlan"})",
            data: { operationNumber: "@ViewBag.OperationNumber", year: "@ViewBag.Year", activities: activities, delactivities: $('[name="activityDelete"]').val() }
        }).done(function(data) {
            if (!data.IsValid) {
                showMessage(data.ErrorMessage);
                hideLoaderOptional();
                return false;
            }
        });

        return true;
    }

    function saveBudgetSimplified() {
        var cost = new Array();

        $('.budgetTable tbody input').each(function() {
            var categoryId = $(this).attr('data-category-id');
            var fundingSource = $(this).attr('data-source-id');
            var budGetValue = $(this).val().replaceAll(',', '') * 1;

            cost.push({
                CostId: -1,
                FundingSourceId: fundingSource,
                BudgetCategoryId: categoryId,
                Budget: budGetValue
            });
        });

        showLoaderOptional();
        var spVersionId = $('[name="planVersionId"]').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveBudget", "SupervisionPlan", new {area = "SupervisionPlan"})",
            data: { spVersionId: spVersionId, cost: cost }
        }).done(function(data) {
            if (!data.IsValid) {
                showMessage(data.ErrorMessage);
                hideLoaderOptional();
                return false;
            }
        });

        return true;

    }

    function save() {
        if (validateContainer($('.tab-pane.active'))) {
            var flag = false;
            if ($('.tab-pane.active').attr('id') === "CriticalProducts") {
                if ("@Model.ModalityType" === "Simplified") {
                    flag = saveCriticalSimplified();
                } else {
                    flag = saveCriticalDetailed();
                }
            } else if ($('.tab-pane.active').attr('id') === "Activities") {
                if ("@Model.ModalityType" === "Simplified") {
                    flag = saveActivitiesSimplified();
                } else {
                    flag = saveActivitiesDetailed();
                }
            } else {
                if ("@Model.ModalityType" === "Simplified") {

                    flag = saveBudgetSimplified();
                }
            }

            if (flag) {
                showLoaderOptional();
                $('#mainSummaryForm').submit();
            }

        }
    }

    function saverequest() {
        if (validateContainer($('.tab-pane.active'))) {
            var flag = false;
            if ($('.tab-pane.active').attr('id') === "CriticalProducts") {
                if ("@Model.ModalityType" === "Simplified") {
                    flag = saveCriticalSimplified();
                } else {
                    flag = saveCriticalDetailed();
                }
            } else if ($('.tab-pane.active').attr('id') === "Activities") {
                if ("@Model.ModalityType" === "Simplified") {
                    flag = saveActivitiesSimplified();
                } else {
                    flag = saveActivitiesDetailed();
                }
            } else if ($('.tab-pane.active').attr('id') === "Budget") {
                flag = true;
            }

            if (flag) {
                showLoaderOptional();
                $('#requestForm').submit();
            }
        }
    }

        function NewCriticalProduct() {
            var container = $('#tableCriticalSimplified').find('tbody').after();
            $.get("@Url.Action("GetRowCriticalSimplified")", function(data) {
            $(container).append(data);
            bindHandlers();
            showHideTables();
            hideshowDownButton();
        });
    }

    function NewCriticalProductDetailed() {
        var container = $('#tableCriticalDetailed').find('tbody[data-tbody]').after();
        $.get('@Url.Action("GetRowCriticalDetailed")', function(data) {
            $(container).append(data);
            bindHandlers();
        });

        actualizeTableNumber();
    }

    function DelCriticalProductSimplied(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = source.closest("tr");
                row.remove();
                showHideTables();
            }
        });
    }

    function DelCriticalProductDetailed(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = source.closest("tr");
                if (!row.is('[data-new-row]')) {
                    $('[name="criticalDelete"]').val($('[name="criticalDelete"]').val() + row.attr('critical-data-id') + ",");
                }
                row.closest('table').find('[critical-data-id="' + row.attr('critical-data-id') + '"]').remove();
                showHideTables();
                actualizeTableNumber();
                hideshowDownButton();
            }
        });
    }

    function deleteRisk(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = source.closest("tr");
                var totalRows = row.closest('tbody').find('tr').length;
                if (totalRows === 1) {
                    row.closest('table').find('thead').addClass('hide');
                }
                row.remove();
            }
        });
    }

    function deleteMilestones(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = source.closest("tr");

                row.remove();
            }
        });
    }

    function deleteOutput(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = source.closest("tr");

                var outputId = row.attr('data-output-id');
                var criticalId = row.attr('critical-data-id');
                var milestonesId = row.next().attr('data-milestone-id');
                var existOutput = outputId !== undefined && outputId !== null && outputId !== "";
                var existCriticalId = criticalId !== undefined && criticalId !== null && criticalId !== "";
                var existMilestones = milestonesId !== undefined && milestonesId !== null && milestonesId !== "";
                var milestonesCount = row.closest('tbody').find('tr[data-output-id][data-milestone-id]').length;
                var rowCounts = row.closest('tbody').find('tr[data-output-id]').length;
                var totalRows = (rowCounts - milestonesCount);

                if (existOutput && existCriticalId) {
                    if (totalRows === 1) {
                        row.closest('table').find('thead').addClass('hide');
                    }

                    if (existMilestones) {
                        row.closest('tbody').find('[data-output-id="' + outputId + '"]').remove();
                    }
                }

                if (existMilestones) {
                    if (totalRows === 1) {
                        row.closest('table').find('thead').addClass('hide');
                    }
                    row.closest('table').find('[data-output-id="' + outputId + '"]').remove();
                }

                if (existOutput) {
                    if (row.closest('tbody').find('tr').length === 1) {
                        row.closest('table').find('thead').addClass('hide');
                    }
                    row.remove();
                }

            }
        });
    }

    var tablerisk;

    function addriskbutton(element) {
        tablerisk = $(element).closest('.col-md-12').find('table');
        $('[data-id="buttonNewRisk"]').click();
        var url = '@Url.Action("RisksTable", "SupervisionPlan", new {area = "SupervisionPlan"})';
        postUrlWithOptions(url, { async: false }, { operationNumber: "@ViewBag.OperationNumber" })
            .done(function(data) {
                $('#addNewRisk').html(data);
                $('.modalAddDetailed').find('.buttonBlue').removeClass('buttonBlue');
                $('.modalAddDetailed').find('.buttonLink').removeClass('buttonLink');
                $('div[data-id="mainContainer"]').find('#modalButtonsContainer').addClass('hide');
                $(tablerisk).find('[data-risk-id]').each(function() {
                    $('#addNewRisk').find('[data-risk-id="' + $(this).attr('data-risk-id') + '"]')
                        .remove();
                });
            })
            .fail(function(jqXhr, textStatus, errorThrown) {
                showMessage(errorThrown);
            });
    }

    function addRisk() {
        var newTr = $('#addNewRisk').find('[type="checkbox"]:checked').closest('tr');
        $(tablerisk).find('tbody').append(newTr);
        $(tablerisk).find('tbody').find('td.checktd').remove();
        $(tablerisk).find('thead').removeAttr('class');
        $(tablerisk).find('tbody').find('td.hide').removeClass('hide');
        vex.close();
    }

    function AddcrRisk() {
        var newTr = $('#addNewRisk').find('[type="checkbox"]:checked').closest('tr');
        $(tablerisk).find('tbody').append(newTr);
        $(tablerisk).find('tbody').find('td.checktd').remove();
        $(tablerisk).find('thead').removeAttr('class');
        $(tablerisk).find('tbody').find('td.hide').removeClass('hide');
        vex.close();
    }

    function CancelAddRisk() {
        vex.close();
    }


    function addCritical() {
        var newTr = $('#addNewCritical').find('[type="checkbox"]:checked').closest('tr');
        $(tablecritical).find('tbody').append(newTr);
        $(tablecritical).find('thead').removeClass('hide');
        $(tablecritical).find('tbody').find('td.checktd').remove();
        $(tablecritical).find('tbody').find('td.hide').removeClass('hide');
        vex.close();
        $(tablecritical).find('thead').removeAttr("class");
    }

    function CancelAddCrAct() {
        vex.close();
    }

    function AddCrAct() {
        var newTr = $('#addNewCritical').find('[type="checkbox"]:checked').closest('tr');
        $(tablecritical).find('tbody').append(newTr);
        $(tablecritical).find('thead').removeClass('hide');
        $(tablecritical).find('tbody').find('td.checktd').remove();
        $(tablecritical).find('tbody').find('td.hide').removeClass('hide');
        vex.close();
        $(tablecritical).find('thead').removeAttr("class");
    }

    function addOutput() {
        $('#addNewOutput').find('[type="checkbox"]:checked').closest('tr').each(function() {
            if (!$(this).is('[data-milestone-id]')) {
                if ($(tableoutput).find('[data-output-id="' + $(this).attr('data-output-id') + '"]').length === 0) {
                    $(tableoutput).find('tbody').append($(this));
                    $(tableoutput).find('thead').removeAttr('class');
                }
            } else {
                $(tableoutput).find('[data-output-id="' + $(this).attr('data-output-id') + '"]').last().after($(this));
            }
        });
        $(tableoutput).find('tbody').find('td.checktd').remove();
        $(tableoutput).find('tbody').find('td.hide').removeClass('hide');
        vex.close();
    }

    function AddCr() {
        $('#addNewOutput').find('[type="checkbox"]:checked').closest('tr').each(function() {
            if (!$(this).is('[data-milestone-id]')) {
                if ($(tableoutput).find('[data-output-id="' + $(this).attr('data-output-id') + '"]').length === 0) {
                    $(tableoutput).find('tbody').append($(this));
                    $(tableoutput).find('thead').removeAttr('class');
                }
            } else {
                $(tableoutput).find('[data-output-id="' + $(this).attr('data-output-id') + '"]').last().after($(this));
            }
        });
        $(tableoutput).find('tbody').find('td.checktd').remove();
        $(tableoutput).find('tbody').find('td.hide').removeClass('hide');
        vex.close();
    }

    function CancelAddCr() {
        vex.close();
    }


    var tableoutput;

    function addoutputbutton(element) {
        tableoutput = $(element).closest('.col-md-12').find('table');
        $('[data-id="buttonNewOutput"]').click();
        var url = '@Url.Action("OutputsTable", "SupervisionPlan", new {area = "SupervisionPlan"})';
        postUrlWithOptions(url, { async: false }, { operationNumber: "@ViewBag.OperationNumber" })
            .done(function(data) {
                $('#addNewOutput').html(data);
                $('.modalAddDetailed').find('.buttonBlue').removeClass('buttonBlue');
                $('.modalAddDetailed').find('.buttonLink').removeClass('buttonLink');
                $('div[data-id="mainContainer"]').find('#modalButtonsContainer').addClass('hide');
                $(tableoutput).find('[data-output-id][data-milestone-id]').each(function() {
                    $('#addNewOutput').find('[data-output-id="' + $(this).attr('data-output-id') + '"][data-milestone-id="' + $(this).attr('data-milestone-id') + '"]')
                        .remove();
                });

                $(tableoutput).find('[data-output-id]').not('[data-milestone-id]').each(function() {
                    if ($('#addNewOutput').find('[data-output-id="' + $(this).attr('data-output-id') + '"][data-milestone-id]').length === 0) {
                        $('#addNewOutput').find('[data-output-id="' + $(this).attr('data-output-id') + '"]').remove();
                    } else {
                        $('#addNewOutput').find('[data-output-id="' + $(this).attr('data-output-id') + '"]')
                            .not('[data-milestone-id]').find('[type="checkbox"]')
                            .prop('checked', true).prop('disabled', true);
                    }

                });

                $('#addNewOutput').find('[type="checkbox"]').off('change');
                $('#addNewOutput').find('[type="checkbox"]').change(function() {
                    if ($(this).prop('checked')) {
                        if ($(this).closest('tr').is('[data-milestone-id]')) {
                            $('#addNewOutput').find('[data-output-id="' + $(this).closest('tr').attr('data-output-id') + '"]')
                                .not('[data-milestone-id]').find('[type="checkbox"]')
                                .prop('checked', true).prop('disabled', true);
                        }
                    } else {
                        if ($(this).closest('tr').is('[data-milestone-id]')) {
                            var checkedOnPopup = $('#addNewOutput').find('[data-output-id="' + $(this).closest('tr').attr('data-output-id') + '"][data-milestone-id]').find('[type="checkbox"]:checked').length;
                            var checkedOnTable = $(tableoutput).find('[data-output-id="' + $(this).closest('tr').attr('data-output-id') + '"][data-milestone-id]').length;
                            if ((checkedOnPopup + checkedOnTable) === 0) {
                                $('#addNewOutput').find('[data-output-id="' + $(this).closest('tr').attr('data-output-id') + '"]')
                                    .not('[data-milestone-id]').find('[type="checkbox"]').prop('disabled', false);
                            }
                        }
                    }
                });
            })
            .fail(function(jqXhr, textStatus, errorThrown) {
                showMessage(errorThrown);
            });
    }

    function BlockCompletitionDate() {
        $("[name='Compliance']").each(function() {
            if ($(this).attr('data-idcompleted') === $(this).val()) {
                $(this).closest("tr").find("[name='CompletionDate']").attr("disabled", false);
            }
        });
    }

    $(document).ready(function() {
        $("[name='PlannedDate']").each(function() {
            var quarterValue = $(this).closest('tr').find('td[name="quarter"]').text();
            if ($(this).val() === "" && quarterValue === "") {
                $(this).closest("tr").find("[name='quarter']").text("");
            }
        });

        $("[name='Compliance']").change(function() {
            if ($(this).attr('data-idcompleted') === $(this).val() && 'True' !== '@ViewBag.NoEditCompletitionDate' && '@ViewBag.Year' === '@DateTime.Now.Year') {
                $(this).closest("tr").find("[name='CompletionDate']").attr("disabled", false);
            } else {
                $(this).closest("tr").find("[name='CompletionDate']").attr("disabled", true);
                $(this).closest("tr").find("[name='CompletionDate']").val("");
            }
        });
        BlockCompletitionDate();

        $('.budgetTable input').each(function() {
            $(this).click(function() {
                if ($(this).val() === "0.00") {
                    $(this).val("");
                }
            });
            $(this).blur(function() {
                budgetTabSummatory();
                var sum = 0;
                $(this).closest("tr").find("input").each(function() {
                    var value = $(this).val();
                    value = roundNumber(value.replaceAll(',', ''), 2);
                    sum = sum + value;

                });
                $(this).closest("tr").find('.finalRow').text(formatDecimal(sum.toFixed(2)));
            });
        });
    });

    function actualizeTableNumber() {
        $('#tableCriticalDetailed').find('tr[critical-data-id][critical-main]').each(function(i) {
            $(this).find('.treeNumber').text(i + 1);
            $(this).closest('tbody').find('[critical-data-id="' + $(this).attr('critical-data-id') + '"][output-children]').find('.treeNumber').text((i + 1) + '.1');
            $(this).closest('tbody').find('[critical-data-id="' + $(this).attr('critical-data-id') + '"][risk-children]').find('.treeNumber').text((i + 1) + '.2');
        });

        $('#tableActivityDetailed').find('tr[activity-main]').each(function(i) {
            $(this).find('.treeNumber').text(i + 1);
            $(this).closest('tbody').find('[data-row-parent-id="' + $(this).attr('data-id') + '"][critical-activity]').find('.treeNumber').text((i + 1) + '.1');
            $(this).closest('tbody').find('[data-row-parent-id="' + $(this).attr('data-id') + '"][critical-document]').find('.treeNumber').text((i + 1) + '.2');
        });

        $('#tableActivitySimplified').find('tr[data-activities]').each(function(i) {
            $(this).find('.treeNumber').text(i + 1);
            $(this).closest('tbody').find('[data-row-parent-id="' + $(this).attr('data-id') + '"]').find('.treeNumber').text((i + 1) + '.1');
        });

        showHideTables();
    }


    function NewActivityDetailed() {

        $.get("@Url.Action("GetRowActivityDetailed")", function(data) {
            $('#tableActivityDetailed').find('tbody').first().append(data);
            bindHandlers();
        });
        disableCompletionDate();
        actualizeTableNumber();
        blockCompletionDateActivities();
        ifContainDocument();
    }

    function NewActivitySimplified() {
        $.get("@Url.Action("GetRowActivitySimplified")", function(data) {
            $('#tableActivitySimplified').find('tbody').first().append(data);
            bindHandlers();
        });
        actualizeTableNumber();
        ValidateNumber();
        ifContainDocument();
    }

    function validar(e) { // 1
        var tecla = (document.all) ? e.keyCode : e.which; // 2
        if (tecla === "-") return true; // 3

    }

    function ValidateNumber() {
        $("input[name='planned'], input[name='actual']").keyup(function() {
            if ($(this).val().length > 10) {
                $(this).val($(this).val().substr(0, 10));
            }

            if ($(this).val() <= 0) {
                $(this).val('');
            }
        });

        $("input[name='planned'], input[name='actual']").keypress(function(e) {
            if (e.keyCode === 45 || e.keyCode === 43) {
                return false;
            } else {
                return true;
            }
        });
    }

    function DelActivityDetailed(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = $(source).closest("tr");
                $('tr[data-row-parent-id="' + $(row).attr('data-id') + '"]').remove();
                if (!row.is('[new-activity]')) {
                    $('[name="activityDelete"]').val($('[name="activityDelete"]').val() + row.attr('activity-id') + ",");
                }
                row.remove();
                actualizeTableNumber();
                hideShowButtonEditActivities();
            }
        });
    }

    function DelActivitySimplified(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = $(source).closest("tr");
                $('tr[data-row-parent-id="' + $(row).attr('data-id') + '"]').remove();
                if (!row.is('[new-activity]')) {
                    $('[name="activityDelete"]').val($('[name="activityDelete"]').val() + row.attr('data-id') + ",");
                }
                row.remove();
                actualizeTableNumber();
            }
        });
    }

    function DelCriticalActivityDetailed(source) {
        var msg = '@Localization.GetText("TCM.FR.FindingsAndRecommendations.Delet_War_Ms")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var row = $(source).closest("tr");
                if ($(source).closest("table").find("tbody tr").size() == 1) {
                    $(source).closest("table").find("thead").attr("class", "hide");
                }
                row.remove();
                actualizeTableNumber();
            }
        });

    }


    var tablecritical;

    function addCriticalActivity(element) {
        tablecritical = $(element).closest('.col-md-12').find('table');
        $('[data-id="buttonNewCritical"]').click();
        var url = '@Url.Action("CriticalTable", "SupervisionPlan", new {area = "SupervisionPlan"})';
        postUrlWithOptions(url, { async: false }, { operationNumber: "@ViewBag.OperationNumber", year: @ViewBag.Year })
            .done(function(data) {
                $('#addNewCritical').html(data);
                $('.modalAddDetailed').find('.buttonBlue').removeClass('buttonBlue');
                $('.modalAddDetailed').find('.buttonLink').removeClass('buttonLink');
                $('div[data-id="mainContainer"]').find('#modalButtonsContainer').addClass('hide');

                $(tablecritical).find('[data-critical-id]').each(function() {
                    $('#addNewCritical').find('[data-critical-id="' + $(this).attr('data-critical-id') + '"]')
                        .remove();
                });

            })
            .fail(function(jqXhr, textStatus, errorThrown) {
                showMessage(errorThrown);
            });
    }


    function roundNumber(num, dec) {
        var result = Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec);
        return result;
    }

    function formatDecimal(number) {
        var n = number.toString(), p = n.indexOf('.');
        return n.replace(/\d(?=(?:\d{3})+(?:\.|$))/g, function($0, i) {
            return p < 0 || i < p ? ($0 + ',') : $0;
        });
    }

    function budgetTabSummatory() {
        var sum = 0;

        $('.budgetTable input').each(function() {
            var value = $(this).val();
            if (value !== undefined && value !== null && value.length !== 0) {
                var sumatory = roundNumber(value.replaceAll(',', ''), 2);
                sum += sumatory;

            } else {

                $(this).val("0.00");
            }

        });

        var count = parseInt('@Model.BudgetModel.LocalizedBudgetMatrixCols.Count');
        var countRow = parseInt('@Model.BudgetModel.LocalizedBudgetMatrixRows.Count');

        var sumQ = [];
        var sumQ2 = [];
        for (var i = 1; i <= count; i++) {
            sumQ[i] = 0;
            $('.budgetTable td:nth-child(' + (i + 1) + ')').find('input').each(function() {
                var value = $(this).val();
                if (value !== undefined && value !== null && value.length !== 0) {
                    sumQ[i] += roundNumber(value.replaceAll(',', ''), 2);
                }

            });
            $('.totalCol').find('.columnTotal').eq(i - 1).text(formatDecimal(sumQ[i].toFixed(2)));
        }


        $('.finalTotal').text(formatDecimal(sum.toFixed(2)));

    }

    var documentRow = "";

    function addDocumentInTable(docNumber, action) {
        var docReference = "";

        if (action === "added") {
            docReference = docNumber;
        } else {
            docReference = docNumber[0].DocumentNumber;
        }

        var url = '@Url.Action("GetDocumentInfo", "SupervisionPlan", new {area = "SupervisionPlan"})';
        postUrlWithOptions(url, { async: false }, { documentReference: docReference })
            .done(function(data) {
                $(documentRow).closest('table').find('thead').removeClass('hide');
                $(documentRow).append(data);
                $('[name="delDocumentCancel"]').val($('[name="delDocumentCancel"]').val() + $(data).find('[name="idDocument"]').val() + ',');
                closeModal();
            })
            .fail(function(jqXhr, textStatus, errorThrown) {
                showMessage(errorThrown);
            });
    }

    function addFileActivity(source) {
        documentRow = $(source).closest('td').find('tbody');
        $('[name="file"]').val("");
        $('[name="file"]').closest('.inputSearch.uploadFile').find('.inputFileInput').val("");
        $('[name="addDocumentCritical"]').click();
    }

    function addreturnViewRow() {
        vex.close();
    }

    function showHideTables() {
        if ($('#tableActivitySimplified tbody').find('tr').length === 0) {
            $('#tableActivitySimplified thead').addClass('hide');
            $('.btnCollapseOne[dd-contenedor="tableActivitySimplified"]').addClass('hide');
        } else {
            $('#tableActivitySimplified thead').removeClass('hide');
            $('.btnCollapseOne[dd-contenedor="tableActivitySimplified"]').removeClass('hide');
        }

        if ($('#tableActivityDetailed tbody').find('tr').length === 0) {
            $('#tableActivityDetailed thead').addClass('hide');
            $('.btnCollapseOne[dd-contenedor="tableActivityDetailed"]').addClass('hide');
        } else {
            $('#tableActivityDetailed thead').removeClass('hide');
            $('.btnCollapseOne[dd-contenedor="tableActivityDetailed"]').removeClass('hide');
        }

        if ($('#tableCriticalSimplified tbody').find('tr').length === 0) {
            $('#tableCriticalSimplified thead').addClass('hide');
        } else {
            $('#tableCriticalSimplified thead').removeClass('hide');
        }

        if ($('#tableCriticalDetailed tbody').find('tr').length === 0) {
            $('#tableCriticalDetailed thead').addClass('hide');
            $('.btnCollapseOne[dd-contenedor="tableCriticalDetailed"]').addClass('hide');
        } else {
            $('#tableCriticalDetailed thead').removeClass('hide');
            $('.btnCollapseOne[dd-contenedor="tableCriticalDetailed"]').removeClass('hide');
        }

        fixIEFocus();

        $('[name="PlannedDate"], [name="PlanedDate"]').datepicker('option', {
            minDate: new Date("1/1/@ViewBag.Year"),
            maxDate: new Date("12/31/@ViewBag.Year")
        }).datepicker("refresh");

        $('[name="CompletionDate"]').datepicker('option', {
            minDate: new Date("1/1/@ViewBag.Year"),
            maxDate: new Date("@DateTime.Now.Month/@DateTime.Now.Day/@ViewBag.Year")
        }).datepicker("refresh");

        hideshowDownButton();
        hideShowButtonEditActivities();
    }

    function UnlinkModal(source) {
        var msg = '@Localization.GetText("SP.MS.UnlinkModal")';

        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                showLoaderOptional();
                var url = "@Url.Action("UnlinkMission", "SupervisionPlan", new {area = "SupervisionPlan"})";
                var missionNumber = $(source).closest("tr").find("[name='missionNumber']").text().trim();
                postUrl(url, { missionNumber: missionNumber })
                    .success(function(data) {
                        if (data.IsValid) {
                            $(source).closest("tr").find("[name='CompletionDate']").val("");
                            $(source).closest("tr").find("[name='missionNumber']").text("-");
                            hideLoaderOptional();
                        } else {
                            showMessage(data.ErrorMessage);
                        }
                    });
            }
        });
    }

    function disableCompletionDate() {
        $('[name="ActivityType"]').off('change');
        $('[name="ActivityType"]').change(function() {
            var completeDate = $(this).closest('tr').find('[name="CompletionDate"]');
            if ($(this).val() === '@ViewBag.IdAdmMission' || 'True' === '@ViewBag.NoEditCompletitionDate') {
                completeDate.prop('disabled', true);
                completeDate.attr('title', '@Localization.GetText("SP.MS.ActivityCompleted")');
            } else {
                completeDate.prop('disabled', false);
                completeDate.removeAttr('title');
            }
        });
    }

    function disableCompletionDateReady() {
        $('[name="ActivityType"]').each(function() {
            var completeDate = $(this).closest('tr').find('[name="CompletionDate"]');
            if ($(this).val() === '@ViewBag.IdAdmMission' || 'True' === '@ViewBag.NoEditCompletitionDate') {
                completeDate.prop('disabled', true);
                completeDate.attr('title', '@Localization.GetText("SP.MS.ActivityCompleted")');
            } else {
                completeDate.prop('disabled', false);
                completeDate.removeAttr('title');
            }
        });
    }

    function fixIEFocus() {
        $('.datepicker-default').off('click');
        $('.datepicker-default').click(function() {
            $('.ui-state-default').off('click');
            $('.ui-state-default').click(function(e) {
                e.preventDefault();
                $(this).closest('.ui-datepicker').css('display', 'none');
                $('.hasDatepicker').removeClass('hasDatepicker');
            });
        });


        $('[name="PlannedDate"]').change(function() {
            var isQuarter;
            var inputDate = $(this).val();
            var dateSplit = inputDate.split(" ");
            var dateC = converToDate(inputDate);
            var firstQuMin = converToDate("1 Jan " + dateSplit[2]);
            var firstQuMax = converToDate("31 Mar " + dateSplit[2]);
            var secondQuMin = converToDate("1 Apr " + dateSplit[2]);
            var secondQuMax = converToDate("30 Jun " + dateSplit[2]);
            var thirdQuMin = converToDate("1 Jul " + dateSplit[2]);
            var thirdQuMax = converToDate("30 Sep " + dateSplit[2]);
            var fourthQuMin = converToDate("1 Oct " + dateSplit[2]);
            var fourthQuMax = converToDate("31 Dec " + dateSplit[2]);
            if (dateC >= firstQuMin && dateC <= firstQuMax) {
                isQuarter = "Q1"
            }
            if (dateC >= secondQuMin && dateC <= secondQuMax) {
                isQuarter = "Q2"
            }
            if (dateC >= thirdQuMin && dateC <= thirdQuMax) {
                isQuarter = "Q3"
            }
            if (dateC >= fourthQuMin && dateC <= fourthQuMax) {
                isQuarter = "Q4"
            }
            $(this).closest("tr").find("[name='quarter']").text(isQuarter);
        });

        $("[name='Compliance']").on("change", function() {

            if ($(this).attr('data-idcompleted') === $(this).val() && 'True' !== '@ViewBag.NoEditCompletitionDate' && '@ViewBag.Year' === '@DateTime.Now.Year') {
                $(this).closest("tr").find("[name='CompletionDate']").attr("disabled", false);
            } else {
                $(this).closest("tr").find("[name='CompletionDate']").attr("disabled", true);
            }
        });
    }

    function hideshowDownButton() {
        if ($('li.active[dd-tab]').attr('dd-tab') === "#CriticalProducts") {
            if ($('#tableCriticalDetailed thead').length > 0) {
                if ($('#tableCriticalDetailed thead').hasClass('hide')) {
                    $('div.actionDownB').addClass('hide');
                } else {
                    $('div.actionDownB').removeClass('hide');
                }
            }

            if ($('#tableCriticalSimplified thead').length > 0) {
                if ($('#tableCriticalSimplified thead').hasClass('hide')) {
                    $('div.actionDownB').addClass('hide');
                } else {
                    $('div.actionDownB').removeClass('hide');
                }
            }
        }
    }

    function hideShowButtonEditActivities() {
        if ($('li.active[dd-tab]').attr('dd-tab') === "#Activities") {
            if ($('#tableActivityDetailed thead').length > 0) {
                if ($('#tableActivityDetailed thead').hasClass('hide')) {
                    $('div.actionDownB').addClass('hide');
                } else {
                    $('div.actionDownB').removeClass('hide');
                }
            }

            if ($('#tableActivitySimplified thead').length > 0) {
                if ($('#tableActivitySimplified thead').hasClass('hide')) {
                    $('div.actionDownB').addClass('hide');
                } else {
                    $('div.actionDownB').removeClass('hide');
                }
            }
        }
    }

    function blockCompletionDateActivities() {
        if ('@ViewBag.NoEditCompletitionDate' === 'True' || '@ViewBag.Year' !== '@DateTime.Now.Year') {
            $('#tableActivityDetailed').find('input[name="CompletionDate"]').attr('disabled', 'disabled');
        } else {
            $('#tableActivityDetailed').find('input[name="CompletionDate"]').removeAttr('disabled');
        }
    }

    function blockCompletionDateCritical() {
        if ('@ViewBag.NoEditCompletitionDate' === 'True') {
            $('#tableCriticalDetailed').find('input[name="CompletionDate"]').attr('disabled', 'disabled');
        }
    }

    function ifContainDocument() {
        $('table[name="ActivityDoc"]').each(function() {
            var headTable = $(this).find('tbody tr').length;
            if (headTable === 0) {
                $(this).find('thead').addClass('hide');
            }
        });
    }
    function closeModal() {
        var vexModal = $('#DeliverableDocuments-modal-add').parents('.vex');
        if (vexModal.length > 0)
            vex.closeByID(vexModal.data().vex.id);
    }
    </script>
}