@model IDB.MW.Domain.Models.Supervision.SupervisionPlan.SupervisionPlanVersionModel
@{
    ViewBag.Title = "EditClauseApprovalRequest";
    var operationNumber = (string)ViewBag.OperationNumber;
    var year = (int)ViewBag.Year;
}

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/kendo/kendo.common.min.css")"/>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>

@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
    <script src="@Url.Content("~/Scripts/Modules/Task/AddCommentTask.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/supervisionplan/SupervisionPlanEditRequest.js")"></script>
}

<h2 class="hide">Seccion central</h2>
<section class="central">
    <div class="mod_contenido_central generic_tasks">
        <input type="hidden" id="UserName" value="@IDBContext.Current.UserName" />
        @using (Html.BeginForm("CreatePlanVersionApprovalRequest", "SupervisionPlanLegacy", FormMethod.Post, new { area = "SupervisionPlan", @id = "FormPostSupervision" }))
        {
            @Html.Hidden("planVersionId", Model.SupervisionPlanVersionId)
            @Html.Hidden("operationNumber", operationNumber)
            @Html.Hidden("year", year)
            @Html.Hidden("RequestAfterSave", "false"); 
            
            @Html.HiddenFor(x => x.SupervisionPlanVersionId);
            
            <!--contracts_and_clauses-->
            <h3 class="headingh2">
                <a href="@(Url.Action("Summary", "SupervisionPlanLegacy", new { area = "SupervisionPlan", operationNumber = operationNumber, year = year }))" title=" @Localization.GetText("Supervision Plan Year")" class="tipo1">@Localization.GetText("Supervision Plan Year")</a>
            </h3>
            <div class="operationData">
                <div class="box_subtitle">
                    <h4 class="headingh2 title_tag">@Localization.GetText("Supervision Plan Approval Request")</h4>
                    <div class="editingButtonsEdit up">
                        <label for="cancel1">
                            <input type="button" class="btn-secondary cancelEditRequest" data-route="@Url.Action("DetailsPlanVersionApprovalRequest", "SupervisionPlanLegacy", new { area = "SupervisionPlan", planVersionId = Model.SupervisionPlanVersionId, operationNumber = operationNumber, year = year })" value=" @Localization.GetText("Cancel")">
                        </label>
                        @if ((bool)ViewBag.IsInDraftOrModified) {
                            <label for="SendRequest">
                                <input type="button" id="Save-Supervision1" class="btn-primary_2 save" data-route="@Url.Action("CommentsSave", "SupervisionPlanLegacy")" value=" @Localization.GetText("Save")">
                            </label>
                            <label for="EditClause">
                                <input type="button" id="Request-Supervision" class="btn-primary_2 saveandrequest" value=" @Localization.GetText("Save and Request")" data-route="@Url.Action("CommentsSave", "SupervisionPlanLegacy")">
                            </label>
                        }
                    </div>
                </div>
            </div>
            <h3 class="hide">Contenido central</h3>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Creation on")</p>
                    <p>@String.Format("{0:dd MMM yyy}", Model.Created)</p>
                </div>
                <div class="data2">
                    <p class="dataTitle">@Localization.GetText("Workflow")</p>
                    <p class="icon workflow">@Localization.GetText("Supervision Plan Validation")</p>
                </div>

                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("SP.Summary.SupervisionPlanApproval.WorkflowSumitter")</p>
                    <p>@IDBContext.Current.UserName</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("SP.Summary.SupervisionPlanApproval.Priority")</p>
                    <p class="icon hight">@Localization.GetText("SP.Summary.SupervisionPlanApproval.High")</p>
                </div>
            </div>
            
            Html.RenderAction("AdditionalValidators", "Tasks", new {
                  area = "Global",
                  Code = "WF-SP-001",
                  Editable = true
              });
            
            
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("SP.Summary.SupervisionPlanApproval.Instructions")</p>
                        <p>@Localization.GetText("SP.Summary.SupervisionPlanApproval.InitiateValidation")</p>

                    </div>
                </div>
            </div>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("SP.Summary.SupervisionPlanApproval.Content")</p>
                        <p>-</p>
                    </div>
                </div>
            </div>
            <div class="operationData marginTop2Bottom1">
                <div class="box_subtitle">
                    <h4 class="headingh2 title">@Localization.GetText("SP.Summary.SupervisionPlanApproval.Comments")</h4>
                    <div class="editingButtonsEdit ftr">
                        <a id="newCommentSupervisionPlanRequestEdit" href="javsacript:void(0)" class="btn-primary" title="@Localization.GetText("New")">@Localization.GetText("New")</a>
                    </div>
                </div>



                <table id="commentTableUIRI002_edit" class="grid w100 noInnerPadding fixedValues" style="position: relative; left: 2.6%; width: 95% !important;">
                    <tbody id="comentContainer">
                        @for (int i = 0; i < Model.UserComments.Count; i++) {
                            <tr class="TableSupervision">
                                <td>

                                    @if (IDBContext.Current.UserName == Model.UserComments[i].ModifiedBy) {
                                        <div class="padding10 leftAlign" style="width: 95%;">
                                            <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                                <input type="button" value="Delete" class="deleteTextButton verticalAlignTop absolute absRight DeleteSupervisionRequest">
                                            </div>

                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@(Model.UserComments[i].Modified == null ? "" : Model.UserComments[i].Modified.Value.ToString("dd MMM yyyy"))</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.UserComments[i].ModifiedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="padding10" style="width: 95%;">
                                                    @Html.HiddenFor(x => Model.UserComments[i].UserCommentId)
                                                    @Html.HiddenFor(x => Model.UserComments[i].CreatedBy)
                                                    @Html.HiddenFor(x => Model.UserComments[i].Created)
                                                    @Html.HiddenFor(x => Model.UserComments[i].Modified)
                                                    @Html.HiddenFor(x => Model.UserComments[i].ModifiedBy)
                                                    <div class="verticalMargin10 inline-block bold marginLeft3">@Html.TextAreaFor(x => x.UserComments[i].Text, new { @class = "txtDescriptionComent", @data_val = true, @data_val_required = "Please, complete the mandatory fields", @rows = "5", @cols = "300", @maxlength="500" }) </div>
                                                </div>
                                            </div>
                                        </div>                                                                
                                    } else {
                                        <div class="padding10 leftAlign" style="width: 95%;">
                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@(Model.UserComments[i].Modified == null ? "" : Model.UserComments[i].Modified.Value.ToString("dd MMM yyyy"))</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.UserComments[i].ModifiedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="padding10" style="width: 95%;">
                                                    @Html.HiddenFor(x => Model.UserComments[i].UserCommentId)
                                                    @Html.HiddenFor(x => Model.UserComments[i].CreatedBy)
                                                    @Html.HiddenFor(x => Model.UserComments[i].Created)
                                                    @Html.HiddenFor(x => Model.UserComments[i].Modified)
                                                    @Html.HiddenFor(x => Model.UserComments[i].ModifiedBy)
                                                    @Html.HiddenFor(x => Model.UserComments[i].Text)
                                                    <div class="verticalMargin10 inline-block bold marginLeft3">@Model.UserComments[i].Text</div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>

            <div class="editingButtonsEdit marginRight2Con5">
                <label for="cancel1">
                    <input type="button" class="btn-secondary cancelEditRequest" data-route="@Url.Action("DetailsPlanVersionApprovalRequest", "SupervisionPlanLegacy", new { area = "SupervisionPlan", planVersionId = Model.SupervisionPlanVersionId, operationNumber = operationNumber, year = year })" value=" @Localization.GetText("Cancel")">
                </label>
                @if ((bool)ViewBag.IsInDraftOrModified) 
                {
                    <label for="SendRequestTasks">
                        <input type="button"  id="Save-Supervision" class="btn-primary_2 save"  value=" @Localization.GetText("Save")" data-route="@Url.Action("CommentsSave", "SupervisionPlanLegacy")">
                    </label>
                    <label for="EditClause">
                        <input type="button" id="RequestDown" class="btn-primary_2 saveandrequest" value=" @Localization.GetText("Save and Request")" data-route="@Url.Action("CommentsSave", "SupervisionPlanLegacy")">
                    </label>
                }
            </div>
        }
    </div>
</section>
