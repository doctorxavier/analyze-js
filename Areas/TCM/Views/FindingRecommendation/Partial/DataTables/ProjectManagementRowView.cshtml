@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Application.TCM.ViewModels.FindingAndRecommendation
@model  List<ProjectManagementTableModel>
@{
    var rand = new Random();
    var rowId = rand.Next(1000000, 3000000);
    var ddlStageSwich = SecurityHelper.IsVisible(Model.First().FieldAccessList, "ddlStage");
    var ddlDimensionSwich = SecurityHelper.IsVisible(Model.First().FieldAccessList, "ddlDimension");
    var txtSubTableFindingsSwich = SecurityHelper.IsVisible(Model.First().FieldAccessList, "txtSubTableFindings");
    var txtSubTableRecommendationsSwich = SecurityHelper.IsVisible(Model.First().FieldAccessList, "txtSubTableRecommendations");
}

<tr data-id="@rowId" class="custom even odd" role="row">
    <td class="hide" data-pagemode="edit">
        <input type="hidden" name="findingRecommendationId" value="0">
    </td>
    @if (ddlStageSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "stage", ViewBag.Stage, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlStage" } })
        </td>
    }
    
    @if (ddlDimensionSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "dimension", ViewBag.Dimension, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlDimension" } })
        </td>
    }
    
    <td data-pagemode="edit">
        @Confluence.LabelGetDate(DateTime.Now)
    </td>

    <td data-pagemode="edit" class="w130">
        @Confluence.ButtonShowRow(true)
        @Confluence.ButtonTrash(null, null, "removeRow2")
    </td>
</tr>

<tr class="template even" role="row" data-is-expanded="true" style="display:table-row;" data-last-detail="true" data-row-parent-id="@rowId">
    <td colspan="5">
        <div class="col-md-12">
            <div class="col-md-6" title="@Localization.GetText("TCM.FR.FindingsAndRecommendations.FindingsMouse")">
                <span data-pagemode="edit">
                    @Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.Findings"))
                </span>
            </div>
            <div class="col-md-6" title="@Localization.GetText("TCM.FR.FindingsAndRecommendations.Recomendation_Over")">
                <span data-pagemode="edit">
                    @Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.Recomendations"))
                </span>
            </div>
        </div>
        <div class="col-md-12">
            @if (txtSubTableFindingsSwich)
            {
                <div class="col-md-6">
                    <span data-pagemode="edit">
                        @Confluence.InputRichText("", "finding", width: "80%", height: "100px", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtSubTableFindings" } }, placeholder: Localization.GetText("TCM.FR.FindingsAndRecommendations.FindingsPlace"))
                    </span>
                </div>

            }
            @if (txtSubTableRecommendationsSwich)
            {
                <div class="col-md-6">
                    <span data-pagemode="edit">

                        @Confluence.InputRichText("", "recommendation", width: "80%", height: "100px", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtSubTableRecommendations" } }, placeholder: Localization.GetText("TCM.FR.FindingsAndRecommendations.RecommendationPlace"))
                    </span>
                </div>
            }
            
        </div>
</td>
</tr>