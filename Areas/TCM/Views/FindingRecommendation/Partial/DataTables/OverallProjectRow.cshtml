@using IDB.Presentation.MVC4.Helpers

@model  List<IDB.MW.Domain.Models.Security.FieldAccessModel>

@{
    var rand = new Random();
    var rowId = rand.Next(1000000, 3000000);
}
<tr data-id="@rowId" class="custom-even" role="row">
    <td class="hide" data-pagemode="edit">
        <input type="hidden" name="FindingRecommendationId" value="0">
    </td>
    <td data-pagemode="edit">
        @Confluence.InputDropDown(null, "typeStages",
                                    ViewBag.ListStages,
                                    width: "100%",
                                    dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlStages" } })
    </td>
    <td data-pagemode="edit">
        @Confluence.InputDropDown(null, "typeDimensions",
                                    ViewBag.ListDimensions,
                                    width: "100%",
                                    dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlDimensions" } })
    </td>
    @if (SecurityHelper.IsVisible(Model, "ddlCategories"))
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "typeCategories",
                                    ViewBag.ListItemsCategory,
                                    parentValue: true,
                                    width: "90%",
                                    dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlCategories" } })
        </td>

    }

    <td data-pagemode="edit">
        @String.Format("{0:dd MMM yyyy}", ViewBag.LastUpdate)
    </td>
    <td data-pagemode="edit" class="w130">
        @Confluence.ButtonShowRow(true, htmlClass: "mr0")
        @Confluence.ButtonTrash(null, null,
                                "removeRowOverall",
                                dataAttributes: new Dictionary<string, string> { { "findingRecomendationId", "0" } })
    </td>
</tr>
<tr class="template odd showChildRow linedown" name="rowIdiom" id="rowIdiom" data-persist="true" data-row-parent-id=@rowId>
    <td class="custom-detail-table-row" colspan="6">
        <div class="col-md-6">
            <div class="col-md-12">
                <span>
                    @Confluence.LabelBold(Localization.GetText("Findings"))
                </span>
            </div>
            @if (SecurityHelper.IsVisible(Model, "txtSubTableFindings"))
            {
                <div class="col-md-12">
                    <span data-pagemode="edit">
                        @Confluence.InputTextArea(null,
                           "FindingsArea",
                           width: "100%",
                           height: "100px",
                           required: true,
                           dataAttributes: new Dictionary<string, string>() {
                               { "idb-fieldname", "txtSubTableFindings" } },
                           placeholder: Localization.GetText("TCM.FR.FindingsAndRecommendations.FindingsPlace"))
                    </span>
                </div>
            }


        </div>
        <div class="col-md-6">
            <div class="col-md-12">
                <span>@Confluence.LabelBold(Localization.GetText("Recommendations"))</span>
            </div>
            @if (SecurityHelper.IsVisible(Model, "txtSubTableRecommendations"))
            {
                <div class="col-md-12">
                    <span data-pagemode="edit">
                        @Confluence.InputTextArea(null,
                        "RecommendationsArea",
                        width: "100%",
                        height: "100px",
                        required: true,
                        dataAttributes: new Dictionary<string, string>() {
                            { "idb-fieldname", "txtSubTableRecommendations" } },
                        placeholder: Localization.GetText("TCM.FR.FindingsAndRecommendations.RecommendationPlace"))
                    </span>
                </div>
            }
            
        </div>
    </td>

</tr>
