@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.TCM.ViewModels.FindingAndRecommendation
@using IDB.Presentation.MVC4.Models.Documents
@model List<DocumentsTableModel>

@{
    var operationNumber = Request.QueryString["OperationNumber"];
}

<div class="col-md-12 pl0">
    <div class="col-md-6 mb10 pl0">
        <div class="mb15">
            @Confluence.LabelMainSubTitle(Localization.GetText("TCM.FR.FindingsAndRecommendations.Documents"))
        </div>
        @Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.FieldIfApplicable"))
    </div>

    <div class="col-md-6 mb10 mt20">
        <div data-pagemode="edit">
            <div id="FindingDocuments-modal-add" class="hide">
                @Html.Partial("Controls/IDBDocsNew/AddIDBDoc", new SearchDocumentModalViewModel { SearchModalId = "DocumentsTable", MultipleSelection = false, TargetFunction = "renderizeRow", BusinessAreaCode = "BA_FIND_AND_RECOMMEND", OperationNumber = operationNumber })
            </div>
            @Confluence.ButtonBlue(Localization.GetText("DM.Add.Document"), "documentsAdd", htmlClass: "floatRight", dataAttributes: new Dictionary<string, string> { { "id", "FindingDocuments-modal-add" }, { "modal-allowclose", "true" }, { "custom-modal", "FindingDocuments-modal-add" }, { "custom-modal-validate", "false" }, { "custom-modal-title", Localization.GetText("OP.AP.Documents.Search") } })
        </div>
    </div>
</div>
@{
    var config = Html.RenderDataTable(Model);
    config.Name("DocumentsTable")
        .AddPrimaryKeyToName(false)
        .Columns(columns =>
        {
            columns.Bound(c => c.User).Header(Localization.GetText("TCM.FR.FindingsAndRecommendations.User")).Persistent();
            columns.Template(c => Confluence.LabelGetDate(c.Date)).Header(Localization.GetText("TCM.FR.FindingsAndRecommendations.Date")).Persistent().CssClass("text-left");
            columns.Bound(c => c.IdbDocNumber).Header(Localization.GetText("TCM.FR.FindingsAndRecommendations.IDBDocNumber")).Persistent().CssClass("text-left");
            columns.Bound(c => c.Description).Header(Localization.GetText("TCM.FR.FindingsAndRecommendations.Description")).Persistent();
            columns.Template(c => GetDownloadButton()).Header(Localization.GetText("TCM.FR.FindingsAndRecommendations.Action")).Persistent()
                .EditableTemplate(row => GetDocumentExpandedButton("removeRow")).CssHeaderClass("w150");
            columns.Bound(c => string.Empty)
                .EditableTemplate(row => Confluence.ListHelpers(new List<HelperResult>
            {
                Confluence.InputHidden(row.DocumentId.ToString(), "DocumentId"),
                Confluence.InputHidden(row.IdbDocNumber, "DocNumber"),
                Confluence.InputHidden(row.Description, "Description")
            })).Hidden(true);
        });

    config.TableClass = "tableNormal endSpacing";

    @Html.Partial("Controls/DataTable", config)

        <div  name="msg"><tr><td>@Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.DocumentEmptyTable"))</td></tr></div>
}

@helper GetDocumentExpandedButton(string dataAction)
{
    @Confluence.ButtonTrash(null, null, dataAction)
}
@helper GetDownloadButton()
{
    @Confluence.ButtonDownload("", "DownloadDocument", "downloadDocument")
}
