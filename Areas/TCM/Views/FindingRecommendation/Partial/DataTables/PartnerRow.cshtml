@using IDB.Presentation.MVC4.Helpers
@model  IList<IDB.MW.Domain.Models.Security.FieldAccessModel>

@{

    var ddlTypePartnerSwich = SecurityHelper.IsVisible(Model, "ddlTypePartner");
    var txtPartnerEngagementSwich = SecurityHelper.IsVisible(Model, "txtPartnerEngagement");
    var txtPartnerNameSwich = SecurityHelper.IsVisible(Model, "txtPartnerName");
}

<tr data-id="0" class="custom-even" role="row">
    <td class="hide" data-pagemode="edit">
        <input type="hidden" name="partnerId" value="0">
    </td>
    @if (ddlTypePartnerSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "typePartner", ViewBag.TypePartner, orderAsc: false, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlTypePartner" } })
        </td>
    }
    
    @if (txtPartnerNameSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputText(null, "partnerName", 500, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtPartnerName" } })
        </td>
    }
    
    @if (txtPartnerEngagementSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputRichText(null, "partnerEngagement", width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtPartnerEngagement" } }, maxLength: 3500)
        </td>
    }
    

    <td data-pagemode="edit">
        @Confluence.ButtonTrash(null, null, "removeRow")
    </td>
</tr>