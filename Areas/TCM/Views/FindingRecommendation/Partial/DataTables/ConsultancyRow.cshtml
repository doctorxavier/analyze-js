@using IDB.Presentation.MVC4.Helpers
@model  IList<IDB.MW.Domain.Models.Security.FieldAccessModel>

@{
    var ddlNationalitySwich = SecurityHelper.IsVisible(Model, "ddlNationality");
    var ddlQualityAssesmentSwich = SecurityHelper.IsVisible(Model, "ddlQualityAssesment");
    var ddlTypeConsultanciesSwich = SecurityHelper.IsVisible(Model, "ddlTypeConsultancies");
    var txtAmountUsdSwich = SecurityHelper.IsVisible(Model, "txtAmountUsd");
    var txtNameConsultanciesSwich = SecurityHelper.IsVisible(Model, "txtNameConsultancies");
    var txtObjectivesConsultancySwich = SecurityHelper.IsVisible(Model, "txtObjectivesConsultancy");
}

<tr data-id="0" class="custom-even" role="row">
    <td class="hide" data-pagemode="edit">
        <input type="hidden" name="consultanciesId" value="0">
    </td>
    @if (txtNameConsultanciesSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputText(null, "consultanciesName", 500, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtNameConsultancies" } })
        </td>
    }
    

    @if (ddlTypeConsultanciesSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "consultanciesType", ViewBag.ConsultanciesType, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlTypeConsultancies" } }, required: false)
        </td>
    }
    
    @if (ddlNationalitySwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "consultanciesNationality", ViewBag.ConsultanciesNationality, width: "100%", orderAsc: false, dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlNationality" } }, required: false)
        </td>
    }
    
    <td data-pagemode="edit">
        @Confluence.InputText(null, "consultanciesApprovalNumber", 500, width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtNameConsultancies" } }, required: false, disabled: true)
    </td>

    <td data-pagemode="edit">
        @Confluence.InputDatePicker(null, "consultanciesContractBegin", width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "dpkContractBegin" } }, required: false)
    </td>
    <td data-pagemode="edit">
        @Confluence.InputDatePicker(null, "consultanciesContractEnd", width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "dpkContractEnd" } }, required:false)
    </td>
    @if (txtAmountUsdSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDecimal(null, "consultanciesAmountUSD", width: "100%", minValue: "1.00", maxValue: "9999999999999.99", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtAmountUsd" } }, htmlClass: "text-right")
        </td>
    }
    @if (txtObjectivesConsultancySwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputRichText(null, "objectivesConsultancy", width: "100%", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtObjectivesConsultancy" } }, maxLength: 500, required: false)
        </td>
    }
    

    @if (ddlQualityAssesmentSwich)
    {
        <td data-pagemode="edit">
            @Confluence.InputDropDown(null, "consultanciesQualityAssesment", ViewBag.QualityAssesment, width: "100%", orderAsc: false, required: false, dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlQualityAssesment" } })
        </td>
    }
   
    <td data-pagemode="edit">
        @Confluence.ButtonTrash(null, null, "removeRow")
    </td>
</tr>