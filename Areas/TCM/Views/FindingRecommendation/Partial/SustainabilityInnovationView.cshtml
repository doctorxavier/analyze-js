@using IDB.MW.Domain.Models.Security
@using System.Collections.Generic;

@model IDB.MW.Application.TCM.ViewModels.FindingAndRecommendation.SustainabilityAndInnovationModel
<div class="header">
    <div class="row">
        <div class="col-md-12">
            @if (ViewBag.Sustainability != false || ViewBag.Innovation != false || ViewBag.IsFREditable)
            {
                List<FieldAccessModel> fieldAccessList = Model.Innovation.Count > 0 ? Model.Innovation.First().FieldAccessList: new List<FieldAccessModel>();
                @Html.Partial("Partial/ButtonsEditSustainability", fieldAccessList)
            }

            @if (ViewBag.CodeReportingCycle != "SG")
            {
                @Html.Partial("Partial/ButtonsVerifyContent")
            }
        </div>
    </div>
</div>
<input type="hidden" id="hidSustainabilityAndInnovationModel" value="@ViewBag.SerializedSustainabilityAndInnovationViewModel" />
<div class="row row-header">
    <div class="col-md-12" title="@Localization.GetText("TCM.FR.FindingsAndRecommendations.Sustain_Mouse")">
        @Confluence.LabelMainSubTitle(Localization.GetText("TCM.FR.FindingsAndRecommendations.Sustainability"), htmlClass : "subTitlePrincipalFindingsRecommendations")
        <div class="mt10">
            @Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.FieldOperationMeant"))
        </div>
    </div>

</div>
<div class="col-md-12 pl0">
    <div style="height: 30px">
        @Confluence.LabelsGroup(Localization.GetText(""),
        Confluence.LabelGetBool(Model.OperationSustainable, true),
        new List<HelperResult>
        {
            Confluence.InputRadioButton("Yes", "Sustainability", Model.OperationSustainable, label: Localization.GetText("COMMON.Yes"), labelBold: true, isInLine: true, id: "selectYes",
                dataAttributes: new Dictionary<string, string>() {{"idb-fieldname", "rbIsSustainability"}}, required: false),
            Confluence.InputRadioButton("No", "Sustainability", !Model.OperationSustainable, label: Localization.GetText("COMMON.No"), labelBold: true, isInLine: true, htmlClass: "ml5",
                id: "selectNo", dataAttributes: new Dictionary<string, string>() {{"idb-fieldname", "rbIsSustainability"}}, required: false)
        })
    </div>
    <div class="mb10" id="sustainabilityArea">
        @Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.SustainabilityArea"))
        @Confluence.InputRichText(Model.ExplainProjectSustainable, "sustainabilityArea", width: "100%", height: "100px", maxLength: 3500)
    </div>
</div>

@if (Model != null)
{
    <div class="row row-header">
        <div class="col-md-12">
            @Confluence.LabelMainSubTitle(Localization.GetText("TCM.FR.FindingsAndRecommendations.Innovation"), htmlClass: "subTitlePrincipalFindingsRecommendations")
            <div class="mt10">
                @Confluence.Label(Localization.GetText("TCM.FR.FindingsAndRecommendations.FieldDidTc"), htmlClass: "mt10")
            </div>
        </div>
    </div>
    <div class="col-md-12 pl0">
        @Confluence.LabelsGroup(Localization.GetText(""),
        Confluence.LabelGetBool(Model.InnovationBit, true),
        new List<HelperResult>
        {
            Confluence.InputRadioButton("Yes", "Innovation", Model.InnovationBit, label: Localization.GetText("COMMON.Yes"), labelBold: true, isInLine: true,
                id: "selectedYes", dataAttributes: new Dictionary<string, string>() {{"idb-fieldname", "rbIsInnovation"}}),
            Confluence.InputRadioButton("No", "Innovation", !Model.InnovationBit, label: Localization.GetText("COMMON.No"), labelBold: true, isInLine: true, htmlClass: "ml5",
                id: "selectedNo", dataAttributes: new Dictionary<string, string>() {{"idb-fieldname", "rbIsInnovation"}})
        })
    </div>
    <div data-idb-fielname="tblInnovation" id="tblInnovation">
        @Html.Partial("Partial/DataTables/InnovationDataTable", Model.Innovation)
    </div>

    <div class="header mt20">
        <div class="row">
            <div class="col-md-12">
                @if (ViewBag.Sustainability != false || ViewBag.Innovation != false || ViewBag.IsFREditable)
                {
                    List<FieldAccessModel> fieldAccessList = Model.Innovation.Count > 0 ? Model.Innovation.First().FieldAccessList : new List<FieldAccessModel>();
                    @Html.Partial("Partial/ButtonsEditSustainability", fieldAccessList)
                }
                @if (ViewBag.CodeReportingCycle != "SG")
                {
                    @Html.Partial("Partial/ButtonsVerifyContent")
                }
            </div>
        </div>
    </div>
}