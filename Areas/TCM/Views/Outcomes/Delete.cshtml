@model IDB.Presentation.MVC4.Models.Outcomes.CustomDeleteOutcomeModel
@{
    ViewBag.Title = Localization.GetText("TCM.Delete");
}

@section JavaScript
{
   <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Impacts/common.js")"></script>
}

<script>
   $(document).ready(function () {

      $(".optionSelectDeleteImpact").kendoDropDownList();

      $("#saveDeleteOutcome").click(function (e) {
         e.preventDefault();
         if (($("#intervalId").val() == 3) || ($("#AccessedByAdministrator").val() === "True" && $("#IsThirdInterval").val() == "True")) {
             hideDefaulDeleteImpactWarningContent();
         } else {
             $("#DeleteImpactForm").submit();
             removeModalContent();
         }
      });

      $("#cancelDeleteOutcome").click(function (e) {
         e.preventDefault();
         removeModalContent();
      });

      $("#saveDeleteOutcomeThirdInterval").click(function (e) {
         e.preventDefault();
         $("#DeleteImpactForm").submit();
         removeModalContent();
      });

      $("#cancelDeleteOutcomeThirdInterval").click(function (e) {
         e.preventDefault();
         removeModalContent();
      });

   });

   function hideDefaulDeleteImpactWarningContent() {

      $("#cancelDeleteOutcome").hide();
      $("#saveDeleteOutcome").hide();
      $("#defaultOutcometWarningContainer").hide();

      $("#thirdIntervalOutcomeWarningContainer").show();
      $("#cancelDeleteOutcomeThirdInterval").show();
      $("#saveDeleteOutcomeThirdInterval").show();

   }

   function removeModalContent() {
      $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
      $(".ui-widget-overlay").remove();
      $(".k-window").remove();
   }
</script>

@{
   var impactList = new List<SelectListItem>();

   foreach (var impact in Model.existingImpacts)
   {
      impactList.Add(new SelectListItem()
      {
         Value = impact.OutcomeId.ToString(),
         Text = impact.Statement,
         Selected = impact.Statement.Equals("Delete") ? true : false
      });
   }

   int flagMessage = 0;

   if (Model.currentImpact.OutcomeIndicators.Count() > 0 && Model.existingImpacts.Count() > 0)
   {
      flagMessage = 1;
   }
   else
   {
      flagMessage = 0;
   }
    
}

@using (Html.BeginForm("DeleteOutcome", "Outcomes", FormMethod.Post, new { area = "ResultsMatrixNew", id = "DeleteImpactForm", @class = "" }))
{
    
   @Html.HiddenFor(x => x.currentImpact.OutcomeId)
   @Html.HiddenFor(m => m.intervalId)
   @Html.HiddenFor(r => r.resultsMatrixId)
   @Html.HiddenFor(x => x.AccessedByAdministrator);
   @Html.HiddenFor(x => x.IsThirdInterval);
    
   <div class="contentImpacts">

      <div id="defaultOutcometWarningContainer">

         @if (flagMessage == 1)
         {
            <div class="dataContent1">
               <p class="dataTitle">@Localization.GetText("TCM.Outcome.OutcomeName")</p>
               <p class="dataText">@Model.currentImpact.Statement</p>
            </div>
         }
         <div class="dataContent1">

            @if (flagMessage == 1)
            {
               <p class="dataText">
                  @Localization.GetText("TCM.DO.DeleteOutcomeStatement.RelatedIndicatorsMessage")
               </p>
            }
            else
            {
               @Localization.GetText("TCM.DO.DeleteOutcomeStatement.UndoneActionMessage")
            }

         </div>

         @if (flagMessage == 1)
         {
            <div class="dataContent1">
               <div class="mod_tabla no_sortable">
                  <table class="grid4">
                     <thead>
                        <tr>
                           <th class="btn_azul_oscuro" data-field="Operation">@Localization.GetText("TCM.DO.DeleteOutcomeStatement.OutcomeIndicator")</th>
                           <th class="btn_azul_oscuro" data-field="LoanNumber">@Localization.GetText("TCM.Outcome")</th>
                        </tr>
                     </thead>
                     <tbody>
                        @for (var indicatorIndex = 0; indicatorIndex < Model.currentImpact.OutcomeIndicators.Count(); indicatorIndex++)
                        {
                           <tr>
                              <td>
                                 @Html.HiddenFor(x => x.currentImpact.OutcomeIndicators[indicatorIndex].OutcomeIndicatorId)
                                 @Model.currentImpact.OutcomeIndicators[indicatorIndex].Definition
                              </td>
                              <td>
                                 <fieldset>
                                    <legend class="hide">Dropdown con opciones</legend>
                                    <ul class="optionList">
                                       <li class="small">
                                          @Html.DropDownListFor(x => x.currentImpact.OutcomeIndicators[indicatorIndex].ReassignToImpact, impactList, new { @class = "optionSelect optionSelectDeleteImpact" })
                                       </li>
                                    </ul>
                                 </fieldset>
                              </td>
                           </tr>                            
                        }
                     </tbody>
                  </table>
               </div>
            </div>
         }

      </div>

      <div id="thirdIntervalOutcomeWarningContainer" style="display: none">
         @if ((Model.intervalId == 3 && ViewData["message"] != null) || (Model.IsThirdInterval && Model.AccessedByAdministrator && ViewData["message"] != null))
         {
            <div class="dataContent1">

               @ViewData["message"]

            </div>
         }
      </div>
      <div class="titlePendingChanges">
         @Localization.GetText("TCM.DO.DeleteOutcomeStatement.WarningMessage")
      </div>
   </div>
   <div class="pie pieReassign">
      <div class="botones">
         <a title="@Localization.GetText("TCM.DO.DeleteOutcomeStatement.Cancel")" class="cancel cancelDeleteComponent" id="cancelDeleteOutcome" href="javascript:void(0)">@Localization.GetText("TCM.DO.DeleteOutcomeStatement.Cancel")</a>
         <a title="@Localization.GetText("TCM.DO.DeleteOutcomeStatement.Cancel")" style="display: none" class="cancel" id="cancelDeleteOutcomeThirdInterval" href="javascript:void(0)">@Localization.GetText("TCM.DO.DeleteOutcomeStatement.Cancel")</a>
         <label for="delete">
            <input type="button" value="@Localization.GetText("TCM.DO.DeleteOutcomeStatement.Delete")" class="btn-primary deleteComponent" id="saveTCM.DO.DeleteOutcomeStatement.DeleteOutcome">
         </label>
         <label for="delete">
            <input type="button" value="@Localization.GetText("TCM.Save")" class="btn-primary" style="display:none" id="saveDeleteOutcomeThirdInterval">
         </label>
      </div>
   </div>
}
