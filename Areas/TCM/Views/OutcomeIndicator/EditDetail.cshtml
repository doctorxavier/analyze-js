@model IDB.Presentation.MVC4.Models.OutcomeIndicator.CustomEditOutcomeIndicatorModel
@{
    ViewBag.Title = Localization.GetText("TCM.Outcome.IndicatorDetailTitleEdit");
}

@section CSS {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Outputs/ResultMatrix_Outputs.css")" />
}

<script>
    var changesCount = 0;

    $(document).ready(function () {

        $("input[type='checkbox']").each(function () {
            var caption = $(this).data("caption");
            $(this).closest("label").children("span").text(caption);
        });

        $('#IsProgender').change(function () {
            if ($(this).is(":checked")) {
                $("#ProGenderWarningMsg").removeClass("hidden");
            }
            else {
                $("#ProGenderWarningMsg").addClass("hidden");
            }
        });

        $('#IsProethnicity').change(function () {
            if ($(this).is(":checked")) {
                $("#ProEthnicityWarningMsg").removeClass("hidden");
            }
            else {
                $("#ProEthnicityWarningMsg").addClass("hidden");
            }
        });

        $(".cancel").click(function (event) {
            event.preventDefault();
            window.history.back();
        });

        $("#impactIndicator_MeansOfVerification").change(function (e) {

            var newValue = "";
            var oldValue = "";

            newValue = $(this).val();
            oldValue = $(this).next().val();

            if (newValue != oldValue) {
                changesCount++;
            }

        });

        $("#save1, #save2").click(function (e) {
            e.preventDefault();
            if (($("#hdnIntervalId").val() == 3 && changesCount > 0) || ($("#AccessedByAdministrator").val() == "True" && $("#IsThirdInterval").val() == "True" && changesCount > 0)) {
                showSaveChangesWindow();
            } else {
                $("#UpadteIndicatorForm").submit();
            }
        });

    });

    $(document).mousemove(function () {
        $('#IsProgender').parent().children("span").text('@Localization.GetText("TCM.Outcome.IndicatorDetail.ProGender")');
        $('#IsProethnicity').parent().children("span").text('@Localization.GetText("TCM.Outcome.IndicatorDetail.ProEthnicity")');
    });

    function showSaveChangesWindow() { 
        var urlRoute = $("#hdnSaveChangesUrl").val();
        $(window.parent.document).find('body').append('<div class="ui-widget-overlay ui-front"></div>');
        $("body").append('<div class="ui-widget-overlay ui-front"></div>');
        $("body").append('<div class="dinamicModal"></div>');
        var title = @Localization.GetText("TCM.Warning");
        var dialog = $(".dinamicModal").kendoWindow({
            width: "800px",
            title: title,
            draggable: false,
            resizable: false,
            content: urlRoute,
            pinned: true,
            actions: [
                "Close"
            ],
            modal: true,
            visible: false,
            close: function () {
                $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                $(".ui-widget-overlay").remove();
                $(".k-window").remove();
            }
        }).data("kendoWindow");

        $(".k-window-titlebar").addClass("warning");
        $(".k-window-title").addClass("ico_warning");
        dialog.open();
    }

    function SaveChanges() {
        $("#UpadteIndicatorForm").submit();
    }

</script>

@Html.Hidden("hdnIsLinked", Model.IsLinkedToPredefinedIndicator)
@Html.Hidden("hdnIsLinkedWarning", Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsRememberMessage"))
@Html.Hidden("hdnProGenderSelectedWarning", Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsGenderMessage"))
@Html.Hidden("hdnProEthnicitySelectedWarning", Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsEthnicityMessage"))

@Html.Hidden("hdnSaveChangesUrl", Url.Action("SaveChanges", "OutcomeIndicator", new { area = "ResultsMatrix" }))
@Html.Hidden("hdnIntervalId", Model.IntervalId)

@using (Html.BeginForm("UpdateDetail", "OutcomeIndicator", FormMethod.Post, new { area = "ResultsMatrix", id = "UpadteIndicatorForm", @class = "" }))
{
    @Html.HiddenFor(indicator => indicator.impactIndicator.OutcomeIndicatorId) 
    @Html.HiddenFor(indicator => indicator.IntervalId) 
    @Html.HiddenFor(indicator => indicator.AccessedByAdministrator)
    @Html.HiddenFor(indicator => indicator.IsThirdInterval)

    <div class="mod_contenido_central impacts">

        <section>
            <h3 class="headingh2 tipo1">
                <a href="@(Url.Action("Detail", "OutcomeIndicator", new { area = "ResultsMatrix", resultsMatrixId = Model.impact.ResultsMatrixId, impactId = Model.impact.OutcomeId, impactIndicatorId = Model.impactIndicator.OutcomeIndicatorId }))" class="" title="@Localization.GetText("TCM.Outcome.IndicatorImpactsDetail")">@Localization.GetText("TCM.Outcomes")</a>
            </h3>
            <div class="editingButtonsEdit">
                <table>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label for="cancel1">
                                <a href="javascript:void(0)" class="cancel link12" title="@Localization.GetText("TCM.Cancel")">@Localization.GetText("TCM.Cancel")</a>
                            </label>
                        </td>
                        <td>
                            <label for="save1">
                                <input type="submit" class="btn-primary_2 save" value="@Localization.GetText("TCM.Save")" id="save1">
                            </label>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="desheadingh3 w65">
                <p class="description">@Model.impact.Statement</p>
            </div>
        </section>
        <section>
            <br />
            <br />
            <div class="ftl w75 marginLeft4Con7">
                <fieldset>
                    <legend>@Localization.GetText("TCM.Outcome.IndicatorDetail.Name")</legend>
                    <h5 class="headingh4">@Model.impactIndicator.Definition</h5>
                </fieldset>
                <fieldset>
                    <legend></legend>
                    <h5 class="headingh4" style="margin-bottom: 2em">@Localization.GetText("TCM.Outcome.IndicatorDetails")</h5>
                </fieldset>
                <fieldset>
                    <legend class="hide">@Localization.GetText("TCM.Outcome.IndicatorDetail.VerificationAndObservations")</legend>
                    <div class="custom">
                        <label class="editLabel input marginBottom2Con8" for="means">
                            <span class="dataTitle inputTitle">@Localization.GetText("TCM.Outcome.IndicatorDetail.MeansOfVerification")</span>
                            @Html.TextBoxFor(model => model.impactIndicator.MeansOfVerification, new { @class = "input normal" })
                        </label>
                        <label class="editLabel input marginBottom2Con8" for="observations">
                            <span class="dataTitle inputTitle">@Localization.GetText("TCM.Outcome.IndicatorDetail.Observations")</span>
                            @Html.TextBoxFor(model => model.impactIndicator.Observations, new { @class = "input normal" })
                        </label>
                    </div>
                </fieldset>
                <div class="listWrapper ftl marginLeft0">
                    <h5 class="">@Localization.GetText("TCM.Outcome.IndicatorDetail.GenderAndEthnicityFlags")</h5>
                    <br />
                    <dl>
                        <dt class="">@Localization.GetText("TCM.Outcome.IndicatorDetail.GenderEthnicallyMessage")</dt>
                        <dd class="dataText custom">
                            <br />

                            @if (Model.IsLinkedToPredefinedIndicator == true)
                            {
                                <label class="editLabel" for="check3" style="margin-left: 0; width: 20%; margin-top: 1em;">
                                    <input disabled="disabled" name="check3" type="checkbox" id="check3" class="hidden-field">
                                    @if (Model.impactIndicator.IsProgender)
                                    {
                                        <span class="custom checkbox unableMarked">@Localization.GetText("TCM.Outcome.IndicatorDetail.ProGender")</span>
                                    }
                                    else
                                    {
                                        <span class="custom checkbox disabled">@Localization.GetText("TCM.Outcome.IndicatorDetail.ProGender")</span>
                                    }
                                </label>

                                <div id="ProGenderWarningMsg_1" class="field-validation-error" style="margin-top: 1em;">
                                    @Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsGenderMessage")
                                </div>
                                <br />
                                <label class="editLabel" for="check4" style="margin-left: 0; width: 20%; margin-top: 1em;">
                                    <input disabled="disabled" name="check3" type="checkbox" id="check4" class="hidden-field">
                                    @if (Model.impactIndicator.IsProethnicity)
                                    {
                                        <span class="custom checkbox unableMarked">@Localization.GetText("TCM.Outcome.IndicatorDetail.ProEthnicity")</span>
                                    }
                                    else
                                    {
                                        <span class="custom checkbox disabled">@Localization.GetText("TCM.Outcome.IndicatorDetail.ProEthnicity")</span>
                                    }
                                </label>

                                <div id="ProEthnicityWarningMsg_1" style="margin-top: 1em;" class="field-validation-error">
                                    @Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsEthnicityMessage")
                                </div>
                            }
                            else
                            {
                                <label class="editLabel checkbox-f01" style="width: 15%;" for="IsProgender">
                                    @Html.CheckBoxFor(m => m.impactIndicator.IsProgender, new Dictionary<string, Object> { { "id", "IsProgender" }, { "name", "IsProgender" }, { "data-caption", Localization.GetText("TCM.Outcome.IndicatorDetail.ProGender") }, { "style", "display:none;" } })
                                </label>

                                <div id="ProGenderWarningMsg" class="hidden field-validation-error">
                                    @Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsGenderMessage")
                                </div>

                                <label class="editLabel checkbox-f02" style="width: 15%;" for="IsProethnicity">
                                    @Html.CheckBoxFor(m => m.impactIndicator.IsProethnicity, new Dictionary<string, Object> { { "id", "IsProethnicity" }, { "name", "IsProethnicity" }, { "data-caption", Localization.GetText("TCM.Outcome.IndicatorDetail.ProEthnicity") }, { "style", "display:none;" } })
                                </label>

                                <div id="ProEthnicityWarningMsg" style="margin-top: 2em;" class="hidden field-validation-error">
                                    @Localization.GetText("TCM.Outcome.IndicatorDetail.FlagsEthnicityMessage")
                                </div>
                            }
                        </dd>
                    </dl>
                    <p class="contextual_help help-f01">@Localization.GetText("TCM.Outcome.IndicatorDetail.NoteIfDisaggregated")</p>
                </div>
            </div>

                    <div class="editingButtonsEdit" style="margin-top: 35em">
                        <table>
                            <tr>
                                <td style="vertical-align: middle;">
                                    <label for="cancel2">
                                        <a href="" class="cancel link12" title="@Localization.GetText("TCM.Cancel")">@Localization.GetText("TCM.Cancel")</a>
                                    </label>
                                </td>
                                <td>
                                    <label for="save2">
                                        <input type="submit" class="btn-primary_2 save" value="@Localization.GetText("TCM.Save")" id="save2">
                                    </label>
                                </td>
                            </tr>
                        </table>
                    </div>
</section>

    </div>
}
