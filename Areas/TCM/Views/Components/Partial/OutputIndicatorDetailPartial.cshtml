@using IDB.Presentation.MVC4.Helpers
@model IDB.MW.Application.TCM.ViewModels.ResultsMatrix.Components.OutputIndicatorDetailViewModel
<div id="PageContent">
    <div class="header mb20">
        <div class="row">
            <div class="col-md-12">
                <div class="floatLeft" data-pagemode="read">
                    @Confluence.Navigation(Confluence.LabelMainTitle(Localization.GetText(
                        "TCM.Outputs.OutputIndicatorDetails")),
                        Url.Action("Index", "Components", new { area = "TCM" }))
                </div>
                <div class="floatLeft" data-pagemode="edit">
                    <div class="badge01a">
                        <button data-url="@Url.Action("index", "Components", new { area = "TCM" })" onclick="redirect(this)">
                            <span class="left"></span>
                        </button>
                        @Confluence.LabelMainTitle(Localization.GetText("TCM.Outputs.OutputIndicatorDetails"))
                    </div>
                </div>
                @if (Model.OutputIndicatorDetailContent.TCMWritePermission || IDBContext.Current.HasPermission(Permission.TC_RESULTS_MATRIX_ADMIN_PERMISSION))
                {
                    @Html.Partial("Partial/DetailButtons", Model.FieldAccessList)
                }
            </div>
        </div>
    </div>
    <input type="hidden" id="hidViewModel" value="@PageSerializationHelper.SerializeObject(Model.OutputIndicatorDetailContent)" />
    <div data-pagemode="edit">
        <input type="hidden" name="hdOutputId" value="@Model.OutputIndicatorDetailContent.OutputId" />
        <input type="hidden" name="hdSaveInResultMatrix" value="@Model.OutputIndicatorDetailContent.RegisterInMatrixChange.ToString()" />
        <input type="hidden" name="hdIsManualOutput" value="@Model.OutputIndicatorDetailContent.IsManualOutputIndicator.ToString()" />
        <input type="hidden" name="IsOtherFundIndicator" value="@Model.OutputIndicatorDetailContent.IsOtherFundIndicator.ToString()" />
        <input type="hidden" name="hdOtherFundIndicatorIds" value="@Html.Raw(Model.OutputIndicatorDetailContent.OtherFundIndicatorIds)" data-other-fund-indicators="@Model.OutputIndicatorDetailContent.OtherFundIndicatorIds" />
        <input type="hidden" name="hdIntervalId" value="@Model.OutputIndicatorDetailContent.Interval" />
        <input type="hidden" name="hdIsLinkedToBeoProcurement" value="@Model.OutputIndicatorDetailContent.IsLinkedToBeoProcurement.ToString()" />
    </div>
    <span id="inactive-beo-procurement-output-message" style="display:none">
        <b>@Localization.GetText("TCM.Outputs.BeoProcurement.TitleMessage")</b>
        <br /><br />
        <span id="related-beo-procurement"></span>
        <b>@Localization.GetText("TCM.Outputs.BeoProcurement.InactiveMessage")</b>
    </span>
    <div class="col-md-12">
        <div class="desheadingh3 ml55">
            <p class="description">@Model.OutputIndicatorDetailContent.ComponentName</p>
        </div>
    </div>
    <div class="col-md-12 mb25">
        <h5 class="headingh4 ml55" style="margin-bottom: 2em">@Model.OutputIndicatorDetailContent.OutputIndicatorName</h5>
    </div>
    <div class="col-md-12 mb10">
        <h4 class="headingh4 subTitlePrincipal">@Localization.GetText("TCM.Outputs.OutputIndicatorDetailsBody")</h4>
    </div>
    <div class="col-md-12">
        <div class="col-md-6 mb25 tableHead">
            <div class="desheadingh3 mt0 mb10">
                @Confluence.Label(Localization.GetText("TCM.Outputs.MeansOfVerification"))
            </div>
            <div class="bold col-md-10 ml25">
                <span data-pagemode="read">
                    @Confluence.LabelBold(Model.OutputIndicatorDetailContent.MeansOfVerification)
                </span>
                <span data-pagemode="edit">
                    @if (SecurityHelper.IsVisible(Model.FieldAccessList, "txtMeansOfVerification"))
                    {
                        @Confluence.InputText(Model.OutputIndicatorDetailContent.MeansOfVerification, "meansOfVerification", 200, required: false, dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtMeansOfVerification" } }, width: "100%")
                    }

                    <input type="hidden" value="@Model.OutputIndicatorDetailContent.MeansOfVerification" name="original-meansOfVerification" />
                </span>
            </div>
        </div>
        <div class="col-md-2 mb25">
            <div class="mb10">@Confluence.Label(Localization.GetText("TCM.Outputs.Baseline"))</div>
            <div class="bold">
                <span data-pagemode="read">
                    @Confluence.LabelDecimal(Model.OutputIndicatorDetailContent.BaseLine)
                </span>
                <span data-pagemode="edit">
                    @if (SecurityHelper.IsVisible(Model.FieldAccessList, "txtBaseline"))
                    {
                        @Confluence.InputDecimal(Model.OutputIndicatorDetailContent.BaseLine, "baseline", minValue: "0.00", required: false, width: "150px", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "txtBaseline" } })
                    }
                    <input type="hidden" value="@Model.OutputIndicatorDetailContent.BaseLine" name="original-baseline" />
                </span>
            </div>
        </div>
        <div class="col-md-3 mb25">
            <div class="mb10">@Confluence.Label(Localization.GetText("TCM.Outputs.BaselineYear"))</div>
            <div class="bold">
                <span data-pagemode="read">
                    @Model.OutputIndicatorDetailContent.BaseLineYear.ToString()
                </span>
                <span data-pagemode="edit">
                    @if (SecurityHelper.IsVisible(Model.FieldAccessList, "ddlBaselineYear"))
                    {
                        @Confluence.InputDropDown(Model.OutputIndicatorDetailContent.BaseLineYear.ToString(), "baselineYear", Model.BaseLineYearList, required: false, dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "ddlBaselineYear" } })
                    }

                    <input type="hidden" value="@Model.OutputIndicatorDetailContent.BaseLineYear" name="original-baselineYear" />
                </span>
            </div>
        </div>
    </div>
    <div class="col-md-12 mb20 ml55">
        <span data-pagemode="read">
            @Confluence.InputCheckbox(Model.OutputIndicatorDetailContent.IsAutoCalcEop, "isAutoCalcEop", label: Localization.GetText("TCM.Outputs.AddAnnualValues"), disabled: true)
        </span>
        <span data-pagemode="edit">
            @Confluence.InputCheckbox(Model.OutputIndicatorDetailContent.IsAutoCalcEop, "isAutoCalcEop", htmlClass: (bool)Model.OutputIndicatorDetailContent.IsAutoCalcEop ? "checked" : string.Empty, label: Localization.GetText("TCM.Outputs.AddAnnualValues"), dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "chkedAutoCalcEOP" } })
            <input type="hidden" value="@Model.OutputIndicatorDetailContent.IsAutoCalcEop.ToString().ToLower()" name="original-isAutoCalcEop" />
        </span>
    </div>
    <div class="col-md-12 mb40 ml55">
        <span data-pagemode="read">
            @Confluence.InputCheckbox(Model.OutputIndicatorDetailContent.InactivateOutputIndicator, "inactivateOutputsDetails", label: Localization.GetText("TCM.Outputs.InactivateOutputDetails"), disabled: true)
        </span>
        <span data-pagemode="edit">
            @Confluence.InputCheckbox(Model.OutputIndicatorDetailContent.InactivateOutputIndicator, "inactivateOutputsDetails", htmlClass: (bool)Model.OutputIndicatorDetailContent.InactivateOutputIndicator ? "checked" : string.Empty, label: Localization.GetText("TCM.Outputs.InactivateOutputDetails"), dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "chkedInactivateOutputsDetails" } })
            <input type="hidden" value="@Model.OutputIndicatorDetailContent.InactivateOutputIndicator.ToString().ToLower()" name="original-inactivateOutputsDetails" />
        </span>
    </div>
    <div class="col-md-12 mb40 ml55">
        <span>@Confluence.InformationSection(@Localization.GetText("TCM.Outputs.Note"), htmlClass: "cursiveInformation")</span>
    </div>

    <div class="col-md-12 ml55 mt20">
        <h4 class="subTitlePrincipal m10">@Localization.GetText("TCM.Outputs.RelatedFundDetails")</h4>
    </div>
    <div class="col-md-12 mb30 ml55">
        @if (Model.OutputIndicatorDetailContent.IsManualOutputIndicator)
            {
            @Confluence.Label(Localization.GetText("TCM.Outputs.SelectManualThemeAndAssociatedFundIndicator"))
        }
        else
        {
            @Confluence.Label(Localization.GetText("TCM.Outputs.SelectThemeAndAssociatedFundIndicator"))
        }
    </div>
    <div class="col-md-12 mb20 ml55">
        <div class="mb10">@Confluence.Label(Localization.GetText("TCM.Outputs.Theme"))</div>
        <span data-pagemode="read">
            @Confluence.LabelBold(Model.OutputIndicatorDetailContent.ThemeDescription)
        </span>
        <span data-pagemode="edit">
            @Confluence.InputDropDown(Model.OutputIndicatorDetailContent.ThemeId.ToString(), "theme", Model.ThemeList, required: false)
        </span>
    </div>
    @if (Model.OutputIndicatorDetailContent.HasMoreThanOneFundInOperation)
    {
        <div class="col-md-12 mb20 ml55">
            <div class="mb10">
                @Confluence.Label(Localization.GetText("Global.Fund.Text"))
            </div>
            <span data-pagemode="read">
                @Confluence.LabelBold(Model.OutputIndicatorDetailContent.FundCode)
            </span>
            <div data-pagemode="edit">
                <div class="w200 pl0">
                    @Confluence.InputDropDown(
                        Model.OutputIndicatorDetailContent.FundIndicatorId.ToString(), 
                        "fundIndicator", 
                        Model.FundIndicatorList, 
                        required: false, 
                        showEmptyOption: false)
                </div>
            </div>
        </div>
    }
    @if (!Model.OutputIndicatorDetailContent.IsManualOutputIndicator)
    {
        <div class="col-md-12 mb20 ml55">
            <div class="mb10">
                @Confluence.Label(Localization.GetText("TCM.Global.OutputDescription"))
            </div>
            <div class="mb10">
                <span data-pagemode="read">
                    @Confluence.LabelBold(Model.OutputIndicatorDetailContent.OutputDescription)
                </span>
                <span data-pagemode="edit">
                    @Confluence.InputText(
                    value: Model.OutputIndicatorDetailContent.OutputDescription,
                    name: "txt-output-description-edit",
                    maxLength: 300,
                    dataType: null,
                    required: true)
                    </span>
            </div>
        </div>
    }
    <div class="footer">
        <div class="row">
            <div class="col-md-12">
                @if (Model.OutputIndicatorDetailContent.TCMWritePermission || IDBContext.Current.HasPermission(Permission.TC_RESULTS_MATRIX_ADMIN_PERMISSION))
                {
                    @Html.Partial("Partial/DetailButtons", Model.FieldAccessList)
                }
            </div>
        </div>
    </div>
</div>