@model System.Collections.Generic.List<IDB.MW.Domain.Models.Architecture.ResultMatrix.Impacts.ImpactModel>
@{
    ViewBag.Title = "Clausetemplate";
}

<script>
    $(document).ready(function () {

        $("#btnSaveReassignIndicator").click(function (e) {
            e.preventDefault();
            if ($("#hdnIntervalId").val() == 3 || ($("#accessedByAdmin").val() == "True" && $("#isThirInterval").val() == "True")) {

                hideDefaulDeleteIndicatorWarningContent();
            } else {
                if ($("#slctImmpacts option:selected").val() != null) {
                    var route = $("#indicatorReassignForm").attr("action") + "?resultsMatrixId=" + $("#hdnResultsMatrixId").val() + "&impactId=" + $("#slctImmpacts option:selected").val() + "&impactIndicatorId=" + $("#hdnImpactIndicatorId").val() + "&intervalId=" + $("#hdnIntervalId").val() + "&accessedByAdmin=" + $("#accessedByAdmin").val() + "&isThirInterval=" + $("#isThirInterval").val();
                    location.href = route;
                }
                removeModalContent();
            }
        });

        $("#btnSaveReassignIndicatorThirdInterval").click(function (e) {
            e.preventDefault();
            if ($("#slctImmpacts option:selected").val() != null) {
                var route = $("#indicatorReassignForm").attr("action") + "?resultsMatrixId=" + $("#hdnResultsMatrixId").val() + "&impactId=" + $("#slctImmpacts option:selected").val() + "&impactIndicatorId=" + $("#hdnImpactIndicatorId").val() + "&intervalId=" + $("#hdnIntervalId").val() + "&accessedByAdmin=" + $("#accessedByAdmin").val() + "&isThirInterval=" + $("#isThirInterval").val();
                location.href = route;
            }
            removeModalContent();
        });
       


        $("#lnkCancelReassignIndicator").click(function (e) {
            e.preventDefault();
            removeModalContent();
        });

        $("#lnkCancelReassignIndicatorThirdInterval").click(function (e) {
            e.preventDefault();
            removeModalContent();
        });




    });

    function hideDefaulDeleteIndicatorWarningContent() {

        // Hide default controls
        $("#lnkCancelReassignIndicator").hide();
        $("#btnSaveReassignIndicator").hide();
        $("#defaultReassignIndicatorContainer").hide();

        // Show third interval comtrols
        $("#thirdIntervalReassignIndicatorContainer").show();
        $("#lnkCancelReassignIndicatorThirdInterval").show();
        $("#btnSaveReassignIndicatorThirdInterval").show();

    }

    function removeModalContent() {
        $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
        $(".ui-widget-overlay").remove();
        $(".k-window").remove();
    }

</script>

@Html.Hidden("hdnReassignIndicatorUrl", Url.Action("ReassignIndicator", "ImpactIndicator", new { area = "ResultsMatrix" }))
@Html.Hidden("hdnImpactIndicatorId", ViewData["impactIndicatorId"])
@Html.Hidden("hdnResultsMatrixId", ViewData["resultsMatrixId"])

@using (Html.BeginForm("ReassignIndicator", "ImpactIndicator", FormMethod.Post, new { id = "indicatorReassignForm" }))
{
    @Html.Hidden("accessedByAdmin", ViewData["accessedByAdmin"]);
    @Html.Hidden("isThirInterval",  ViewData["isThirInterval"]);
    
    <div class="contentImpacts">

        <div id="defaultReassignIndicatorContainer">
            <div class="dataContent1">
                <fieldset>
                <legend class="dataTitle">@Localization.GetText("Impact statement")</legend>
                <p class="dataText"> @ViewData["Statement"]</p>
                    </fieldset>
            </div>                   
            <div class="dataContent1">
                <fieldset>
                <legend class="dataTitle">@Localization.GetText("Indicator name")</legend>
                <p class="dataText">@ViewData["Definition"]</p>
            </fieldset>
            </div>                         
            <div class="dataContent1">
                @if (Model.Count() > 0)
                {
                    <p class="dataTitle">@Localization.GetText("Reassign indicator to impact")</p>
                
                    <ul class="optionList">
                        <li class="small">
                            @{ int count = 0; }
                            <select class="optionSelect" id="slctImmpacts" name="Departament" data-role="dropdownlist" style="width: 100%">
                        
                            @foreach (var impact in Model)
                            {
                                if (count == 0)
                                {
                                    <option value="@impact.ImpactId" selected="selected">@impact.Statement</option>
                                }
                                else
                                {
                                    <option value="@impact.ImpactId">@impact.Statement</option>
                                }
                                count++;
                            }

                            </select>
                        </li>
                    </ul>
                }else{
                    <p class="dataText">@Localization.GetText("There is not another impact to reassign the indicator")</p>
                }
            </div>  
        </div>
        
        <div id="thirdIntervalReassignIndicatorContainer" style="display:none">
            @Localization.GetText("TCM.RCMW.RegisterChangesMany.TextMessage")
        </div>
                                     
    </div>

    <div class="pie pieReassign">
        <div class="botones">
            <a title="@Localization.GetText("Cancel")" id="lnkCancelReassignIndicator" class="cancel" href="javascript:void(0)">@Localization.GetText("Cancel")</a>
            @if (Model.Count() > 0)
            {
                <label for="save2">
                    <input id="btnSaveReassignIndicator" type="button" value="Save" class="btn-primary">
                </label>
            }
            <a title="@Localization.GetText("Cancel")" id="lnkCancelReassignIndicatorThirdInterval" style="display:none" class="cancel" href="javascript:void(0)">@Localization.GetText("Cancel")</a>
           
            <label for="save2">
                <input id="btnSaveReassignIndicatorThirdInterval" style="display:none" type="button" value="Save" class="btn-primary">
            </label>
        </div>
    </div>
}