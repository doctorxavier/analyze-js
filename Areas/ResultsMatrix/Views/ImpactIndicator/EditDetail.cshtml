@using IDB.MW.Application.OPUSModule.Enums
@using IDB.Presentation.MVC4.Models.Modal

@model IDB.Presentation.MVC4.Models.ImpactIndicator.CustomEditImpactIndicatoModel

@{
    ViewBag.Title = "Edit Detail";
}

@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Common/commonIndicator.js")"></script>
    @Scripts.Render("~/bundles/OnlyNewConfluence")
}

@Styles.Render("~/Content/Confluence")
@Styles.Render("~/Content/ModalConfluenceCss")
@Scripts.Render("~/bundles/ModalConfluenceScripts")

@Confluence.ModalWarning(
    Html.Partial("~/Areas/OPUS/Views/View/Partials/OperationData/StrategicAlignmentResultsMatrixPartial.cshtml"),
    buttons: new List<ModalButtonsViewModel> { new ModalButtonsViewModel { Name = "save", Text = Localization.GetText("Save"), Type = "buttonBlue" } },
    id: "checkRmIndicatorRelationsModal")

@Html.Hidden("hdnIsLinked", Model.IsLinkedToPredefinedIndicator)
@Html.Hidden("hdnIsLinkedWarning", Localization.GetText("Please remember that gender and ethnicity flags cannot be checked if the Indicator is linked to a Pre-defined Indicator"))
@Html.Hidden("hdnProGenderSelectedWarning", Localization.GetText("This flag should only be selected if what is being measured promotes gender equality or redresses gender inequalities by targeting women beneficiaries."))
@Html.Hidden("hdnProEthnicitySelectedWarning", Localization.GetText("This flag should only be selected if what is being measured promotes inclusive development for Indigenous, Afro-descendant and other ethnic groups"))
@Html.Hidden("hdnSaveChangesUrl", Url.Action("SaveChanges", "ImpactIndicator", new { area = "ResultsMatrix" }))
@Html.Hidden("hdnIntervalId", Model.IntervalId)
@Html.Hidden("hdnBeforeDeleteUrl", @Url.Action("CheckIndicatorSAClassificationDelete", "View", new { area = "OPUS" }))

@Confluence.InputHidden(
    Localization.GetText("PI.Message.ProceedQuestion.ChangesMatrix.Explanation"),
    id: "changesMatrixMessage")

@using (Html.BeginForm("UpdateDetail", "ImpactIndicator", FormMethod.Post, new { area = "ResultsMatrix", id = "UpadteIndicatorForm", @class = "" }))
{
    @Html.HiddenFor(indicator => indicator.impactIndicator.ImpactIndicatorId)
    @Html.HiddenFor(indicator => indicator.IntervalId)
    @Html.HiddenFor(indicator => indicator.AccessedByAdministrator)
    @Html.HiddenFor(indicator => indicator.IsThirdInterval)

    <div>
        <div class="row mb16">
            <div class="col-md-12">
                <div class="floatLeft">
                    <a href="@(Url.Action("Detail", "ImpactIndicator", new { area = "ResultsMatrix", resultsMatrixId = Model.impact.ResultsMatrixId, impactId = Model.impact.ImpactId, impactIndicatorId = Model.impactIndicator.ImpactIndicatorId }))">
                        @Confluence.LabelMainTitle(Localization.GetText("Impacts"))
                    </a>
                </div>
                <div class="float-right">
                    @Confluence.ButtonLink(Localization.GetText("IM.Cancel"), name: "cancelIndicator")
                    @Confluence.ButtonOrange(
                        text: Localization.GetText("IM.Save"),
                        name: "saveIndicator",
                        dataAttributes: new Dictionary<string, string>
                        {
                            { "sa-checkindicators-istcmmodule", "false" },
                            { "sa-checkindicators-usedforsa", Model.impactIndicator.UsedForStrategicAlignment.ToString() },
                            { "sa-checkindicators-placeholder", Localization.GetText("TCM.SelectOptionParenthesis") },
                            { "sa-checkindicators-url", Url.Action(
                                "CheckRmIndicatorRelationsToSAClassifications",
                                "View",
                                new
                                {
                                    area = "OPUS",
                                    operationNumber = Model.OperationNumber,
                                    elementType = ResultsMatrixElementTypesEnum.ImpactIndicator,
                                    rmElementId = Model.impactIndicator.ImpactIndicatorId
                                })
                            }
                        })
                </div>
            </div>
            <div class="col-md-12 mb50">
                <p class="description">@Model.impact.Statement</p>
            </div>
        </div>

        <div class="row row-header font-header">
            <div class="col-md-4">
                @Localization.GetText("Name")
            </div>
        </div>

        <div class="row row-body-40 font-body">
            <div class="col-md-8">
                @Model.impactIndicator.Definition
            </div>
        </div>

        <div class="row row-header font-header">
            <div class="col-md-12">
                <h3 class="ml0">@Localization.GetText("Indicator Details")</h3>
            </div>
        </div>

        <div class="row row-header font-header">
            <div class="col-md-4">
                @Localization.GetText("Means of verification")
            </div>
            <div class="col-md-4">
                @Localization.GetText("Observations")
            </div>
        </div>

        <div class="row row-body-50 font-body">
            <div class="col-md-4">
                @Confluence.InputText(
                    Model.impactIndicator.MeansOfVerification,
                    "impactIndicator.MeansOfVerification",
                    id: "MeansOfVerification",
                    width: "400px",
                    required: false,
                    disabled: Model.impactIndicator.IsDeactivated)
                @Confluence.InputHidden(Model.impactIndicator.MeansOfVerification)
            </div>
            <div class="col-md-4">
                @Confluence.InputText(
                    Model.impactIndicator.Observations,
                    "impactIndicator.Observations",
                    width: "400px",
                    required: false,
                    disabled: Model.impactIndicator.IsDeactivated)
            </div>
        </div>

        <div class="row row-header font-header">
            <div class="col-md-12">
                @Confluence.InputCheckbox(
                    Model.impactIndicator.IsAutoCalEop,
                    "impactIndicator.IsAutoCalEop",
                    label: @Localization.GetText("Add annual values to calculate EOP Targets (Original Planned, Annual Plan and Actual)"),
                    value: true,
                    disabled: Model.impactIndicator.IsDeactivated)
            </div>
        </div>

        <div class="row row-header font-header mb30">
            <div class="col-md-12">
                <h3 class="ml0">@Localization.GetText("Gender and ethnicity flags")</h3>
                <spam class="">@Localization.GetText("RM.IsProGenOrEth")</spam>
            </div>
        </div>

        <div class="row row-body-50 font-body">
            <div class="col-md-12 inlineFlex mb1em">
                <div class="col-md-2">
                    @Confluence.InputCheckbox(
                    Model.impactIndicator.IsProgender,
                    "impactIndicator.IsProgender",
                    id: "IsProgender",
                    label: @Localization.GetText("Pro-Gender"),
                    disabled: (Model.IsLinkedToPredefinedIndicator || Model.impactIndicator.IsDeactivated),
                    value: true)
                </div>
                <div id="ProGenderWarningMsg"
                     class="@(Model.IsLinkedToPredefinedIndicator ? "" : "hidden") red col-md-7">
                    @Localization.GetText("RM.MarkGen")
                </div>
            </div>
            <div class="col-md-12 inlineFlex mb1em">
                <div class="col-md-2">
                    @Confluence.InputCheckbox(
                    Model.impactIndicator.IsProethnicity,
                    "impactIndicator.IsProethnicity",
                    id: "IsProethnicity",
                    label: @Localization.GetText("Pro-Ethnicity"),
                    disabled: (Model.IsLinkedToPredefinedIndicator || Model.impactIndicator.IsDeactivated),
                    value: true)
                </div>
                <div id="ProEthnicityWarningMsg"
                     class="@(Model.IsLinkedToPredefinedIndicator ? "" : "hidden") red col-md-7">
                    @Localization.GetText("RM.MarkEth")
                </div>
            </div>
        </div>

        <div class="row row-header font-header">
            <div class="col-md-12">
                @Display.IconInformation()
                <span class="information">
                    @Localization.GetText("Note: If this Indicator must be disaggregated please enter the disaggregation on the main screen. Use the 'Show disaggregation' option to display Indicators’ disaggregation.")
                </span>
            </div>
        </div>

        <div class="row row-header font-header mb30">
            <div class="col-md-12">
                <h3 class="ml0">@Localization.GetText("Other options")</h3>
                <spam class="hide">@Localization.GetText("OD.SelectOtherOp")</spam>
            </div>
        </div>

        <div class="row row-body-50 font-body">
            <div class="col-md-12 inlineFlex">
                <div class="col-md-4">
                    @Confluence.InputCheckbox(
                    Model.impactIndicator.IsDeactivated,
                    "impactIndicator.IsDeactivated",
                    id: "IsDeactivated",
                    label: Localization.GetText("Inactivate Impact Indicator"),
                    value: true)
                </div>
            </div>
        </div>

        <div class="row mb16">
            <div class="col-md-12">
                <div class="float-right">
                    @Confluence.ButtonLink(Localization.GetText("IM.Cancel"), name: "cancelIndicator")
                    @Confluence.ButtonOrange(
                        text: Localization.GetText("IM.Save"),
                        name: "saveIndicator",
                        dataAttributes: new Dictionary<string, string>
                        {
                            { "sa-checkindicators-istcmmodule", "false" },
                            { "sa-checkindicators-usedforsa", Model.impactIndicator.UsedForStrategicAlignment.ToString() },
                            { "sa-checkindicators-placeholder", Localization.GetText("TCM.SelectOptionParenthesis") },
                            { "sa-checkindicators-url", Url.Action(
                                "CheckRmIndicatorRelationsToSAClassifications",
                                "View",
                                new
                                {
                                    area = "OPUS",
                                    operationNumber = Model.OperationNumber,
                                    elementType = ResultsMatrixElementTypesEnum.ImpactIndicator,
                                    rmElementId = Model.impactIndicator.ImpactIndicatorId
                                })
                            }
                        })
                </div>
            </div>
        </div>
    </div>
}