
@model IDB.MW.Domain.Models.ResultMatrix.PredefinedIndicator.UnlinkPredefinedIndicatorModel
@{
    ViewBag.Title = "Unlink Predefined Indicator";
}



<script>
    $(document).ready(function () {
        
        // Set back url
        $("#RequesModuleUrl").attr("value", $("#hdnPredefinedIndicatorBackUrl").val());

        $("#btnUnlinkIndicator").click(function (e) {
            e.preventDefault();
            if ($("#hdnIntervalId").val() == 3 || ($("#AccessedByAdministrator").val() == "True" && $("#IsThirdInterval").val() == "True")) {
                hideDefaulDeleteIndicatorWarningContent();
            } else {
                $("#unLinkPredefinedIndicatorForm").submit();
                removeModalContent();
            }
        });


        $("#lnkCancelUnlinkIndicator").click(function (e) {
            e.preventDefault();
            removeModalContent();
        });

        $("#btnUnlinkIndicatorThirdInterval").click(function (e) {
            e.preventDefault();
            $("#unLinkPredefinedIndicatorForm").submit();

            removeModalContent();
        });

        $("#lnkCancelUnlinkIndicatorThirdInterval").click(function (e) {
            e.preventDefault();
            removeModalContent();
        });



    });

    function hideDefaulDeleteIndicatorWarningContent() {

        // Hide default controls
        $("#lnkCancelUnlinkIndicator").hide();
        $("#btnUnlinkIndicator").hide();
        $("#defaultUnlinkWarningContainer").hide();

        // Show third interval comtrols
        $("#thirdIntervalUnlinkWarningContainer").show();
        $("#lnkCancelUnlinkIndicatorThirdInterval").show();
        $("#btnUnlinkIndicatorThirdInterval").show();

    }

    function removeModalContent() {
        $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
        $(".ui-widget-overlay").remove();
        $(".k-window").remove();
    }


</script>

@using (Html.BeginForm("Unlink", "PredefinedIndicator", FormMethod.Post, new { id = "unLinkPredefinedIndicatorForm" }))
{ 
    <div class="contentImpacts">

        @Html.HiddenFor(upi => upi.ResultsMatrixId)
        @Html.HiddenFor(upi => upi.IndicatorId)
        @Html.HiddenFor(upi => upi.IndicatorType)

        @Html.HiddenFor(upi => upi.AccessedByAdministrator)
        @Html.HiddenFor(upi => upi.IsThirdInterval)
        @Html.HiddenFor(upi => upi.IntervalId)
        @Html.HiddenFor(upi => upi.RequesModuleUrl)

        <div id="defaultUnlinkWarningContainer">
            @ViewData["defaultUnlinkPredefinedIndicatorMessage"]
        </div>
        <div id="thirdIntervalUnlinkWarningContainer" style="display: none">
            @if (ViewData["thirdIntervalunLinkPredefinedIndicatorMessage"] != null)
            {
                @ViewData["thirdIntervalunLinkPredefinedIndicatorMessage"]
            }
        </div>
        <div class="titlePendingChanges">
            @Localization.GetText("Warning: If you updated other information, please save it before continuing with this action.")
        </div>
    </div>
    <div class="pie pieReassign">
        <div class="botones">

            <a title="@Localization.GetText("Cancel")" class="cancel" id="lnkCancelUnlinkIndicator" href="javascript:void(0)">@Localization.GetText("Cancel")</a>
            <a title="@Localization.GetText("Cancel")" class="cancel" id="lnkCancelUnlinkIndicatorThirdInterval" style="display: none" href="javascript:void(0)">@Localization.GetText("Cancel")</a>
            <label for="delete">
                <input type="button" value="@Localization.GetText("Unlink")" class="btn-primary" id="btnUnlinkIndicator">
            </label>
            <label for="delete">
                <input type="button" value="@Localization.GetText("Unlink")" class="btn-primary" style="display:none" id="btnUnlinkIndicatorThirdInterval">
            </label>

        </div>
    </div>
    
    
    
}
