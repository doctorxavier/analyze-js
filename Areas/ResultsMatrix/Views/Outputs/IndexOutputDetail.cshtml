@model IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.OutputModel


@section JavaScript {
   <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Outputs/main.js")"></script>
   <script type="text/javascript" src="@Url.Content("~/Scripts/Messages/jquery_notification.js")"></script>
}

@section CSS {
   <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Outputs/ResultMatrix_Outputs.css")" />
}

@* If exits any message of server *@
@if (ViewData["Message"] != null)
{
   @Html.ShowNotificationMessage((MessageConfiguration)ViewData["Message"]);
}

<h2 class="hide">Seccion central de Contenido</h2>
<div class="mod_contenido_central impacts">
   <h3 class="headingh2 tipo1"><a href="@(Url.Action("IndexPhysicalProgress", "Outputs", new { area = "ResultsMatrix", OperationNumber = Model.OperationOperationNumber }))" title="Output Detail">@Localization.GetText("Output")</a></h3>
   <div class="editingButtonsEdit">

      @if (Model.isEditable && Html.HasPermission("Results Matrix Write"))
      {

         <a data-route="@(Url.Action("EditOutputDetail", "Outputs", new { area = "ResultsMatrix", outputID = Model.OutputId }))" href="javascript:void(0)" class="btn-primary editOutput" title="@Localization.GetText("Edit")">@Localization.GetText("Edit")</a>
      }

   </div>
   <div class="desheadingh3 ">
      <p class="description">@Model.ComponentStatement</p>
   </div>

   <div class="marginLeft4Con7-f02">
      <!-- content flt w75-->
      <h4 class="ftl w75 headingh4 title">@Model.Definition</h4>
      <!-- End content flt w16-->

   </div>
   <div class="ftl marginLeft4Con7-f02 w75">
      <h5 class="headingh4">@Localization.GetText("Output details")</h5>
      <div class="operationData">
         <div style="width: 100%">
            <dl class="ftl w45">
               <dt class="dataTitle">@Localization.GetText("Means of verification")</dt>
               <dd class="dataText">@Model.MeansOfVerification</dd>
            </dl>
            <div class="data4">
               <p class="dataTitle">@Localization.GetText("Baseline")</p>
               <p>@Html.DisplayFor(x => x.Baseline)</p>
            </div>
            <div class="data4">
               <p class="dataTitle">@Localization.GetText("Baseline Year")</p>
               <p>@Model.BaselineYear</p>
            </div>
            <div class="data4">
               <p class="dataTitle">@Localization.GetText("Category")</p>
               <p>
                  @if (Model.OutputCategory != null)
                  {
                     @Html.Raw(Model.OutputCategory.NameEn);
                  }

               </p>
            </div>
         </div>
      </div>
      <div class="listWrapper ftl marginLeft0">
         <dl>
            <dt class="hide">Select Output details</dt>
            <dd class="dataText custom">
               <label class="editLabel w70 checkbox-f01" for="check1">
                  <input name="check1" type="checkbox" id="check1" disabled="disabled">
                  @if (Model.IsAutoCalcPhysycalEop)
                  {
                     <span class="custom checkbox unableMarked" style="width: 500px;">@Localization.GetText("Add annual values to calculate EOP Targets (Original Planned, Annual Plan and Actual)")</span>
                  }
                  else
                  {
                     <span class="custom checkbox disabled" style="width: 500px;">@Localization.GetText("Add annual values to calculate EOP Targets (Original Planned, Annual Plan and Actual)")</span>
                  }
               </label>
               <label class="editLabel w70 checkbox-f02" for="check2">
                  <input name="check2" type="checkbox" id="check2" disabled="disabled">
                  @if (Model.MileStoneBasedPmi)
                  {
                     <span class="custom checkbox unableMarked" style="width: 500px;">@Localization.GetText("Progress must be measured using milestones for this output")</span>
                  }
                  else
                  {
                     <span class="custom checkbox disabled textDeactivated" style="width: 500px;">@Localization.GetText("Progress must be measured using milestones for this output")</span>
                  }
               </label>
            </dd>
         </dl>
      </div>
      <div class="listWrapper ftl marginLeft0">
         <h5 class="headingh4">@Localization.GetText("Gender and ethnicity flags")</h5>
         <dl>
            <dt>@Localization.GetText("RM.IsProGenOrEth")</dt>
            <dd class="dataText custom">
               <label class="editLabel" for="check3">
                  <input name="check3" type="checkbox" id="check3" disabled="disabled">
                  @if (Model.IsProgender)
                  { 
                     <span class="custom checkbox unableMarked">@Localization.GetText("Pro-Gender")</span>
                  }
                  else
                  {
                     <span class="custom checkbox disabled">@Localization.GetText("Pro-Gender")</span>
                  }
               </label>
               <label class="editLabel" for="check4">
                  <input name="check4" type="checkbox" id="check4" disabled="disabled">
                  @if (Model.IsProethnicity)
                  {
                     <span class="custom checkbox unableMarked">@Localization.GetText("Pro-Ethnicity")</span>
                  }
                  else
                  {
                     <span class="custom checkbox disabled">@Localization.GetText("Pro-Ethnicity")</span>
                  }
               </label>
            </dd>
         </dl>
         <p class="contextual_help help-f01">@Localization.GetText("Note: If this Output must be disaggregated please enter the disagregation on the main screen. Use the 'Show disaggregation' option to display Outputs' disaggregation")</p>
      </div>
      <div class="listWrapper ftl marginLeft0">
         <h5 class="headingh4">@Localization.GetText("Other options")</h5>
         <dl>
            <dt class="hide">@Localization.GetText("Select Other options")</dt>
            <dd class="dataText custom">
               <label class="editLabel w70 checkbox-f01" for="check5">
                  <input name="check5" type="checkbox" id="check5" disabled="disabled">
                  @if (Model.IsDeactivated)
                  {
                     <span class="custom checkbox unableMarked">@Localization.GetText("Inactive Output")</span>
                  }
                  else
                  {
                     <span class="custom checkbox disabled">@Localization.GetText("Inactive Output")</span>
                  }
               </label>
            </dd>
         </dl>
         <p class="contextual_help help-f01">@Localization.GetText("Note: Notice that P(a) for future years will be set to 0 if selected, and that the Inactivated Outputs will be still used to calculate the Progress Monitoring Indicators")</p>
      </div>
   </div>
   <!-- End content flt w75-->
</div>
