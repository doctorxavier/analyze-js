@model IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.MilestoneModel

@{
   int initYear = Model.OnPipelineDate.Year;
   var baseLineYearList = new List<SelectListItem>();
   baseLineYearList.Add(new SelectListItem()
   {
      Value = string.Empty,
      Text = string.Empty,
      Selected = true

   });
   for (int i = initYear - 10; i <= initYear + 30; i++)
   {
      baseLineYearList.Add(new SelectListItem()
      {
         Value = i.ToString(),
         Text = i.ToString(),
         Selected = false

      });
   } 

}

@section JavaScript {
   <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Outputs/EditMilestone.js")"></script>
}

@section CSS {
   <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Outputs/ResultMatrix_Outputs.css")" />
}
@Html.Hidden("WarningMessageURL", Url.Action("IndexChangeMatrixWarningMessage", "Outputs", new { area = "ResultsMatrix", formName = "milestonesTarget" }))

@Html.Hidden("IsEditMilestone", true)
@Html.Hidden("MilestoneMeansVerification")
@Html.Hidden("MilestoneBaseline")
@Html.Hidden("MilestoneBaselineYear")
@************ Hidden fields for interval *************@
@Html.Hidden("hdnIntervalId", Model.Interval.IntervalId)
@Html.Hidden("hdnCycleId", Model.Interval.CycleId)


@using (Html.BeginForm("UpdateMilestoneDetails", "Outputs", FormMethod.Post, new { area = "ResultMatrix", id = "milestonesTarget" }))
{
   @Html.HiddenFor(x => x.MilestoneId, new { data_val = false })
   <div class="mod_contenido_central impacts">
      <section>
         <!-- Section Header-->
         <h3 class="headingh2 tipo1"><a href="@(Url.Action("IndexPhysicalProgress", "Outputs", new { area = "ResultsMatrix", OperationNumber = Model.OperationNumber, showMilestones = true }))" title="Impacts Detail">@Localization.GetText("Outputs")</a></h3>
         <div class="editingButtons" style="display: block;">
            <a class="cancel" href="@(Url.Action("IndexMilestoneDetails", "Outputs", new { area = "ResultsMatrix", milestoneId = Model.MilestoneId }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
            <label for="guardar2">
               <input type="button" class="btn-primary_2 save" value=" @Localization.GetText("Save")" id="guardar1">
            </label>
         </div>

         <div class="desheadingh3 ">
            <p class="description">
               @Model.OutputDefinition
            </p>
         </div>
      </section>
      <!-- End Section Header -->
      <section>
         <!-- Section Main Content-->
         <h4 class="headingh3">@Localization.GetText("Milestone")</h4>
         <div class="ftl w75 marginLeft4Con7">
            <!-- content flt w75-->
            <h5 class="headingh4">@Model.Definition</h5>
            <div class="listWrapper">
               <dl class="ftl w50">
                  <dt class="dataTitle">@Localization.GetText("Baseline")</dt>
                  <dd class="dataText">@Html.TextBoxFor(x => x.Baseline, new { id = "Baseline", @class = "inputTextOutput numberInput" })</dd>
               </dl>
               <dl class="ftl w45">
                  <dt class="dataTitle">@Localization.GetText("Baseline year")</dt>
                  <dt class="dataTitle">
                     <ul class="optionList">
                        <li class="small">
                           @Html.DropDownListFor(x => x.BaselineYear, baseLineYearList, new { name = "BaselineYear", @class = "optionSelect" })
                        </li>
                     </ul>

                  </dt>
               </dl>
            </div>
            <div class="listWrapper">
               <dl class="ftl w50">
                  <dt class="dataTitle">@Localization.GetText("Means of verification")</dt>
                  <dd class="dataText">@Html.TextBoxFor(x => x.MeansOfVerification, new { id = "MeansOfVerification", @class = "inputTextOutput inputTextOutputVerification" })</dd>
               </dl>
            </div>
            <!--fin listWrapper-->
            <div class="listWrapper ftl w50" style="width: 90%!important;">
               <dl>
                  <dd class="dataText custom">
                     <label class="editLabel w70 checkbox-f02" for="IsAutoCalcPhysycalEop">
                        @Html.CheckBoxFor(m => m.IsAutoCalcPhysycalEop, new Dictionary<string, Object> { { "id", "IsAutoCalcPhysycalEop" }, { "name", "IsAutoCalcPhysycalEop" }, 
                        { "data-caption", Localization.GetText("Add annual values to calculate EOP Targets (Original Planned, Annual Plan and Actual)") }, 
                        { "style", "display:none;" }, {"data-originalvalue",Model.IsAutoCalcPhysycalEop.ToString() }})
                     </label>
                  </dd>
               </dl>

            </div>
         </div>
         <!-- End content flt w75-->

         <!-- End content flt w16-->
      </section>
      <!-- End Section Main Content-->
   </div>
   <!-- End mod_contenido_central impacts -->
   <div class="mod_contenido_central impacts">
      <div class="editingButtons" style="display: block;">
         <a class="cancel" href="@(Url.Action("IndexMilestoneDetails", "Outputs", new { area = "ResultsMatrix", milestoneId = Model.MilestoneId }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
         <label for="guardar2">
            <input type="button" class="btn-primary_2 save" value=" @Localization.GetText("Save")" id="guardar2">
         </label>
      </div>
   </div>

}

