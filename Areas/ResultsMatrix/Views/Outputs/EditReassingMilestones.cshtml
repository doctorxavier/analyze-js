@model IDB.Presentation.MVC4.Models.Impacts.CustomDeleteImpactModel
@{
   ViewBag.Title = "Delete";
}

@section JavaScript
{
   <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Impacts/common.js")"></script>
}

<script>
   $(document).ready(function () {

      $(".optionSelectDeleteImpact").kendoDropDownList();

      $(".cancelDeleteComponent").click(function () {
         $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
         $(".ui-widget-overlay").remove();
         $(".k-window").remove();
      });

      $(".deleteComponent").click(function () {
         $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
         $("#DeleteImpactForm").submit();
         $(".ui-widget-overlay").remove();
         $(".k-window").remove();
      });


   });
</script>

@{
   var impactList = new List<SelectListItem>();

   foreach (var impact in Model.existingImpacts)
   {
      impactList.Add(new SelectListItem()
      {
         Value = impact.ImpactId.ToString(),
         Text = impact.Statement
      });
   }

   int flagMessage = 0;

   if (Model.currentImpact.ImpactIndicators.Count() > 0 && Model.existingImpacts.Count() > 0)
   {
      flagMessage = 1;
   }
   else
   {
      flagMessage = 0;
   }
}

@using (Html.BeginForm("DeleteImpact", "Impacts", FormMethod.Post, new { area = "ResultsMatrix", id = "DeleteImpactForm", @class = "" }))
{
    
   @Html.HiddenFor(x => x.currentImpact.ImpactId)
 
   <div class="contentImpacts">
      @if (flagMessage == 1)
      {
         <div class="dataContent1">
            <p class="dataTitle">Impact Name</p>
            <p class="dataText">@Model.currentImpact.Statement</p>
         </div>
      }
      <div class="dataContent1">

         @if (flagMessage == 1)
         {
            <p class="dataText">
               @Localization.GetText("In the case where indicators are related to the impact you wish to delete, please use the option below to reassign some/all of them. Indicators that are not reassigned will be deleted.")
            </p>
         }
         else
         {
            @Localization.GetText("TCM.DO.DeleteOutcomeStatement.UndoneActionMessage")
         }

      </div>

      @if (flagMessage == 1)
      {
         <div class="dataContent1">
            <div class="mod_tabla no_sortable">
               <table class="grid4">
                  <thead>
                     <tr>
                        <th class="btn_azul_oscuro" data-field="Operation">@Localization.GetText("Impact Indicator")</th>
                        <th class="btn_azul_oscuro" data-field="LoanNumber">@Localization.GetText("Impact")</th>
                     </tr>
                  </thead>
                  <tbody>
                     @for (var indicatorIndex = 0; indicatorIndex < Model.currentImpact.ImpactIndicators.Count(); indicatorIndex++)
                     {
                        <tr>
                           <td>
                              @Html.HiddenFor(x => x.currentImpact.ImpactIndicators[indicatorIndex].ImpactIndicatorId)
                              @Model.currentImpact.ImpactIndicators[indicatorIndex].Definition
                           </td>
                           <td>
                              <fieldset>
                                 <legend class="hide">Dropdown con opciones</legend>
                                 <ul class="optionList">
                                    <li class="small">
                                       @Html.DropDownListFor(x => x.currentImpact.ImpactIndicators[indicatorIndex].ReassignToImpact, impactList, new { @class = "optionSelect optionSelectDeleteImpact" })
                                    </li>
                                 </ul>
                              </fieldset>
                           </td>
                        </tr>
                     }
                  </tbody>
               </table>
            </div>
         </div>
      }


   </div>
   <!--END CONTENT IMPACTS-->
   <div class="pie pieReassign">
      <div class="botones">
         <a title="@Localization.GetText("Cancel")" class="cancel cancelDeleteComponent" href="javascript:void(0)">@Localization.GetText("Cancel")</a>
         <label for="delete">
            <input type="button" value="@Localization.GetText("Delete")" class="btn-primary deleteComponent" id="delete">
         </label>
      </div>
   </div>
}
