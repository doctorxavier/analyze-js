@using IDB.MW.Domain.Models.Architecture.Enumerations
@using IDB.Presentation.MVC4.Areas.ResultsMatrix.Business;
@using IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs;

@model ResultsMatrixModel

@{
    string CRFTemplateName = IDB.MW.Infrastructure.Configuration.ConfigurationServiceFactory
        .Current.GetApplicationSettings().CRFTemplateName;
}

@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/botonActivo/botonActivo.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/foldingTable/Outputs/tableFold.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/foldingTable/Outputs/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Outputs/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/VerifyContent/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/ResultsMatrix/Common/common.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Mainframe/fixIframe.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.tableOperator').click(resizeIframeCloud());
        });
    </script>
@Scripts.Render("~/bundles/BootstrapTooltip")
}

@section CSS {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Outputs/ResultMatrix_Outputs.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Common/VerifyContent.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Common/Common.css")" />
}

@* If exits any message of server *@
@if (ViewData["Message"] != null)
{
    @Html.ShowNotificationMessage((MessageConfiguration)ViewData["Message"]);
}

@{
    //Model.Components.Sort((x1, x2) => x1.OrderNumber.CompareTo(x2.OrderNumber));
    bool isLessTaskFive = ViewBag.isLessTaskFive ?? false;
}

@Html.Hidden("urlRoute", Url.Action("IndexPhysicalProgress", "Outputs", new { area = "ResultsMatrix", OperationNumber = Model.Operation.OperationNumber }))

@************ Hidden fields for interval *************@
@Html.Hidden("hdnIntervalId", Model.interval.IntervalId)
@Html.Hidden("hdnCycleId", Model.interval.CycleId)

<h2 class="hide">Seccion central de Contenido</h2>
<div class="mod_contenido_central impacts">

    @Html.Partial("IndexSharedHeader", Model, new ViewDataDictionary { { "showNewComponentButton", true }, { "isPhysicalProgress", true }, { "isLessTaskFive", ViewBag.isLessTaskFive } })

    <div class="editingButtonsEdit">
        <table>
            <tbody>
                <tr>
                    <td>
                        <div class="btn-action-group activo">
                            <label class="btn-action-fondo" for="btn-actionid">
                                <span class="btn-action-punto">Punto Blanco</span>
                            </label>
                            <input type="button" class="btn-action"
                                   value="@Localization.GetText("Collapse Components")" id="btn-actionid">
                        </div>
                    </td>
                    <td style="vertical-align: middle; padding-left: 5px; font-size: 0.75em;">@Localization.GetText("Show")</td>
                    <td>
                        <div id="radio">
                            <input type="checkbox" @(Model.showInactiveOutputs ? "checked=checked" : "")
                                   id="showInactiveOutputs" name="showInactiveOutputs" />
                            <label for="showInactiveOutputs"> @Localization.GetText("Inactive Outputs")</label>
                            <input type="checkbox" @(Model.showMilestones ? "checked=checked" : "")
                                   id="showMilestones" name="showMilestones" />
                            <label for="showMilestones">@Localization.GetText("Milestones")</label>
                            <input type="checkbox" @(Model.showDisaggregation ? "checked=checked" : "")
                                   id="showDisaggregation" name="showDisaggregation" />
                            <label for="showDisaggregation"> @Localization.GetText("Disaggregation")</label>
                            <label id="btnCRFInformation"
                                   class="ui-button ui-state-default ui-button-text-only ui-corner-right">
                                <span class="ui-button-text">@Localization.GetText("PI.BtnText.CRFInformation")</span>
                            </label>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- END TABLE 02.1-->
    <!-- TABLE 02.1-->
    @{int Validator = 0;}
    @if (Model.Components != null)
    {

        foreach (var component in Model.Components)
        {
            Validator = 1;
            <div class="mod_tabla_impacts table_outputs milestone">
                <div class="minimizeTable">

                    <div class="minimizeBar">
                        <div class="trackOrder">@component.OrderNumber</div>
                        <div class="tableOperator">Minimize/Maximize</div>
                    </div>
                    <div class="operatorBar"></div>
                    <h4 class="headingh3 plegableTitle">@component.Statement</h4>
                    @if (component.Outputs != null)
                    {
                        var totalOutputYearsPlan = component.getTotalOutputsYearPlan();
                        component.Outputs.Sort((x1, x2) => x1.OrderNumber.CompareTo(x2.OrderNumber));
                        <div class="tableGrid">
                            <table class="grid" cellpadding="20px">
                                <thead>
                                    <tr>
                                        <th class="btn_azul_oscuro dato00">@Localization.GetText("Outputs")</th>
                                        <th class="btn_azul_oscuro dato06">@Localization.GetText("Unit of measure")</th>
                                        <th class="btn_azul_oscuro dato04"></th>

                                        @foreach (var ouputYearPlan in totalOutputYearsPlan)
                                        {
                                            <th class="btn_azul_oscuro dato06">@ouputYearPlan</th>
                                        }

                                        <th class="btn_azul_oscuro dato05">@Localization.GetText("EOP") @Model.EndProjectYear</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < component.Outputs.Count; i++)
                                    {
                                        <tr class="trackOrderRow">
                                            <td>@(component.OrderNumber + "." + component.Outputs[i].OrderNumber)</td>
                                        </tr>
                                        <tr class="nivel01 @(component.Outputs[i].IsDeactivated ? " inactiveOutput " : "") @(i % 2 != 0 ? " impar " : "")">
                                            <td class="dato01">
                                                @if (component.Outputs[i].IsProgender)
                                                {
                                                    <span class="ico_badge_flag purple"></span>
                                                }
                                                @if (component.Outputs[i].UsedForStrategicAlignment)
                                                {
                                                    <span class="ico_badge_flag lime"></span>
                                                }
                                                @if (component.Outputs[i].IsProethnicity)
                                                {
                                                    <span class="ico_badge_flag grey"></span>
                                                }
                                                @if (component.Outputs[i].PredefinedIndicator != null)
                                                {
                                                    <span class="@component.Outputs[i].PredefinedIndicator.flagColorIndicator(CRFTemplateName)"></span>
                                                }
                                                <a href="javascript:void(0);" style="margin-right: 0.6em"
                                                   class="outputDetail @(component.Outputs[i].IsDeactivated ? "inactiveOutput" : "")"
                                                   data-route="@(Url.Action("IndexOutputDetail", "Outputs", new { area = "ResultsMatrix", outputID = component.Outputs[i].OutputId }))">@component.Outputs[i].Definition</a>
                                                @if (component.Outputs[i].OutputPredefinedIndicators.Any())
                                                {
                                                    <div class="blockCRF displayNone">
                                                        <div class="setTitleBlockCRF">@Localization.GetText("CRF:")</div>
                                                        <div class="setTDBlockCRF">
                                                            @foreach (var item in component.Outputs[i].OutputPredefinedIndicators)
                                                            {
                                                                <p>
                                                                    @if (Model.PmrCycle.IsClosed)
                                                                    {
                                                                        string indicatorTemplateVersionName = item.PredefinedIndicator.IndicatorTemplate.VersionName;
                                                                        <span class="@item.PredefinedIndicator.flagColorIndicator(indicatorTemplateVersionName)"></span>
                                                                        <span class="setTextCRF lh15">
                                                                            @(string.Format("{0} {1} {2}",
                                                                                item.PredefinedIndicator.IndicatorNumber,
                                                                                item.PredefinedIndicator.NameEn,
                                                                                item.PredefinedIndicator.IsContribution == true ? " (C)" : ""))
                                                                        </span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="ico_badge_flag @item.PredefinedIndicator.flagColorIndicator(CRFTemplateName)"></span>
                                                                        <span class="setTextCRF lh15">
                                                                            @(string.Format("{0} {1} {2}",
                                                                                item.PredefinedIndicator.IndicatorNumber,
                                                                                item.PredefinedIndicator.NameEn,
                                                                                item.PredefinedIndicator.IsContribution == true ? " (C)" : ""))
                                                                        </span>
                                                                    }
                                                                </p>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                            </td>
                                            <td>@component.Outputs[i].UnitOfMeasure</td>
                                            <td class="dato07">
                                                <table>
                                                    <tbody>
                                                        <tr class="rm_p_row">
                                                            <td>P</td>
                                                        </tr>
                                                        <tr class="rm_pa_row">
                                                            <td>P(a)</td>
                                                        </tr>
                                                        <tr class="rm_ac_row">
                                                            <td>A</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </td>
                                            @foreach (var year in totalOutputYearsPlan)
                                            {
                                                <td class="dato07">
                                                    @{
                                                        var currentSelectedYear = component.Outputs[i].OutputYearPlans.Where(x => x.Year == year).FirstOrDefault();
                                                        if (currentSelectedYear == null)
                                                        {
                                                            currentSelectedYear = new IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.OutputYearPlanModel()
                                                            {
                                                                OriginalPlan = null,
                                                                AnnualPlan = null,
                                                                ActualValue = null
                                                            };

                                                        }
                                                        <table>
                                                            <tbody>
                                                                <tr class="rm_p_row">
                                                                    <td>@Html.CustomFormatDecimalNumber(currentSelectedYear.OriginalPlan) </td>
                                                                </tr>
                                                                <tr class="rm_pa_row">
                                                                    <td>@Html.CustomFormatDecimalNumber(currentSelectedYear.AnnualPlan)</td>
                                                                </tr>
                                                                <tr class="rm_ac_row">
                                                                    <td>@Html.CustomFormatDecimalNumber(currentSelectedYear.ActualValue)</td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    }
                                                </td>
                                                        }
                                            <td class="dato07">
                                                @if (component.Outputs[i].IsAutoCalcPhysycalEop)
                                                {
                                                    ResultsMatrixBusinessRulesPhysicalProgress rmBusinessRuleHelper =
                                                        new ResultsMatrixBusinessRulesPhysicalProgress(component.Outputs[i].OutputYearPlans);
                                                    int referenceLastYearOutputProduct =
                                                            rmBusinessRuleHelper.GetReferenceLastYearOutputProduct();
                                                    int pmrYear = rmBusinessRuleHelper.GetPmrYear();
                                                    int referenceYear =
                                                        rmBusinessRuleHelper.GetReferenceYear(referenceLastYearOutputProduct, pmrYear);
                                                    decimal? originalPlanSum =
                                                                            rmBusinessRuleHelper.GetOriginalPlanSum();
                                                    decimal? annualPlanSum =
                                                        rmBusinessRuleHelper.GetAnnualPlanSum(referenceYear);
                                                    decimal? actualValueSum =
                                                        rmBusinessRuleHelper.GetActualValueSum();
                                                    <table>
                                                        <tbody>
                                                            <tr class="rm_p_row">
                                                                <td>@Html.CustomFormatDecimalNumber(originalPlanSum)</td>
                                                            </tr>
                                                            <tr class="rm_pa_row">
                                                                <td>@Html.CustomFormatDecimalNumber(annualPlanSum)</td>

                                                            </tr>
                                                            <tr class="rm_ac_row">
                                                                <td>@Html.CustomFormatDecimalNumber(actualValueSum)</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                }
                                                else
                                                {
                                                    var EOPOutputYearPlans = component.Outputs[i].OutputYearPlans.Where(x => x.Year == ResultsMatrixCodes.EndOfProjectYear).FirstOrDefault();
                                                    if (EOPOutputYearPlans == null)
                                                    {
                                                        EOPOutputYearPlans = new IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.OutputYearPlanModel()
                                                        {
                                                            OriginalPlan = null,
                                                            AnnualPlan = null,
                                                            ActualValue = null
                                                        };
                                                    }
                                                    <table>
                                                        <tbody>
                                                            <tr class="rm_p_row">
                                                                <td>@Html.CustomFormatDecimalNumber(EOPOutputYearPlans.OriginalPlan)</td>
                                                            </tr>
                                                            <tr class="rm_pa_row">
                                                                <td>@Html.CustomFormatDecimalNumber(EOPOutputYearPlans.AnnualPlan)</td>
                                                            </tr>
                                                            <tr class="rm_ac_row">
                                                                <td>@Html.CustomFormatDecimalNumber(EOPOutputYearPlans.ActualValue)</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                }
                                            </td>
                                        </tr>

                                                        if ((Model.showMilestones && component.Outputs[i].Milestones != null && component.Outputs[i].Milestones.Count > 0) ||
                                                        (Model.showDisaggregation && component.Outputs[i].OutputDisaggregations != null && component.Outputs[i].OutputDisaggregations.Count > 0))
                                                        {
                                                            <tr class="nivel02">
                                                                <td colspan="@(totalOutputYearsPlan.Count + 4)">
                                                                    <div class="minimizeTable">
                                                                        <div class="minimizeBar">
                                                                            <div class="tableOperator">Minimize/Maximize</div>
                                                                        </div>
                                                                        <div class="operatorBar"></div>
                                                                        <div class="tableGrid">
                                                                            @*-----------------------------------------------------------Milestones---------------------------------------------------------------------------------*@
                                                                            @if (component.Outputs[i].Milestones != null && Model.showMilestones)
                                                                            {
                                                                                var totalMilestonesYearPlans = totalOutputYearsPlan;
                                                                                <table class="grid">
                                                                                    <thead>
                                                                                        <tr>
                                                                                            <th class="btn_azul_oscuro dato00">@Localization.GetText("Milestones")</th>
                                                                                            <th class="btn_azul_oscuro dato06">@Localization.GetText("Unit of measure")</th>
                                                                                            <th class="btn_azul_oscuro dato04"></th>
                                                                                            @foreach (var milestonesYears in totalMilestonesYearPlans)
                                                                                            {
                                                                                                <th class="btn_azul_oscuro dato06">@milestonesYears</th>
                                                                                            }
                                                                                            <th class="btn_azul_oscuro dato05">@Localization.GetText("EOP") @Model.EndProjectYear</th>
                                                                                        </tr>
                                                                                    </thead>
                                                                                    <tbody>
                                                                                        @foreach (var milestones in component.Outputs[i].Milestones)
                                                                                        {
                                                                                            <tr class="@(milestones.OrderNumber % 2 == 0 ? " impar " : "") @(component.Outputs[i].IsDeactivated ? " inactiveOutput " : "")">
                                                                                                <td class="dato01 @(component.Outputs[i].IsDeactivated ? " inactiveOutput " : "")">
                                                                                                    <a href="javascript:void(0);" class="outputDetail @(component.Outputs[i].IsDeactivated ? " inactiveOutput " : "") " data-route="@(Url.Action("IndexMilestoneDetails", "Outputs", new { area = "ResultsMatrix", milestoneId = milestones.MilestoneId }))">@milestones.Definition</a>
                                                                                                </td>
                                                                                                <td>@milestones.UnitOfMeasure</td>
                                                                                                <td class="dato07">
                                                                                                    <table>
                                                                                                        <tbody>
                                                                                                            <tr class="rm_p_row">
                                                                                                                <td>P</td>
                                                                                                            </tr>
                                                                                                            <tr class="rm_pa_row">
                                                                                                                <td>P(a)</td>
                                                                                                            </tr>
                                                                                                            <tr class="rm_ac_row">
                                                                                                                <td>A</td>
                                                                                                            </tr>
                                                                                                        </tbody>
                                                                                                    </table>
                                                                                                </td>
                                                                                                @foreach (var year in totalMilestonesYearPlans)
                                                                                                {
                                                                                                    <td class="dato07">
                                                                                                        @{var milestoneYearPlan = milestones.MilestoneYearPlans.Where(x => x.Year == year).FirstOrDefault();

                                                                                                            if (milestoneYearPlan == null)
                                                                                                            {
                                                                                                                milestoneYearPlan = new IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.MilestoneYearPlanModel()
                                                                                                                {
                                                                                                                    OriginalPlan = null,
                                                                                                                    AnnualPlan = null,
                                                                                                                    ActualValue = null
                                                                                                                };
                                                                                                            }

                                                                                                        }
                                                                                                        <table>
                                                                                                            <tbody>
                                                                                                                <tr class="rm_p_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(milestoneYearPlan.OriginalPlan)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_pa_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(milestoneYearPlan.AnnualPlan)</td>

                                                                                                                </tr>
                                                                                                                <tr class="rm_ac_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(milestoneYearPlan.ActualValue)</td>

                                                                                                                </tr>
                                                                                                            </tbody>
                                                                                                        </table>
                                                                                                    </td>
                                                                                                            }
                                                                                                <td class="dato07">
                                                                                                    @if (milestones.IsAutoCalcPhysycalEop)
                                                                                                    {
                                                                                                        ResultsMatrixBusinessRulesPhysicalProgress rmBusinessRuleHelper =
                                                                                                            new ResultsMatrixBusinessRulesPhysicalProgress(milestones.MilestoneYearPlans);
                                                                                                        int referenceLastYearOutputProduct =
                                                                                                            rmBusinessRuleHelper.GetReferenceLastYearOutputProduct();
                                                                                                        int pmrYear = rmBusinessRuleHelper.GetPmrYear();
                                                                                                        int referenceYear =
                                                                                                            rmBusinessRuleHelper.GetReferenceYear(referenceLastYearOutputProduct, pmrYear);
                                                                                                        decimal? originalPlanSum =
                                                                                                                                                        rmBusinessRuleHelper.GetOriginalPlanSum();
                                                                                                        decimal? annualPlanSum =
                                                                                                            rmBusinessRuleHelper.GetAnnualPlanSum(referenceYear);
                                                                                                        decimal? actualValueSum =
                                                                                                            rmBusinessRuleHelper.GetActualValueSum();
                                                                                                        <table>
                                                                                                            <tbody>
                                                                                                                <tr class="rm_p_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(originalPlanSum)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_pa_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(annualPlanSum)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_ac_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(actualValueSum)</td>
                                                                                                                </tr>
                                                                                                            </tbody>
                                                                                                        </table>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        var EOPMilestoneYearPlans = milestones.MilestoneYearPlans.Where(x => x.Year == ResultsMatrixCodes.EndOfProjectYear).FirstOrDefault();
                                                                                                        if (EOPMilestoneYearPlans == null)
                                                                                                        {
                                                                                                            EOPMilestoneYearPlans = new IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.MilestoneYearPlanModel()
                                                                                                            {
                                                                                                                OriginalPlan = null,
                                                                                                                AnnualPlan = null,
                                                                                                                ActualValue = null
                                                                                                            };
                                                                                                        }
                                                                                                        <table>
                                                                                                            <tbody>
                                                                                                                <tr class="rm_p_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(EOPMilestoneYearPlans.OriginalPlan)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_pa_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(EOPMilestoneYearPlans.AnnualPlan)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_ac_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(EOPMilestoneYearPlans.ActualValue)</td>
                                                                                                                </tr>
                                                                                                            </tbody>
                                                                                                        </table>
                                                                                                    }
                                                                                                </td>


                                                                                            </tr>
                                                                                                            }
                                                                                    </tbody>

                                                                                </table>
                                                                                                            }
                                                                                                            @*-----------------------------------------------------------OutputDisaggregations---------------------------------------------------------------------------------*@
                                                                            else if (component.Outputs[i].OutputDisaggregations != null && !Model.showMilestones && Model.showDisaggregation)
                                                                            {
                                                                                <table class="grid">
                                                                                    <thead>
                                                                                        <tr>
                                                                                            <th class="btn_azul_oscuro dato00">
                                                                                                <span>@Localization.GetText("Disaggregation")</span>
                                                                                                <span class="glyphicon glyphicon-info-sign toolTipDisaggregation"
                                                                                                      title="@Localization.GetText("Same unit of measure as indicator/output")">
                                                                                                </span>
                                                                                            </th>

                                                                                            <th class="btn_azul_oscuro dato04"></th>
                                                                                            @foreach (var outputYearPlan in totalOutputYearsPlan)
                                                                                            {
                                                                                                <th class="btn_azul_oscuro dato06">@outputYearPlan</th>
                                                                                            }
                                                                                            <th class="btn_azul_oscuro dato05">@Localization.GetText("EOP") @Model.EndProjectYear</th>
                                                                                        </tr>
                                                                                    </thead>
                                                                                    <tbody>
                                                                                        @foreach (var disaggregations in component.Outputs[i].OutputDisaggregations)
                                                                                        {
                                                                                            <tr class="@(disaggregations.OrderNumber % 2 == 0 ? "impar" : "") @(component.Outputs[i].IsDeactivated ? "inactiveOutput" : "")">
                                                                                                <td class="dato01 @(component.Outputs[i].IsDeactivated ? "inactiveOutput" : "") ">
                                                                                                    @disaggregations.DisaggregationName

                                                                                                    @if (disaggregations.IsCalculated || disaggregations.IsLinked)
                                                                                                    {
                                                                                                        <span class="txtPredefined">@Localization.GetText("Predefined")</span>
                                                                                                    }
                                                                                                </td>
                                                                                                <td class="dato07">
                                                                                                    <table>
                                                                                                        <tbody>
                                                                                                            <tr class="rm_p_row">
                                                                                                                <td>P</td>
                                                                                                            </tr>
                                                                                                            <tr class="rm_pa_row">
                                                                                                                <td>P(a)</td>
                                                                                                            </tr>
                                                                                                            <tr class="rm_ac_row">
                                                                                                                <td>A</td>
                                                                                                            </tr>
                                                                                                        </tbody>
                                                                                                    </table>
                                                                                                </td>
                                                                                                @foreach (var outputYearPlan in totalOutputYearsPlan)
                                                                                                {
                                                                                                    <td class="dato07">
                                                                                                        @{var outputDisaggregationYearPlan = disaggregations.OutputDisaggregationYearPlans.Where(x => x.Year == outputYearPlan).FirstOrDefault();
                                                                                                            if (outputDisaggregationYearPlan == null)
                                                                                                            {
                                                                                                                outputDisaggregationYearPlan = new IDB.MW.Domain.Models.Architecture.ResultMatrix.Outputs.OutputDisaggregationYearPlanModel()
                                                                                                                {
                                                                                                                    OriginalPlan = null,
                                                                                                                    AnnualPlan = null,
                                                                                                                    ActualValue = null,
                                                                                                                    Year = outputYearPlan
                                                                                                                };

                                                                                                            }
                                                                                                        }
                                                                                                        <table>
                                                                                                            <tbody>
                                                                                                                <tr class="rm_p_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(outputDisaggregationYearPlan.OriginalPlan)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_pa_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(outputDisaggregationYearPlan.AnnualPlan)</td>
                                                                                                                </tr>
                                                                                                                <tr class="rm_ac_row">
                                                                                                                    <td>@Html.CustomFormatDecimalNumber(outputDisaggregationYearPlan.ActualValue)</td>
                                                                                                                </tr>
                                                                                                            </tbody>
                                                                                                        </table>
                                                                                                    </td>
                                                                                                            }
                                                                                                <td class="dato07">
                                                                                                    <table>
                                                                                                        <tbody>
                                                                                                            <tr class="rm_p_row">
                                                                                                                <td>
                                                                                                                    @Html.CustomFormatDecimalNumber(
                                                                                                   disaggregations.OutputDisaggregationYearPlans.FirstOrDefault(x => x.Year == -1).OriginalPlan)
                                                                                                                </td>
                                                                                                            </tr>
                                                                                                            <tr class="rm_pa_row">
                                                                                                                <td>
                                                                                                                    @Html.CustomFormatDecimalNumber(
                                                                                                   disaggregations.OutputDisaggregationYearPlans.FirstOrDefault(x => x.Year == -1).AnnualPlan)
                                                                                                                </td>
                                                                                                            </tr>
                                                                                                            <tr class="rm_ac_row">
                                                                                                                <td>
                                                                                                                    @Html.CustomFormatDecimalNumber(
                                                                                                   disaggregations.OutputDisaggregationYearPlans.FirstOrDefault(x => x.Year == -1).ActualValue)
                                                                                                                </td>
                                                                                                            </tr>
                                                                                                        </tbody>
                                                                                                    </table>
                                                                                                </td>
                                                                                            </tr>
                                                                                                            }
                                                                                    </tbody>
                                                                                </table>
                                                                                                            }
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                                                                            // Adición de fila para maximize y minimize.
                                                                                                            <tr style="height:18px">
                                                                                                                <td></td>
                                                                                                            </tr>
                                                                                                                }
                                                                                                            }
                                </tbody>

                            </table>
                        </div>
                                                                                                            }

                </div>
            </div>
            <div class="operationData" style="width: 100%; padding-top: 1.5em;"></div>
                                                                                                                }
                                                                                                            }
    @if (Validator == 1)
    {
        <br />
        <div class="styleContentReport">
            <a title="Export PDF" class="downloadReport exportdata pdf styleExportReport"
               href="javascript:void(0);"
               data-href='@(Url.Action("DownloadReportPhysicalProgress", "Outputs", new {
                              area = "ResultsMatrix",
                              operationNumber = Model.OperationNumber,
                              formatType = "PDF",
                              inactiveOutput = Model.showInactiveOutputs,
                              milestones = Model.showMilestones,
                              disaggregation = Model.showDisaggregation
                          }))'></a>

            <a title="Export Excel" class="downloadReport exportdata excel styleExportReport"
               href="javascript:void(0);"
               data-href='@(Url.Action("DownloadReportPhysicalProgress", "Outputs", new {
                              area = "ResultsMatrix",
                              operationNumber = Model.OperationNumber,
                              formatType = "Excel",
                              inactiveOutput = Model.showInactiveOutputs,
                              milestones = Model.showMilestones,
                              disaggregation = Model.showDisaggregation
                          }))'></a>
        </div>
    }
    <!-- END TABLE 02.1-->

    <div class="operationData" style="float: right;">
        @Html.Partial("../Partials/_BadgeFlagPartial")
    </div>

    <div class="col-md-12">
        <div class="editingButtonsEdit bottom">
            @if (!Model.DEMLockReviewProcessData.IsLockReviewProcessDEM)
        {
                <a href="javascript:void(0);" class="verify" title="@Localization.GetText("Verify content")">@Localization.GetText("Verify content")</a>
            if ((isLessTaskFive || Model.AccessedByAdministrator) &&
                Model.isEditable && Html.HasPermission("Results Matrix Write"))
            {
                    <a href="javascript:void(0);" data-route="@(Url.Action("EditPhysicalProgress", "Outputs",
                       new { area = "ResultsMatrix", operationNumber = Model.Operation.OperationNumber }))"
                       class="btn-secondary editPhysicalProgress" title="@Localization.GetText("Edit")">@Localization.GetText("Edit")</a>
            }
        }
        else
        {
                @:&nbsp;
                <div id="dem-block-description-outputs">@Html.Raw(Model.DEMLockReviewProcessData.LockDescription)</div>
        }
        </div>
    </div>
</div>
<!--end div mod contenido central-->
