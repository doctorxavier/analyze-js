@using System.Configuration

@{
    MvcHelpers.ViewBag = ViewBag;

    bool changeDomain = false;
    if (!string.IsNullOrWhiteSpace(ConfigurationManager.AppSettings["Domain"]))
    {
        changeDomain = true;
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>IDB</title>
    <meta charset="utf-8" />
    <meta name="Author" content="BID" />
    <meta name="Description" content="BID" />

    @Styles.Render("~/Content/Confluence")
    @Styles.Render("~/Content/overrides/indicatorsOverride.css")
    @Styles.Render("~/Content/RMIndicators")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/scripts2")
    @Scripts.Render("~/bundles/RMIndicatorScripts")
    <script src="~/Scripts/Mainframe/fixIframe.js"></script>

    @RenderSection("CSS", required: false)
    @RenderSection("JavaScript", required: false)
    @RenderSection("scripts", false)
    @Html.WriteScriptBlocks()

    <script type="text/javascript">
        idbg.config.basePath = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
        idbg.config.baseSharePointAddress = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
        idbg.config.domain = '@System.Configuration.ConfigurationManager.AppSettings["Domain"]';
        idbg.config.language = '@Localization.CurrentLanguage';
        idbg.init();
    </script>

    @if (changeDomain)
    {
        <script type="text/javascript">
            document.domain = '@ConfigurationManager.AppSettings["Domain"]';
        </script>
    }

</head>
<body>
    @Confluence.Loader()

    <section class="container-fluid">
        @RenderBody()
    </section>

    <script type="text/javascript">

        ShowMessageFunctions.CurrentFunction = ShowMessageFunctions.GenericFunction;
        var routeLockregister = '@Url.Action("LockRegister", "Outputs", new { area = "ResultsMatrix" })';
        var module = $('#TypeModule');
        var backUrl = $("#hdnPredefinedIndicatorBackUrl").val();

        $(document).ready(function () {
            postUrlWithOptions(routeLockregister,
                { async: false },
                { operationNumber: module.data('operation'), url: module.data('urlsave') })
                .done(function (response) {
                    if (!response.IsValid) {
                        showMessage(response.ErrorMessage, true, module.data('urlreturn'));
                    }
                });
        });
    </script>
</body>
</html>
