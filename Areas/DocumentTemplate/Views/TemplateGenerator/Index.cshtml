@using IDB.MVCControls.General.Helpers
@model List<IDB.MW.Business.DocumentTemplate.DTOs.DocumentTemplateDTO>
@{
    ViewBag.showLoader = true;
    ViewBag.fixLoad = true;
    ViewBag.Title = Localization.GetText("OP.DTG.Homepage.Title").HtmlEncode();
}

<div class="row mb30">
    <div class="col-lg-12">
        @Confluence.LabelMainTitle(Localization.GetText("OP.DTG.Homepage.Title"))
    </div>
</div>

<div class="row mb25">
    <div class="col-lg-12">
        @Confluence.ButtonBlue(Localization.GetText("OP.DTG.Homepage.Button.CreateTemplate"), "templateCreate", width: "200px",
            dataNavigation: Url.Action("TemplateGenerator", "TemplateGenerator", new { area = "DocumentTemplate" }))
    </div>
</div>
<div class="row mb30">
    <div class="col-xs-6 col-sm-1 text-right pt10">
        @Confluence.Label(Localization.GetText("OP.DTG.Homepage.Status") + ":")
    </div>
    <div class="col-xs-6 col-sm-2">
        @Confluence.InputDropDown("", "templateStatus", (List<SelectListItem>)ViewBag.StatusList,
            dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "tbStatus" } })
    </div>
    <div class="col-xs-6 col-sm-1 text-right pt10">
        @Confluence.Label(Localization.GetText("OP.DTG.Homepage.DocumentType") + ":")
    </div>
    <div class="col-xs-6 col-sm-2">
        @Confluence.InputDropDown("", "templateDocumentType", (List<SelectListItem>)ViewBag.DocumentTypeList,
            dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "tbDocumentType" } })
    </div>
    <div class="col-xs-12 col-sm-4">
        <span class="pr5">@Confluence.Label(Localization.GetText("OP.DTG.Homepage.CreateFrom"))</span>
        @Confluence.InputDatePicker(DateTime.Today.AddMonths(-1), "templateCreateFrom", lessThanNameDate: "templateCreateTo")
        <span class="pl5 pr5">@Confluence.Label(Localization.GetText("OP.DTG.Homepage.CreateTo"))</span>
        @Confluence.InputDatePicker(DateTime.Today, "templateCreateTo", greaterThanNameDate: "templateCreateFrom")
    </div>
    <div class="col-xs-12 col-sm-2 text-center">
        @Confluence.ButtonBlue(Localization.GetText("OP.DTG.Homepage.Button.Filter"), "templateSearch", "SearchTemplates")
    </div>
</div>
<div class="row">
    <div id="TemplateList" class="col-md-12">
        @Html.Partial("Partials/TemplateList", Model)
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="col-xs-6 col-sm-2 lblcontent">
            @Confluence.Label(Localization.GetText("OP.DTG.Homepage.TemplateCode") + ":")
        </div>
        <div class="col-xs-6 col-sm-2 lblcontent">
            @Confluence.Label(Localization.GetText("OP.DTG.Homepage.OperationNumber") + ":")
        </div>
        <div class="col-xs-6 col-sm-2 lblcontent">
            @Confluence.Label(Localization.GetText("OP.DTG.Homepage.FundCode") + ":")
        </div>
        <div class="col-xs-6 col-sm-2 lblcontent">
            @Confluence.Label(Localization.GetText("OP.DTG.Homepage.ProtectWhitComments"))
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-xs-6 col-sm-2 lblvalue">
            @Confluence.InputText(string.Empty, "templateCode", required: false)
        </div>
        <div class="col-xs-6 col-sm-2 lblvalue">
            @Confluence.InputText(string.Empty, "templateOpNumber", required: false)
        </div>
        <div class="col-xs-6 col-sm-2 lblvalue">
            @Confluence.InputText(string.Empty, "fundCode", required: false)
        </div>
        <div class="col-xs-6 col-sm-2 pt10">
            @Confluence.InputCheckbox(false, "templateProtect", "templateProtect", Localization.GetText("OP.DTG.Homepage.Checkbox.Yes"))
        </div>
        <div class="col-xs-6 col-sm-2">
            @Confluence.ButtonBlue(Localization.GetText("OP.DTG.Homepage.Button.GenerateDocument"), "templateGenerate", "GenerateDocument")
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        function SearchTemplates() {
            $.ajax({
                type: "POST",
                url: "@Url.Action("FilterTemplates", "TemplateGenerator", new {area = "DocumentTemplate"})",
                data: {
                    "status": $("[name=templateStatus]").val(),
                    "documentType": $("[name=templateDocumentType]").val(),
                    "dateFrom": $("[name=templateCreateFrom]").val(),
                    "dateTo": $("[name=templateCreateTo]").val()
                }
            }).done(function(response) {
                if (response !== "") {
                    $("#TemplateList").html(response);
                }
            }).fail(function(jqXhr, textStatus, errorThrown) {
                showMessage("Error occurred:" + errorThrown, false);
            });
        }

        function GenerateDocument() {
            if ($(".vex-theme-default").html() == null) {
                var templateCode = $("[name=templateCode]").val();
                var operationNumber = $("[name=templateOpNumber]").val().toUpperCase();
                var fundCode = $("[name=fundCode]").val().toUpperCase();
                var parameters = {};

                if (fundCode.length != 0) {
                    parameters = { 'FundCode': fundCode };
                }

                var protect = $("[name=templateProtect]").prop('checked');

                if (templateCode !== "" && operationNumber !== "" ) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GenerateDocument", "TemplateGenerator", new {area = "DocumentTemplate"})",
                        data: {
                            "templateCode": templateCode,
                            "operationNumber": operationNumber,
                            "parameters": parameters,
                            "protect": protect
                        }
                    }).done(function(response) {
                        if (response !== "") {
                            var linkUrlSharePoint = "<a href='" + response + "' target='_blank'>" + response + "</a>";
                            showMessage(linkUrlSharePoint, false, "");
                        }
                    }).fail(function(jqXhr, textStatus, errorThrown) {
                        showMessage("Error occurred:" + errorThrown, false);
                    });
                } else {
                    showMessage("@Localization.GetText("OP.DTG.TemplateGen.Message.MissingParameters")", false, "");
                }
            }
        }
    </script>
}
