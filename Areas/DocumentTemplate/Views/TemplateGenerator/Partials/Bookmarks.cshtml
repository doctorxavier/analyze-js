@using System.Diagnostics
@using System.Diagnostics.Eventing.Reader
@using NPOI.SS.Formula.Functions
@model IDB.Presentation.MVC4.Areas.DocumentTemplate.Models.TemplateViewModel
<div class="row mb5">
    <div class="col-lg-12">
        <table class="table">
            <thead>
                <tr>
                    <td class="w10">@Confluence.LabelBold(Localization.GetText("OP.DTG.TemplateGen.Table.Check"))</td>
                    <td class="w180">@Confluence.LabelBold(Localization.GetText("OP.DTG.TemplateGen.Table.Bookmark"))</td>
                    <td class="w230">@Confluence.LabelBold(Localization.GetText("OP.DTG.TemplateGen.Table.DataType"))</td>
                    <td>@Confluence.LabelBold(Localization.GetText("OP.DTG.TemplateGen.Table.Query"))</td>
                    <td class="w90 text-center">@Confluence.LabelBold(Localization.GetText("OP.DTG.TemplateGen.Table.Validate"))</td>
                </tr>
            </thead>
            <tbody>
                @if (Model.TemplateFieldsList != null)
                {
                    foreach (var item in Model.TemplateFieldsList)
                    {
                        var idField = item.DocumentTemplateFieldId;
                        <tr>
                            <td>
                                <div data-pagemode="read">
                                    @if (item.FieldType != 3) { 
                                    @Confluence.InputCheckbox(item.ManualField, "isManualField[" + idField + "]", "isManualField[" + idField + "]", disabled: true, forceValidation: false,
                                        dataAttributes: new Dictionary<string, string> {{"idb-fieldid", idField + ""}})}
                                </div>
                                    <div data-pagemode="edit">
                                        @if (item.FieldType != 3) {
                                        @Confluence.InputCheckbox(item.ManualField, "isManualField[" + idField + "]", "isManualField[" + idField + "]", disabled: false, forceValidation: false,
                                            dataAttributes: new Dictionary<string, string> {{"idb-fieldid", idField + ""}})}
                                    </div>
                            </td>
                            <td>
                            <div data-pagemode="read">@item.Name</div>
                            <div data-pagemode="edit" style="padding-top: 10px;">
                                @Confluence.InputHidden(item.Code, "FieldCode[" + idField + "]")
                                @Confluence.InputHidden(item.Name, "FieldName[" + idField + "]")
                                @Confluence.InputHidden((item.ManualField == false) ? "0" : "1", "FieldManual[" + idField + "]", id: "FieldManual[" + idField + "]")
                                @Confluence.InputHidden(item.FieldType.ToString(), "FieldType[" + idField + "]", id: "FieldType[" + idField + "]")
                                @item.Name
                            </div>
                            <td>
                                <span data-pagemode="read">@Confluence.LabelGetDropDown(item.TypeOfField, (List<SelectListItem>) ViewBag.DataTypeList, true)</span>
                                <span data-pagemode="edit">
                                    @Confluence.InputDropDown(item.TypeOfField, "DataType[" + idField + "]", (List<SelectListItem>) ViewBag.DataTypeList,
                                 dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "ddlDataType" + idField } }, disabled: item.ManualField)
                                </span>
                            </td>
                            <td>
                                <span data-pagemode="read">@Confluence.Label(item.DataSourceQuery)</span>
                                <span data-pagemode="edit">
                                    @Confluence.InputTextArea(item.DataSourceQuery, "Query[" + idField + "]", width: "100%",
                                    dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "tbQuery" + idField } }, disabled: item.ManualField)
                                </span>
                            </td>
                            <td class="text-center">
                                <span data-pagemode="read" class="glyphicon glyphicon-@Html.Raw(string.IsNullOrWhiteSpace(item.DataSourceQuery) ? "remove" : "ok")"></span>
                                <span data-pagemode="edit">
                                    <a id="refreshQuery@(idField)" @(item.ManualField ? "disabled=\"disabled\"" : null) class="glyphicon btn glyphicon-@(item.ManualField ? "ok" : "refresh")" onclick="javascript:ValidateQuery(@(idField));"></a>
                                </span>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>