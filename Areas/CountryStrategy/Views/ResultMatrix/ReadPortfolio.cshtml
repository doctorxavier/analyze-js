@using IDB.MW.Application.CountryStrategyModule.ViewModels.ResultMatrix
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Areas.CountryStrategy.HtmlHelpers
@using IDB.MW.Application.CountryStrategyModule.Enums
@using IDB.Presentation.MVC4.Areas.CountryStrategy.Controllers

@model PortfolioModeViewModel


@if (Model != null && Model.ResultMatrix != null)
{
    bool cantBeEdited = Model.IsCurrentOperationActive;
    string currentOperationNumber = Model.CurrentOperationNumber;
    bool isExpired = Model.ResultMatrix.IsExpiredOverallStage;


    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;

    <input type="hidden" data-idb-pagename="UI-CS-005-ResultsMatrix" />
    <input type="hidden" data-idb-pagename="UI-CS-009-PortfolioSummary" />

    <div class="row mb30">
        <div class="col-md-12">
            @Confluence.LabelMainTitle(Localization.GetText("CS.ResultMatrix.Title"))
        </div>
    </div>
    <div class="row mb30">
        <div class="col-md-2">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("CS.ResultMatrix.LastUpdate")</label>
            </div>
            <div class="col-md-12 lblvalue bold">
                @FormatHelper.Format(Model.ResultMatrix.LastUpdate, formatDate).HtmlEncode()
            </div>
        </div>
        <div class="col-md-2">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("CS.ResultMatrix.Status")</label>
            </div>
            <div class="col-md-12 lblvalue bold">
                @Model.ResultMatrix.StatusName.HtmlEncode()
            </div>
        </div>
        <div class="col-md-2">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("CS.ResultMatrix.Username")</label>
            </div>
            <div class="col-md-12 lblvalue bold">
                @Model.ResultMatrix.LastUserUpdate.HtmlEncode()
            </div>
        </div>
    </div>
    <div>
        @Confluence.Tabs(new Dictionary<string, string>()
        {
           {"tabResultMatrix", Localization.GetText("CS.TAB.ResultMatrix")},
           {"tabPortfolioSummary", Localization.GetText("CS.TAB.PortfolioSummary")}
        })
    </div>
    <div class="tab-content">
        <div class="tab-pane active"
             id="tabResultMatrix"
             data-idb-fieldname="tabResultMatrix">
            <div class="row mb30">
                <div class="col-md-12 text-right">
                    @Confluence.ButtonWord(name: "exportWord", action: "downloadWord")
                    @*Confluence.ButtonExcel(name: "exportExcel", action: "downloadXls")*@
                    @Confluence.ButtonPdf(name: "exportPdf", action: "downloadPdf")
                </div>
                <div class="pull-right">
                    @(Html.CollapseAll("collapseAllComponent")
                            .CollapseSingleSelector("[data-name=\"collapseComponent\"]"))
                </div>
            </div>
            <div class="resultMatrixArea">
                @foreach (var component in Model.ResultMatrix.Components)
                {
                    @Html.Partial("ReadPartial/ApprovedComponent", component)
                }
            </div>
            <div class="row mt10 pl47 mb20">
                <div class="col-md-12">
                    @Confluence.ButtonLink(Localization.GetText("CS.ResultMatrix.Button.DialogueArea"),
                    name: "objectiveNotAlignedLink",
                    dataAttributes: new Dictionary<string, string> { { "code",ViewBag.DialogueArea.ToString() } })
                </div>
                <div class="col-md-12">
                    @Confluence.ButtonLink(Localization.GetText("CS.ResultMatrix.Button.NewArea"),
                    name: "objectiveNotAlignedLink",
                    dataAttributes: new Dictionary<string, string> { { "code", ViewBag.NewAreas.ToString() } })
                </div>
            </div>
        </div>

        <div class="tab-pane pl30"
             id="tabPortfolioSummary"
             data-idb-fieldname="tabPortfolioSummary">
            <div class="row mb10">
                <div class="col-md-12 mb10">
                    @if (Model.ResultMatrix.Status == CountryStrategicStatusEnum.Expired)
                    {
                        @Confluence.Label(Localization.GetText("CS.PortfolioSummary.PortfolioAlignmentTable.ExpiredAmountMessage"))
                    }
                </div>
                <div class="right-buttons" style="padding-right: 15px;">
                    @(Html.CollapseAll("collapseAllPortfolio")
                              .CollapseSingleSelector("[data-name=\"collapsePortfolio\"]"))
                </div>
            </div>

            <div class="row mb20">
                <div class="col-md-12">
                    @(Html.CollapseSingle("collapsePortfolio")
                                    .HtmlClass("component-collapse alignSubtitle")
                                    .AsociatedCollapseAllSelector("[data-name=collapseAllPortfolio]")
                                    .TargetRegionSelector("[data-name=\"operationsApprovedTable\"]")
                    )
                    <div>
                        @Confluence.LabelBold(Localization.GetText("CS.PortfolioSummary.OperationApprTable.Title"))
                    </div>
                </div>
            </div>
            <div class="row mb60" data-name="operationsApprovedTable">
                <div class="col-md-12 mb10">
                    @Html.Partial("ReadPartial/PortfolioOperationsApprovedTable", Model.PortfolioOpertationsApprList)
                </div>
                <div class="col-md-12 space-line-int icon-inf">
                    <table>
                        <tr>
                            <td style="vertical-align: top" class="icon-container-align pr10">@Confluence.Information()</td>
                            <td class="text-container-align">
                                <p>
                                    @Confluence.Label(Localization.GetText("CS.Legends.PortfolioSummary.PortfolioApproved.Excludes"), htmlClass: "infoText labelNormalNotBold")
                                </p>

                                <p>
                                    @Confluence.Label(Localization.GetText("CS.Legends.PortfolioSummary.PortfolioApproved.CancelledOriginalAmount"), htmlClass: "infoText labelNormalNotBold")
                                </p>

                                <p>
                                    @Confluence.Label(Localization.GetText("CS.Legends.PortfolioSummary.InfoOperationDisplay"), htmlClass: "infoText labelNormalNotBold")
                                </p>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="row">
                <div class="col-md-10 mb10">
                    <label class="lbltitle">
                        @Confluence.LabelSubTitleGroup(Localization.GetText("CS.PortfolioSummary.PortfolioAlignmentTable.Title"))
                    </label>
                </div>
                <div class="col-md-12 mb20 icon-inf">
                    <table>
                        <tr>
                            <td style="vertical-align: top" class="icon-container-align pr10">@Confluence.Information()</td>
                            <td class="text-container-align">
                                <p>
                                    @Confluence.Label(Localization.GetText("CS.PortfolioAlignmentTable.InfoGeneral"), htmlClass: "infoText labelNormalNotBold")
                                </p>
                                <p>
                                    @Confluence.Label(Localization.GetText("CS.PortfolioAlignmentTable.InfoNumberOperations"), htmlClass: "bold infoText labelNormalBold")
                                    @Confluence.Label(Localization.GetText("CS.PortfolioAlignmentTable.InfoTotalAmount"), htmlClass: "infoText labelNormalNotBold")
                                </p>

                                <p>
                                    @Confluence.Label(Localization.GetText("CS.PortfolioAlignmentTable.InfoTotalApprovedAmount"), htmlClass: "bold infoText labelNormalBold")
                                    @Confluence.Label(Localization.GetText("CS.PortfolioAlignmentTable.InfoOperationContributing"), htmlClass: "infoText labelNormalNotBold")
                                </p>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="row mb15">
                <div class="col-md-12">
                    @(Html.CollapseSingle("collapsePortfolio")
                            .HtmlClass("component-collapse alignSubtitle")
                            .AsociatedCollapseAllSelector("[data-name=collapseAllPortfolio]")
                            .TargetRegionSelector("[data-name=\"portfolioAlignmentCountryStrategyTableIDB\"]")
                    )
                    <div>
                        @Confluence.LabelBold(Localization.GetText("CS.PortfolioSummary.IDB"))
                    </div>
                </div>
            </div>
            <div class="row mb60" data-name="portfolioAlignmentCountryStrategyTableIDB">
                <div class="col-md-12 mb10">
                    @Html.Partial("ReadPartial/PortfolioOperationsPortfolioAlignmentTableIDB", Model.PortfolioAlignmentCSListIDB)
                </div>
                <div class="col-md-12 space-line-int icon-inf">
                    <table>
                        <tr>
                            <td style="vertical-align: top" class="icon-container-align pr10">@Confluence.Information()</td>
                            <td class="text-container-align">
                                <p>
                                    @Confluence.Label(Localization.GetText("CS.Legends.PortfolioSummary.PortfolioAlignmentIDB.Excludes"), htmlClass: "infoText labelNormalNotBold")
                                </p>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="row mb15">
                <div class="col-md-12">
                    @(Html.CollapseSingle("collapsePortfolio")
                                .HtmlClass("component-collapse alignSubtitle")
                                .AsociatedCollapseAllSelector("[data-name=collapseAllPortfolio]")
                                .TargetRegionSelector("[data-name=\"portfolioAlignmentCountryStrategyTableIIC\"]")
                    )
                    <div>
                        @Confluence.LabelBold(Localization.GetText("CS.PortfolioSummary.IDBInvest"))
                    </div>
                </div>
            </div>
            <div class="row mb60" data-name="portfolioAlignmentCountryStrategyTableIIC">
                <div class="col-md-12 mb10">
                    @Html.Partial("ReadPartial/PortfolioOperationsPortfolioAlignmentTableIIC", Model.PortfolioAlignmentCSListIIC)
                </div>
                <div class="col-md-12 space-line-int icon-inf">
                    <table>
                        <tr>
                            <td style="vertical-align: top" class="icon-container-align pr10">@Confluence.Information()</td>
                            <td class="text-container-align">
                                <p>
                                    @Confluence.Label(Localization.GetText("CS.Legends.PortfolioSummary.PortfolioAlignmentIDBInvest.Included"), htmlClass: "infoText labelNormalNotBold")
                                </p>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="row mb15">
                <div class="col-md-12">
                    @(Html.CollapseSingle("collapsePortfolio")
                                .HtmlClass("component-collapse alignSubtitle")
                                .AsociatedCollapseAllSelector("[data-name=collapseAllPortfolio]")
                                .TargetRegionSelector("[data-name=\"portfolioAlignmentCountryStrategyTableMIF\"]")
                    )
                    <div>
                        @Confluence.LabelBold(Localization.GetText("CS.PortfolioSummary.MIF"))
                    </div>
                </div>
            </div>
            <div class="row mb60" data-name="portfolioAlignmentCountryStrategyTableMIF">
                <div class="col-md-12 mb10">
                    @Html.Partial("ReadPartial/PortfolioOperationsPortfolioAlignmentTableMIF", Model.PortfolioAlignmentCSListMIF)
                </div>
                <div class="col-md-12 space-line-int icon-inf">
                    <table>
                        <tr>
                            <td style="vertical-align: top" class="icon-container-align pr10">@Confluence.Information()</td>
                            <td class="text-container-align">
                                <p>
                                    @Confluence.Label(Localization.GetText("CS.Legends.PortfolioSummary.PortfolioAlignmentMIF.Included"), htmlClass: "infoText labelNormalNotBold")
                                </p>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @CountryStrategyCommon.CSResultsMatrixExportFunction(Url)

    @section scripts{
        <script type="text/javascript">

            $(document).ready(function () {
                var activeTab = '@ViewBag.ActiveTab';
                if (activeTab == 'tabPortfolioSummary') {
                    $('[dd-tab="#tabPortfolioSummary"]').click();
                }
            });

            registerCallback(function () {

                cantBeEditedMessage();

                $(document).on('click', '[name="edit"]', function (e) {
                    var url = '@Url.Action("EditPortfolio", "ResultMatrix", new { area = "CountryStrategy" })';
                    window.location.assign(url);
                });

                $(document).on('click', '[name="editActiveRM"]', function (e) {
                    var url = '@Url.Action("EditActiveRM", "ResultMatrix", new { area = "CountryStrategy" })';
                    window.location.assign(url);
                });

                $(document).on('click', '[name="objectiveNotAlignedLink"]', function (e) {
                    var code = $(this).attr('data-code');
                    var url = '@Url.Action("Read", "MonitoringResultMatrix", new { area = "CountryStrategy" })' +
                                                                             '?csObjectiveId=' + code +
                                                                             '&isAligned=' + false;
                    window.location.assign(url);
                });


                $(document).on('click', '[name="linkMonitoringByObjective"]', function (e) {
                    var source = $(this);
                    var objectiveId = source.attr('data-objectiveid');
                    var url = '@Url.Action("Read", "MonitoringResultMatrix", new { area = "CountryStrategy"})' +
                        '?csObjectiveId=' + objectiveId +
                        '&isAligned=' + true;
                    window.location.assign(url);
                });

                $(document).on('click', '[name="opertionNumberApprovedLink"]', function (e) {
                    var source = $(this);
                    var rowId = source.attr('data-rowId');
                    var typeInstrument = source.attr('data-typeInstrument');
                    var url = '@Url.Action("DetailsOperationsApprovedDataRead", "ResultMatrix", new { area = "CountryStrategy" })'
                                + '?rowId=' + rowId
                                + '&typeInstrument=' + typeInstrument;
                    window.location.assign(url);
                });

                $(document).on('click', '[name="opertionNumberAlignmentLink"]', function (e) {
                    var source = $(this);
                    var idRow = source.attr('data-idrow');
                    var idTypePortfolio = source.attr('data-typeportfolio');
                    var csObjectiveId = source.attr('data-csObjectiveId');
                    var csResultMatrixId = source.attr('data-csResultMatrixId');
                    var isOtherArea = source.attr('data-isOtherArea') == 'True';;

                    var url = '@Url.Action("DetailsOperationAlignmentDataRead", "ResultMatrix", new { area = "CountryStrategy" })'
                                + '?rowId=' + idRow
                                + '&typeOperationPortfolio=' + idTypePortfolio
                                + '&csObjectiveId=' + csObjectiveId
                                + '&csResultMatrixId=' + csResultMatrixId
                                + '&isOtherArea=' + isOtherArea;

                    window.location.assign(url);
                });

                function cantBeEditedMessage() {

                    var cantBeEditedMessage = '@cantBeEdited' == 'True';
                    var isExpired = '@isExpired' == 'True';

                    if (!cantBeEditedMessage && !isExpired) {
                        showMessage('@Localization.GetText("CS.ResultMatrix.Message.NotUpdatedOperation")' +
                                    ' ' +
                                    '@currentOperationNumber'
                                    );
                    }
                }

            });
        </script>
    }

}
