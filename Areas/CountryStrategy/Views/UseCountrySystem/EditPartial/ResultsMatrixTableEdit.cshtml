@using System.Globalization
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Models
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General
@using IDB.MW.Application.CountryStrategyModule.ViewModels.UseCountry

@model List<UserCountrySysResultMatrixRowViewModel>

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();


    var config = Html.RenderDataTable(Model);
    config.TableClass = "tableNormal";
    config.Name("resultMatrixDataTable")
    .PrimaryKey(m => m.SystemIndicatorId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(false)
    .UsePageMode(false)
    .UseDataTableNet(false)
    .Columns(columns =>
    {
        columns.Template(c => Confluence.InputDropDown(c.StrategicObjectiveTypeId.ToString(),
        "strategicObjective", ViewBag.StrategicObjectiveList, orderAsc: false,width:"150px"))
        .Header(Localization.GetText("CS.UseCountrySystem.ResultMatrix.StrategicObjetive"))
        .Attribute("style", c => "vertical-align: top;")
        .HeaderAttribute("style","width:150px;")
        .Persistent();

        columns.Template(c =>
        Confluence.InputText(c.ExpectedResult, "expectedResults", maxLength: 200, width: "100%"))
        .Header(Localization.GetText("CS.UseCountrySystem.ResultMatrix.ExpectedResults"))
        .Attribute("style", c => "vertical-align: top;")
        .Persistent();

        columns.Template(c =>
        Confluence.InputText(c.IndicatorName, "indicator", maxLength: 200, width: "100%"))
        .Header(Localization.GetText("CS.UseCountrySystem.ResultMatrix.Indicator"))
        .Attribute("style", c => "vertical-align: top;")
        .Persistent();

        columns.Template(c =>
        Confluence.InputText(c.Baseline, "baseline", width: "100px", maxLength: 140))
        .Header(Localization.GetText("CS.UseCountrySystem.ResultMatrix.Baseline"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header140px")
        .Persistent();

        columns.Template(c =>
        Confluence.InputText(c.MainTargets, "mainTargets", maxLength: 140, width: "100%"))
        .Attribute("style", c => "vertical-align: top;")
        .Header(Localization.GetText("CS.UseCountrySystem.ResultMatrix.MainTargets"))
        .Persistent();

        columns.Template(c =>
        Confluence.InputDropDown(c.TimmingTypeId.ToString(), "timming", ViewBag.TimmingList, orderAsc: false,width:"150px"))
        .Header(Localization.GetText("CS.UseCountrySystem.ResultMatrix.Timming"))
        .Attribute("style", c => "vertical-align: top;")
        .HeaderAttribute("style", "width:150px;")
        .Persistent();

        columns.Template(c => DrawAction(c, false))
        .Attribute("style", c => "vertical-align: top;padding-top: 7px;")
        .Persistent();

    }).RowTemplates(x =>
    {
        x.Create(RowTemplateType.FirstRow, DrawResultMatrixTemplate);
    });
}

@helper DrawResultMatrixTemplate(UserCountrySysResultMatrixRowViewModel model)
{
    <tr data-name="template-resultMatrixDataTable" class="template hide">
        <td style="vertical-align:top;">
            @Confluence.InputDropDown(string.Empty,
            "strategicObjective",
            ViewBag.StrategicObjectiveList,
            disabled: true,width:"150px")
        </td>
        <td style="vertical-align:top;">
            @Confluence.InputText(string.Empty,
            "expectedResults",
            disabled: true,
            maxLength:200,
            width:"100%")
        </td>
        <td style="vertical-align:top;">
            @Confluence.InputText(string.Empty,
            "indicator",
            disabled: true,
            maxLength:200,
            width:"100%")
        </td>
        <td style="vertical-align:top;">
            <div>
                @Confluence.InputText(string.Empty,
                "baseline", 
                width: "100px",
                maxLength: 140,
                disabled: true)
            </div>
        </td>
        <td style="vertical-align:top;">
            @Confluence.InputText(string.Empty,
                "mainTargets",
                width: "100%",
                maxLength: 140,
                disabled: true)
        </td>
        <td style="vertical-align:top;">
            @Confluence.InputDropDown(string.Empty,
            "timming",
            ViewBag.TimmingList,
            disabled: true,width:"150px")
        </td>
        <td style="vertical-align:top;padding-top: 7px;">
            @DrawAction(model, true)
        </td>
    </tr>
}

@helper DrawAction(UserCountrySysResultMatrixRowViewModel model, bool isDisabled)
{
    @Confluence.ButtonTrash(string.Empty, "removeResultMatrix", disabled: isDisabled)
}

@helper Baseline(UserCountrySysResultMatrixRowViewModel model)
{
    <div>
        @Confluence.InputText(model.Baseline,
        "baseline",
        width: "100px",
        maxLength: 140)
    </div>
}

@helper White(object model)
{
    <span></span>
    <span class="selected"></span>
}

@Html.Partial("Controls/DataTable", config)
<div class="text-center mt20">
    @Confluence.ButtonAddNewRows(Localization.GetText("CS.UseCountrySystem.ResultMatrix.NewRow"),
    "resultMatrixDataTable",
    name: "resultMatrixDataTable-newRow",
    action: "resultMatrixDataTableNewRow")
</div>




