@using System.Globalization

@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Areas.CountryStrategy.Models
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General
@using IDB.MW.Application.CountryStrategyModule.ViewModels.UseCountry

@model  CSStytemRecordTableViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatPercent = appSettings.FormatPercent;
    var validationDecimal = appSettings.ValidationDecimalExpReg;

    var config = Html.RenderDataTable(Model.CSStytemRecordRowViewModels);
    config.TableClass = "tableNormal";
    config.Name(Model.Name + "Table")
    .PrimaryKey(m => m.SystemRecordId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(false)
    .UseDataTableNet(false)
    .UsePageMode(false)
    .Columns(columns =>
    {
        columns.Template(c => UseCountrySystemType(c, Model.Name))
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.UseCountrySystems"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header170px")
        .Persistent();

        columns.Template(c => Confluence.InputNumber(c.BaseLineYear, Model.Name + "-BaselineYear", width: "100px", required: false, minValue: "0", maxValue: "9999"))
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.BaselineYear"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header140px")
        .Persistent();

        columns.Template(c => Baseline(c, Model.Name))
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.Baseline"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header140px")
        .Persistent();

        columns.Template(c => Confluence.InputNumber(c.EstimateUseYear, Model.Name + "-EstimateUseYear", width: "100px;", required: false, minValue: "0", maxValue: "9999"))
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.EstimateUseYear"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header140px")
        .Persistent();

        columns.Template(c => EstimatedUse(c, Model.Name))
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.EstimatedUse"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header140px")
        .Persistent();

        columns.Template(DrawMultiDropdown)
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.ForeseenActions"))
        .Attribute("style", c => "vertical-align: top; width: 25%;max-width: 25%;")
        .Persistent();

        columns.Template(c => Comment(c, Model.Name))
        .Header(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.Comments"))
        .Attribute("style", c => "vertical-align: top;")
        .CssHeaderClass("header170px")
        .Persistent();
    
    });
}

@helper DrawMultiDropdown(CSStytemRecordRowViewModel model)
{
    @(Html.MultiDropDown(Model.Name + "-ForeseenActions")
      .Items(ViewBag.ForeseenActionsList)
      .CanSelectGroup()
      .SelectedItems(model.ForeseenActionIds)
      .HtmlClass("forseenActionsCombo"))
}

@helper Baseline(CSStytemRecordRowViewModel model, string nameTable)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var validationPercentRegExp = appSettings.ValidationPercentRegExp;

    
    @Confluence.InputText(model != null ? model.BaseLine : string.Empty,
    nameTable + "-Baseline",
    expReg: validationPercentRegExp,
    width: "100px;",
    required: false,
    maxLength: 20,
    dataAttributes: new Dictionary<string, string> { { "type", "percent" } })
}


@helper EstimatedUse(CSStytemRecordRowViewModel model, string nameTable)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var validationPercentRegExp = appSettings.ValidationPercentRegExp;

    @Confluence.InputText(model.EstimatedUse,
    nameTable + "-EstimatedUse",
    width: "100px;",
    expReg: validationPercentRegExp,
    required: false,
    dataAttributes: new Dictionary<string, string> { { "type", "percent" } })
}

@helper UseCountrySystemType(CSStytemRecordRowViewModel model, string nameTable)
{
    @(model.UseCountrySystemType)
    @Confluence.InputHidden(model.SystemRecordId.ToString(), nameTable + "-Id")
}

@helper White(object model)
{
    <span></span>
    <span class="selected"></span>
}

@helper Comment(CSStytemRecordRowViewModel model, string nameTable)
{
    @Confluence.InputTextArea(model.Comment, 
                              name:nameTable + "-Comment", 
                              required: false, 
                              htmlClass: "ucs-comment",
                              width:"100%",
                              height: "90px",
                              maxLength:140)
}


@Html.Partial("Controls/DataTable", config)






