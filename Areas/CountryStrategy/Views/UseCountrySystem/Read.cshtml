@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Infrastructure.SecurityService.Enums
@using IDB.Presentation.MVC4.Areas.CountryStrategy.Models
@using IDB.Presentation.MVC4.Areas.CountryStrategy.HtmlHelpers
@using IDB.MW.Application.CountryStrategyModule.ViewModels.UseCountry
@using IDB.MW.Application.CountryStrategyModule.Enums

@model UseCountrySystemViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;
    string currentOperationNumber = Model.CurrentOperaionNumberActive;
    bool isExpired = Model.IsExpired;
    bool cantBeEdited = Model.IsCurrentOperationActive;
    bool isActive = Model.OperationStatus == CSOperationStatusEnum.Active;
}
<input hidden data-idb-pagename="UI-CS-007-UseOfCountrySystems" />

@if (Model != null)
{
    <div class="row mb30">
        <div class="col-md-12">
            @Html.Partial("ReadPartial/Buttons")
            @Confluence.LabelMainTitle(Localization.GetText("CS.UseCountrySystem.Title"))
        </div>
    </div>
    <div class="row mb5">
        <div class="col-md-2">
            @Confluence.LabelsGroup(Localization.GetText("CS.UseCountrySystem.LastUpdate"),
        contentAlways: FormatHelper.Format(Model.LastUpdate, formatDate))
        </div>
        <div class="col-md-2">
            @Confluence.LabelsGroup(Localization.GetText("CS.UseCountrySystem.Status"),
        contentAlways: Model.Status)
        </div>
        <div class="col-md-2">
            @Confluence.LabelsGroup(Localization.GetText("CS.UseCountrySystem.Username"),
        contentAlways: Model.Username)
        </div>
    </div>
    <div class="row mb5">
        <div class="col-md-12">
            @Html.Partial("ReadPartial/ButtonsExport")
        </div>
    </div>
    <div class="row mb10">
        <div class="col-md-12">
            <div class="float-right">
                @(Html.CollapseAll("collapseAll")
                .CollapseSingleSelector("[data-name=\"collapseComponent\"]"))
            </div>
        </div>
    </div>
    <div class="page ml30">
        <div class="row mb20">
            <div class="col-md-12">
                @(Html.CollapseSingle("collapseComponent")
               .HtmlClass("component-collapse alignSubtitle")
               .AsociatedCollapseAllSelector("[data-name=\"collapseAll\"]")
               .TargetRegionSelector("#userCountrySysResultMatrixSection")
                )
                <div>
                    @Confluence.LabelBold(Localization.GetText("CS.UseCountrySystem.ResultMatrix.Title"))
                </div>
            </div>
        </div>
        <div class="row mb30" id="userCountrySysResultMatrixSection">
            <div class="col-md-12 pl40">
                @foreach (var strategicObjective in Model.UCSStrategicObjective)
                {
                    @Html.Partial("ReadPartial/UCSStrategicAlignment", strategicObjective)
                }
            </div>
        </div>
        <div class="row mb10">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("CS.UseCountrySystem.ResultMatrix.DescriptionText"), htmlClass: "use-country-RM-title")
            </div>
        </div>
        <div class="row mb10">
            <div class="col-md-12">
                @(Html.CollapseSingle("collapseComponent")
               .HtmlClass("component-collapse alignSubtitle")
               .AsociatedCollapseAllSelector("[data-name=\"collapseAll\"]")
               .TargetRegionSelector("#financialManagementSection")
                )
                <div>
                    @Confluence.LabelBold(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.FinancialManagementTitle"), dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "testPermiso" } })
                </div>
            </div>
        </div>
        <div class="row mb30" id="financialManagementSection">
            <div class="col-md-12">
                @Html.Partial("ReadPartial/CSStytemRecordTableRead",
            new CSStytemRecordTableViewModel("FinancialManagement")
            .SetCSStytemRecordRowViewModels(Model.FinancialManagement))
            </div>
        </div>
        <div class="row mb10">
            <div class="col-md-12">
                @(Html.CollapseSingle("collapseComponent")
               .HtmlClass("component-collapse alignSubtitle")
               .AsociatedCollapseAllSelector("[data-name=\"collapseAll\"]")
               .TargetRegionSelector("#procurementSection")
                )
                <div>
                    @Confluence.LabelBold(Localization.GetText("CS.UseCountrySystem.CsSystemRecord.ProcurementTitle"))
                </div>
            </div>
        </div>
        <div class="row mb60" id="procurementSection">
            <div class="col-md-12">
                @Html.Partial("ReadPartial/CSStytemRecordTableRead",
                new CSStytemRecordTableViewModel("Procurement")
                .SetCSStytemRecordRowViewModels(Model.Procurement))
            </div>
        </div>
    </div>
    <div class="row mb30">
        <div class="col-md-12">
            <div class="float-right">
                @Html.Partial("ReadPartial/Buttons")
            </div>
        </div>
    </div>
}

@section scripts{
    @CountryStrategyCommon.UseCountrySystemNavigationRead(Url)
    @CountryStrategyCommon.UseCountrySystemExportFunction(Url)

    <script type="text/javascript">
            registerCallback(function () {

                var razor = {
                    Expired: '@isExpired',
                    Active: '@isActive',
                    CanEdit: '@cantBeEdited',
                    OperationNumber: '@currentOperationNumber'
                };

                cantBeEditedMessage();

                function cantBeEditedMessage() {

                    var cantBeEditedMessage =  razor.CanEdit == 'True';
                    var isExpired = razor.Expired == 'True';
                    var isActive = razor.Active == 'True';

                    if (!cantBeEditedMessage && !isExpired && isActive) {
                        showMessage('@Localization.GetText("CS.UseCountrySystem.Message.NotUpdatedOperation")' +
                                    ' ' + razor.OperationNumber
                                    );
                    }
                }
            });
    </script>
}
