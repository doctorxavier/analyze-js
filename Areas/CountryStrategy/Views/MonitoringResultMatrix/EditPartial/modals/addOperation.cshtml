@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General


@Display.AddModalButton(new ModalViewModel(contentSelector: "[data-name=\"addOperation-modal\"]",
        title: Localization.GetText("CS.Monitoring.OperationTable.AddOperation"),
        type: CssClass.ModalInformationNoIcon,
        moveOriginalContent: true,
        name: "btn-open-popup-addOperation",
        closeOnOverlay: false,
        allowClose: true,
        actionOnClose: "")
    .AddButton(name: "btn-addOperation-cancel",
                    text: Localization.GetText("Common.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
    .AddButton(name: "btn-addOperation-add",
                    text: Localization.GetText("Common.Add"),
                    type: CssClass.Button01,
                    callback: "addOperation",
                    closeAtEnd: true))

<div data-name="addOperation-modal" class="hide modalBody" style="padding-bottom:0px;">
    @* ToDo: OPTIMA-5098 Delete after they will review usability
            
        <div class="row">
            <div class="col-md-12 mb30">
                @Confluence.Label(Localization.GetText("CS.Monitoring.Modal.InstructionsAddOperation"))
            </div>
        </div>*@
    <div class="row">
        <div class="col-md-12 mb5">
            @Confluence.Label(Localization.GetText("CS.Monitoring.Modal.SelectOperationNumber"))
        </div>
    </div>
    <div class="row mb30">
        <div class="col-md-12">
            @Confluence.InputDropDownAsync(string.Empty,
             name: "operationsSearch",
                      searchUrl: Url.Action("FindOperation", "MonitoringResultMatrix", new { area = "CountryStrategy" }), width: "30%")
        </div>
    </div>
</div>