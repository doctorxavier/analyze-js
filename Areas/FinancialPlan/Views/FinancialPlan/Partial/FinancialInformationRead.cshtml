@using System.Linq
@using System.Collections.Generic
@using IDB.MW.Application.FinancialPlanModule.ViewModels
@using IDB.Presentation.MVC4.Areas.FinancialPlan.Models
@using IDB.MW.Application.FinancialPlanModule.ViewModels
@using IDB.MW.Application.FinancialPlanModule.Helpers;

@model FinancialPlanViewModel

<div class="row financial-header-items">
    <ul class="financial-information financial-information-style financial-information-hide instructions-container header-buttons-non-list">
        @if (FinancialPlanHelper.IsInExecution(Model.Mode))
        {
            <li class="pull-left">@Confluence.InformationSection(Localization.GetText("FP.INFORMATION.InstructionsInEditModeForExecution"))</li>
        }
        else
        {
            <li class="pull-left">@Confluence.InformationSection(Localization.GetText("FP.INFORMATION.InstructionsInEditMode"))</li>
        }
    </ul>
    <div class="col-md-12 buttons-panel">
        <div class="col-md-2">
            @{List<SelectListItem> financialContractViewModel = Model.FinancialContracts.ConvertToSelectItems();}
            @if (financialContractViewModel.Count > 0)
            {
                @Confluence.InputDropDown(!string.IsNullOrEmpty(Model.ContractNumber) ? Model.ContractNumber : financialContractViewModel.First().Value, 
                "SearchFinancialContract", financialContractViewModel, width: "100%", required: false, htmlClass: "SearchFinancialContractDropdown")
            }
        </div>
        <div class="col-md-7 col-md-offset-3">
            @Html.Partial("Partial/Buttons", Model)
        </div>
    </div>
</div>
<div class="financial-header-items-columns headerInformationBlock">
    <section class="col-md-4 financial-information-column">
        <article class="financial-information-column-content col-md-6">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.OriginalIDB"),
            contentAlways: Confluence.LabelDecimal(Model.OriginalIDB, dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.OriginalIDB.ToString() } }))
        </article>
        <article class="financial-information-column-content col-md-6">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.CurrentIDB"), 
            contentAlways: Confluence.LabelDecimal(Model.CurrentIDB, dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.CurrentIDB.ToString() } }))
        </article>
        <article id="LocalCounterpart" class="financial-information-column-content col-md-6" data-tooltipMessage="@Localization.GetText("FP.Tooltip.LocalCounterpart")">
            @Confluence.LabelsGroup(Localization.GetText("FP.TASKTABLE.LocalCounterpart"),
            contentAlways: Confluence.LabelDecimal(Model.LocaleCounterpart,
            dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.LocaleCounterpart.ToString() } }))
        </article>
        <article id="CoFinancing" class="financial-information-column-content col-md-6" data-tooltipMessage="@Localization.GetText("FP.Tooltip.CoFinancing")">            
            @Confluence.LabelsGroup(Localization.GetText("FP.TASKTABLE.CoFinancing"),
            contentAlways: Confluence.LabelDecimal(Model.CoFinancing,
            dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.CoFinancing.ToString() } }))
        </article>
    </section>
    <section id="js_informationMiddle" class="col-md-4 financial-information-column">
        <article id="TotalAvailableFunds" class="financial-information-column-content col-md-6">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.TotalAvailableFunds"), 
            contentAlways: Confluence.LabelDecimal(Model.TotalAvailableFounds, 
            dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.TotalAvailableFounds.ToString() } }))
        </article>
        <article id="PercentToJustify" class="financial-information-column-content col-md-6 js_changeMode">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.%ToJustify"), contentAlways: Confluence.LabelInteger(Model.PercentToJustify))
        </article>

        <article id="PlanningPeriodCuota" class="financial-information-column-content @FinancialPlanHelper.PlanningPeriodBudgetQuotaColumnsClass(Model.Mode)" data-pagemode="read">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.PlanningPeriodBudgetQuota"), contentAlways: Confluence.LabelDecimal(Model.PlanningPeriodBudgetQuota))
        </article>
        
        <article id="planningPeriodBudgetQuota" class="financial-information-column-content js_changeMode @FinancialPlanHelper.PlanningPeriodBudgetQuotaColumnsClass(Model.Mode)" data-pagemode="edit">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.PlanningPeriodBudgetQuota"), 
                contentAlways: Confluence.InputDecimal(value: Model.PlanningPeriodBudgetQuota, name: "InputPlanningPeriodBudgetQuota",
                dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.PlanningPeriodBudgetQuota.ToString() } }))
        </article>

        <article id="MinimumAmountJustified" class="financial-information-column-content col-md-6 js_changeMode">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.MinimumAmountJustified"), 
            contentAlways: Confluence.LabelDecimal(Model.MinimumAmountToBeJustified, 
            dataAttributes: new Dictionary<string, string>() { { "usdValue", Model.MinimumAmountToBeJustified.ToString() } }))
        </article>
    </section>

    <section class="col-md-4 financial-information-column js_changeMode" id="js_sectionCurrency">
        <article class="financial-information-column-content col-md-6">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.CurrentVersion"), contentAlways: Confluence.Label(Model.CurrentVersion))
        </article>
        <article class="financial-information-column-content col-md-6 lastUpdateField">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.LastUpdate"), contentAlways: Confluence.Label(Model.LastUpdate))
        </article>
        <article class="financial-information-column-content col-md-6">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.FinancialPlanStatus"), contentAlways: Confluence.Label(Model.FinancialPlanStatus))
        </article>
        <article class="financial-information-column-content col-md-6" data-pagemode="edit">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.ProjectionsEnteredIn"), contentAlways: Confluence.InputDropDown(value: "USD",
           elements: Model.ListExchange.ConvertExechangeToSelectItems(),
           name: "inputDropDownForeignExchange",
           htmlClass: "widthDropdownCurrency",
           dataAttributes: new Dictionary<string, string>() { { "currencyCount", Model.ListExchange.Count().ToString() } }))
        </article>
        <article class="financial-information-column-content col-md-6" data-pagemode="edit">
            @Confluence.LabelsGroup(Localization.GetText("FP.Filter.ExchangeRateUSD"), contentAlways: Confluence.Label(htmlClass: "labelExchangeRateUSD", text: "0.00"))
        </article>
        <article class="financial-information-column-content col-md-6 lastUpdatedByField">
            @Confluence.LabelsGroup(Localization.GetText("FP.INFORMATION.LastUpdatedBy"), contentAlways: Confluence.Label(Model.LastUpdatedBy))
        </article>

    </section>
    @Html.Partial("Partial/FilterSearch", Model)
</div>
