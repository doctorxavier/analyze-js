

@using System.Globalization
@using System.Web.WebPages
@using System.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Application.CPDModule.ViewModels.CSProgressToDate

@model List<OperationDetailViewModel>

@{

    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var isIIC = Model.LastOrDefault().IsIIC;
    var HeaderAmount = Model.LastOrDefault().HeaderColumnAmount;

    var config = Html.RenderDataTable(Model);
    config.TableClass = "tableNormal";
    config.Name("operationDetailsTable")
    .PrimaryKey(m => m.RowId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(false)
    .UseDataTableNet(false)
    .UsePageMode(false)
    .Columns(columns =>
    {
        columns.Template(c => LinkProductNumber(c.OperationNumber, c.IsLink))
        .Header(Localization.GetText("CS.OperationDetails.OperationDetailsTable.OperationNumber"))
        .CssClass("min-width-120")
        .Persistent();

        columns.Bound(c => c.OperationName)
        .Header(Localization.GetText("CS.OperationDetails.OperationDetailsTable.OperationName"))
        .Persistent();

        columns.Bound(c => c.OperationYear)
        .Header(Localization.GetText("CS.OperationDetails.OperationDetailsTable.OperationYear"))
        .CssClass("text-right")
        .Persistent();

        columns.Bound(c => c.StatusOverallStage)
        .Header(Localization.GetText(isIIC ? "CS.OperationDetails.OperationDetailsTable.StatusOverallStage" : "CS.Monitoring.StatusOverallStage"))
        .Persistent();

        columns.Bound(c => FormatHelper.Format(c.Amount ?? 0, formatDecimal))
        .CssClass("text-right")
        .Header(Localization.GetText(HeaderAmount))
        .Persistent();
    });

    @Html.Partial("Controls/DataTable", config)
}

@helper LinkProductNumber(string operationNumber, bool isLink)
{
    if (isLink)
    {
        var url = "/Operation/" + operationNumber;

        @Confluence.LabelLink((operationNumber ?? ""),
        name: "operationNumberLink",
        dataAttributes: new Dictionary<string, string> { { "url", url } },
        htmlClass: "linkStyle")
    }
    else
    {
        @Confluence.Label(operationNumber ?? "");
    }
}



