@using IDB.MW.Application.CPDModule.ViewModels.CSProgressToDate
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Models

@model ProgressToDateTabViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;

    var config = Html.RenderDataTable(Model.IDBLendingCSPeriodByFund);
    config.TableClass = "tableNormal";
    config.Name("idbLendingTable")
    .PrimaryKey(m => m.RowId.ToString())
    .AddPrimaryKeyToName(false)
    .UseDataTableNet(false)
    .UsePageMode(false)
    .Columns(columns =>
    {
        columns.Bound(c => c.FundName)
            .Header(Localization.GetText("CPD.CSProgressToDate.ProgressToDateTab.IDBLending.Fund"))
            .Persistent();

        columns.Bound(c => FormatHelper.Format(c.TotalAmount, formatDecimal))
            .Header(Localization.GetText("CPD.CSProgressToDate.ProgressToDateTab.IDBLending.TotalAmountUSD"))
            .CssClass("textalign-right")
            .Persistent();
    });
    
    if(Model.IsCSMigrated)
    {
        config.RowTemplates(x =>
        {
            x.Create(RowTemplateType.LastRow, y => totalLine(Model.IDBLendingCSPeriodByFund));
        });
    }
}

@Html.Partial("Controls/DataTable", config)

@helper totalLine(List<IDBLendingCSPeriodRowViewModel> list)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var total = list.Sum(x => x.TotalAmount);

    <tr class="bold sumAmountsColor">
        <td class="">
            @Localization.GetText("COMMON.Total")
        </td>
        <td class="bold textalign-right">
            @FormatHelper.Format(total, formatDecimal)
        </td>
    </tr>
}