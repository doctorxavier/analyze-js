@using IDB.MW.Application.CPDModule.ViewModels.CSProgressToDate;
@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General
@using IDB.Presentation.MVC4.Areas.CPD.Models
@using IDB.Presentation.MVC4.Areas.CPD.Controllers
@using IDB.Architecture.Language

@model ProgressToDateViewModel

@Html.Partial("EditPartial/Modals/EditModals")

@if (Model != null)
{
    <div class="row mb30">
        <div class="col-md-12">
            @Html.Partial("EditPartial/Buttons")
            @Confluence.LabelMainTitle(Localization.GetText("CPD.CSProgressToDate.Title"))
        </div>
    </div>
    <div class="page">

        @Confluence.Tabs(new Dictionary<string, string>()
        {{NavigationAttributes.TAB_NAME_PROGRESSTODATE, Localization.GetText("CPD.CSProgressToDate.ProgressToDateTab.Title")},
        {NavigationAttributes.TAB_NAME_PD_USEOFCS, Localization.GetText("CPD.CSProgressToDate.UseOfCSTab.Title")}})

        <div class="tab-content mt20">
            @if (Model.ProgressToDateTab != null && ViewBag.ActiveTab == NavigationAttributes.TAB_NAME_PROGRESSTODATE)
{
    <div class="tab-pane pl30 " id="@(NavigationAttributes.TAB_NAME_PROGRESSTODATE)"
         name="formProgressToDate"
         data-parsley-validate="data-parsley-validate"
         data-parsley-excluded="[disabled]"
         data-ignore-nullable-values="true"
         data-url="@Url.Action("SaveProgressToDate", "CSProgressToDate", new { area = "CPD" })">
        <div data-fake-pagemode="edit">
            <input type="hidden" value="@ViewBag.SerializedViewModel" id="hideProgressToDateModel" name="hideProgressToDateModel" />
            @Html.Partial("EditPartial/EditProgressToDatePartial", Model.ProgressToDateTab)
        </div>
    </div>
}
            @if (Model.UseOfCountrySystemsTab != null && ViewBag.ActiveTab == NavigationAttributes.TAB_NAME_PD_USEOFCS)
{
    <div class="tab-pane pl30 " id="@(NavigationAttributes.TAB_NAME_PD_USEOFCS)"
         name="formUseOfCountrySystems"
         data-parsley-validate="data-parsley-validate"
         data-parsley-excluded="[disabled]"
         data-ignore-nullable-values="true"
         data-url="@Url.Action("SaveUseOfCountrySystems", "CSProgressToDate", new { area = "CPD" })">
        <div data-fake-pagemode="edit">
            <input type="hidden" value="@ViewBag.SerializedViewModel" id="hideUseOfCountrySystemsModel" name="hideUseOfCountrySystemsModel" />
            @Html.Partial("EditPartial/EditUseOfCountrySystemsPartial", Model.UseOfCountrySystemsTab)
        </div>
    </div>
}
        </div>
    </div>
    <div class="row mb30">
        <div class="col-md-12">
            @Html.Partial("EditPartial/Buttons")
        </div>
    </div>

    @section scripts{

        @CPDCommon.ChangeFakePageModeToReal()

        <script type="text/javascript">

            /*--------------- Navigation Tabs --------------- */
            registerCallback(function () {
                $(document).ready(function () {
                    SelectTab('@ViewBag.ActiveTab');
                    $('[dd-tab]:not(.active)').addClass('disabled');
                });

                function SelectTab(tabName) {
                    switch (tabName) {
                        case '@(NavigationAttributes.TAB_NAME_PROGRESSTODATE)':
                            $('[dd-tab="#@(NavigationAttributes.TAB_NAME_PROGRESSTODATE)"]').click();
                            break;
                        case '@(NavigationAttributes.TAB_NAME_PD_USEOFCS)':
                            $('[dd-tab="#@(NavigationAttributes.TAB_NAME_PD_USEOFCS)"]').click();
                            break;
                    }
                }
            });

            /*Use of Country Systems Progress to Date*/
            registerCallback(function () {
                function SetVisivilityFinancialManagmentYear() {
                    var source = $('[name="financialManagment"]');

                    var regions = $('[data-section-financial]');
                    var selected = source.val();
                    regions.addClass('hide');

                    var dropsValues = regions.find('[name="financialManagmentYear"]');
                    dropsValues.attr('disabled', 'disabled');

                    regions = regions.filter(function (item, key) {
                        var region = $(this);
                        var id = region.attr('data-section-financial');
                        if (selected != null) {
                            return selected.indexOf(id) >= 0;
                        } else {
                            return false;
                        }
                    });
                    regions.removeClass('hide');
                    regions.find('[name="financialManagmentYear"]').removeAttr('disabled');

                    regions = $('[data-section-financial].hide');
                    var dropsValues = regions.find('[name="financialManagmentYear"]');
                    dropsValues.val('');

                    var drops = dropsValues.nextAll('ul.dropdown-menu');
                    var textSelectAnOption = drops.children(':first').find('a').text().trim();
                    regions.find('.valueText').html(textSelectAnOption);
                    regions.find('div.dropdown').addClass('placeholder');

                    drops.find('li').removeAttr('dd-selected');
                    drops.find('li:first').attr('dd-selected', '');

                    initParsley();
                    destroyParsley();
                    initParsley();
                    destroyParsley();
                }

                function SetVisivilityProcurementYear() {
                    var source = $('[name="Procurement"]');

                    var regions = $('[data-section-procurement]');
                    var selected = source.val();
                    regions.addClass('hide');

                    var dropsValues = regions.find('[name="procurementYear"]');
                    dropsValues.attr('disabled', 'disabled');

                    regions = regions.filter(function (item, key) {
                        var region = $(this);
                        var id = region.attr('data-section-procurement');
                        if (selected != null) {
                            return selected.indexOf(id) >= 0;
                        } else {
                            return false;
                        }
                    });
                    regions.removeClass('hide');
                    regions.find('[name="procurementYear"]').removeAttr('disabled');


                    regions = $('[data-section-procurement].hide');
                    var dropsValues = regions.find('[name="procurementYear"]');
                    dropsValues.val('');

                    var drops = dropsValues.nextAll('ul.dropdown-menu');
                    var textSelectAnOption = drops.children(':first').find('a').text().trim();
                    regions.find('.valueText').html(textSelectAnOption);
                    regions.find('div.dropdown').addClass('placeholder');

                    drops.find('li').removeAttr('dd-selected');
                    drops.find('li:first').attr('dd-selected', '');

                    initParsley();
                    destroyParsley();
                    initParsley();
                    destroyParsley();
                }

                $(document).on('change', '[name="financialManagment"]', function (key, item) {
                    SetVisivilityFinancialManagmentYear();
                });

                $(document).on('change', '[name="Procurement"]', function (key, item) {
                    SetVisivilityProcurementYear();
                });

                SetVisivilityFinancialManagmentYear();
                SetVisivilityProcurementYear();
            });

            /*--------------- Objectives ---------------*/
            registerCallback(function () {
                $(document).on('change', '[name="objectives"]', function (key, item) {
                    var source = $(this);
                    var regions = $('[data-strategyObjective]');
                    var selected = source.val();
                    regions.addClass('hide');
                    regions.find('[name="SecurityObjectiveText"]').attr('disabled', 'disabled');

                    regions = regions.filter(function (item, key) {
                        var region = $(this);
                        var id = region.attr('data-strategyObjective');
                        if (selected != null) {
                            return selected.indexOf(id) >= 0;
                        } else {
                            return false;
                        }
                    });
                    regions.removeClass('hide');
                    regions.find('[name="SecurityObjectiveText"]').removeAttr('disabled');

                    initParsley();
                    destroyParsley();
                    initParsley();
                    destroyParsley();
                });
            });

            function checkObjective(objectivesIds, id) {
                var check = false;
                if (objectivesIds != null) {
                    for (var i = 0; i < objectivesIds.length; i++) {
                        if (objectivesIds[i] == id) {
                            check = true;
                        }
                    }
                }
                return check;
            }

            /*--------------- Comments ---------------*/
            registerCallback(function () {
                $(document).on('click', '[name="idbLending-AddComment"]', function () {
                    var buttonSection = $('[name="idbLending-ButtonSection"]');
                    var regionToShow = $('div[name="idbLending-TextSection"]');
                    regionToShow.removeClass('hide');
                    buttonSection.addClass('hide');
                    var textArea = regionToShow.find('textarea[name="idbLending-CommentArea"]');
                    textArea.removeAttr('disabled');

                    initParsley();
                    destroyParsley();
                    initParsley();
                    destroyParsley();

                });

                $(document).on('click', '[name="idbLending-DeleteComment"]', function () {
                    var button = $('[name="btn-open-popup-comment-idbL-remove"]');
                    button.click();

                });

                $(document).on('click', '[name="portfolioAlignment-AddComment"]', function () {
                    var buttonSection = $('[name="portfolioAlignment-ButtonSection"]');
                    var regionToShow = $('div[name="portfolioAlignment-TextSection"]');
                    regionToShow.removeClass('hide');
                    buttonSection.addClass('hide');
                    var textArea = regionToShow.find('textarea[name="portfolioAlignment-CommentArea"]');
                    textArea.removeAttr('disabled');

                    initParsley();
                    destroyParsley();
                    initParsley();
                    destroyParsley();
                });

                $(document).on('click', '[name="portfolioAlignment-DeleteComment"]', function () {
                    var button = $('[name="btn-open-popup-comment-portAlgn-remove"]');
                    button.click();
                });
            });

            function RemoveCommentIDBLending(event, source) {
                var promise = $.Deferred();
                var regionToHide = $('div[name="idbLending-TextSection"]');
                regionToHide.addClass('hide');
                var textArea = regionToHide.find('textarea[name="idbLending-CommentArea"]');
                textArea.attr('disabled', 'disabled');
                textArea.val('@(string.Empty)');
                var buttonSection = $('[name="idbLending-ButtonSection"]');
                buttonSection.removeClass('hide');
                promise.resolve();
                return promise;
            }

            function RemoveCommentPortAlgn(event, source) {
                var promise = $.Deferred();
                var regionToHide = $('div[name="portfolioAlignment-TextSection"]');
                regionToHide.addClass('hide');
                var textArea = regionToHide.find('textarea[name="portfolioAlignment-CommentArea"]');
                textArea.attr('disabled', 'disabled');
                textArea.val('@(string.Empty)');
                var buttonSection = $('[name="portfolioAlignment-ButtonSection"]');
                buttonSection.removeClass('hide');
                promise.resolve();
                return promise;
            }
            /*--------------- Save/Cancel Mode ---------------*/
            registerCallback(function () {
                $(document).on('click', '[name="save-PTD"]', function (e) {
                    var formSelector = '#@(NavigationAttributes.TAB_NAME_PROGRESSTODATE)';
                    var hiddenViewModelSelector = '#hideProgressToDateModel';
                    Save(formSelector, hiddenViewModelSelector);
                });

                $(document).on('click', '[name="save-UseCS"]', function (e) {
                    var formSelector = '#@(NavigationAttributes.TAB_NAME_PD_USEOFCS)';
                    var hiddenViewModelSelector = '#hideUseOfCountrySystemsModel';
                    Save(formSelector, hiddenViewModelSelector);
                });

                $(document).on('click', '[name="cancel-PTD"]', function () {
                    var modalBtn = $('[name="btn-open-popup-cancel"]');
                    modalBtn.click();
                });

                $(document).on('click', '[name="cancel-UseCS"]', function () {
                    var modalBtn = $('[name="btn-open-popup-cancel"]');
                    modalBtn.click();
                });
            });

            function Save(formSelector, hiddenViewModelSelector) {
                var response = saveContainer($(formSelector), hiddenViewModelSelector, false, null, null, false, true, null);
                if (response !== false) {
                    response.done(function (data) {
                        if ((data.ErrorMessage != null) && (data.ErrorMessage != "")) {
                            showMessage(data.ErrorMessage);
                        }
                    });
                }
            }

            function CancelEditMode() {
                var promise = $.Deferred();
                var url = '@Url.Action("Cancel", "CSProgressToDate", new { area = "CPD"})';
                var tabName = $('.tabs li.active').attr('dd-tab').substr(1);
                url = url + '?tabName=' + tabName;
                LocationAssign(url);
                promise.resolve();
                return promise;
            }
        </script>
    }
}