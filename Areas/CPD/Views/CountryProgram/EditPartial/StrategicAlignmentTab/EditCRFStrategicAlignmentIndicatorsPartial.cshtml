@using IDB.MW.Application.CPDModule.ViewModels.CountryProgram

@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.Architecture.Language

@model List<StrategicAlignmentIndicatorRowViewModel>

 @{
     var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
     var formatPercentage = appSettings.FormatPercent;

     var config = Html.RenderDataTable(Model);
     config.TableClass = "tableNormal";
     var greather2017 = Model[Model.Count() - 1].Greather2017;
     config.Name("CRFStrategicAlignmentIndicators")
.PrimaryKey(m => m.RowId.ToString())
.AddPrimaryKeyToName(false)
.UseDataTableNet(false)
.UsePageMode(false)
.Columns(columns =>
{
  columns.Template(c => ColumnName(c))
  .CssClassDynamic(c => GetRowShadow(c))
  .Persistent();

  columns.Template(c => ColumnPercentageSG(c))
  .CssClassDynamic(c => GetRowShadow(c))
  .CssClass("textalign-right maxw65")
  .Persistent();

  columns.Template(c => ColumnPercentageNSG(c))
  .CssClassDynamic(c => GetRowShadow(c))
  .CssClass("textalign-right maxw65")
  .Persistent();

});

     config.UseCustomHeader = true;
     config.CustomHeader = (@<thead>
        <tr>
            <th></th>
            <th colspan="2">@Localization.GetText("CPD.CountryProgram.StrategicAligment.TableHeader.Indicators.PercentajeLending")</th>
        </tr>
        <tr>
            <th></th>
            @if (!greather2017)
            {
                <th>@Localization.GetText("CPD.CountryProgram.StrategicAligment.TableHeader.Indicators.SG")</th>
                <th>@Localization.GetText("CPD.CountryProgram.StrategicAligment.TableHeader.Indicators.NSG")</th>
            }
            else
            {
                <th>@Localization.GetText("CPD.CountryProgram.StrategicAligment.TableHeader.Indicators.IDB")</th>
                <th>@Localization.GetText("CPD.CountryProgram.StrategicAligment.TableHeader.Indicators.IDBInvest")</th>
            }
        </tr>
    </thead>);
}

@Html.Partial("Controls/DataTable", config)

@helper ColumnName(StrategicAlignmentIndicatorRowViewModel row)
{
    if(row.IsBold)
    {
        @Confluence.LabelBold(row.Name)
    }
    else 
    {
        @Confluence.Label(row.Name)
    }   
}

@helper ColumnPercentageSG(StrategicAlignmentIndicatorRowViewModel row)
{
    var tableName = "CRFStrategicAlignmentIndicators";

    if (!row.IsBold)
    {
        @Confluence.InputDecimal(
            value: row.PercentageSG,
            name: tableName + "-Percentage",
            required: false,
            minValue: "0",
            maxValue: "100",
            decimalPrecision: 2,
            htmlClass: "textalign-right",
            width: "100%")
        @Confluence.InputHidden(row.RowTypeId.ToString(), tableName + "-RowTypeId");
    }
}

@helper ColumnPercentageNSG(StrategicAlignmentIndicatorRowViewModel row)
{
    if (!row.IsBold)
    {
            @Confluence.Label(row.PercentageNSG.ToString())
        }
    }

@functions{
   private static string GetRowShadow(StrategicAlignmentIndicatorRowViewModel row)
   {
       var cssClass = string.Empty;

       if (row.IsBold)
       {
          cssClass = "rowShadow rowBold";
       }

         return cssClass;
    }
}
