@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.CPDModule.ViewModels.CountryProgram
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Models
@using IDB.MVCControls.General.Helpers

@model  List<ExpectedDisbursementsRowViewModel>

@{
    var config = Html.RenderDataTable(Model);
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var greather2017 = Model.Select(x => x.Greather2017).LastOrDefault();

    config.TableClass = "tableNormal";
    config.Name("expectedDisbursement")
    .PrimaryKey(m => m.RowId.ToString())
    .AddPrimaryKeyToName(false)
    .UseDataTableNet(false)
    .UsePageMode(false)
    .Columns(columns =>
    {
        columns.Template(c => SGNumOperations(c, c.SGNumberOfOperations))
        .CssClass("textalign-right w200")
        .Persistent();

        columns.Template(c => SGTotalAmount(c, c.SGTotalAmount))
        .CssClass("textalign-right")
        .Persistent();

        columns.Bound(c => c.NSGNumberOfOperations)
        .CssClass("textalign-right w200 textalign-middle")
        .Persistent();

        columns.Bound(c => c.NSGTotalAmount.HasValue ? FormatHelper.Format(c.NSGTotalAmount, formatDecimal) : null)
        .CssClass("textalign-right textalign-middle")
        .Persistent();

        columns.Template(c => NSGNumOperations(c, c.NSGNumberOfOperations))
        .CssClass("hide")
        .Persistent();

        columns.Template(c => NSGTotalAmount(c, c.NSGTotalAmount))
        .CssClass("hide")
        .Persistent();

    });

    config.UseCustomHeader = true;
    config.CustomHeader = (
        @<thead>
            <tr>
                <th colspan="2">@Localization.GetText("CPD.PortfolioSummary.IDB.ExpectedApproval")</th>
                @if (greather2017)
                {
                    <th colspan="2">@Localization.GetText("CS.PortfolioSummary.IDBInvest.Financial")</th>
                }
                else
                {
                    <th colspan="2">@Localization.GetText("CS.PortfolioSummary.IIC.Financial")</th>
                }
            </tr>
            <tr>
                <th>@Localization.GetText("CS.PortfolioSummary.PortfolioAlignmentTable.NumberOperations")</th>
                <th>@Localization.GetText("CPD.CountryProgram.ExpectedDisbursements.TotalDisbursedAmountUSD")</th>
                <th>@Localization.GetText("CS.PortfolioSummary.PortfolioAlignmentTable.NumberOperations")</th>
                <th>@Localization.GetText("CPD.CountryProgram.ExpectedDisbursements.TotalDisbursedAmountUSD")</th>
            </tr>
        </thead>);
}

<div class="mb20">
    @Html.Partial("Controls/DataTable", config)
</div>

@helper SGNumOperations(ExpectedDisbursementsRowViewModel row, int? operations)
{
    var tableName = "expectedDisbursement";

    @Confluence.InputText(
        value: row.SGNumberOfOperations.ToString(),
        name: tableName + "-SGNumberOperations",
        maxLength: 4,
        required: false,
        htmlClass: "textalign-right",
        expReg: "^[0-9]*$",
        width: "100%")
}

@helper SGTotalAmount(ExpectedDisbursementsRowViewModel row, decimal? amount)
{
    var tableName = "expectedDisbursement";

    @Confluence.InputDecimal(
        value: row.SGTotalAmount,
        name: tableName + "-SGTotalAmount",
        maxValue: "9999999999999999",
        required: false,
        htmlClass: "textalign-right",
        width: "100%")
}

@helper NSGNumOperations(ExpectedDisbursementsRowViewModel row, int? operations)
{
    var tableName = "expectedDisbursement";

    @Confluence.InputText(
        value: row.NSGNumberOfOperations.ToString(),
        name: tableName + "-NSGNumberOperations",
        maxLength: 4,
        required: false,
        htmlClass: "textalign-right",
        expReg: "^[0-9]*$",
        width: "100%")
}

@helper NSGTotalAmount(ExpectedDisbursementsRowViewModel row, decimal? amount)
{
    var tableName = "expectedDisbursement";

    @Confluence.InputDecimal(
        value: row.NSGTotalAmount,
        name: tableName + "-NSGTotalAmount",
        maxValue: "9999999999999999",
        required: false,
        htmlClass: "textalign-right",
        width: "100%")
}