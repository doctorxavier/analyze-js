@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.CPDModule.ViewModels.CountryProgram
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Models

@model  List<PortfolioAdjustmentsForeseenRowViewModel>

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    var tableName = "cancelationProject";

    var config = Html.RenderDataTable(Model);
    config.TableClass = "tableNormal";
    config.Name("cancelationProject")
    .PrimaryKey(m => m.RowId.ToString())
    .AddPrimaryKeyToName(false)
    .UseDataTableNet(false)
    .UsePageMode(false)
    .Columns(columns =>
    {

        columns.Template(c => ColumnAdjustment(c, false))
        .Header(Localization.GetText("COMMON.Adjustment"))
        .CssClass("textalign-left")
        .Persistent();

        columns.Template(c => ColumnOperationName(c, false))
        .Header(Localization.GetText("CPD.CountryProgram.CountryProgram.TableHeader.OperationName"))
        .CssClass("textalign-right")
        .Persistent();

        columns.Template(c => ColumnOperationNumber(c, false))
        .Header(Localization.GetText("COMMON.OperationNumber"))
        .CssClass("textalign-right")
        .Persistent();

        columns.Template(c => ColumnOriginalValue(c, false))
        .Header(Localization.GetText("CPD.CountryProgram.CountryProgram.TableHeader.OriginalValue"))
        .CssClass("textalign-right")
        .Persistent();

        columns.Template(c => ColumnCancelationAmount(c, false))
        .Header(Localization.GetText("CPD.CountryProgram.CountryProgram.TableHeader.CancelationAmount"))
        .CssClass("textalign-right")
        .Persistent();

        columns.Template(c => ColumnReasonComment(c, false))
        .Header(Localization.GetText("CPD.CountryProgram.CountryProgram.TableHeader.ReasonComment"))
        .CssClass("textalign-right")
        .Persistent();

        columns.Template(c => ColumnAction())
        .Header(Localization.GetText("COMMON.Action"))
        .CssClass("textalign-center")
        .Persistent();

    }).RowTemplates(x =>
    {
        x.Create(RowTemplateType.FirstRow, t => DrawRowTemplate(new PortfolioAdjustmentsForeseenRowViewModel()));
    });

}
<div class="mb20">
    @Html.Partial("Controls/DataTable", config)
</div>

<div class="row mb30">
    <div class="col-md-12 text-center">
        @Confluence.ButtonAddNewRows(
            text: Localization.GetText("COMMON.NewOperation"),
            tableid: string.Empty,
            name: "addNewRow",
            dataAttributes: new Dictionary<string, string> { { "linked-table", tableName } })
    </div>
</div>

@helper ColumnAdjustment(PortfolioAdjustmentsForeseenRowViewModel row, bool isTemplate)
{
  var tableName = "cancelationProject";
  int cancelationTypeId = ViewBag.CancelationAdjustmentTypeId;
    
  @Localization.GetText("CPD.CountryProgram.CountryProgram.TableValue.Cancelation")
  @Confluence.InputText(isTemplate ? cancelationTypeId.ToString()  : row.AdjustmentTypeId.ToString(), tableName + "-AdjustmentTypeId",required:true,htmlClass:"hide",disabled:isTemplate)
}

@helper ColumnOperationName(PortfolioAdjustmentsForeseenRowViewModel row, bool isTemplate)
{
    var tableName = "cancelationProject";

    <div>
        @Confluence.InputText(
        value: row.OperationName,
        name: tableName + "-OperationName",
        maxLength: 140,
        required: false,
        disabled: isTemplate,
        htmlClass: "textalign-left",
        width: "100%")
    </div>
}

@helper ColumnOperationNumber(PortfolioAdjustmentsForeseenRowViewModel row, bool isTemplate)
{
    var tableName = "cancelationProject";

    <div>
        @Confluence.InputText(
        value: row.OperationNumber,
        name: tableName + "-OperationNumber",
        maxLength: 8,
        required: false,
        disabled: isTemplate,
        htmlClass: "textalign-left",
        width: "100%")
    </div>
}

@helper ColumnOriginalValue(PortfolioAdjustmentsForeseenRowViewModel row, bool isTemplate)
{
    var tableName = "cancelationProject";

    <div>
        @Confluence.InputDecimal(
        value: row.OriginalValue,
        name: tableName + "-OriginalValue",
        maxValue: "9999999999999999",
        required: false,
        disabled: isTemplate,
        htmlClass: "textalign-right",
        width: "100%")
    </div>
}

@helper ColumnCancelationAmount(PortfolioAdjustmentsForeseenRowViewModel row, bool isTemplate)
{
    var tableName = "cancelationProject";

    <div>
        @Confluence.InputDecimal(
        value: row.CancelationAmount,
        name: tableName + "-CancelationAmount",
        maxValue: "9999999999999999",
        required: false,
        disabled: isTemplate,
        htmlClass: "textalign-right",
        width: "100%")
    </div>
}

@helper ColumnReasonComment(PortfolioAdjustmentsForeseenRowViewModel row, bool isTemplate)
{
    var tableName = "cancelationProject";

    <div>
        @Confluence.InputText(
        value: row.Comment,
        name: tableName + "-Comment",
        maxLength: 140,
        required: false,
        disabled: isTemplate,
        htmlClass: "textalign-left",
        width: "100%")
    </div>
}

@helper ColumnAction()
{
    <div class="textalign-center">
        @Confluence.ButtonTrash(
        text: string.Empty,
        name: "removeRow")
    </div>
}

@helper DrawRowTemplate(PortfolioAdjustmentsForeseenRowViewModel row)
{
    <tr class="template hide">
        <td>@ColumnAdjustment(row, true)</td>
        <td>@ColumnOperationName(row, true)</td>
        <td>@ColumnOperationNumber(row, true)</td>
        <td>@ColumnOriginalValue(row, true)</td>
        <td>@ColumnCancelationAmount(row, true)</td>
        <td>@ColumnReasonComment(row, true)</td>
        <td>@ColumnAction()</td>
    </tr>
}