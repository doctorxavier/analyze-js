@using System.Globalization
@using IDB.MW.Application.CPDModule.ViewModels.Annexes
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.Architecture.DataTables.Common
@using IDB.MVCControls.DataTable.Models

@model PipelineTableViewModel

@if (Model != null)
{
    var selector = string.Format("[data-name=\"{0}\"]", Model.SectionName);
    var tableName = Model.SectionName + "Table";

    var headerTaxonomyOrModality = Localization.GetText("CPD.Annexes.IndicativePipeline.TableHeader.TCTaxonomy");
    if (Model.IsModality)
    {
        headerTaxonomyOrModality = Localization.GetText("CPD.Annexes.IndicativePipeline.TableHeader.OperationModality");
    }

    var config = Html.RenderDataTable(Model.Operations);
    config.TableClass = "tableNormal";
    config.Name(tableName)
    .PrimaryKey(m => m.RowId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(false)
    .UseDataTableNet(false)
    .UsePageMode(false)
    .Columns(columns =>
    {
        columns.Template(c => ColumnOperationName(c, isTemplate: false))
        .CssHeaderClass("w130")
        .Header(Localization.GetText("CPD.Annexes.IndicativePipeline.TableHeader.OperationName"));

        columns.Template(c => ColumnOperationNumber(c, isTemplate: false))
        .CssHeaderClass("w130")
        .Header(Localization.GetText("CPD.Annexes.IndicativePipeline.TableHeader.OperationNumber"));

        if (Model.IsGreather2017)
        {
            columns.Template(c => ColumnOperationObjetive(c, isTemplate: false))
            .CssClass("minw100")
            .Header(Localization.GetText("CPD.Annexes.IndicativePipeline.TableHeader.OperationObjective"));
        }

        columns.Template(c => ColumnAmount(c, c.Amount, false))
        .CssHeaderClass("w130")
        .CssClass("textalign-right")
        .Header(Localization.GetText("CPD.Annexes.IndicativePipeline.TableHeader.Amount"))
        .Persistent();
    });

    <div class="row mb10 pl30">
        <div class="col-md-12">
            @(Html.CollapseSingle("CollapseAnnexesTable")
               .HtmlClass("component-collapse alignSubtitle")
               .AsociatedCollapseAllSelector("[data-name=CollapseAllAnnexesTable]")
               .TargetRegionSelector(selector)
            )
            <div>
                @Confluence.LabelBold(Localization.GetText(Model.Title))
            </div>
        </div>
    </div>
    <div class="row mb30 pl30">
        <div class="col-md-12" data-name="@Model.SectionName">
            <div class="row">
                <div class="col-md-12">
                    @Html.Partial("Controls/DataTable", config)
                </div>
            </div>
        </div>
    </div>
}

@helper ColumnOperationName(OperationRowViewModel row, bool isTemplate)
{
    <div>
        @Confluence.Label(row.OperationName)

        @Confluence.InputText(
        value: row.OperationName,
        name: Model.SectionName + "-OperationName",
        maxLength: 140,
        disabled: true,
        htmlClass: "textalign-left hide",
        width: "100%")
    </div>
}
@helper ColumnOperationNumber(OperationRowViewModel row, bool isTemplate)
{
    <div>
        @Confluence.Label(row.OperationNumber)

        @Confluence.InputText(
        value: row.OperationNumber,
        name: Model.SectionName + "-OperationNumber",
        maxLength: 8,
        disabled: true,
        htmlClass: "textalign-left hide",
        width: "100%")
    </div>
}

@helper ColumnOperationObjetive(OperationRowViewModel row, bool isTemplate)
{
    <div>
        @Confluence.Label(row.OperationObjective)

        @Confluence.InputText(
        value: row.OperationObjective,
        name: Model.SectionName + "-OperationObjetive",
        maxLength: 140,
        disabled: isTemplate,
        htmlClass: "textalign-left hide",
        width: "100%")
    </div>
}

@helper ColumnAmount(OperationRowViewModel row, decimal? amount, bool isTemplate)
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDecimal = appSettings.FormatDecimal;
    <div>
        @Confluence.Label(FormatHelper.Format(row.Amount, formatDecimal).ToString())

        @Confluence.InputDecimal(
            value: amount,
            name: Model.SectionName + "-Amount",
            maxValue: "9999999999999999",
            disabled: isTemplate,
            required: true,
            htmlClass: "textalign-right hide",
            width: "100%")
    </div>
}