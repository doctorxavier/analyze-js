@using IDB.MW.Domain.Models.Architecture.MasterDefinitions;
@using IDB.MW.Domain.Entities;
@using IDB.MW.Domain.Values;
@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "EditLastDisbursementClause";
    var errorAddingDocument = ViewBag.UploadFileError != null ? (string)ViewBag.UploadFileError : string.Empty;
    List<ConvergenceMasterDataModel> ListValidationStage = ViewBag.ListValidationStage;
}

@section CSS{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Risks/esmartGeneral.css")"/>
}

@section JavaScript {
    @*<script type="text/javascript" src="@Url.Content("~/Scripts/kendo/2013.2.918/kendo.web.min.js")"></script>*@
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/addDocument.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/thumbnail/thumbnail.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/addComment.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/editClause.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js" + @System.Configuration.ConfigurationManager.AppSettings["cache"].ToString())"></script>

    @if (!string.IsNullOrWhiteSpace(errorAddingDocument))
    {
        <script type="text/javascript">
            $(document).ready(function () {

                function warningDocumentAddingError() {
                    event.preventDefault();
                    $(window.parent.document).find('body').append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="dinamicModal"></div>');
                    $("#errorUploading").appendTo(".dinamicModal").removeClass("hide");
                    var title = $("#errorUploading").data("title");
                    var modal = $(".dinamicModal").kendoWindow({
                        width: "800px",
                        title: title,
                        draggable: false,
                        resizable: false,
                        pinned: true,
                        actions: [
                            "Close"
                        ],
                        modal: true,
                        visible: false,
                        activate: function () {
                            $("#ConfirmErrorWarning").click(functionCancel);
                        },
                        close: function () {
                            $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                            $("#errorUploading").appendTo("#ui_sp_001").addClass("hide");
                            $("body").find(".ui-widget-overlay").remove();
                            $(".ui-widget-overlay").remove();
                            $(".k-window").remove();
                        }
                    }).data("kendoWindow");
                    $(".k-window-titlebar").addClass("warning");
                    $(".k-window-title").addClass("ico_warning");
                    modal.center();
                    modal.open();
                };

                var functionCancel = function () {
                    event.preventDefault();
                    var modal = $(".dinamicModal").data("kendoWindow");
                    modal.close();
                    $(".ui-widget-overlay").remove();
                };

                warningDocumentAddingError();

                $(document).on('click', 'a[title="Cancel"]', function () {
                    idbg.lockUi(null, true);
                });
            });
        </script>
    }
}

<section class="central" id="centralSection">
    <h2 class="hide">Seccion central de Contenido</h2>
    <div class="mod_contenido_central contracts_and_clauses">
        @using (Html.BeginForm("EditLastDisbursementClauseTrackPost", "Clause", /*new { contractId = Model.ContractId, clauseId = Model.Clauses[0].ClauseId, clauseIndividualId = Model.Clauses[0].ClauseIndividuals[0].ClauseIndividualId },*/ FormMethod.Post, new { area = "Clauses", id = "target" }))
        {
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId)
            <fieldset>
                <h3 class="headingh2 w45"><a href="@(Url.Action("Index", "Contracts", new { area = "Clauses", operationNumber = Model.mainOperationNumber }))" title=" @Localization.GetText("CL.ContractsClauses")" class="tipo1">@Localization.GetText("CL.ContractsClauses")</a> </h3>
                <div class="editingButtonsEdit up">
                    <label for="cancel1">
                        <a class="btn-secondary" id="Details" href="@(Url.Action("Details", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, mainOperationNumber = Model.mainOperationNumber }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                    </label>
                    @*<label for="saveandrequest">
                        <input type="submit" class="btn-primary_2 saveandrequest" name="action:Save&RequestLastDisbursementClause" value=" @Localization.GetText("Save and Request")">
                    </label>*@
                    <label for="save">
                        <input type="submit" class="btn-primary_2 save" name="action:SaveLastDisbursementClause" value=" @Localization.GetText("Save")">
                    </label>
                </div>
                <div class="desheadingh3 w65">
                    <p class="title">@Model.OperationNumber
                        <span class="draft">
                            @foreach (var masterData in ViewBag.ListContractStatus)
                            {
                                if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].ContractClauseStatId)
                                {
                                @Localization.GetText(masterData.NameEn)
                                    break;
                                }
                            }
                        </span>
                        @if (Model.Contracts[0].LegalEffectivenessDate.HasValue && Model.Contracts[0].CurrentDisbursementExpirationDate.HasValue)
                        {
                            @String.Format("{0:dd MMM yyy}", Model.Contracts[0].LegalEffectivenessDate)<span class="titleTo"> @Localization.GetText("to") </span>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].CurrentDisbursementExpirationDate)
                        }
                    </p>
                    <p class="description"><span class="descriptionBold">@Model.Contracts[0].ContractNumber</span> @Model.OperationNameEn</p>
                </div>

                <h4 class="headingh3 min_bottom_headingh3">@Localization.GetText("Clause")</h4>
                <h5 class="headingh3 min_top_headingh3 ffamilySemiBold">@Model.Contracts[0].Clauses[0].ClauseNumber</h5>

                <div class="operationData dataDetails">
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("Status")</p>
                        @foreach (var masterData in ViewBag.ListClauseStatus)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId)
                            {
                            <p>@masterData.NameEn</p>
                                break;
                            }
                        }
                    </div>
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("Category")</p>
                        @foreach (var masterData in ViewBag.ListClauseCategory)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                            {
                            <p>@masterData.NameEn</p>
                                break;
                            }
                        }
                        @*<p>@Model.Contracts[0].Clauses[0].CategoryId</p>*@
                    </div>
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("Type")</p>
                        @foreach (var masterData in ViewBag.ListClauseType)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseTypeId)
                            {
                            <p>@masterData.NameEn</p>
                                break;
                            }
                        }
                    </div>
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("CL.SpecialClauseClass")</p>
                        <p>@Model.Contracts[0].Clauses[0].IsSpecial</p>
                    </div>
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("Location")</p>
                        @foreach (var masterData in ViewBag.ListClauseLocation)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].LocationId)
                            {
                            <p>@masterData.NameEn</p>
                                break;
                            }
                        }
                    </div>
                </div>
                <div class="operationData dataDetails">
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("CL.OriginalExpirationDate")</p>
                        <p>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].OriginalExpirationDate)</p>
                    </div>
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("CL.CurrentExpirationDate")</p>
                        <p>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].CurrentExpirationDate)</p>
                    </div>
                    <div class="data4">
                        <div class="dateSelect">
                            <label for="datepicker0">
                                <span class="dataTitle inputTitle" style="width:25% ">@Localization.GetText("CL.FulfillmentDate")</span>
                                @Html.TextBoxFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].SubmissionDate, new Dictionary<string, Object> { { "id", "datePicker0" }, { "class", "datepicker" }, { "name", "datePicker0" }, { "placeholder", "DD MM YYYY" } })
                            </label>
                        </div>
                    </div>
                </div>
                <div class="operationData dataDetails">
                    <div class="operationData min_padding_left dataSocial">
                        <div class="data8">
                            <p class="dataTitle">@Localization.GetText("Description")</p>
                            <p>@Model.Contracts[0].Clauses[0].Description</p>
                        </div>
                    </div>
                </div>
                <div class="operationData width_Off min_padding_left dataSocial  ">
                    <h4 class="headingh3  cero_left">@Localization.GetText("Extensions") </h4>
                </div>
                <div class="editingButtonsEdit">
                    <a href="@(Url.Action("CreateExtension", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, mainOperationNumber = Model.mainOperationNumber }))" class="btn-primary marginOff" title="@Localization.GetText("Add")">@Localization.GetText("Add")</a>
                </div>
                <div class="mod_tabla icon_entypo tableExtensions" style="width: 94%">
                    <table class="grid1">
                        <thead>
                            <tr>
                                <th class="btn_azul_oscuro_flecha" data-field="RequestDateGrid">@Localization.GetText("CL.RequestedDate")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="RequestMonthsGrid">@Localization.GetText("CL.RequestMonths")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="ExecutorRequestMonthsGrid">@Localization.GetText("CL.ExecutorRequestedMonths")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="ExtensionStatusGrid">@Localization.GetText("CL.ExtensionsStatus")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="SubmissionDateGrid">@Localization.GetText("CL.SubmissionDate")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="ApprovalDateGrid">@Localization.GetText("CL.ApprovalDate")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="CommunicationNumberGrid">@Localization.GetText("CL.CommunicationNumber")</th>
                                <th class="btn_azul_oscuro" data-field="Vacio">&nbsp;</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                            
                        var CurrentExpirationDate = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].CurrentExpirationDate;
                        var ListExtensions = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension;

                        foreach (var extension in ListExtensions)
                        {
                            var StageActual = ListValidationStage.First(x => x.ConvergenceMasterDataId == extension.ValidationStageId).Code;
                                <tr>
                                    <td>
                                        @{  
                            if (StageActual == ClauseConstants.APPROVED_CLAUSE_STATUS)
                            {
                                            <a href="@(Url.Action("DetailsExtension", "Clause", new
                        {
                            area = "Clauses",
                            operationId = Model.OperationId,
                            contractId = Model.Contracts[0].ContractId,
                            clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                            clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                            clauseExtensionId = extension.ClauseExtensionId,
                            mainOperationNumber = Model.mainOperationNumber,
                            RequestDate = extension.RequestExtensionDate.Value.ToString("dd MMM yyyy")
                        }))">
                                                @(extension.RequestExtensionDate.Value.ToString("dd MMM yyyy"))
                                            </a>
                            }
                            else
                            {
                                if (extension.RequestExtensionDate == null)
                                {
                                            <a href="@(Url.Action("DetailsExtension", "Clause", new
                                                                    {
                                                                        area = "Clauses",
                                                                        operationId = Model.OperationId,
                                                                        contractId = Model.Contracts[0].ContractId,
                                                                        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                                                        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                                                        clauseExtensionId = extension.ClauseExtensionId,
                                                                        mainOperationNumber = Model.mainOperationNumber,
                                                                        RequestDate = Convert.ToDateTime(CurrentExpirationDate).AddMonths((int)extension.IdbRequest).ToString("dd MMM yyyy")
                                                                    }))">
                                                @(Convert.ToDateTime(CurrentExpirationDate).AddMonths((int)extension.IdbRequest).ToString("dd MMM yyyy"))
                                            </a>    
                                }
                                else
                                {
                                            <a href="@(Url.Action("DetailsExtension", "Clause", new
                                                                    {
                                                                        area = "Clauses",
                                                                        operationId = Model.OperationId,
                                                                        contractId = Model.Contracts[0].ContractId,
                                                                        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                                                        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                                                        clauseExtensionId = extension.ClauseExtensionId,
                                                                        mainOperationNumber = Model.mainOperationNumber,
                                                                        RequestDate = extension.RequestExtensionDate.Value.ToString("dd MMM yyyy")
                                                                    }))">
                                                @(extension.RequestExtensionDate.Value.ToString("dd MMM yyyy"))
                                            </a>    
                                }
                            }
                                        }
                                    </td>

                                    <td>@(extension.IdbRequest != null ? extension.IdbRequest.ToString() : string.Empty)</td>
                                    <td>@(extension.ExecutorRequest != null ? extension.ExecutorRequest.ToString() + " " + Localization.GetText("month(s)") : string.Empty)</td>
                                    <td>
                                        @foreach (var masterData2 in ViewBag.ListValidationStage)
                                        {
                                            if (masterData2.ConvergenceMasterDataId == extension.ValidationStageId)
                                            {
                                            @Localization.GetText(masterData2.NameEn)
                                                break;
                                            }
                                        }
                                    </td>
                                    <td>@String.Format("{0:dd MMM yyy}", extension.ValidateDate)</td>
                                    <td>@String.Format("{0:dd MMM yyy}", extension.ValidateDate)</td>
                                    <td>@extension.CommunicationNumber</td>
                                    <td>
                                        @foreach (var masterData2 in ViewBag.ListValidationStage)
                                        {
                                            if (masterData2.ConvergenceMasterDataId == extension.ValidationStageId)
                                            {
                                                if (masterData2.Code == "CL_DRAFT")
                                                {
                                            <a class="btn_entypo" onclick="deleteItem(this)" title=" @Localization.GetText("Delete")" data-route="@Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, extensionId = @extension.ClauseExtensionId, RevolvingFund = 0, entityRelated = "", year = 0, entityRegisterId = 0, visualProjectId = 0, visualProjectVersionId = 0, documentId = 0, userCommentId = 0, itemToDelete = "Extension", mainOperationNumber = Model.mainOperationNumber })">&#59177;</a>                                            
                                                }
                                            }
                                        }
                                    </td>
                                </tr>
                        }
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Comments grid -->
                <div class="relative h50px verticalMargin20">
                    <div class="operationData width_Off min_padding_left dataSocial  ">
                        <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
                    </div>
                    <div class="editingButtonsEdit">
                        <a id="newCommentRisks002" 
                           href="javascript:void(0)" 
                           class="btn-primary marginOff" 
                           title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")">
                        @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")</a>
                    </div>
                </div>


                <div id="commentslistdinamic">
                    <table id="commentTableUIRI002_edit" class="w100 grid">
                        <tbody id="comentContainer">
                            @for (int i = 0; i < Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        <div class="padding10 leftAlign">
                                            <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                                <input type="button" value="@Localization.GetText("Delete")" class="deleteTextButton verticalAlignTop absolute absRight">
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].ModifiedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="padding10">
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].UserCommentId)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].ModifiedBy)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified)

                                                    @Html.TextAreaFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent" }, { "data-val", "true;" }, { "data-val-required", "Please, complete the mandatory fields" } })
                                                    @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text);}
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- End comments grid -->
                @*<div class="operationData width_Off min_padding_left dataSocial  ">
                    <h4 class="headingh3 cero_left"> @Localization.GetText("Comments") </h4>
                </div>
                <div class="editingButtonsEdit">
                    <a href="javascript:void(0)" class="btn-primary marginOff" title=" @Localization.GetText("New")"> @Localization.GetText("New")</a>
                </div>
                <div class="operationData dataDetails">
                    <div class="data8">
                        <div class="mod_cardComment w94">
                            @foreach (var comments in Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments)
                            {
                                <h5 class="commentTitle">Comment Title</h5>
                                <p class="commentName">@comments.CreatedBy<span class="commentDate">@String.Format("{0:dd MMM yyy}",comments.Created)</span></p>
                                <p class="commentText">@comments.Text</p>
                            }
                        </div>
                    </div>                                        
                </div>*@

                <div class="operationData width_Off min_padding_left dataSocial  ">
                    <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
                </div>
                <div class="editingButtonsEdit">
                    <input type="button" class="btn-primary marginOff lnkModal" value="@Localization.GetText("DM.Add.Document")" title="@Localization.GetText("DM.Add.Document")" data-title="@Localization.GetText("Add a document")" data-route="@(Url.Action("IndexDocumentRelationship", "Document", new { area = string.Empty, operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, parentEntityId = Model.Contracts[0].ContractId, subParentEntityId = Model.Contracts[0].Clauses[0].ClauseId, subsubParentEntityId = 0, entityRelated = "CLAUSE_INDIVIDUAL", entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, isFirstTime = true, businessAreaCode = "BA_CLAUSES" }))">
                </div>
                <div class="mod_tabla icon_entypo tableDocuments" style="width: 94%">
                    <table class="grid2">
                        <thead>
                            <tr>
                                <th class="btn_azul_oscuro_flecha" data-field="User">@Localization.GetText("User")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="Date">@Localization.GetText("Date")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="IDBDocNum">@Localization.GetText("IDB Doc number")</th>
                                <th class="btn_azul_oscuro_flecha" data-field="Content">@Localization.GetText("Content")</th>
                                <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var document in Model.Contracts[0].Clauses[0].ClauseIndividuals[0].Documents)
                            {
                                <tr>
                                    <td>@document.CreatedBy</td>
                                    <td>@String.Format("{0:dd MMM yyy}", document.Created)</td>
                                    <td>@document.DocumentReference</td>
                                    <td>@document.Description</td>
                                    <td>
                                        @*TODO: Add Edit Document Content Method*@
                                        <a class="btn_entypo" onclick="deleteItem(this)" title=" @Localization.GetText("Delete")" data-route="@Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, extensionId = 0, RevolvingFund = 0, entityRelated = "", year = 0, entityRegisterId = 0, visualProjectId = 0, visualProjectVersionId = 0, documentId = @document.DocumentId, userCommentId = 0, itemToDelete = "Document", mainOperationNumber = Model.mainOperationNumber })" style="position: relative;left: 25%;min-height: 0.9em;min-width: 1.5em;">&#59177;</a>
                                    @{
                                        var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                    }
                                    <a class="btn_entypo" title=" @Localization.GetText("Download")" href=@secureUrl target="_blank" style="position: relative; left 25%; min-height 0.9em; min-width 1.5em;">&#58544;</a>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="editingButtonsEdit">
                    @foreach (var masterData in ViewBag.ListClauseStatus)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId)
                        {
                            if (masterData.NameEn == "DRAFT")
                            {
                                foreach (var masterData2 in ViewBag.ListClauseCategory)
                                {
                                    if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                    {
                                        if (masterData2.NameEn != "Last Disbursement (Type Financial)")
                                        {
                        <a href="@(Url.Action("Delete", "Clause", new { area = "Clauses", mainOperationNumber = Model.mainOperationNumber, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId }))" class="cancel" title=" @Localization.GetText("Delete")">@Localization.GetText("Delete")</a>
                                        }
                                        break;
                                    }
                                }
                                break;
                            }
                        }
                    }
                    <label for="cancel1">
                        <a class="btn-secondary" id="Cancelar" href="@(Url.Action("Details", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                    </label>
                    @*<label for="saveandrequest">
                        <input type="submit" class="btn-primary_2 saveandrequest" name="action:Save&RequestLastDisbursementClause" value=" @Localization.GetText("Save and Request")">
                    </label>*@
                    <label for="save">
                        <input type="submit" class="btn-primary_2 save" name="action:SaveLastDisbursementClause" value=" @Localization.GetText("Save")">
                    </label>
                </div>
                @if (!string.IsNullOrWhiteSpace(errorAddingDocument))
                {
                    <div class="hide" id="errorUploading" data-title=" @Localization.GetText("Warning")">
                        <div class="padding20 popUpBody">
                            <div class="marginBottom2">
                                <div>
                                    @errorAddingDocument
                                </div>
                                <div class="rightAlign absolute right1 verticalPadding10 w60">
                                    <input type="button" class="button blueButton" id="ConfirmErrorWarning" value=" @Localization.GetText("OK")" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </fieldset>
        }
    </div>
</section>