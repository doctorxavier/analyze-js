@using IDB.MW.Domain.Models.Architecture.MasterDefinitions
@using IDB.Architecture.Logging;
@using IDB.MW.Domain.Entities;
@using IDB.MW.Domain.Values;

@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    Logger.GetLogger().WriteDebug("EditClauseTrack view",
               "After redirect Edit");
    ViewBag.Title = "EditClause";
    List<ConvergenceMasterDataModel> ListValidationStage = ViewBag.ListValidationStage;
    bool isOA420 = !(Model.IsOA421Check ?? false);
    bool isPBPOrPBLAndOA420Operation = Model.IsSpecialOperationPBLPBP && isOA420;
}
@Styles.Render("~/Content/Confluence")
@Scripts.Render("~/bundles/ClauseTracksEdit")

@section CSS{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/bootstrap.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Risks/esmartGeneral.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Clauses/editClauseTrack.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Clauses/clauseDetails.css")" />
}

@section JavaScript {
    @Scripts.Render("~/bundles/OnlyNewConfluence")
    @Scripts.Render("~/bundles/ClauseTracksEdit")
 
    <script type="text/javascript">

        var isPBPOrPBLAndOA420OperationTrench = @(isPBPOrPBLAndOA420Operation.ToString().ToLower());
        var  hasMilestonTypeTrenchClauses = @(Model.HasMilestonTypeTrenchOperation.ToString().ToLower());
         
    </script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/ChangedStatusToFulfilmentClauseLastD.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Document/addDocument.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/thumbnail/thumbnail.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/addComment.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/editClause.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/BlockEditTrack.js")"></script>

}

@Html.Hidden(
    "contract-approval-date",
    string.Format("{0:dd MMM yyy}", Model.Contracts[0].ApprovalDate),
    new { id = "contract-approval-date" })

@Html.Hidden("valuesClauseExpired", "", new
{
    data_mandatorysubmissiondatemsg = Localization.GetText("MandatorySubmissionDate"),
    data_isOtherPCategoryAndExpired = Model.IsOtherPCategoryAndExpired,
    data_msg = Localization.GetText("Clauses.Expired.OtherP.Message"),
    data_txtCancel = Localization.GetText("Cancel"),
    data_txtContinue = Localization.GetText("Continue"),
    data_routeCreateExtension = Html.Raw(Url.Action("CreateExtension", "Clause",
    new
    {
        area = "Clauses",
        operationId = Model.OperationId,
        contractId = Model.Contracts[0].ContractId,
        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
        mainOperationNumber = Model.mainOperationNumber
    }))
})

<section class="central fontSizeInitial" id="centralSection">
    <h2 class="hide">Seccion central de Contenido</h2>
    <div class="mod_contenido_central contracts_and_clauses">
    <input type="hidden" id="UserName" value="@IDBContext.Current.UserName"/>
    @using (Html.BeginForm("EditClausePost", "Clause", FormMethod.Post, new { area = "Clauses", id = "target" }))
    {
        @Html.HiddenFor(x => x.OperationId)
        @Html.HiddenFor(x => x.mainOperationNumber)
        @Html.HiddenFor(x => x.Contracts[0].ContractId)
        @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseId)
        @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId)

    <fieldset class="clauseTrackFieldset">
        <h3 class="headingh2 w45">
            <a href="@(Url.Action("Index", "Contracts", new { area = "Clauses", operationNumber = Model.mainOperationNumber }))"
               title="@Localization.GetText("CL.ContractsClauses")"
               class="tipo1">@Localization.GetText("CL.ContractsClauses")</a>
        </h3>
        @if (!Model.WorkflowStartedCL003)
        {
            if (!Model.WorkflowStartedCL004)
            {
                    <div class="editingButtonsEdit up topMargin16px">
                        <label for="cancel1">
                            <a id="Details"
                               class="desactivateHighlight buttonLink"
                               href="@(Url.Action("Details", "Clause", new { area = "Clauses",
                                     operationId = Model.OperationId,
                                     contractId = Model.Contracts[0].ContractId,
                                     clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                     clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                     mainOperationNumber = Model.mainOperationNumber }))"
                               title="@Localization.GetText("Cancel")">
                                <span>@Localization.GetText("Cancel")</span>
                            </a>
                        </label>
                        <label for="save">
                            <input type="submit"
                                   class="buttonWhite save"
                                   name="action:SaveClause"
                                   value="@Localization.GetText("Save")" id="Save1">
                        </label>
                        @foreach (var masterData in ViewBag.ListClauseCategory)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                            {
                                if (@masterData.Code != "SIGN" && masterData.Code != "RAT")
                                {
                                <label for="saveandrequest">
                                    <input type="submit" class="buttonOrange saveandrequest ClauseFulfilled"
                                           style="float:none; margin-right: 0.2em" name="action:Save&RequestClauseFulfilled"
                                           value="@Localization.GetText("CL.Conditions.Button.fulfilled")"
                                           id="saveandrequest1" onclick="warningMandatoryFulfillment()">
                                </label>
                                <label for="saveandrequest">
                                    <input type="submit"
                                           class="buttonOrange saveandrequest"
                                           style="float:none; margin-right: 0.2em"
                                           name="action:Save&RequestClauseUnfulfilled"
                                           value="@Localization.GetText("CL.Conditions.Button.Unfulfilled")"
                                           id="saveandrequest1">
                                </label>
                                <label for="saveandrequest">
                                    <input type="submit"
                                           class="buttonOrange saveandrequest"
                                           style="float:none; margin-right: 0.2em"
                                           name="action:Save&RequestClauseWaived"
                                           value="@Localization.GetText("CL.Conditions.Button.Waived")"
                                           id="saveandrequest1">
                                </label>
                                }
                            }
                        }
                    </div>
            }
            else
            {
                    <div class="ftr" style="width: 813px;">
                        <div class="editingButtonsEdit up topMargin16px">
                            <a class="btn-secondary buttonWhite disabled"
                               id="Details"
                               title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                            <a class="btn btn-secondary buttonWhite save disabled"
                               value="@Localization.GetText("Save")">@Localization.GetText("Save")</a>
                            <a class="btn-primary_2 saveandrequest ClauseFulfilled disabled"
                               style="margin-right: 0.2em"
                               value="@Localization.GetText("Fulfillment")">@Localization.GetText("Fulfill")</a>
                            <a class="btn-primary_2 buttonOrange saveandrequest disabled"
                               style="margin-right: 0.2em"
                               value="@Localization.GetText("Unfulfillment")">@Localization.GetText("Unfulfill")</a>
                            <a class="btn-primary_2 buttonOrange saveandrequest disabled"
                               style="margin-right: 0.2em"
                               value="@Localization.GetText("Waived")">@Localization.GetText("Waived")</a>
                        </div>

                        <div class="desheadingh3 w31-5 ftr">
                            <p class="description">
                                <span class="descriptionBold">@Model.WorkflowInProgress</span>
                            </p>
                        </div>
                    </div>
            }
        }
        else
        {
            <div class="editingButtonsEdit up topMargin16px">
                <a class="btn-secondary disabled"
                   id="Details"
                   title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                <a class="btn btn-secondary save disabled"
                   value="@Localization.GetText("Save")">@Localization.GetText("Save")</a>
                <a class="btn-primary_2 saveandrequest ClauseFulfilled disabled"
                   style="margin-right: 0.2em"
                   value="@Localization.GetText("Fulfillment")">@Localization.GetText("Fulfill")</a>
                <a class="btn-primary_2 saveandrequest disabled"
                   style="margin-right: 0.2em"
                   value="@Localization.GetText("Unfulfillment")">@Localization.GetText("Unfulfill")</a>
                <a class="btn-primary_2 saveandrequest disabled"
                   style="margin-right: 0.2em"
                   value="@Localization.GetText("Waived")">@Localization.GetText("Waived")</a>
            </div>
            <div class="desheadingh3 w25 ftr">
                <p class="description">
                    <span class="descriptionBold">@Model.WorkflowInProgress</span>
                </p>
            </div>
        }

        <div class="desheadingh3 hidden">
            <p class="title">
                @Model.OperationNumber <span class="draft">
                    @foreach (var masterData in ViewBag.ListContractStatus)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].ContractClauseStatId)
                        {
                                @masterData.NameEn
                            break;
                        }
                    }
                </span>
                @if (Model.Contracts[0].LegalEffectivenessDate.HasValue && Model.Contracts[0].CurrentDisbursementExpirationDate.HasValue)
                {
                    @String.Format("{0:dd MMM yyy}", Model.Contracts[0].LegalEffectivenessDate)<span class="titleTo"> to </span> @String.Format("{0:dd MMM yyy}", Model.Contracts[0].CurrentDisbursementExpirationDate)
                }
            </p>
            <p class="description"><span class="descriptionBold">@Model.Contracts[0].ContractNumber</span> @Model.OperationNameEn</p>
        </div>
      
        <table class="tableInfo">

            <thead>
                <tr>
                    <th class="main-header" colspan="4">
                        @Localization.GetText("Clause Details")
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="headers">
                    <th>
                        @foreach (var masterData in ViewBag.ListClauseCategory)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                            {
                                if (masterData.Code == "SIGN")
                                {
                                    @Localization.GetText("CL.SignatureFulfillmentClause")
                                }
                                else
                                {
                                    @Localization.GetText("Clause")
                                }

                                break;
                            }
                        }
                    </th>
                    <th>@Localization.GetText("Description")</th>
                    <th>@Localization.GetText("CL.Status")</th>
                    <th>@Model.Contracts[0].ContractNumber</th>
                </tr>
                <tr>
                    <td>
                        @foreach (var masterData in ViewBag.ListClauseCategory)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                            {
                                @Model.Contracts[0].Clauses[0].ClauseNumber
                                break;
                            }
                        }
                    </td>
                    <td>
                        @Model.Contracts[0].Clauses[0].Description
                    </td>
                    <td>
                        @foreach (var itemClauseStatus in ViewBag.ListClauseStatus)
                        {
                            if (itemClauseStatus.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId)
                            {
                                foreach (var itemValidationStage in ListValidationStage)
                                {
                                    if (itemValidationStage.ConvergenceMasterDataId ==
                                        Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ValidationStageId)
                                    {
                                        if (itemValidationStage.Code == "CL_REV" ||
                                            itemValidationStage.Code == "CL_REV_LMS" ||
                                            itemValidationStage.Code == "CL_REV_EXT")
                                        {
                                            <p>@Localization.GetText(itemValidationStage.NameEn)</p>
                                        }
                                        else
                                        {
                                            <p>@Localization.GetText(itemClauseStatus.NameEn)</p>
                                        }
                                    }
                                }
                                break;
                            }
                        }
                    </td>
                    <td>
                        @foreach (var itemContractStatus in ViewBag.ListContractStatus)
                        {
                            if (itemContractStatus.ConvergenceMasterDataId == Model.Contracts[0].ContractClauseStatId)
                            {
                                @Localization.GetText(itemContractStatus.NameEn);
                                break;
                            }
                        }
                    </td>
                </tr>

                <tr class="headers">
                    <th>@Localization.GetText("Type")</th>
                    <th>@Localization.GetText("Category")</th>
                    <th>@Localization.GetText("CL.SpecialClauseClass")</th>
                    <th>@Localization.GetText("Location")</th>
                </tr>
                <tr>
                    <td>
                        @foreach (var masterData in ViewBag.ListClauseType)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseTypeId)
                            {
                                <p>@Localization.GetText(masterData.NameEn)</p>
                                break;
                            }
                        }
                    </td>
                    <td>
                        @foreach (var masterData in ViewBag.ListClauseCategory)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                            {
                                <p>@Localization.GetText(masterData.NameEn)</p>
                                break;
                            }
                        }
                    </td>
                    <td>
                        @if (Model.Contracts[0].Clauses[0].IsSpecial)
                        {
                            @Localization.GetText("Yes")
                        }
                        else
                        {
                            @Localization.GetText("No")
                        }
                    </td>
                    <td>
                        @foreach (var masterData in ViewBag.ListClauseLocation)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].LocationId)
                            {
                                <p>@Localization.GetText(masterData.NameEn)</p>
                                break;
                            }
                        }
                    </td>
                </tr>

                <tr class="headers">
                    <th>@Localization.GetText("CL.OriginalExpirationDate")</th>
                    <th>@Localization.GetText("CL.CurrentExpirationDate")</th>
                    <th>
                        @{ string headerText = @Localization.GetText("CL.SubmissionDate"); }

                        @foreach (var masterData in ViewBag.ListClauseStatus)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                masterData.Code == "CL_DRAFT")
                            {
                                if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                    (masterData.NameEn == "TRACK" || masterData.NameEn == "TRACKWITHDRAW"))
                                {
                                    foreach (var masterData2 in ViewBag.ListClauseCategory)
                                    {
                                        if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                        {
                                            if (@masterData2.Code == "LASTD")
                                            {
                                                { headerText = @Localization.GetText("CL.FulfillmentDate"); }
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        @headerText
                    </th>
                    <th>@Localization.GetText("CL.ApprovalDate")</th>
                </tr>
                <tr>
                    <td>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].OriginalExpirationDate)</td>
                    <td>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].CurrentExpirationDate)</td>
                    <td>
                        <div class="dateSelect" >
                            <label for="datepicker0">
                                @Html.TextBoxFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].SubmissionDate, new Dictionary<string, Object> { { "id", "datePicker0" }, { "class", "datepicker" }, { "name", "datePicker0" }, { "placeholder", "DD MM YYYY" }, {"style","white: 100%"} })
                                @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].SubmissionDate);}
                            </label>
                        </div>
                    </td>
                    <td>
                        @foreach (var masterData in ViewBag.ListClauseStatus)
                        {
                                                    if (masterData.ConvergenceMasterDataId ==
                                                        @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                                        masterData.Code == "CL_DRAFT")
                                                    {
                                                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                                            (masterData.NameEn == "TRACK" || masterData.NameEn == "TRACKWITHDRAW"))
                                                        {
                                                            foreach (var masterData2 in ViewBag.ListClauseCategory)
                                                            {
                                                                if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                                                {
                                                                    if (@masterData2.Code != "LASTD")
                                                                    {
                                                                        @String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ValidateDate)
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                    </td>
                </tr>

                <tr class="headers">
                    <th>@Localization.GetText("CL.LastDisbursementDependency")</th>
                    @if ((Model.IsSpecialOperationPBLPBP && Model.NameTrench != "" && Model.NameTrench != null) ||
                        (Model.IsSpecialOperationPBLPBP && Model.NameTrench == null))
                    {
                        <th>@Localization.GetText("CL.Trench")</th>

                    }

                </tr>
                <tr>
                    <td>
                        @if (ViewBag.Dependency)
                                        {
                            <p>@Localization.GetText("Yes")</p>
                        }
                        else
                        {
                            <p>@Localization.GetText("No")</p>
                        }
                    </td>
                        @if ((Model.IsSpecialOperationPBLPBP && Model.NameTrench != "" && Model.NameTrench != null) ||
                        (Model.IsSpecialOperationPBLPBP && Model.NameTrench == null))
                        {
                            <td>
                                @Model.NameTrench
                            </td>
                        }
                </tr>
            </tbody>

        </table>

        <table class="tableInfo clauseHeader">

            <thead>
                <tr>
                    <th class="main-header" colspan="5">
                        @Localization.GetText("Extensions.Profile")

                        @Display.IconInformation()
                        <span class="information">
                            @(Model.NumberExtensionLeft < 0 || Model.NumberExtensionLeft == null ?
                            Localization.GetText("Extensions.Profile.InformationMessage420") :
                            Localization.GetText("Extensions.Profile.InformationMessage421"))
                        </span>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="headers">
                    <th>@Localization.GetText("Number.Approved.Extensions")</th>
                    <th>@Localization.GetText("Total.Approved.Months")</th>
                    <th>@Localization.GetText("Last.Extensions.Validator")</th>
                    <th>@Localization.GetText("Number.Extensions.Left")</th>
                    <th>Number of Months Left</th>
                </tr>
                <tr>
                    <td>@Model.NumberApprovedExtension</td>
                    <td>@Model.TotalApprovedMonths</td>
                    <td>@Model.LastValidador</td>
                    <td>
                        @(Model.NumberExtensionLeft < 0 || Model.NumberExtensionLeft == null ?
                            "--" :
                            Model.NumberExtensionLeft.ToString())
                    </td>
                    <td>
                        @(Model.MonthsLeft < 0 || Model.MonthsLeft == null ?
                            "--" :
                            Model.MonthsLeft.ToString())
                    </td>
                </tr>
            </tbody>

        </table>

        <div class="operationData width_Off min_padding_left dataSocial  ">
            <h4 class="headingh3  cero_left">@Localization.GetText("Extensions") </h4>
        </div>
        @if (Html.HasPermission("Extension Write"))
            {
            <div class="editingButtonsEdit">
                <a href="@(Url.Action("CreateExtension", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, mainOperationNumber = Model.mainOperationNumber }))"
                   class="marginOff" title="@Localization.GetText("Add")"><button type="button" class="buttonBlue">@Localization.GetText("Add")</button></a>
            </div>
            }
        <div class="mod_tabla icon_entypo tableExtensions" style="width: 94%">
            <table class="grid1">
                <thead>
                    <tr>
                        <th class="btn_azul_oscuro_flecha" data-field="RequestDateGrid">@Localization.GetText("CL.RequestedDate")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="RequestMonthsGrid">@Localization.GetText("CL.RequestMonths")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="ExecutorRequestMonthsGrid">@Localization.GetText("CL.ExecutorRequestedMonths")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="ExtensionStatusGrid">@Localization.GetText("CL.ExtensionsStatus")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="SubmissionDateGrid">@Localization.GetText("CL.SubmissionDate")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="ApprovalDateGrid">@Localization.GetText("CL.ApprovalDate")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="CommunicationNumberGrid">@Localization.GetText("CL.CommunicationNumber")</th>
                    </tr>
                </thead>
                <tbody>

                    @{

            var CurrentExpirationDate = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].CurrentExpirationDate;
                                    var ListExtensions = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension;

            foreach (var extension in ListExtensions)
            {
                var StageActual = ListValidationStage.First(x => x.ConvergenceMasterDataId == extension.ValidationStageId).Code;
                <tr>
                    <td>
                        @{
                if (StageActual == ClauseConstants.APPROVED_CLAUSE_STATUS)
                {
                    <a name="extension" href="@(Url.Action("DetailsExtension", "Clause", new
                        {
                            area = "Clauses",
                            operationId = Model.OperationId,
                            contractId = Model.Contracts[0].ContractId,
                            clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                            clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                            clauseExtensionId = extension.ClauseExtensionId,
                            mainOperationNumber = Model.mainOperationNumber,
                            RequestDate = extension.RequestExtensionDate.Value.ToString("dd MMM yyyy")
                        }))">
                        @(extension.RequestExtensionDate.Value.ToString("dd MMM yyyy"))
                    </a>
                }
                else
                {
                    if (extension.RequestExtensionDate == null)
                    {
                        <a name="extension" href="@(Url.Action("DetailsExtension", "Clause", new
                                                                    {
                                                                        area = "Clauses",
                                                                        operationId = Model.OperationId,
                                                                        contractId = Model.Contracts[0].ContractId,
                                                                        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                                                        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                                                        clauseExtensionId = extension.ClauseExtensionId,
                                                                        mainOperationNumber = Model.mainOperationNumber,
                                                                        RequestDate = Convert.ToDateTime(CurrentExpirationDate).AddMonths((int)extension.IdbRequest).ToString("dd MMM yyyy")
                                                                    }))">
                            @(Convert.ToDateTime(CurrentExpirationDate).AddMonths((int)extension.IdbRequest).ToString("dd MMM yyyy"))
                        </a>
                    }
                    else
                    {
                        <a name="extension" href="@(Url.Action("DetailsExtension", "Clause", new
                                                                    {
                                                                        area = "Clauses",
                                                                        operationId = Model.OperationId,
                                                                        contractId = Model.Contracts[0].ContractId,
                                                                        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                                                        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                                                        clauseExtensionId = extension.ClauseExtensionId,
                                                                        mainOperationNumber = Model.mainOperationNumber,
                                                                        RequestDate = extension.RequestExtensionDate.Value.ToString("dd MMM yyyy")
                                                                    }))">
                            @(extension.RequestExtensionDate.Value.ToString("dd MMM yyyy"))
                        </a>
                    }
                }
                        }
                    </td>

                    <td>@(extension.IdbRequest != null ? extension.IdbRequest.ToString() : string.Empty)</td>
                    <td>@(extension.ExecutorRequest != null ? extension.ExecutorRequest.ToString() + " " + Localization.GetText("month(s)") : string.Empty)</td>

                    <td>
                        @foreach (var masterData2 in ViewBag.ListValidationStage)
                        {
                            if (masterData2.ConvergenceMasterDataId == extension.ValidationStageId)
                            {
                                @masterData2.NameEn
                                break;
                            }
                        }
                    </td>
                    <td>@String.Format("{0:dd MMM yyy}", extension.ValidateDate)</td>
                    <td>@String.Format("{0:dd MMM yyy}", extension.ValidateDate)</td>
                    <td>@extension.CommunicationNumber</td>
                    <td>
                        @foreach (var masterData2 in ViewBag.ListValidationStage)
                        {
                            if (masterData2.ConvergenceMasterDataId == extension.ValidationStageId)
                            {
                                if (masterData2.Code == "CL_DRAFT")
                                {
                                    <a class="btn_entypo" onclick="deleteItem(this)" title=" @Localization.GetText("Delete") " data-route=" @Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, extensionId = @extension.ClauseExtensionId, RevolvingFund = 0, entityRelated = "", year = 0, entityRegisterId = 0, visualProjectId = 0, visualProjectVersionId = 0, documentId = 0, userCommentId = 0, itemToDelete = "Extension", mainOperationNumber = Model.mainOperationNumber }) " style=" min-height:0.8em;">&#59177;</a>
                                }
                                break;
                            }
                        }
                    </td>
                </tr>
            }
                    }
                </tbody>
            </table>
        </div>
        <div class="operationData width_Off min_padding_left dataSocial  ">
            <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
        </div>
        <div class="editingButtonsEdit">
            <a id="newCommentRisks002"
               href="javascript:void(0)"
               class="marginOff"
               title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")">
            @Confluence.ButtonBlue(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments"))</a>
        </div>
        <div id="commentslistdinamic">
            <table id="commentTableUIRI002_edit" class="w100 grid">
                <tbody id="comentContainer">
                    @for (int i = 0; i < Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments.Count(); i++)
                        {
                        <tr>
                            <td>
                                <div class="padding10 leftAlign">
                                    <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                        <input type="button" value="@Localization.GetText("Delete")" class="deleteTextButton verticalAlignTop absolute absRight">
                                    </div>
                                    <div class="verticalMargin10 w100">
                                        <div class="verticalMargin10 inline-block">@(Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified == null ? string.Empty : Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified.Value.ToString("dd MMM yyyy"))</div>
                                        <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].CreatedBy</div>
                                    </div>
                                    <div class="verticalMargin10 w100">
                                        <div class="padding10">
                                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].UserCommentId)
                                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text)
                                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].ModifiedBy)
                                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified)
                                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].CreatedBy)
                                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Created)

                                            @Html.TextAreaFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent" }, { "data-val", "true;" }, { "data-val-required", "Please, complete the mandatory fields" } })
                                            @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text);}
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        }
                </tbody>
            </table>
        </div>

        <div class="operationData width_Off min_padding_left dataSocial  ">
            <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
        </div>
        <div class="editingButtonsEdit">
            <input type="button" class="btn-primary marginOff lnkModal buttonBlue mb15" value="@Localization.GetText("DM.Add.Document")" title="@Localization.GetText("DM.Add.Document")" data-title="Add a Document" data-route="@(Url.Action("IndexDocumentRelationship", "Document", new { area = string.Empty, operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, parentEntityId = Model.Contracts[0].ContractId, subParentEntityId = Model.Contracts[0].Clauses[0].ClauseId, subsubParentEntityId = 0, entityRelated = "CLAUSE_INDIVIDUAL", entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, isFirstTime = true, businessAreaCode = "BA_CLAUSES" }))">
        </div>
        <div class="mod_tabla icon_entypo tableDocuments" style="width: 94%">
            <table class="grid2">
                <thead>
                    <tr>
                        <th class="btn_azul_oscuro_flecha" data-field="User">@Localization.GetText("User")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="Date">@Localization.GetText("Date")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="IDBDocNum">@Localization.GetText("IDB Doc number")</th>
                        <th class="btn_azul_oscuro_flecha" data-field="Content">@Localization.GetText("Content")</th>
                        <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var document in Model.Contracts[0].Clauses[0].ClauseIndividuals[0].Documents)
                    {
                        <tr>
                            <td>@document.CreatedBy</td>
                            @{
                                 var created = document.Created == null ? string.Empty : String.Format("{0:dd MMM yyy}", document.Created);
                            }
                            <td>@created</td>
                            <td>@document.DocumentReference</td>
                            <td>@document.Description</td>
                            <td>
                                <a class="btn_entypo" onclick="deleteItem(this)" title="@Localization.GetText("Delete")" data-route="@Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, extensionId = 0, RevolvingFund = 0, entityRelated = "CLAUSE_INDIVIDUAL", year = 0, entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, visualProjectId = 0, visualProjectVersionId = 0, documentId = @document.DocumentId, userCommentId = 0, itemToDelete = "Document", mainOperationNumber = Model.mainOperationNumber })" style="position: relative; left: 20%; min-height: 0.9em; min-width: 1.5em;">&#59177;</a>
                                @{
                                    var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                }
                                <a class="btn_entypo" title="@Localization.GetText("Download")" href=@secureUrl target="_blank" style="position: relative; left: 25%; min-height: 0.9em; min-width: 1.5em;">&#58544;</a>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (!Model.WorkflowStartedCL003)
            {
                if(!Model.WorkflowStartedCL004)
            {
                    <div class="editingButtonsEdit">
                        @foreach (var masterData in ViewBag.ListClauseStatus)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId)
                        {
                            if (masterData.Code == "CL_DRAFT")
                            {
                                foreach (var masterData2 in ViewBag.ListClauseCategory)
                                {
                                    if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                    {
                                        if (masterData2.Code != "LASTD")
                                        {
                                            <a href="@(Url.Action("Delete", "Clause", new { area = "Clauses", mainOperationNumber = Model.mainOperationNumber, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId }))"
                                               class="cancel"
                                               title="@Localization.GetText("Delete")">@Localization.GetText("Delete")</a>
                                        }
                                        break;
                                    }
                                }
                                break;
                            }
                        }
                    }
                        <label for="cancel1">
                            <a id="Details"
                               class="desactivateHighlight buttonLink"
                               href="@(Url.Action("Details", "Clause", new { area = "Clauses",
                                   operationId = Model.OperationId,
                                   contractId = Model.Contracts[0].ContractId,
                                   clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                   clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                   mainOperationNumber = Model.mainOperationNumber }))"
                               title="@Localization.GetText("Cancel")">
                                <span>@Localization.GetText("Cancel")</span>
                            </a>
                        </label>
                        <label for="save">
                            <input type="submit"
                                   class="buttonWhite save"
                                   name="action:SaveClause"
                                   value="@Localization.GetText("Save")" id="Save2">
                        </label>
                        @foreach (var masterData in ViewBag.ListClauseCategory)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                        {
                            if (@masterData.Code != "SIGN" && masterData.Code != "RAT")
                            {
                                <label for="saveandrequest">
                                    <input type="submit" class="buttonOrange saveandrequest ClauseFulfilled"
                                           style="float:none; margin-right: 0.2em" name="action:Save&RequestClauseFulfilled"
                                           value="@Localization.GetText("CL.Conditions.Button.fulfilled")"
                                           id="saveandrequest1" onclick="warningMandatoryFulfillment()">
                                </label>
                                <label for="saveandrequest">
                                    <input type="submit"
                                           class="buttonOrange saveandrequest"
                                           style="float:none;
                                           margin-right: 0.2em"
                                           name="action:Save&RequestClauseUnfulfilled"
                                           value="@Localization.GetText("CL.Conditions.Button.Unfulfilled")"
                                           id="saveandrequest1">
                                </label>
                                <label for="saveandrequest">
                                    <input type="submit"
                                           class="buttonOrange saveandrequest"
                                           style="float:none;
                                           margin-right: 0.2em"
                                           name="action:Save&RequestClauseWaived"
                                           value="@Localization.GetText("CL.Conditions.Button.Waived")" id="saveandrequest1">
                                </label>
                            }
                        }
                    }
                    </div>
            }
                else
                {
                    <div class="editingButtonsEdit up topMargin16px">
                        <a class="buttonWhite disabled"
                           id="Details"
                           title="@Localization.GetText("Cancel")">
                            @Localization.GetText("Cancel")
                        </a>
                        <a class="buttonWhite save disabled"
                           value="@Localization.GetText("Save")">@Localization.GetText("Save")</a>
                        <a class="buttonOrange saveandrequest ClauseFulfilled disabled"
                           style=" margin-right: 0.2em"
                           value="@Localization.GetText("Fulfillment")">@Localization.GetText("Fulfill")</a>
                        <a class="buttonOrange saveandrequest disabled"
                           style=" margin-right: 0.2em"
                           value="@Localization.GetText("Unfulfillment")">@Localization.GetText("Unfulfill")</a>
                        <a class="buttonOrange saveandrequest disabled"
                           style=" margin-right: 0.2em"
                           value="@Localization.GetText("Waived")">@Localization.GetText("Waived")</a>
                    </div>
                }
            }
        else
        {
            <div class="editingButtonsEdit up topMargin16px">
                <a class="buttonWhite disabled"
                   id="Details"
                   title="@Localization.GetText("Cancel")">
                    @Localization.GetText("Cancel")
                </a>
                <a class="buttonWhite save disabled"
                   value="@Localization.GetText("Save")">@Localization.GetText("Save")</a>
                <a class="buttonOrange saveandrequest ClauseFulfilled disabled"
                   style=" margin-right: 0.2em"
                   value="@Localization.GetText("Fulfillment")">@Localization.GetText("Fulfill")</a>
                <a class="buttonOrange saveandrequest disabled"
                   style=" margin-right: 0.2em"
                   value="@Localization.GetText("Unfulfillment")">@Localization.GetText("Unfulfill")</a>
                <a class="buttonOrange saveandrequest disabled"
                   style=" margin-right: 0.2em"
                   value="@Localization.GetText("Waived")">@Localization.GetText("Waived")</a>
            </div>
        }


        <div class="hide" id="advFulfillment" data-title=" @Localization.GetText("Warning")">
                        <div class=" padding20 popUpBody">
            <div class="marginBottom2">
                <div>
                    @Localization.GetText("MandatorySubmissionDate")
                    <br />
                </div>
                <div class="rightAlign absolute right1 verticalPadding10 w60">
                    <input type="button" class="button blueButton" id="ConfirmAdvFulfillment" value="@Localization.GetText("OK")" />
                </div>
            </div>
        </div>
        <div class="hide" id="advMilestonTrenchOperation" data-title="@Localization.GetText("Warning")">
            <div class=" padding20 popUpBody">
                <div class="marginBottom2">
                    <div>
                        @{
                            var isOkButtonEnable = Model.IsSpecialOperationPBLPBP &&
                                !string.IsNullOrEmpty(Model.NameTrench) && Model.HasDocument;
                        }
                        @if (isOkButtonEnable)
                        {
                            @Localization.GetText("CL.Warning.PBP.PBL.Fulfilled.HasDocument")
                        }
                        else
                        {
                            @Localization.GetText("CL.Warning.PBP.PBL.Fulfilled")
                        }
                       
                        <br />
                        <br />
                    </div>
                    <div class="rightAlign absolute right1 verticalPadding10 w95" style="width:95%;margin-right: 1em;">

                        <input type="button"
                               class="button blueButton"
                               id="CancelMilestonTrenchOperation"
                               value="@Localization.GetText("Cancel")" />
                        <input type="button"
                               class="button blueButton"
                               id="ConfirmadvMilestonTrenchOperation"
                               value="@Localization.GetText("OK")"
                               @(isOkButtonEnable ? string.Empty : "disabled") />
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
        }
    </div>
</section>

<script type="text/javascript">
    $(document).ready(function () {
        $(document).on(
            'click',
            'a.tipo1, a#Details, a[title="Add"], a[name="extension"]',
            function (){
                idbg.lockUi(null, true);
            });
    });
</script>