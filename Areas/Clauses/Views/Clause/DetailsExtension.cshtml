@using IDB.MW.Domain.Models.Architecture.MasterDefinitions;
@using IDB.MW.Domain.Entities;
@using IDB.MW.Domain.Values;

@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel

@{
    ViewBag.Title = "CreateNewExtension";

    List<ConvergenceMasterDataModel> ListValidValidationStage = new List<ConvergenceMasterDataModel>();

    foreach (var itemValidationStage in ViewBag.ListValidationStage)
    {
        if (itemValidationStage.Code == ClauseConstants.APPROVED_CLAUSE_STATUS)
        {
            ListValidValidationStage.Add(
                new ConvergenceMasterDataModel
                {
                    ConvergenceMasterDataId = itemValidationStage.ConvergenceMasterDataId
                });
        }
    }
}


@section CSS{    
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004_edit.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Clauses/ClausesLetterCss.css")" />
}

    

@section JavaScript {
    
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Document/addDocument.js")"></script>   
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/addComment.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Global/GlobalScript.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
   
    <script type="text/javascript">
        $(document).ready(function () {

            $(".saveandrequest").click(function ()
            {

                redirectPage($(this).data("route"));
            });

            deletemodal__();
        });

        function deletemodal__() {
            try {
                $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                $(".ui-widget-overlay").remove();
                $(".k-window").remove();
                $(".k-window-titlebar").remove();
            } catch (Exception) { }
        }
    </script>
}

<section class="central">
    <h2 class="hide">Seccion central de Contenido</h2>
    <div class="mod_contenido_central contracts_and_clauses clause304">
        <h3 class="headingh2 w50">
            <a href="@(
                    Url.Action("Index", "Contracts",
                        new {area = "Clauses", operationNumber = Model.mainOperationNumber}))"
               title=" @Localization.GetText("CL.ContractsClauses")" class="tipo1">
               
                 @Localization.GetText("CL.ContractsClauses")
            </a>
        </h3>

        <div class="editingButtonsEdit"> 
            @if (Html.HasPermission("Extension Write"))
            {
                foreach (var masterData2 in ViewBag.ListValidationStage)
                {
                    if (masterData2.ConvergenceMasterDataId == 
                        @Model.Contracts[0].Clauses[0]
                            .ClauseIndividuals[0].ClauseExtension[0].ValidationStageId)
                    {
                        if (!masterData2.Code.StartsWith("CL_REV"))
                        {
                            <label for="edit">

                            @{
                                if (ViewBag.ValidationStage != "APPROVED")
                                {
                                    <a class="btn-secondary"
                                        href="@(
                                            Url.Action("EditExtension", "Clause", 
                                                new
                                                {
                                                    area = "Clauses", 
                                                    operationId = Model.OperationId, 
                                                    contractId = Model.Contracts[0].ContractId, 
                                                    clauseId = Model.Contracts[0].Clauses[0].ClauseId, 
                                                    clauseIndividualId = Model.Contracts[0]
                                                        .Clauses[0].ClauseIndividuals[0].ClauseIndividualId, 
                                                    clauseExtensionId = Model.Contracts[0].Clauses[0]
                                                        .ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId, 
                                                    mainOperationNumber = Model.mainOperationNumber
                                                }))"> @Localization.GetText("Edit")
                                    </a>
                           
                                }
                            }
                
                            </label>
                 
                        }
                        break;
                    }
                }
                <label for="saveandrequest">
                    <input type="button" class="btn-primary_2 saveandrequest" name="Request"
                        value="@Localization.GetText("Request")"
                        data-route="@(
                            Url.Action("DetailsExtensionApprovalRequest", "Clause", 
                                new
                                {
                                    area = "Clauses", 
                                    operationId = Model.OperationId, 
                                    contractId = Model.Contracts[0].ContractId, 
                                    clauseId = Model.Contracts[0].Clauses[0].ClauseId, 
                                    clauseIndividualId = Model.Contracts[0].Clauses[0]
                                        .ClauseIndividuals[0].ClauseIndividualId, 
                                    clauseExtensionId = Model.Contracts[0].Clauses[0]
                                        .ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId, 
                                    mainOperationNumber = Model.mainOperationNumber, 
                                    stateExtension = ViewBag.ValidationStage
                                }))">                   
                </label>
            }
        </div>
        <div class="desheadingh3 w65">
            <p class="title">@Model.OperationNumber <span class="draft">
                @foreach (var masterData in ViewBag.ListContractStatus)
                {
                    if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].ContractClauseStatId)
                    {
                        @Localization.GetText(masterData.NameEn)
                        break;
                    }
                }
            </span>
                @if (Model.Contracts[0].LegalEffectivenessDate.HasValue && 
                    Model.Contracts[0].CurrentDisbursementExpirationDate.HasValue)
                {
                    @String.Format("{0:dd MMM yyy}", Model.Contracts[0].LegalEffectivenessDate)
                    <span class="titleTo"> @Localization.GetText("To") </span> 
                    @String.Format("{0:dd MMM yyy}", Model.Contracts[0].CurrentDisbursementExpirationDate)
                }
            <p class="description">
                <span class="descriptionBold">
                    @Model.Contracts[0].ContractNumber
                </span>
                @Model.OperationNameEn
            </p>
        </div>
        <h4 class="headingh3 min_bottom_headingh3">@Localization.GetText("Clause extension")</h4>
        <fieldset>
            <legend class="hide">@Localization.GetText("Dates")</legend>
            <div class="operationData custom">
                <label class="editLabel input" for="requestedMonths">
                    <span class="dataTitle inputTitle">@Localization.GetText("Requested months")</span>
                    @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].IdbRequest
                </label>
                <label class="editLabel input" for="executorRequestedMonths">
                    <span class="dataTitle inputTitle">
                        @Localization.GetText("CL.ExecutorRequestedMonths")
                    </span>
                    @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ExecutorRequest
                </label>
                <div class="data4">
                    <p class="dataTitle"> @Localization.GetText("Requested expiration date")</p>
                        @{  
                            
                            if (ListValidValidationStage.Any(
                                x => x.ConvergenceMasterDataId == 
                                    Model.Contracts[0].Clauses[0].ClauseIndividuals[0]
                                        .ClauseExtension[0].ValidationStageId))
                            {
                                <p>@ViewBag.RequestDate</p>
                            }
                            else
                            {
                                var requestMoths = Model.Contracts[0].Clauses[0]
                                    .ClauseIndividuals[0].ClauseExtension[0].IdbRequest;
                                if (requestMoths != null)
                                {
                                    <p>@ViewBag.RequestDate</p>
                                }
                                else
                                {
                                    <p>@ViewBag.RequestDate</p>                                
                                }
                            }
                        }
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend class="hide">@Localization.GetText("Extensions")</legend>
            <div class="operationData custom">
                <label class="editLabel input" for="communicationNumber">
                    <span class="dataTitle inputTitle">
                        @Localization.GetText("CL.CommunicationNumber")
                    </span>
                    @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].CommunicationNumber
                </label>
                <label class="editLabel input" for="requestedBy">
                    <span class="dataTitle inputTitle">
                        @Localization.GetText("Requested by")
                    </span>
                    @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].RequestedBy
                </label>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Extension status")</p>                                        
                    <p>@ViewBag.ValidationStage</p>
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend class="hide"> @Localization.GetText("Description")</legend>
            <div class="operationData custom marginBottom2Con8">
                <div class="operationData" style="margin-bottom: 30px">
                    <label class="editLabel input w100" for="description"
                           style="word-wrap: break-word;width:486.27px;margin-right:10px;">
                        <span class="dataTitle inputTitle">@Localization.GetText("Description")</span>
                        @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].Description
                    </label>
                </div>
                <div class="operationData" style="margin-bottom: 30px">
                    <label class="editLabel input w100" for="justification"
                           style="word-wrap: break-word;width:486.27px;margin-right:10px;">
                        <span class="dataTitle inputTitle">@Localization.GetText("Justification")</span>
                        @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].Justification
                    </label>
                </div>
                <div class="operationData" style="margin-bottom: 30px">
                    <label class="editLabel input w100" for="recomendation"
                           style="word-wrap: break-word;width:486.27px;margin-right:10px;">
                        <span class="dataTitle inputTitle">@Localization.GetText("Recomendation")</span>
                        @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].Recommendation
                    </label>
                </div>
            </div>
        </fieldset>
        
        <div class="operationData width_Off min_padding_left dataSocial  ">
            <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
        </div>
        <div class="mod_tabla icon_entypo" style="width: 94%">
            <table class="grid2">
                <thead>
                    <tr>
                        <th class="btn_azul_oscuro_flecha" data-field="User">
                            @Localization.GetText("User")
                        </th>
                        <th class="btn_azul_oscuro_flecha" data-field="Date"
                            >@Localization.GetText("Date")
                        </th>
                        <th class="btn_azul_oscuro_flecha" data-field="IDBDocNum">
                            @Localization.GetText("IDB Doc number")
                        </th>
                        <th class="btn_azul_oscuro_flecha" data-field="Content">
                            @Localization.GetText("Content")
                        </th>
                        <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var document in Model.Contracts[0].Clauses[0]
                        .ClauseIndividuals[0].ClauseExtension[0].Documents)
                    {
                        <tr>
                            <td>@document.CreatedBy</td>
                            <td>@String.Format("{0:dd MMM yyy}", document.Created)</td>
                            <td>@document.DocumentReference</td>
                            <td>@document.Description</td>
                            <td>
                                @{
                                    var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                }
                                <a class="btn_entypo" title=" @Localization.GetText("Download")" href=@secureUrl target="_blank" style="position: relative;left: 25%;min-height: 0.9em;min-width: 1.5em;">&#58544;</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>  
        
        <div class="editingButtonsEdit">
            @if (Html.HasPermission("Extension Write"))
            {
                foreach (var masterData2 in ViewBag.ListValidationStage)
                {
                    if (masterData2.ConvergenceMasterDataId == 
                        @Model.Contracts[0].Clauses[0].ClauseIndividuals[0]
                            .ClauseExtension[0].ValidationStageId)
                    {
                        if (!masterData2.Code.StartsWith("CL_REV"))
                        {
                          <label for="edit">
                           
                             @{if (ViewBag.ValidationStage != "APPROVED")
                             {
                                 <a class="btn-secondary" 
                                     href="@(Url.Action(
                                         "EditExtension", 
                                         "Clause", 
                                         new
                                         {
                                             area = "Clauses", 
                                             operationId = Model.OperationId, 
                                             contractId = Model.Contracts[0].ContractId, 
                                             clauseId = Model.Contracts[0].Clauses[0].ClauseId, 
                                             clauseIndividualId = Model.Contracts[0].Clauses[0]
                                                 .ClauseIndividuals[0].ClauseIndividualId, 
                                             clauseExtensionId = Model.Contracts[0].Clauses[0]
                                                 .ClauseIndividuals[0].ClauseExtension[0]
                                                 .ClauseExtensionId, 
                                             mainOperationNumber = Model.mainOperationNumber
                                         }))"> @Localization.GetText("Edit")</a>

                             }}

                          </label>                  
                        }
                        break;
                    }
                }
                                
                <label for="saveandrequest">
                    <input type="button" class="btn-primary_2 saveandrequest"
                        name="Request" value="@Localization.GetText("Request")" 
                        data-route="@(Url.Action(
                            "DetailsExtensionApprovalRequest", "Clause", 
                            new
                            {
                                area = "Clauses", 
                                operationId = Model.OperationId, 
                                contractId = Model.Contracts[0].ContractId, 
                                clauseId = Model.Contracts[0].Clauses[0].ClauseId, 
                                clauseIndividualId = Model.Contracts[0].Clauses[0]
                                    .ClauseIndividuals[0].ClauseIndividualId, 
                                clauseExtensionId = Model.Contracts[0].Clauses[0]
                                    .ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId, 
                                mainOperationNumber = Model.mainOperationNumber, 
                                stateExtension = ViewBag.ValidationStage
                            }))">    
                </label>
            }
        </div>
    </div>
</section>