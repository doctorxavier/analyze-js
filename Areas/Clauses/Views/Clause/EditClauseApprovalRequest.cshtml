@using IDB.MW.Domain.Values

@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "CreateClauseApprovalRequest";
    var errorAddingDocument = ViewBag.UploadFileError != null ? (string)ViewBag.UploadFileError : string.Empty;
}

@section CSS{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004_edit.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Clauses/ClausesLetterCss.css")" />
}

@section JavaScript {
    @Scripts.Render("~/bundles/EditClauseApprovalRequest")
    @Scripts.Render("~/bundles/OnlyNewConfluence")
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js" +
        System.Configuration.ConfigurationManager.AppSettings["cache"].ToString())">
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".optionSelect").kendoDropDownList();
            $("select#validator_list_additional.kendo-dropdown")
                .data("kendoDropDownList").list.width(600);
            var grid1 = new GridComponent(".grid1", 20, false, true);
            var grid2 = new GridComponent(".grid2", 20, false, true);
            
            $(".cancelEditRequest").click(function () {
                var route = $("#DetailsClauseApprovalRequest").val();

                idbg.lockUi(null, true);
                redirectPage(route);
            });

            $('#target').submit(function (event) {
                var MAX_COMMENT_LENGTH = 500;

                $('.txtDescriptionComent').each(function () {
                    var currentComment = $(this);

                    if (currentComment.val().length == 0) {
                        $('#comment-validation-errors')
                            .text("@Localization.GetText("TC.CommonMessages.FieldRequired")");

                        return false;
                    }

                    if (currentComment.val().length > MAX_COMMENT_LENGTH) {
                        $('#comment-validation-errors')
                            .text("@Localization.GetText("GLOBAL.CONTROL.RICH.ERROR")");

                        return false;
                    }

                    $('#comment-validation-errors').text("");

                    return true;
                });

                idbg.lockUi(null, true);
            });
        });
    </script>

    @if (!string.IsNullOrWhiteSpace(errorAddingDocument))
    {
        <script type="text/javascript">
            $(document).ready(function () {

                function warningDocumentAddingError() {
                    event.preventDefault();
                    $(window.parent.document).find('body').append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="dinamicModal"></div>');
                    $("#errorUploading").appendTo(".dinamicModal").removeClass("hide");
                    var title = $("#errorUploading").data("title");
                    var modal = $(".dinamicModal").kendoWindow({
                        width: "800px",
                        title: title,
                        draggable: false,
                        resizable: false,
                        pinned: true,
                        actions: [
                            "Close"
                        ],
                        modal: true,
                        visible: false,
                        activate: function () {
                            $("#ConfirmErrorWarning").click(functionCancel);
                        },
                        close: function () {
                            $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                            $("#errorUploading").appendTo("#ui_sp_001").addClass("hide");
                            $("body").find(".ui-widget-overlay").remove();
                            $(".ui-widget-overlay").remove();
                            $(".k-window").remove();
                        }
                    }).data("kendoWindow");
                    $(".k-window-titlebar").addClass("warning");
                    $(".k-window-title").addClass("ico_warning");
                    modal.center();
                    modal.open();
                };

                var functionCancel = function () {
                    event.preventDefault();
                    var modal = $(".dinamicModal").data("kendoWindow");
                    modal.close();
                    $(".ui-widget-overlay").remove();
                };

                warningDocumentAddingError();
            });
        </script>
    }
}

@Html.Hidden("DetailsClauseApprovalRequest", Url.Action("DetailsClauseApprovalRequest", new { operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, mainOperationNumber = Model.mainOperationNumber }))

<h2 class="hide">Seccion central</h2>
<section class="central">
    <input type="hidden" id="UserName" name="UserName" value="@IDBContext.Current.UserName" />
    @using (Html.BeginForm("CreateClauseApprovalRequest", "Clause", FormMethod.Post, new { area = "Clauses", id = "target" }))
    {
        <div class="mod_contenido_central generic_tasks">
            <input type="hidden" name="User" id="UserName" value="@IDBContext.Current.UserName"/>
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.OperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId)
            @Html.HiddenFor(x => x.MultiplePriorClauseIndividualIds)
            <!--contracts_and_clauses-->
            <h3 class="headingh2"><a href="@(Url.Action("Index", "Contracts", new { area = "Clauses", operationNumber = Model.mainOperationNumber }))" title="@Localization.GetText("CL.ContractsClauses")" class="tipo1">@Localization.GetText("CL.ContractsClauses")</a></h3>
            <div class="operationData">
                <div class="box_subtitle">
                    <h4 class="headingh2 title_tag">@Model.RequestTypeName</h4>
                    <div class="editingButtonsEdit up">
                        <label for="cancel1">
                            <input type="button" class="btn-secondary cancelEditRequest" value="@Localization.GetText("Cancel")">
                        </label>
                        <label for="SendRequest">
                            <input type="submit" class="btn-primary_2 save" name="action:SaveClauseRequest" value="@Localization.GetText("Save")">
                        </label>
                        <label for="EditClause">
                            <input type="submit" class="btn-primary_2 saveandrequest" name="action:SendClauseRequest" value="@Localization.GetText("Save and request")">
                        </label>
                    </div>
                </div>
            </div>
            <h3 class="hide">Contenido central</h3>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Creation on")</p>
                    <p>@String.Format("{0:dd MMM yyy}", DateTime.Now)</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Due on")</p>
                    <p></p>
                </div>
                <div class="data2">
                    <p class="dataTitle">@Localization.GetText("Workflow")</p>
                    <p class="icon workflow">@Localization.GetText("Clause Final Status Validation")</p>
                </div>

                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Workflow submitter")</p>
                    <p>@IDBContext.Current.UserName</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Priority")</p>
                    <p></p>
                </div>
            </div>

            @{
        Html.RenderAction("AdditionalValidators", "Tasks", new
        {
            area = "Global",
            Code = "WF-CL-004",
            Editable = true,
            modelValidation = ViewBag.OperationRelatedModel
        });
            }

            @if (Model.CategoryClause == ClauseConstants.CATEGORY_OTHERP &&
                Model.RequestTypeName == Localization.GetText("CL.FINALSTATUS.START.K2SCREEN.FULFILLMENT"))
            {
                <div class="validator-list">
                    <div name="multi-prior-section-text" class="validator-list-add" style="text-align: left;">
                        <span style="vertical-align: middle;">
                            @Localization.GetText("CC.MultiPriorConditionClause.PopupButtonSection.Description")
                        </span>
                        <button class="btn btn-primary button" type="button"
                            onclick="openAdditionalPriorClausesModal('@Localization.GetText("CC.MultiPriorConditionClause.Modal.Title")')"
                            style="width: 250px; vertical-align: middle;">
                            @Localization.GetText("CC.MultiPriorConditionClause.PopupButton.FulfillDescription")
                        </button>
                    </div>
                </div>
            }

            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("Instructions")</p>
                        <p>@Localization.GetText("Initiate Validation Workflow for approving the final status of a clause.")</p>
                    </div>
                </div>
            </div>

            <div class="operationData width_Off min_padding_left dataSocial" style="width: 30%;">
                <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
            </div>
            <div class="editingButtonsEdit" style="margin-bottom: 1%; position: relative; right: 3%;">
                <a id="newCommentRisks002" 
                   href="javascript:void(0)" 
                   class="btn-primary marginOff" 
                   title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")">
                @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")</a>
            </div>
            <div id="commentslistdinamic" style="margin-bottom: 3%;">
                <table id="commentTableUIRI002_edit" class="grid w100 noInnerPadding fixedValues " style="position: relative; left: 2.6%; width: 95%;">
                    <tbody id="comentContainer">
                        @for (int i = 0; i < Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments.Count(); i++)
                        {
                            if (Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].ModifiedBy == IDBContext.Current.UserName)
                            {
                            <tr>
                                <td>
                                    <div class="padding10 leftAlign">
                                        <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                            <input type="button" value="Delete" class="deleteTextButton verticalAlignTop absolute absRight">
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="verticalMargin10 inline-block">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified.Value.ToString("dd MMM yyyy")</div>
                                            <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].CreatedBy</div>
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="padding10">
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Created)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].CreatedBy)

                                                @Html.TextAreaFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent" }})
                                            </div>
                                            <div><p id="comment-validation-errors" style="color: red"></p></div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            }
                            else
                            {
                            <tr>
                                <td>
                                    <div class="padding10 leftAlign">
                                        <div class="verticalMargin10 w100">
                                            <div class="verticalMargin10 inline-block">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified.Value.ToString("dd MMM yyyy")</div>
                                            <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].CreatedBy</div>
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="padding10">
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Modified)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Created)
                                                @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].CreatedBy)

                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].UserComments[i].Text</div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr> 
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div class="operationData width_Off min_padding_left dataSocial" style="width: 30%;">
                <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
            </div>
            <div class="editingButtonsEdit" style="margin-bottom: 4%; position: relative; right: 3%;">
                <input type="button" class="btn-primary marginOff lnkModal" value="@Localization.GetText("DM.Add.Document")" title="@Localization.GetText("DM.Add.Document")" data-title="Add a Document" data-route="@(Url.Action("IndexDocumentRelationship", "Document", new { area = string.Empty, operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, parentEntityId = Model.Contracts[0].ContractId, subParentEntityId = Model.Contracts[0].Clauses[0].ClauseId, subsubParentEntityId = 0, entityRelated = "CLAUSE_INDIVIDUAL_REQUEST", entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, isFirstTime = true, businessAreaCode = "BA_CLAUSES" }))">
            </div>
            <div class="mod_tabla icon_entypo tableDocuments" style="width: 94%">
                <table class="grid w100 noInnerPadding fixedValues ">
                    <thead>
                        <tr>
                            <th class="btn_azul_oscuro_flecha" data-field="@Localization.GetText("User")">@Localization.GetText("User")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="@Localization.GetText("Date")">@Localization.GetText("Date")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="@Localization.GetText("IDB Doc number")">@Localization.GetText("IDB Doc number")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="@Localization.GetText("Content")">@Localization.GetText("Content")</th>
                            <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var document in Model.Contracts[0].Clauses[0].ClauseIndividuals[0].Documents)
                        {
                            <tr>
                                <td>@document.CreatedBy</td>
                                <td>@String.Format("{0:dd MMM yyy}", document.Created)</td>
                                <td>@document.DocumentReference</td>
                                <td>@document.Description</td>
                                <td>
                                    @{
                                        var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                    }
                                    <a class="btn_entypo" href=@secureUrl target="_blank" style="position: relative;left: 25%;min-height: 0.9em;min-width: 1.5em;">&#58544;</a>
                                    <a class="btn_entypo" onclick="deleteItem(this)" title="@Localization.GetText("Delete")" data-route="@Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, extensionId = 0, RevolvingFund = 0, entityRelated = "CLAUSE_INDIVIDUAL_REQUEST", year = 0, entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, visualProjectId = 0, visualProjectVersionId = 0, documentId = @document.DocumentId, userCommentId = 0, itemToDelete = "Document", mainOperationNumber = Model.mainOperationNumber })" style="position: relative; left: 25%; min-height: 0.9em; min-width: 1.5em;">&#59177;</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="editingButtonsEdit marginRight2Con5">

                <label for="cancel1">
                    <input type="button" class="btn-secondary cancelEditRequest" value="@Localization.GetText("Cancel")">
                </label>
                <label for="SendRequestTasks">
                    <input type="submit" class="btn-primary_2 save" name="action:SaveClauseRequest" value="@Localization.GetText("Save")">
                </label>
                <label for="EditTask">
                    <input type="submit" class="btn-primary_2 saveandrequest" name="action:SendClauseRequest" value="@Localization.GetText("Save and request")">
                </label>
            </div>

        </div>
                        if (!string.IsNullOrWhiteSpace(errorAddingDocument))
                        {
        <div class="hide" id="errorUploading" data-title= "@Localization.GetText("Warning")">
            <div class="padding20 popUpBody">
                <div class="marginBottom2">
                    <div>
                        @errorAddingDocument
                    </div>
                    <div class="rightAlign absolute right1 verticalPadding10 w60">
                        <input type="button" class="button blueButton" id="ConfirmErrorWarning" value="@Localization.GetText("OK")" />
                    </div>
                </div>
            </div>
        </div>
        }
    }

    @{
        if (Model.CategoryClause == ClauseConstants.CATEGORY_OTHERP &&
            Model.RequestTypeName == Localization.GetText("CL.FINALSTATUS.START.K2SCREEN.FULFILLMENT"))
        {
            Html.RenderPartial(
                "../Shared/AdditionalPriorConditionClauses",
                Model.PriorClauseIndividualMultiple);
        }
    }
</section>