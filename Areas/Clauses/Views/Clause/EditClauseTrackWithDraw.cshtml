@using IDB.MW.Domain.Values

@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "EditClauseTrackWithDraw";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/trackWithDraw.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js"  + @System.Configuration.ConfigurationManager.AppSettings["cache"].ToString())"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/BlockClauseTrack.js")"></script>
}

@section CSS{
    @Styles.Render("~/Content/Confluence")
    <link rel="stylesheet" type="text/css" 
        href="@Url.Content("~/Content/Modules/Clauses/clauses.css")" />
}

<section class="central clauses-edit-clause-track-with-draw">
    <h2 class="hide">Seccion central de Contenido</h2>
    <div class="mod_contenido_central contracts_and_clauses">
        @using (Html.BeginForm("EditClauseTrackWithDrawPost", "Clause", FormMethod.Post, new { area = "Clauses", id = "target" }))
        {   
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].ContractNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractClauseStatId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseId)
            for (int index = 0; index < Model.Contracts[0].Clauses[0].ClauseIndividuals.Count; index++)
            {
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[index].ClauseIndividualId)   
            }
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].UpdateLMSStatus)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].IsDeleted)                       
            <h3 class="headingh2 w60">
                <a href="@(Url.Action("Index", "Contracts",
                    new
                    {
                        area = "Clauses",
                        operationNumber = Model.mainOperationNumber
                    }))" title="@Localization.GetText("CL.ContractsClauses")" class="titlePrincipal tipo1">
                    @Localization.GetText("CL.ContractsClauses")
                </a>
            </h3>
            <div class="editingButtonsEdit">

                @if (Model.CategoryClause != ClauseConstants.SIGNATURE_CATEGORY)
                {
                    <a class="btn buttonWhite" onclick="deleteItem(this)" title="@Localization.GetText("Delete")"
                        data-route="@Url.Action("DeleteItem", "Clause",
                            new
                            {
                                area = "Clauses",
                                operationId = Model.OperationId,
                                contractId = Model.Contracts[0].ContractId,
                                clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                extensionId = 0,
                                RevolvingFund = 0,
                                entityRelated = "",
                                year = 0,
                                entityRegisterId = 0,
                                visualProjectId = 0,
                                visualProjectVersionId = 0,
                                documentId = 0,
                                userCommentId = 0,
                                itemToDelete = "Clause",
                                mainOperationNumber = Model.mainOperationNumber
                            })">
                        @Localization.GetText("Delete")
                    </a>
                }

                <a class="btn buttonWhite" href="@(Url.Action("Details", "Clause",
                    new
                    {
                        area = "Clauses",
                        operationId = Model.OperationId,
                        contractId = Model.Contracts[0].ContractId,
                        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                        mainOperationNumber = Model.mainOperationNumber
                    }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                <label for="save">
                    <input type="submit" class="btn buttonOrange save" value="@Localization.GetText("Save")" id="save2">
                </label>
            </div>

            <div class="row mb16">
                <div class="col-md-12 mb20">
                    <p class="main-header font14">@Localization.GetText("Clause Details")</p>
                </div>
            </div>

            <div class="row row-header font-header">
                <div class="col-md-3">
                    @foreach (var masterData in ViewBag.ListClauseCategory)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                        {
                            if (masterData.Code == "SIGN")
                            {
                                @Localization.GetText("CL.SignatureFulfillmentClause")
                            }
                            else
                            {
                                @Localization.GetText("Clause")
                            }

                            break;
                        }
                    }
                    <span class="dataTitle inputTitle"><span class="asteriscoRojo">*</span></span>
                </div>
                <div class="col-md-3">
                    @Localization.GetText("Description")
                    <span class="dataTitle inputTitle"><span class="asteriscoRojo">*</span></span>
                </div>
                <div class="col-md-3">
                    @Localization.GetText("CL.Status")
                </div>
                <div class="col-md-3">
                    @Model.Contracts[0].ContractNumber
                </div>
            </div>

            <div class="row row-body-50 font-body">
                <div class="col-md-3">
                    @Html.TextBoxFor(x => x.Contracts[0].Clauses[0].ClauseNumber,
                        new Dictionary<string, Object> { { "class", "inputTextarea" }, { "id", "number" }, { "name", "number" }, { "MaxLength", "32" }, { "placeholder", "Clause Number" } })
                    @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseNumber);}
                </div>
                <div class="col-md-3">
                    @Html.TextAreaFor(x => x.Contracts[0].Clauses[0].Description,
                        new Dictionary<string, Object> { { "class", "inputTextarea" }, { "name", "Description" }, { "id", "Description" }, { "style", "height: 80px; width: 100%;" }, { "rows", "5" }, { "placeholder", "Clause Description" } })
                    @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].Description);}
                </div>
                <div class="col-md-3">
                    @foreach (var masterData3 in ViewBag.FinalStatusList)
                    {
                        if (masterData3.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].FinalStatusId)
                        {
                            @masterData3.NameEn
                            break;
                        }
                    }
                </div>
                <div class="col-md-3">
                    @foreach (var masterData in ViewBag.ListClauseStatus)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId)
                        {
                            <p>@masterData.NameEn</p>
                            break;
                        }
                    }
                </div>
            </div>

            <div class="row row-header font-header">
                <div class="col-md-3">
                    @Localization.GetText("Type")
                    <span class="dataTitle inputTitle min_pdbottom"><span class="asteriscoRojo">*</span></span>
                </div>
                <div class="col-md-3">
                    @Localization.GetText("Category")
                    <span class="dataTitle inputTitle min_pdbottom"><span class="asteriscoRojo">*</span></span>
                </div>
                <div class="col-md-3">
                    @Localization.GetText("CL.SpecialClauseClass")
                </div>
                <div class="col-md-3">
                    @Localization.GetText("Location")
                    <span class="dataTitle inputTitle min_pdbottom"><span class="asteriscoRojo">*</span></span>
                </div>
            </div>

            <div class="row row-body-50 font-body">
                <div class="col-md-3">
                    <ul class="optionList">
                        <li class="small">
                            @Html.DropDownListFor(x => x.Contracts[0].Clauses[0].ClauseTypeId, new SelectList(ViewBag.ListClauseType2, "Value", "Text", Model.Contracts[0].Clauses[0].ClauseTypeId),
                                new Dictionary<string, Object> { { "id", "dropdownForType" } })
                        </li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <div class="data4" id="divCategory" data-route="@(Url.Action("EditDropdownForClauseType", "Clause", new { area = "Clauses" }))">
                        <ul class="optionList ">
                            <li class="small">
                                @Html.DropDownListFor(x => x.Contracts[0].Clauses[0].CategoryId, new SelectList(ViewBag.ListClauseCategory2, "Value", "Text", Model.Contracts[0].Clauses[0].CategoryId),
                                    new Dictionary<string, Object> { { "id", "dropdownForCategory" } })
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-3">
                    <ul class="trackwithdraw">
                        <li class="small">
                            <span class="dataTitle inputTitle">
                                <span class="custom radio disabled">
                                    <label class="editLabel label_inline" for="radio1">
                                        @Html.RadioButtonFor(x => x.Contracts[0].Clauses[0].IsSpecial, "true",
                                            new Dictionary<string, Object> { { "id", "radio1" }, { "style", "display:none;" }, { "name", "radio1" } })
                                        <span class="custom radio"> @Localization.GetText("Yes")</span>
                                    </label>
                                    <label class="editLabel label_inline" for="radio2">
                                        @Html.RadioButtonFor(x => x.Contracts[0].Clauses[0].IsSpecial, "false",
                                            new Dictionary<string, Object> { { "id", "radio2" }, { "style", "display:none;" }, { "name", "radio1" } })
                                        <span class="custom radio"> @Localization.GetText("No")</span>
                                    </label>
                                </span>
                            </span>
                        </li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <ul class="optionList ">
                        <li class="small">
                            @Html.DropDownListFor(x => x.Contracts[0].Clauses[0].LocationId, new SelectList(ViewBag.ListClauseLocation2, "Value", "Text", Model.Contracts[0].Clauses[0].LocationId),
                                new Dictionary<string, Object> { { "id", "dropdownForLocation" }, { "name", "location" }, { "class", "btn-default" } })
                        </li>
                    </ul>
                </div>
            </div>

            <div class="row row-header font-header">
                <div class="col-md-3">
                    @Localization.GetText("CL.OriginalExpirationDate")
                </div>
                <div class="col-md-3">
                    @Localization.GetText("CL.CurrentExpirationDate")
                </div>
                <div class="col-md-3">
                    @{ string headerText = @Localization.GetText("CL.SubmissionDate"); }

                    @foreach (var masterData in ViewBag.ListClauseStatus)
                    {
                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                            masterData.Code == "CL_DRAFT")
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                (masterData.NameEn == "TRACK" || masterData.NameEn == "TRACKWITHDRAW"))
                            {
                                foreach (var masterData2 in ViewBag.ListClauseCategory)
                                {
                                    if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                    {
                                        if (@masterData2.Code == "LASTD")
                                        {
                                            { headerText = @Localization.GetText("CL.FulfillmentDate"); }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    @headerText
                </div>
                <div class="col-md-3">
                    @Localization.GetText("CL.ApprovalDate")
                </div>
            </div>

            <div class="row row-body-50 font-body">
                <div class="col-md-3">
                    @String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].OriginalExpirationDate)
                </div>
                <div class="col-md-3">
                    @String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].CurrentExpirationDate)
                </div>
                <div class="col-md-3">
                    @foreach (var masterData in ViewBag.ListClauseStatus)
                    {
                        if (masterData.ConvergenceMasterDataId ==
                            @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                            masterData.Code == "CL_DRAFT")
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                (masterData.NameEn == "TRACK" || masterData.NameEn == "TRACKWITHDRAW"))
                            {
                                foreach (var masterData2 in ViewBag.ListClauseCategory)
                                {
                                    if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                    {
                                        if (@masterData2.Code != "LASTD")
                                        {
                                            @String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ValidateDate)
                                        }
                                    }
                                }
                            }
                        }
                    }
                </div>
                <div class="col-md-3">
                    @foreach (var masterData in ViewBag.ListClauseStatus)
                    {
                        if (masterData.ConvergenceMasterDataId ==
                            @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                            masterData.Code == "CL_DRAFT")
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[0].StatusId &&
                                (masterData.NameEn == "TRACK" || masterData.NameEn == "TRACKWITHDRAW"))
                            {
                                foreach (var masterData2 in ViewBag.ListClauseCategory)
                                {
                                    if (masterData2.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].CategoryId)
                                    {
                                        if (@masterData2.Code != "LASTD")
                                        {
                                            @String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ValidateDate)
                                        }
                                    }
                                }
                            }
                        }
                    }
                </div>
            </div>

            <div class="row row-header font-header">
                <div class="col-md-3">
                    @Localization.GetText("CL.LastDisbursementDependency")
                </div>
                <div class="col-md-3">
                    @if ((Model.IsSpecialOperationPBLPBP && Model.NameTrench != "" && Model.NameTrench != null) ||
                        (Model.IsSpecialOperationPBLPBP && Model.NameTrench == null))
                    {
                        @Localization.GetText("CL.Trench")
                    }
                </div>

            </div>

            <div class="row row-body-50 font-body">
                <div class="col-md-3">
                    <p>@(ViewBag.Dependency ? Localization.GetText("Yes") : Localization.GetText("No"))</p>
                </div>
                <div class="col-md-3">
                    @if ((Model.IsSpecialOperationPBLPBP && Model.NameTrench != "" && Model.NameTrench != null) ||
                    (Model.IsSpecialOperationPBLPBP && Model.NameTrench == null))
                    {
                        @Model.NameTrench
                    }
                </div>
            </div>

            if (Model.Contracts[0].Clauses[0].ClauseIndividuals.Count() > 1)
            {
            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3  cero_left">@Localization.GetText("Multiples instances information")</h4>
            </div>
            <div class="mod_tabla" style="width: 94%">
                <table class="grid2">
                    <thead>
                        <tr>
                            <th class="btn_azul_oscuro_flecha" data-field="ClauseNumber"> @Localization.GetText("Clause Number")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Suffix"> @Localization.GetText("Suffix")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Expirationdate">@Localization.GetText("CL.ExpirationDate")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Clausestatus"> @Localization.GetText("CL.Status")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var ClauseIndividual = 0; ClauseIndividual < Model.Contracts[0].Clauses[0].ClauseIndividuals.Count(); ClauseIndividual++)
                        {
                            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[ClauseIndividual].ClauseIndividualId)
                            <tr>
                                <td>@Model.Contracts[0].Clauses[0].ClauseNumber</td>
                                <td>
                                    @Html.TextBoxFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[ClauseIndividual].Suffix) 
                                    @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[ClauseIndividual].Suffix);}
                                </td>
                                <td>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[ClauseIndividual].CurrentExpirationDate)</td>
                                <td>
                                    @foreach (var masterData in ViewBag.ListClauseStatus)
                                    {
                                        if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].Clauses[0].ClauseIndividuals[ClauseIndividual].StatusId)
                                        {
                                        <p>@masterData.NameEn</p>
                                            break;
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
                          }
            <div class="editingButtonsEdit">

                @if (Model.CategoryClause != ClauseConstants.SIGNATURE_CATEGORY)
                {
                    <a class="btn buttonWhite" onclick="deleteItem(this)" title="@Localization.GetText("Delete")"
                       data-route="@Url.Action("DeleteItem", "Clause",
                            new
                            {
                                area = "Clauses",
                                operationId = Model.OperationId,
                                contractId = Model.Contracts[0].ContractId,
                                clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                                clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                                extensionId = 0,
                                RevolvingFund = 0,
                                entityRelated = "",
                                year = 0,
                                entityRegisterId = 0,
                                visualProjectId = 0,
                                visualProjectVersionId = 0,
                                documentId = 0,
                                userCommentId = 0,
                                itemToDelete = "Clause",
                                mainOperationNumber = Model.mainOperationNumber
                            })">
                        @Localization.GetText("Delete")
                    </a>
                }

                <a class="btn buttonWhite" href="@(Url.Action("Details", "Clause",
                    new
                    {
                        area = "Clauses",
                        operationId = Model.OperationId,
                        contractId = Model.Contracts[0].ContractId,
                        clauseId = Model.Contracts[0].Clauses[0].ClauseId,
                        clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
                        mainOperationNumber = Model.mainOperationNumber
                    }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                <label for="save">
                    <input type="submit" class="btn buttonOrange save" value="@Localization.GetText("Save")">
                </label>
            </div>   
        }
    </div>
</section>

<script type="text/javascript">
    $(document).ready(function () {
        $(document).on('click', 'a.tipo1, a[title="Cancel"]', function () {
            idbg.lockUi(null, true);
        });
    });
</script>