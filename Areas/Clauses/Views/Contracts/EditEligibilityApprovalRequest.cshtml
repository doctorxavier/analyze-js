@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "CreateEligibilityApprovalRequest";
    var errorAddingDocument = ViewBag.UploadFileError != null ? (string)ViewBag.UploadFileError : string.Empty;
}

@section CSS{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/kendo/kendo.common.min.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004_edit.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Clauses/ClausesLetterCss.css")"/>
}

@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Document/addDocument.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/thumbnail/thumbnail.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/EditApprovalRequest.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/addComment.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Global/GlobalScript.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/FindingRecomendations/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js" + @System.Configuration.ConfigurationManager.AppSettings["cache"].ToString())"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Contract/ValidationRequest.js")"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".optionSelect").kendoDropDownList({
                enable: false,
            });

            $(".datepicker").kendoDatePicker({
                format: "dd MMM yyyy"
            });
            var grid1 = new GridComponent(".grid1", 20, false, true);
            var grid2 = new GridComponent(".grid2", 20, false, true);
            

            $(".cancelEditRequest").click(function () {
                var route = $("#DetailsEligibilityApprovalRequest").val();
                idbg.lockUi(null, true);
                location.href = route;
            });

            $(document).on('click', 'a[title="Cancel"]', function () {
                idbg.lockUi(null, true);
            });
        });
    </script>

    @if (!string.IsNullOrWhiteSpace(errorAddingDocument))
    {
        <script type="text/javascript">
            $(document).ready(function () {

                function warningDocumentAddingError() {
                    event.preventDefault();
                    $(window.parent.document).find('body').append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="dinamicModal"></div>');
                    $("#errorUploading").appendTo(".dinamicModal").removeClass("hide");
                    var title = $("#errorUploading").data("title");
                    var modal = $(".dinamicModal").kendoWindow({
                        width: "800px",
                        title: title,
                        draggable: false,
                        resizable: false,
                        pinned: true,
                        actions: [
                            "Close"
                        ],
                        modal: true,
                        visible: false,
                        activate: function () {
                            $("#ConfirmErrorWarning").click(functionCancel);
                        },
                        close: function () {
                            $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                            $("#errorUploading").appendTo("#ui_sp_001").addClass("hide");
                            $("body").find(".ui-widget-overlay").remove();
                            $(".ui-widget-overlay").remove();
                            $(".k-window").remove();
                        }
                    }).data("kendoWindow");
                    $(".k-window-titlebar").addClass("warning");
                    $(".k-window-title").addClass("ico_warning");
                    modal.center();
                    modal.open();
                };

                var functionCancel = function () {
                    event.preventDefault();
                    var modal = $(".dinamicModal").data("kendoWindow");
                    modal.close();
                    $(".ui-widget-overlay").remove();
                };

                warningDocumentAddingError();
            });
        </script>
    }
}

@Html.Hidden("DetailsEligibilityApprovalRequest", Url.Action("DetailsEligibilityApprovalRequest", "Contracts", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, mainOperationNumber = Model.mainOperationNumber, eligibilityDate = Model.Contracts[0].EligibilityDate }))
@Html.Hidden("TLSendRequestUrl", Url.Action("TLAnulationRequestAction", "Contracts", new { area = "Clauses" }))
@Html.Hidden("TLValidators", (object)ViewBag.SendRequest)

<h2 class="hide">@Localization.GetText("Seccion central")</h2>
<section class="central">
    <div class="mod_contenido_central generic_tasks">
        <input type="hidden" id="UserName" name="UserName" value="@IDBContext.Current.UserName" />
        @using (Html.BeginForm("EditEligibilityApprovalRequest", "Contracts", FormMethod.Post, new { area = "Clauses", id = "target", @class = "bridge" }))
        {
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.OperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].ContractNumber)
            <!--contracts_and_clauses-->
            <h3 class="headingh2"><a href="@(Url.Action("Index", "Contracts", new { area = "Clauses", operationNumber = Model.mainOperationNumber }))" title=" @Localization.GetText("CL.ContractsClauses")" class="tipo1">@Localization.GetText("CL.ContractsClauses")</a></h3>                           
            <div class="operationData">
                <div class="box_subtitle">
                    <h4 class="headingh2 title_tag">@Localization.GetText("Eligibility Date Approval Request")</h4>
                    <div class="editingButtonsEdit up">
                        <label for="Cancel">
                            <input type="button" class="btn-secondary cancelEditRequest" value="@Localization.GetText("Cancel")">
                            <input type="button" class="btn-secondary" id="Prueba"  value="@Localization.GetText("Bloquear")"/>
                        </label>
                        <label for="Save">
                            <input type="submit" class="btn-primary_2 save auto-lock-ui" name="action:SaveEligibilityRequest" value=" @Localization.GetText("Save")">
                        </label>
                        <label for="Save&Send">
                            <input type="button" class="btn-primary_2 saveandrequest RequestEdit " name="CreateEligibilityApprovalRequest" value=" @Localization.GetText("Save and Request")">
                        </label>
                    </div>
                </div>
            </div>                   
            <h3 class="hide">@Localization.GetText("Contenido central")</h3>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Creation on")</p>
                    <p>@String.Format("{0:dd MMM yyy}", DateTime.Now)</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Due on")</p>
                    <p></p>
                </div>
                <div class="data2">
                    <p class="dataTitle">@Localization.GetText("Workflow")</p>
                    <p class="icon workflow">@Localization.GetText("Eligibility Date Approval")</p>
                </div>

                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Workflow submitter")</p>
                    <p>@IDBContext.Current.UserName</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Priority")</p>
                    <p></p>
                </div>
            </div>
            Html.RenderAction("AdditionalValidators", "Tasks", new
            {
                area = "Global",
                Code = "WF-CL-002",
                Editable = true,
                modelValidation = ViewBag.OperationRelatedModel
            });
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("Instructions")</p>
                        <p>@Localization.GetText("Initiate Validation Workflow for approving the Eligibility Date.")</p>
                    </div>
                </div>
            </div>
          
            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
            </div>
            <div class="editingButtonsEdit" style="position: relative; right: 3%;">
                <a id="newCommentContract002" href="javascript:void(0)" class="btn-primary marginOff" title=" @Localization.GetText("New")">@Localization.GetText("New")</a>
            </div>
            <div id="commentslistdinamic" style="margin-bottom: 3%;">
                <table id="commentTableUIRI002_edit" class="w95 grid" style="position: relative; left: 2.6%">
                    <tbody id="comentContainer">
                        @for (int i = 0; i < Model.Contracts[0].UserComments.Count(); i++)
                        {

                            if (Model.Contracts[0].UserComments[i].CreatedBy == IDBContext.Current.UserName)
                            {
                            <tr>
                                <td>
                                    <div class="padding10 leftAlign">
                                        <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                            <input type="button" value="@Localization.GetText("Delete")" class="deleteTextButtonCon verticalAlignTop absolute absRight">
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="verticalMargin10 inline-block">@Model.Contracts[0].UserComments[i].Modified</div>
                                            <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].UserComments[i].ModifiedBy</div>
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="padding10">
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].Modified)

                                                @Html.TextAreaFor(x => x.Contracts[0].UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent" }, { "data-val", "true;" }, { "data-val-required", "Please, complete the mandatory fields" }, { "maxlength", "500" } })
                                                @{Html.ValidateFor(x => x.Contracts[0].UserComments[i].Text);}
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            }
                            else
                            {
                            <tr>
                                <td>
                                    <div class="padding10 leftAlign">
                                        <div class="verticalMargin10 w100">
                                            <div class="verticalMargin10 inline-block">@Model.Contracts[0].UserComments[i].Modified</div>
                                            <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].UserComments[i].ModifiedBy</div>
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="padding10">
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].Modified)
                                                @Html.HiddenFor(x => x.Contracts[0].UserComments[i].Text)

                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].UserComments[i].Text</div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr> 
                            }

                        }
                    </tbody>
                </table>
            </div>
             
            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
            </div>
            <div class="editingButtonsEdit" style="margin-bottom: 4%; position: relative; right: 3%;">
                <input type="button" class="btn-primary marginOff lnkModal" value="@Localization.GetText("DM.Add.Document")" title="@Localization.GetText("DM.Add.Document")" data-title="@Localization.GetText("Add a document")" data-route="@(Url.Action("IndexDocumentRelationship", "Document", new { area = string.Empty, operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, parentEntityId = Model.Contracts[0].ContractId, subParentEntityId = 0, subsubParentEntityId = 0, entityRelated = "CLAUSE_CONTRACT_ELIGIBILITY", entityRegisterId = Model.Contracts[0].ContractId, isFirstTime = true, BusinessAreaCode = "BA_CONTRACTS" }))">
            </div>
            <div class="mod_tabla icon_entypo tableDocuments" style="width: 94%">
                <table class="grid w100 noInnerPadding fixedValues ">
                    <thead>
                        <tr>
                            <th class="btn_azul_oscuro_flecha" data-field="User">@Localization.GetText("User")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Date">@Localization.GetText("Date")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="IDBDocNum">@Localization.GetText("IDB Doc number")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Content">@Localization.GetText("Content")</th>
                            <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var document in Model.Contracts[0].Documents)
                        {
                            <tr>
                                <td>@document.CreatedBy</td>
                                <td>@String.Format("{0:dd MMM yyy}", document.Created)</td>
                                <td>@document.DocumentReference</td>
                                <td>@document.Description</td>
                                <td>
                                    @{
                                        var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                    }
                                    <a class="btn_entypo" title=" @Localization.GetText("Download")" href=@secureUrl target="_blank" style="position: relative;left: 25%;min-height: 0.9em;min-width: 1.5em;">&#58544;</a>

                                    <a class="btn_entypo" onclick="deleteItem(this)" title=" @Localization.GetText("Delete")" data-route="@Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = 0, clauseIndividualId = 0, extensionId = 0, RevolvingFund = 0, entityRelated = "CLAUSE_CONTRACT_ELIGIBILITY", year = 0, entityRegisterId = Model.Contracts[0].ContractId, visualProjectId = 0, visualProjectVersionId = 0, documentId = @document.DocumentId, userCommentId = 0, itemToDelete = "Document", mainOperationNumber = Model.mainOperationNumber })" style="position: relative; left: 25%; min-height: 0.9em; min-width: 1.5em;">&#59177;</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
                            
            <div class="editingButtonsEdit marginRight2Con5">
                <label for="Cancel">
                    <input type="button" class="btn-secondary cancelEditRequest" value="@Localization.GetText("Cancel")">
                    <input type="button" class="btn-secondary" id="Prueba"  value="@Localization.GetText("Bloquear")"/>
                </label>
                <label for="Save">
                    <input type="submit" class="btn-primary_2 save auto-lock-ui" name="action:SaveEligibilityRequest" value=" @Localization.GetText("Save")">
                </label>
                <label for="Save&Send">
                    <input type="button" class="btn-primary_2 saveandrequest RequestEdit" name="CreateEligibilityApprovalRequest" value=" @Localization.GetText("Save and Request")">
                </label>
            </div>
                        if (!string.IsNullOrWhiteSpace(errorAddingDocument))
                        {
            <div class="hide" id="errorUploading" data-title=" @Localization.GetText("Warning")">
                <div class="padding20 popUpBody">
                    <div class="marginBottom2">
                        <div>
                            @errorAddingDocument
                        </div>
                        <div class="rightAlign absolute right1 verticalPadding10 w60">
                            <input type="button" class="button blueButton" id="ConfirmErrorWarning" value=" @Localization.GetText("OK")" />
                        </div>
                    </div>
                </div>
            </div>
                        }
        }
    </div>
</section>
