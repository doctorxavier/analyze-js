
@*@model IDB.MW.Domain.Models.Documents.DocumentsViewModel     *@
@using IDB.Architecture.Logging;
@model IDB.MW.Domain.Models.Clauses.DocumentsViewModel

<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Risks/documentModal.js")"></script>
<script>
    $('#SearchButton2').click(function () {
        $('.conten_spinner_dialog').css('display', 'block');
        $('.conten_spinner_dialog').css('visibility', 'visible');
        $.post($(this).data("route"),
            {
                OperationId: $("#operationId").val(),
                mainOperationNumber: $("#mainOperationNumber").val(),
                entityRegisterId: $("#entityRegisterId").val(),
                parentEntityId: $("#parentEntityId").val(),
                subParentEntityId: $("#subParentEntityId").val(),
                entityRelated: $("#entityRelated").val(),
                IDBDocNumber: $("#idbdocsNumber").val(),
                DocumentName: $("#documentName").val(),
                DocumentID: $("#documentID").val(),
                DocumentContent: $("#documentContent").val(),
                OperationNumber: $("#operationNumber").val(),
                ContractNumber: $("#contractNumber").val(),
                InputCorrespondenceNumber: $("#documentNumberInput").val(),
                IDBAuthorUserId: $("#idbAuthorUserId").val(),
                //Pendiente aclarar esta parte
                //InputCorrespondenceYear: $("#inputCorrespondenceYear option:selected").val(),
                InputCorrespondenceAssignedTo: $("#AsignedtoInput").val(),
                OutputCorrespondenceNumber: $("#ReferencesNumberOutput").val(),
                //OutputCorrespondenceYear: $("#outputCorrespondenceYear option:selected").val(),
                Reference: $("#Reference").val()
            }).done(function (data) {
                $('.conten_spinner_dialog').css('display', 'none');
                $('.conten_spinner_dialog').css('visibility', 'hidden');
                var dialog = $(".dinamicModal").data("kendoWindow");
                dialog.content(data);
                modalTabstrips();
            }).fail(function () {
                $('.conten_spinner_dialog').css('display', 'none');
                $('.conten_spinner_dialog').css('visibility', 'hidden');
                alert("Data not found!");
            });

    });
</script>
@Html.Hidden("isFirstTime", (object)ViewBag.isFirstTime)
@{
    Logger.GetLogger().WriteDebug("IndexDocumentRelationship",
                    "After redirect add document");
}
@using (Html.BeginForm("IndexDocumentRelationship", "OperationRisk", FormMethod.Post, new { area = "Risks", id = "target", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.OperationId, new Dictionary<string, Object> { { "id", "operationId" } })
    @Html.HiddenFor(x => x.mainOperationNumber, new Dictionary<string, Object> { { "id", "mainOperationNumber" } })
    @Html.HiddenFor(x => x.parentEntityId, new Dictionary<string, Object> { { "id", "parentEntityId" } })
    @Html.HiddenFor(x => x.subParentEntityId, new Dictionary<string, Object> { { "id", "subParentEntityId" } })
    @Html.HiddenFor(x => x.entityRelated, new Dictionary<string, Object> { { "id", "entityRelated" } })
    @Html.HiddenFor(x => x.entityRegisterId, new Dictionary<string, Object> { { "id", "entityRegisterId" } })

    <div class="conten_spinner_dialog" style="display: none;">
        <div id="loading_spinner_dialog" style="margin:auto; position:relative;  width: 50px; height: 100%; top: 40%;">
            <img src="@Url.Content("~/Images/General/Loading/progress.gif")" />
        </div>
    </div>
    
    <p class="hide headerWindow">Navegation document</p>
    <div class="tabstrip k-widget k-header k-tabstrip" tabindex="0">
        <ul class="k-tabstrip-items k-reset">
            <li id="AddDocClauses" class="k-state-active k-item k-tab-on-top k-state-default k-first" onclick="SelectedTabAction(this.id)">
                <a title="add" href="#" class="k-link"> @Localization.GetText("Add")</a>
            </li>
            <li id="SearchDocClauses" class="k-item k-state-default k-last" onclick="SelectedTabAction(this.id)">
                <a title="@Localization.GetText("Search")" href="#" class="k-link">@Localization.GetText("Search")</a>
            </li>
        </ul>
        <div class="tab1 k-content k-state-active" style="display: block;" id="undefined-1" role="tabpanel" aria-expanded="true">                        
            <div class="contenido mod_operationTeamMember addDocument">   
                <div class="docBrowser">
                    <p class="preguntaDelete"> @Localization.GetText("Select files from your computer or drop files anywhere on this screen")</p>
                    <div class="botones">
                        <input type="file" name="file" id="upload" multiple/>
                        @if (ViewBag.errorMessage != null)
                        {
                            <p>@ViewBag.errorMessage</p> 
                        }
                        @*<input type="submit" value="Upload1" name="Upload1"/>*@
                        @*<input type="button" title="Upload2" name="Upload2" class="btn-primary k-button" value="Add" id="UploadButton" data-route="@Url.Action("IndexDocumentRelationship", "Clause", new { area = "Clauses"})">*@
                    </div>
                </div>
            </div>
        </div>
        <div style="display:none;" class="tab2 k-content" id="undefined-2" role="tabpanel" aria-hidden="true" aria-expanded="false">
            <div class="contenido mod_operationTeamMember addDocument">   

                <div class="newDocument">
                    <fieldset>
                        <legend class="hide"> @Localization.GetText("Document search filter")</legend>

                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.OperationNumber, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "operationNumber" }, { "name", "Input Normal" }, { "placeholder","Operation number"} })*@
                            <input class="inputEntry" name="Input Normal" id="operationNumber" placeholder="@Localization.GetText("Operation number")">
                        </label>
                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.ContractNumber, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "contractNumber" }, { "name", "Input Normal" }, { "placeholder","Contract number"} })*@
                            <input class="inputEntry" name="Input Normal" id="contractNumber" placeholder="@Localization.GetText("Contract number")">
                        </label>
                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.IDBDocNumber, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "idbdocsNumber" }, { "name", "Input Normal" }, { "placeholder","IDBDocs number"} })*@
                            <input class="inputEntry" name="Input Normal" id="idbdocsNumber" placeholder="@Localization.GetText("IDBDocs number")">
                        </label>
                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.DocumentName, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "documentName" }, { "name", "Input Normal" }, { "placeholder","Document name"} })*@
                            <input class="inputEntry" name="Input Normal" id="documentName" placeholder="@Localization.GetText("Document name")">
                        </label>
                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.DocumentID, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "documentID" }, { "name", "Input Normal" }, { "placeholder","Document ID"} })*@
                            <input class="inputEntry" name="Input Normal" id="documentID" placeholder="@Localization.GetText("Document ID")">
                        </label>
                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.IDBAuthorName, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "idbauthorName" }, { "name", "Input Normal" }, { "placeholder","IDB Author name"} })*@
                            <input class="inputEntry" name="Input Normal" id="idbAuthorUserId" placeholder="@Localization.GetText("IDB Author User ID")">
                        </label>
                        <label class="inputNormal">
                            @*@Html.TextBoxFor(x => x.DocumentContent, new Dictionary<string, Object> { { "class", "inputEntry" }, { "id", "documentContent" }, { "name", "Input Normal" }, { "placeholder","Document content"} })*@
                            <input class="inputEntry" name="Input Normal" id="documentContent" placeholder="@Localization.GetText("Document content")">
                        </label>                                
                                                    
                        <div class="custom">
                            <label class="editLabel paddingTop_label" for="inputCorrespondence" onclick="getOptionValueInput(this)"; >
                                <input name="inputCorrespondence" type="checkbox" id="inputCorrespondence" class="hidden-field">
                                <span class="custom checkbox">@Localization.GetText("Input correspondence")</span>
                            </label>

                            <label class="editLabel paddingTop_label" for="outputCorrespondence" onclick="getOptionValueOutput(this)"; >
                                <input name="outputCorrespondence" type="checkbox" id="outputCorrespondence" class="hidden-field">
                                <span class="custom checkbox">@Localization.GetText("Output correspondence")</span>
                            </label>

                        </div>

                        @*Agregar codigo*@
                                 
                        <div class="small">
                            <div  class="inputEntryDocumentOptionText" id="muestratodoInput">
                                <div class="inputSearchDocumentOption inputEntryDocumentOptionText1"> 
                                    <ul class="inputSearchDocumentOption">
                                        <li class="small">
                                            <label class="inputEntryDocumentOptionText1">
                                                <input class="inputEntryDocumentOption1" name="Input Normal" id="documentNumberInput" placeholder="@Localization.GetText("Number")">
                                            </label>
                                        </li>
                                    </ul>
                                </div>

                                <div class="inputSearchDocumentOption inputEntryDocumentOptionText">
                                    <ul class="small">
                                        <li class="small">
                                            <select class="inputEntryDocumentOption" id="inputCorrespondenceYear">
                                                <option value="0">@Localization.GetText("Years")</option>
                                                <option value="1">@Localization.GetText("Months")</option>
                                                <option value="2">@Localization.GetText("Days")</option>
                                            </select>
                                        </li>
                                    </ul>
                                </div>

                                <div class="inputSearchDocumentOption inputEntryDocumentOptionText1">
                                    <ul class="inputSearchDocumentOption">
                                        <li class="small">
                                            <label class="inputEntryDocumentOptionText">
                                                <input class="inputEntryDocumentOption1" name="Input Normal" id="AsignedtoInput" placeholder="@Localization.GetText("Asigned to")">
                                            </label>
                                         </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="inputEntryDocumentOptionText" id="muestratodoOutput">
                            
                                <div class="inputSearchDocumentOptionRigth inputEntryDocumentOptionText1">
                                    <ul class="inputSearchDocumentOptionRigth">
                                        <li class="small">
                                            <label class="inputEntryDocumentOptionText1">
                                                <input class="inputEntryDocumentOption1" name="Input Normal" id="ReferencesNumberOutput" placeholder="@Localization.GetText("References number")">
                                            </label>
                                         </li>
                                    </ul>
                                </div>
                         
                                <div class="inputSearchDocumentOptionRigth inputEntryDocumentOptionText">
                                    <ul class="small">
                                        <li class="small">
                                            <select class="inputEntryDocumentOption" id="outputCorrespondenceYear">
                                                <option value="0">@Localization.GetText("Years")</option>
                                                <option value="1">@Localization.GetText("Months")</option>
                                                <option value="2">@Localization.GetText("Days")</option>
                                            </select>
                                        </li>
                                    </ul>
                                </div>

                                <div class="inputSearchDocumentOptionRigth inputEntryDocumentOptionText1"> 
                                    <ul class="inputSearchDocumentOptionRigth">
                                        <li class="small">
                                            <label class="inputEntryDocumentOptionText">
                                                <input class="inputEntryDocumentOption1" name="Input Normal" id="Reference" placeholder="@Localization.GetText("Assigned To")">
                                            </label>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        @*Termina codigo*@

                    </fieldset>
                </div>                            
            </div>
        </div>
    </div>
    <div class="pie">
        <div class="documentSelected">
            <p class="typo"></p>
        </div>
        <div class="botones">
            <a class="link right" title="@Localization.GetText("Cancel")" href="javascript:void(0)" id="cancel"> @Localization.GetText("Cancel")</a>
            <label for="add_addDoc">
                <input type="submit" value="@Localization.GetText("Add")" id="UploadButton" title="@Localization.GetText("Add")" class="btn-primary"/>
                <input type="button" title="@Localization.GetText("Add")" class="btn-primary" value="@Localization.GetText("Search")" id="SearchButton2" data-route="@Url.Action("IndexDocumentRelationship", "OperationRisk", new { area = "Risks" })">
            </label>
        </div>
    </div>   
}