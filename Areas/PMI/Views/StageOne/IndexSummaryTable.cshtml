@using IDB.Presentation.MVC4.Areas.PMI.Controllers

@model IDB.MW.Domain.Models.Supervision.PMI.PMIDetailsModel

@section JavaScript {
   <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/PMI/StageThree/main.js")"></script>
}

@section CSS {
   <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")" />
   <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/PMI/StageTwo/ui_pmi_001_graph.css")" />

}

@if (StageController.IsSpecialOperation((List<string>)ViewBag.OperationType))
{

<div  class="mod_contenido_central" id="ui_pmi_001_table">

     @{
        Html.RenderAction("Header", "Stage", new
        {
            operationNumber = ViewBag.OperationNumber,
            stage = 1,
            isLive = Model.IsLiveMode
        });   
    }
    
    <div class="editingButtonsEdit topMargin16px" style="margin-top: 60px;">
      <input type="button" id="graphBtn" value="@Localization.GetText("GRAPH")" data-route="@Url.Action(
            "Index",
            "StageOne",
            new
            {
                area = "PMI",
                operationNUmber = @ViewBag.OperationNUmber,
                calculateInMemory = true,
                isLive = Model.IsLiveMode
            })" class="tabButton  graphLink">

      <input type="button" id="tableBtn" value="@Localization.GetText("TABLE")" data-route="@Url.Action(
            "IndexSummaryTable",
            "StageOne",
            new
            {
                area = "PMI",
                operationNumber = @ViewBag.OperationNUmber,
                calculateInMemory = true,
                isLive = Model.IsLiveMode
            })" class="tabButton active graphLink"></div>
 </div>
   <div class="operationData topMargin16px" style="margin-left:75px">
        <table id="tableUIPMI001" class="grid w95">
            <thead>
                <tr>
                    <th rowspan="2"> @Localization.GetText("Indicator") (I)</th>
                    <th rowspan="2"> @Localization.GetText("Project Indicator Value")</th>
                    <td class="gridHeader" colspan="3"> @Localization.GetText("Benchmark Indicator Value")</td>
                    <th rowspan="2"> @Localization.GetText("Traffic light")</th>
                </tr>
                <tr class="subHeader">
                    <th><span class="gridSubHeader"> @Localization.GetText("Satisfactory")</span></th>
                    <th><span class="gridSubHeader"> @Localization.GetText("Alert")</span></th>
                    <th><span class="gridSubHeader"> @Localization.GetText("Problem")</span></th>
                </tr>
            </thead>

            <tbody class="grayColor alignLeft">
                  
                <tr>

                    <td> @Localization.GetText("Days elapsed from approval to Legal Effectiveness")</td>
              
                    <td>@Model.LegalEfectiveness @Localization.GetText("days")</td>
                    <td>0≤ I ≤@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].AlertLevel) @Localization.GetText("days")</td>
                    <td>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].AlertLevel)< I @String.Format("{0:≤0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].ProblemLevel) @Localization.GetText("days")</td>
                    <td>>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].ProblemLevel) @Localization.GetText("days")</td>
                    <td> @Localization.GetText("For tracking purpose only")</td>
             
                      </tr>
                  
                <tr>
                    <td> @Localization.GetText("Days elapsed Legal Effectiveness to Eligibility")</td>
                    <td>@Model.ToEligibility days</td>
                    <td>0≤ I ≤@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].AlertLevel) days</td>
                    <td>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].AlertLevel)< I @String.Format("{0:≤0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].ProblemLevel) @Localization.GetText("days")</td>
                    <td>>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].ProblemLevel) days</td>
                    <td> @Localization.GetText("For tracking purpose only")</td>           </tr>
                <tr>
                    <td> @Localization.GetText("% of General Conditions Achived Prior")</td>
                    <td>@Model.PercentageNormal %</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td> @Localization.GetText("For tracking purpose only")</td>
                </tr>
                <tr>
                    <td> @Localization.GetText("% of Special conditions Achived Prior")</td>
                    <td>@Model.PercentageSpecial %</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td> @Localization.GetText("For tracking purpose only")</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    
    <div  class="mod_contenido_central" id="ui_pmi_001_table">

     @{
        Html.RenderAction("Header", "Stage", new
        {
            operationNumber = ViewBag.OperationNumber,
            stage = 1,
            isLive = Model.IsLiveMode
        });
    }

        <div class="editingButtonsEdit topMargin16px" style="margin-top: 60px;">
            <input type="button" id="graphBtn" value="@Localization.GetText("GRAPH")" data-route="@Url.Action(
                "Index",
                "StageOne",
                new
                {
                    area = "PMI",
                    operationNUmber = @ViewBag.OperationNUmber,
                    calculateInMemory = true,
                    isLive = Model.IsLiveMode
                })" class="tabButton  graphLink">
            <input type="button" id="tableBtn" value="@Localization.GetText("TABLE")" data-route="@Url.Action(
                "IndexSummaryTable",
                "StageOne",
                new
                {
                    area = "PMI",
                    operationNumber = @ViewBag.OperationNUmber,
                    calculateInMemory = true,
                    isLive = Model.IsLiveMode
                })" class="tabButton active graphLink">
        </div>
 </div>
   <div class="operationData topMargin16px" style="margin-left:75px">
        <table id="tableUIPMI001" class="grid w95">
            <thead>
                <tr>
                    <th rowspan="2"> @Localization.GetText("Indicator") (I)</th>
                    <th rowspan="2"> @Localization.GetText("Project Indicator Value")</th>
                    <td class="gridHeader" colspan="3"> @Localization.GetText("Benchmark Indicator Value")</td>
                    <th rowspan="2"> @Localization.GetText("Traffic light")</th>
                </tr>
                <tr class="subHeader">
                    <th><span class="gridSubHeader"> @Localization.GetText("Satisfactory")</span></th>
                    <th><span class="gridSubHeader"> @Localization.GetText("Alert")</span></th>
                    <th><span class="gridSubHeader"> @Localization.GetText("Problem")</span></th>
                </tr>
            </thead>

            <tbody class="grayColor alignLeft">
                  
                <tr>

                    <td> @Localization.GetText("Days elapsed from approval to Legal Effectiveness")</td>
              
                    <td>@Model.LegalEfectiveness @Localization.GetText("days")</td>
                    <td>0≤ I ≤@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].AlertLevel) @Localization.GetText("days")</td>
                    <td>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].AlertLevel)< I @String.Format("{0:≤0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].ProblemLevel) @Localization.GetText("days")</td>
                    <td>>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[0].ProblemLevel) @Localization.GetText("days")</td>
                    <td>
                       @{
                           if (StageController.IsSpecialOperationOrSUPWithoutRelation(Model.OperationId))
                           {
                               <span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("Operation.No.Classification")</span>
                           }
                           else if (double.Parse(string.Format("{0:0.##}", Model.LegalEfectiveness)) >= 1 && double.Parse(string.Format("{0:0.##}", Model.LegalEfectiveness)) <= double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[0].AlertLevel)))
                           {
                               <span class="classification satisfactory inline-block verticalAlignMiddle marginRight3"></span><span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("SATISFACTORY")</span>
                           }
                           else if (double.Parse(string.Format("{0:0.##}", Model.LegalEfectiveness)) > double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[0].AlertLevel)) && double.Parse(string.Format("{0:0.##}", Model.LegalEfectiveness)) <= double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[0].ProblemLevel))) //
                           {
                               <span class="classification alert inline-block verticalAlignMiddle marginRight3"></span><span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("ALERT")</span>
                           }
                           else if (double.Parse(string.Format("{0:0.##}", Model.LegalEfectiveness)) > double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[0].ProblemLevel)))
                           {
                               <span class="classification problem inline-block verticalAlignMiddle marginRight3"></span><span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("PROBLEM")</span>
                           }
                        }
                        
                    </td>
             
                      </tr>
                  
                <tr>
                    <td> @Localization.GetText("Days elapsed Legal Effectiveness to Eligibility")</td>
                    <td>@Model.ToEligibility days</td>
                    <td>0≤ I ≤@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].AlertLevel) days</td>
                    <td>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].AlertLevel)< I @String.Format("{0:≤.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].ProblemLevel) @Localization.GetText("days")</td>
                    <td>>@String.Format("{0:0.##}",Model.PmiEscalarBenchmark.ListPMIEscalar[1].ProblemLevel) days</td>
                    <td>
                    @{
                        if (StageController.IsSpecialOperationOrSUPWithoutRelation(Model.OperationId))
                        {
                            <span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("Operation.No.Classification")</span>
                        }
                        else if (double.Parse(string.Format("{0:0.##}", Model.ToEligibility)) >= 1 && double.Parse(string.Format("{0:0.##}", Model.ToEligibility)) <= double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[1].AlertLevel)))
                        {
                            <span class="classification satisfactory inline-block verticalAlignMiddle marginRight3"></span><span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("SATISFACTORY")</span>
                        }
                        else if (double.Parse(string.Format("{0:0.##}", Model.ToEligibility)) > double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[1].AlertLevel)) && double.Parse(string.Format("{0:0.##}", Model.ToEligibility)) <= double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[1].ProblemLevel))) //
                        {
                            <span class="classification alert inline-block verticalAlignMiddle marginRight3"></span><span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("ALERT")</span>
                        }
                        else if (double.Parse(string.Format("{0:0.##}", Model.ToEligibility)) > double.Parse(string.Format("{0:0.##}", Model.PmiEscalarBenchmark.ListPMIEscalar[1].ProblemLevel)))
                        {
                            <span class="classification problem inline-block verticalAlignMiddle marginRight3"></span><span class="bold verticalAlignMiddle  blackColor">@Localization.GetText("PROBLEM")</span>
                        }
                    }
                    </td>                </tr>
                <tr>
                    <td> @Localization.GetText("% of General conditions prior achived")</td>
                    <td>@Model.PercentageNormal %</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td> @Localization.GetText("For tracking purpose only")</td>
                </tr>
                <tr>
                    <td> @Localization.GetText("% of Special conditions prior achived")</td>
                    <td>@Model.PercentageSpecial %</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td>@Localization.GetText("N/A")</td>
                    <td> @Localization.GetText("For tracking purpose only")</td>
                </tr>
            </tbody>
        </table>
    </div>
}


