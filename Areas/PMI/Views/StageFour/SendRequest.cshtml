@using System.Security.Cryptography
@using IDB.MW.Domain.Models.Architecture.Enumerations

@using IDB.MW.Domain.Models.Supervision.Workflow
@model IDB.MW.Domain.Models.OperationProfile.BasicData.BasicDataModel
@{
    
    var operationNumber = Model.OperationNumber;
    string action = ViewBag.PartialAction.ToString();
    var operationId = Model.OperationId.Value;
    var workflow = (K2CallType)ViewBag.Workflow;

    var description = string.Empty;
    var instruction = string.Empty;
    var Workflow = string.Empty;
    var ValidatorType = string.Empty;
    string editUrl = string.Empty;
    string RequestUrl = string.Empty; 
    switch (workflow)
    {
        case K2CallType.March:
            editUrl = Url.Action("BeginTlCompleted", "StageFour", 
                new { area = "PMI", 
                    operationNumber = Model.OperationNumber, 
                    editable = true, 
                    classification = ViewBag.classification 
                });
            RequestUrl = Url.Action("HandleRequest", "StageFour", new 
            { 
                area = "PMI", 
                operationId = operationId, 
                callType = (int)workflow, 
                operationNumber = operationNumber, 
                classification = ViewBag.classification
            }); 
            
            description = Localization.GetText("PMR March Validation Request");
            Workflow = Localization.GetText("PMR March Validation");
            instruction = Localization.GetText(@"Please add your comments, if necessary, and send your request to validate the Classification.");
            ValidatorType = "WF-PMI-001";
            break;

        case K2CallType.StartUpPlanValidation:
            
            editUrl = Url.Action("BeginStartupPlan", "StageFour", 
                new { area = "PMI", 
                    operationNumber = Model.OperationNumber, 
                    editable = true });
            RequestUrl = Url.Action("HandleRequest", "StageFour", new
            {
                area = "PMI",
                operationId = operationId,
                callType = (int)workflow,
                operationNumber = operationNumber,
                classification = ViewBag.classification
            });
            description = Localization.GetText("Validation Startup Plan Request");
            Workflow = Localization.GetText("PMR Startup Plan Validation");
            instruction = Localization.GetText(@"Please add your comments, if necessary, and send your request to validate the Startup Plan.");
            ValidatorType = "WF-PMI-002";
            break;
        case K2CallType.September:
            editUrl = Url.Action("BeginTlCompleted", "StageFour", 
                new { area = "PMI", 
                    operationNumber = Model.OperationNumber, 
                    editable = true 
                    });
            RequestUrl = Url.Action("HandleRequest", "StageFour", new
            {
                area = "PMI",
                operationId = operationId,
                callType = (int)workflow,
                operationNumber = operationNumber,
                classification = ViewBag.classification
           }); 
            description = Localization.GetText("PMR September Validation Request");
            Workflow = Localization.GetText("PMR September Validation"); 
            instruction = Localization.GetText(@"Please add your comments, if necessary, and send your request to validate the PMR September cycle.");
            ValidatorType = "WF-PMI-003";
            break;
			
		case K2CallType.PMRCycleStartup:
			editUrl = Url.Action("BeginPMRCycleStartup", "StageFour",
				new {
					area = "PMI",
					editable = true,
					classification = ViewBag.classification
				});
			RequestUrl = Url.Action("HandleRequest", "StageFour", new {
				area = "PMI",
				operationId = operationId,
				callType = (int)workflow,
				operationNumber = operationNumber,
				classification = ViewBag.classification
			});

			description = Localization.GetText("PMR Cycle Validation and PMR Startup Plan Validation");
			Workflow = Localization.GetText("PMR Cycle Validation and PMR Startup Plan Validation");
			instruction = Localization.GetText(@"Please add your comments, if necessary, and send your request to validate the Classification.");
			ValidatorType = "WF-PMI-004";
			break;
    }
}

@section CSS
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/ResultsMatrix/Common/VerifyContent.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/kendo/kendo.common.min.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
}
@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/PMI/StageFour/PMIDetailsRequest.js")"></script>
}

<h2 class="hide">@Localization.GetText("Seccion central")</h2>
<section class="central">
    <div class="mod_contenido_central generic_tasks">
        <input type="hidden" id="UserName" value="@IDBContext.Current.UserName" />
        <!--contracts_and_clauses-->
        <h3 class="headingh2"></h3>
        <div class="operationData">
            <div class="box_subtitle">
                <h4 class="headingh2 title_tag">@description</h4>
            </div>
        </div>
        <h3 class="hide">@Localization.GetText("Contenido central")</h3>

        <div class="editingButtonsEdit marginRight2Con5">
            <div class="containerbutton" style="display: inline-block">
                <input type="button" class="btn-secondary Btn_SubmitAndRequest ButtonLink" title="@Localization.GetText("Add comment")" value="@Localization.GetText("Add comment")" data-route="@editUrl"/>
            </div>
            <div class="containerbutton" style="display: inline-block">
                <input type="button" class="btn-primary Btn_SubmitAndRequest ButtonLinkPMISendRequest" title="@Localization.GetText("Send request")" value="@Localization.GetText("Send request")" data-route="@RequestUrl"/>
            </div>
        </div>

        <div class="operationData dataDetails marginTop2Bottom1">
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Creation on")</p>
                <p>@DateTime.Now.ToString("dd MMM yyyy")</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Due on") </p>
                <p>@*@String.Format("{0:dd MMM yyy}", clause.ExpirationTo)*@</p>
            </div>
            <div class="data2">
                <p class="dataTitle">@Localization.GetText("Workflow")</p>
                <p class="icon workflow">
                    @Workflow
                </p>
            </div>

            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Workflow submitter")</p>
                <p>@IDBContext.Current.UserName</p>
            </div>
            <div class="data4">
                <p class="dataTitle">@Localization.GetText("Priority")</p>
                <p></p>
            </div>
        </div>
        @{Html.RenderAction("AdditionalValidators", "Tasks", new {
              area = "Global",
              Code = ValidatorType,
              Editable = false,
              TaskId = Model.CompleteTaskView.TaskId
          });
        }
         <div class="operationData dataDetails ">
            <div class="operationData min_padding_left dataSocial">
                <div class="data8">
                    <p class="dataTitle">@Localization.GetText("Instructions")</p>
                    <p>@instruction</p>
                </div>
            </div>
        </div>
        <div class="operationData dataDetails marginTop2Bottom1">
            <div class="operationData min_padding_left dataSocial">
                <div class="data8">
                    <p class="dataTitle">@Localization.GetText("Content")</p>
                    @{
                        Html.RenderAction(action, "StageFour", new { area = "PMI", operationNumber });
                    }
                </div>
            </div>
        </div>
     

        <div class="operationData width_Off min_padding_left dataSocial  ">
            <h4 class="headingh3 cero_left">@Localization.GetText("Comments")</h4>
        </div>

      
            <table id="commentTableUIRI001" class="w95 grid" style="position: relative; left: 2.6%">
                @for (int i = 0; i < @Model.UserComments.Count(); i++)
                {
                    <tr>
                        <td>
                            <div class="padding10 leftAlign">
                                <div class="verticalMargin10 w100">
                                    <div class="verticalMargin10 inline-block">@(Model.UserComments[i].Modified == null ? "" : Model.UserComments[i].Modified.Value.ToString("dd MMM yyyy"))</div>
                                    <div class="verticalMargin10 inline-block bold marginLeft3">@Model.UserComments[i].ModifiedBy</div>
                                </div>
                                <div class="verticalMargin10 w100">
                                    @Html.HiddenFor(x => x.UserComments[i].UserCommentId)
                                    @Html.HiddenFor(x => x.UserComments[i].ModifiedBy)
                                    @Html.HiddenFor(x => x.UserComments[i].Modified)
                                    @Html.HiddenFor(x => x.UserComments[i].Text)
                                    <p class="padding10">@Model.UserComments[i].Text</p>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </table>

      
        <div class="editingButtonsEdit marginRight2Con5">
            <div class="containerbutton" style="display: inline-block">
                <input type="button" class="btn-secondary Btn_SubmitAndRequest ButtonLink" title="@Localization.GetText("Add comment")" value="@Localization.GetText("Add comment")" data-route="@editUrl"/>
            </div>
            <div class="containerbutton" style="display: inline-block">
                <input type="button" class="btn-primary Btn_SubmitAndRequest ButtonLinkPMISendRequest" title="@Localization.GetText("Send request")" value="@Localization.GetText("Send request")" data-route="@RequestUrl"/>
            </div>
        </div>

    </div>
</section>
