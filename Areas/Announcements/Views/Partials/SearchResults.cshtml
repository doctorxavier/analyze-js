@using System.Web.Mvc.Ajax
@using IDB.Architecture.Language
@model IDB.Presentation.MVC4.Areas.Announcements.Models.AnnouncementSearchViewModel

@{
    Layout = null;
  
}


<div class="col-md-12">
    <h2>@Localization.GetText("SP.ANNOUNCEMENT.RESULTS_ANNOUNCEMENTS_SEARCH")</h2>
</div>

<div class="col-md-12">
    <table class="table">
        <tr>
            <th>
                @Localization.GetText("SP.ANNOUNCEMENT.TITLE")
            </th>
            <th>
                @Localization.GetText("SP.ANNOUNCEMENT.BODY")
            </th>
            <th>
                @Localization.GetText("SP.ANNOUNCEMENT.START_DATE")
            </th>
            <th>
                @Localization.GetText("SP.ANNOUNCEMENT.EXPIRATION_DATE")
            </th>
            @*<th>
                @Localization.GetText("SP.ANNOUNCEMENT.SCOPE")
            </th>*@
            <th>
                @Localization.GetText("SP.ANNOUNCEMENT.ACTION")
            </th>
        </tr>

        @foreach (var item in Model.SearchResults)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Body)
                </td>
                <td>
                    @item.StartDate.ToString("dd-MMM-yyyy")
                </td>
                <td>
                    @(item.ExpirationDate.HasValue ? item.ExpirationDate.Value.ToString("dd-MMM-yyyy") : String.Empty)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.ScopeName)
                </td>*@
                <td>
                    @if (Model.HasWritePermission)
                    {
                        @Ajax.ActionLink(" ", "Edit"
                            , "Announcements"
                            , new { id = item.AnnouncementId }
                            , new AjaxOptions
                            {
                                HttpMethod = "GET",
                                UpdateTargetId = "modalEditAnnouncement",
                                InsertionMode = InsertionMode.Replace,
                                //OnBegin = "AjaxOnBegin",
                                OnBegin = "",
                                OnSuccess = "AnnouncementEditSuccess",
                                OnFailure = "AjaxOnFailure"
                            }, new { @class = "glyphicon glyphicon-pencil" })
                        @Ajax.ActionLink(" ", "Delete", "Announcements", new { id = item.AnnouncementId }
                            , new AjaxOptions
                            {
                                UpdateTargetId = "modalEditAnnouncement",
                                HttpMethod = "GET",
                                InsertionMode = InsertionMode.Replace,
                                //OnBegin = "AjaxOnBegin",
                                OnBegin = "",
                                OnSuccess = "AnnouncementDeleteLoadSuccess",
                                OnFailure = "AjaxOnFailure",
                                //LoadingElementId = "modalEditAnnouncement"
                            }, new { @class = "glyphicon glyphicon-trash" })
                    }
                   
                    @if (Model.HasReadPermission)
                    {
                        @Ajax.ActionLink(" ", "Details", "Announcements", new { id = item.AnnouncementId }
                            , new AjaxOptions
                            {
                                UpdateTargetId = "modalEditAnnouncement",
                                HttpMethod = "GET",
                                InsertionMode = InsertionMode.Replace,
                                //OnBegin = "AjaxOnBegin",
                                OnBegin = "",
                                OnSuccess = "AnnouncementDeleteLoadSuccess",
                                OnFailure = "AjaxOnFailure",
                                //LoadingElementId = "modalEditAnnouncement"
                            }, new { @class = "glyphicon glyphicon-eye-open" })
                    }
                </td>
            </tr>


        }



    </table>
    <nav>
        <ul class="pagination ">
            <li class="page-item">
                @if (!Model.HasPreviousPage)
                {
                    @Ajax.ActionLink("<<", "Search"
                        , "Announcements"
                        , new { actualPage = Model.ActualPage - 1 }
                        , new AjaxOptions
                        {
                            UpdateTargetId = "announcementResult",
                            InsertionMode = InsertionMode.Replace,
                            OnBegin = "AjaxOnBegin",
                            OnSuccess = "AjaxOnSuccess",
                            OnFailure = "AjaxOnFailure"
                        }, new { @class = "page-link" })
                }
                else{
                    <span aria-hidden="true"><<</span>
                }
            </li>
            @for (var i = 0; i < Model.TotalPages; i++)
            {

                <li class="page-item @(Model.ActualPage == i + 1 ? "active" : " ")">
                    @Ajax.ActionLink((i + 1).ToString(), "Search"
                        , "Announcements"
                        , new {actualPage = i + 1}
                        , new AjaxOptions
                        {
                            UpdateTargetId = "announcementResult",
                            InsertionMode = InsertionMode.Replace,
                            OnBegin = "AjaxOnBegin",
                            OnSuccess = "AjaxOnSuccess",
                            OnFailure = "AjaxOnFailure"
                        }, new {@class = "page-link"})

                </li>
            }
            <li class="page-item">
                @if (!Model.HasNextPage)
                {
                    @Ajax.ActionLink(">>", "Search"
                        , "Announcements"
                        , new { actualPage = Model.ActualPage + 1 }
                        , new AjaxOptions
                        {
                            UpdateTargetId = "announcementResult",
                            InsertionMode = InsertionMode.Replace,
                            OnBegin = "AjaxOnBegin",
                            OnSuccess = "AjaxOnSuccess",
                            OnFailure = "AjaxOnFailure"
                        }, new { @class = "page-link" })
                }
                else
                {
                    <span aria-hidden="true">>></span>
                }
            </li>
        </ul>
    </nav>
</div>
