@model IDB.Presentation.MVC4.Areas.Announcements.Models.AnnouncementViewModel
<div id="modalnew" class="modal-dialog" role="document">
    <div class="modal-content ">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title" id="myModalLabel">@Localization.GetText("SP.ANNOUNCEMENT.ANNOUNCEMENT")</h4>
        </div>
        @using (Ajax.BeginForm("Save", new {area = "Announcements", controller = "Announcements"}, new AjaxOptions
        {
            HttpMethod = "Post",
            InsertionMode = InsertionMode.Replace,
            //OnBegin = "AjaxOnBegin",
            OnBegin = "",
            OnSuccess = "AnnouncementSaveSuccess",
            OnFailure = "AjaxOnFailure"
        }, new
        {
            id = "AnnouncementsSaveForm"
        }
            ))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div id="AnnouncementFor" class="modal-body row">
                @Html.HiddenFor(model => model.Announcement.AnnouncementId)
                <div class="form-group col-md-12">
                    <label class="col-md-2">@Localization.GetText("SP.ANNOUNCEMENT.SCOPE") *</label>
                    <div class="col-md-3 ">
                        @*@Html.DropDownListFor(model => model.Announcement.ScopeId
                                              ,Model.ScopeTypes.Select(o => new SelectListItem
                                              {
                                                  Value = o.ScopeId.ToString(), Text = o.ScopeText,
                                              })
                 // Localization.GetText("Select")
                                              , new { @class = "form-control "
                                                  ,data_val_required = Localization.GetText("Required Field Scope")
                                                  ,disabled = "disabled"
                                                     }
                                              )*@

                        @Html.DisplayFor(model => model.Announcement.ScopeName)@*This display de scope from announcement when is for Edit Announcement*@
                        @Html.DisplayFor(model => model.DefaultScopeName)@*This display de scope from announcement when is for New Announcement*@
                        @Html.HiddenFor(model => model.Announcement.ScopeId, new {@Value = Model.Announcement.ScopeId})
                    </div>

                    <div class="col-md-6">
                        @Html.ValidationMessageFor(model => model.Announcement.ScopeId)
                    </div>
                </div>
                <div class="form-group col-md-12">
                    <label class="col-md-2 ">@Localization.GetText("SP.ANNOUNCEMENT.TITLE") *</label>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Announcement.Title, new {HtmlAttributes = new {placeholder = Localization.GetText("SP.ANNOUNCEMENT.TITLE_ANNOUNCEMENT"), @class = "form-control", data_val_required = Localization.GetText("SP.ANNOUNCEMENT.REQUIRED_FIELD_TITLE")}})
                    </div>
                    <div class="col-md-4">
                        @Html.ValidationMessageFor(model => model.Announcement.Title)
                    </div>
                </div>
                <div class="form-group col-md-12">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#tabEN" aria-controls="tabEN" role="tab" data-toggle="tab">@Localization.GetText("SP.ANNOUNCEMENT.ENGLISH")</a></li>
                        <li role="presentation"><a href="#tabES" aria-controls="tabES" role="tab" data-toggle="tab">@Localization.GetText("SP.ANNOUNCEMENT.SPANISH")</a></li>
                        <li role="presentation"><a href="#tabPT" aria-controls="tabPT" role="tab" data-toggle="tab">@Localization.GetText("SP.ANNOUNCEMENT.PORTUGUESE")</a></li>
                        <li role="presentation"><a href="#tabFR" aria-controls="tabFR" role="tab" data-toggle="tab">@Localization.GetText("SP.ANNOUNCEMENT.FRENCH")</a></li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content marginTabNew">
                        <div role="tabpanel" class="tab-pane active " id="tabEN">
                            <div class="col-md-2">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.TITLE_EN")</label>
                            </div>
                            <div class="col-md-10 ">
                                @Html.EditorFor(model => model.Announcement.TitleEn, new {HtmlAttributes = new {placeholder = Localization.GetText("SP.ANNOUNCEMENT.TITLE_EN"), @class = "form-control"}})
                            </div>
                            <div class="col-md-2">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.BODY_EN")</label>
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Announcement.BodyEn, new {HtmlAttributes = new {@class = "form-control"}})
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="tabES">
                            <div class="col-md-2 ">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.TITLE_ES")</label>
                            </div>
                            <div class="col-md-10 ">
                                @Html.EditorFor(model => model.Announcement.TitleEs, new {HtmlAttributes = new {placeholder = Localization.GetText("SP.ANNOUNCEMENT.TITLE_ES"), @class = "form-control"}})
                            </div>

                            <div class="col-md-2 ">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.BODY_ES")</label>
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Announcement.BodyEs, new {HtmlAttributes = new {@class = "form-control"}})
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="tabPT">
                            <div class="col-md-2">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.TITLE_PT")</label>
                            </div>
                            <div class="col-md-10 ">
                                @Html.EditorFor(model => model.Announcement.TitlePt, new {HtmlAttributes = new {placeholder = Localization.GetText("SP.ANNOUNCEMENT.TITLE_PT"), @class = "form-control"}})
                            </div>
                            <div class="col-md-2">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.BODY_PT")</label>
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Announcement.BodyPt, new {HtmlAttributes = new {@class = "form-control"}})
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="tabFR">
                            <div class="col-md-2">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.TITLE_FR")</label>
                            </div>
                            <div class="col-md-10 ">
                                @Html.EditorFor(model => model.Announcement.TitleFr, new {HtmlAttributes = new {placeholder = Localization.GetText("SP.ANNOUNCEMENT.TITLE_FR"), @class = "form-control"}})
                            </div>
                            <div class="col-md-2">
                                <label>@Localization.GetText("SP.ANNOUNCEMENT.BODY_FR")</label>
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Announcement.BodyFr, new {HtmlAttributes = new {@class = "form-control"}})
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-12">
                    <div class="col-md-3 col-md-offset-2">
                        <label for="inputStartDate">@Localization.GetText("SP.ANNOUNCEMENT.START_DATE")</label>
                        <div class="input-group date" data-provide="datepicker" data-date-format="dd-M-yyyy" data-date-language=@Localization.CurrentLanguage id='inputStartDate'>
                            @Html.EditorFor(model => model.Announcement.StartDate, new {HtmlAttributes = new {placeHolder = Localization.GetText("SP.ANNOUNCEMENT.SELECT_DATE"), @class = "form-control", @Value = Model.Announcement.StartDate.ToString("dd-MMM-yyyy"), data_val_required = Localization.GetText("Required Field Select Date")}})
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </div>
                        </div>
                        <span>
                            @Html.ValidationMessageFor(model => model.Announcement.StartDate)
                        </span>
                    </div>
                    <div class="col-md-3 col-md-offset-2">
                        <label for="inputExpirationDate">@Localization.GetText("SP.ANNOUNCEMENT.EXPIRATION_DATE")</label>
                        <div class="input-group date" data-provide="datepicker" data-date-format="dd-M-yyyy" data-date-language=@Localization.CurrentLanguage id='inputExpirationDate'>
                            @Html.EditorFor(model => model.Announcement.ExpirationDate, new {HtmlAttributes = new {placeHolder = Localization.GetText("SP.ANNOUNCEMENT.SELECT_DATE"), @class = "form-control", @Value = Model.Announcement.ExpirationDate.HasValue ? Model.Announcement.ExpirationDate.Value.ToString("dd-MMM-yyyy") : string.Empty}})
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-group-lg" data-dismiss="modal">@Localization.GetText("SP.ANNOUNCEMENT.CLOSE")</button>
                @if (Model.HasWritePermission)
                {
                    <button type="submit" class="btn btn-primary btn-group-lg">@Localization.GetText("SP.ANNOUNCEMENT.SAVE")</button>
                }
            </div>
        }
    </div>
</div>

<!-- Modal -->
<div id="myModalExpirationDate" class="modal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" >&times;</button>
                <h4 class="modal-title">@Localization.GetText("Error Dates")</h4>
            </div>
            <div class="modal-body">
                <p>@Localization.GetText("Expiration Date Must Be Equal or Greater Than Start Date")</p>
            </div>
            <div class="modal-footer">
                <button data-number="2" id="btnexpirationdate"type="button" data-dismiss="modal" class="btn btn-default">@Localization.GetText("SP.ANNOUNCEMENT.CLOSE")</button>
            </div>
        </div>
    </div>
</div>