@using System.Web.Mvc.Html
@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.Areas.PACI.Models
@using IDB.MW.Domain.Values.Paci

@model ReportViewModel
@{
    var module = Model.Modules.Where(m => m.ModuleId == Model.SelectedAssessment.ModuleId).FirstOrDefault();
    int i = Model.Modules.IndexOf(module);
    int j = module.Assessments.IndexOf(module.Assessments.Where(a => a.AssessmentId == Model.SelectedAssessment.AssessmentId).FirstOrDefault());
}
<tr data-id="" data-module-id="@Model.Modules[i].ModuleId" data-institution-id="@Model.InstitutionId" data-assessment-id="@Model.Modules[i].Assessments[j].AssessmentId">
    <td align="center" valign="middle" class="movableCellContent" id="isWeaknesses">
        @if (Model.Modules[i].Assessments[j].EvaluationCode == Literals.TYPE_EVALUATION_WEAKNESS_CODE)
        {
            @*@Confluence.Label(Model.Modules[i].Assessments[j].ConditionCode)*@            
            @Model.Modules[i].Assessments[j].ConditionName
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionCode)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionId)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionName)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].AssessmentId)
            @*@Html.HiddenFor(model => model.Modules[i].Assessments[j].EvaluationType)*@
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].EvaluationCode)
            <input type="hidden" name="@string.Format("Modules[{0}].Assessments[{1}].EvaluationType",i,j)" id="@string.Format("Modules_{0}__Assessments_{1}__EvaluationType",i,j)" value="@Model.Modules[i].Assessments[j].EvaluationType" />
            <span class="glyphicon glyphicon-arrow-right" aria-hidden="true" data-newType="@Literals.TYPE_EVALUATION_OPPORTUNITY_CODE" onclick="@(new MvcHtmlString("moveAssessmentRight(this)"))" style="display: none"></span>
        }
    </td>
    <td align="center" valign="middle" class="movableCellContent" id="isOportunity">
        @if (Model.Modules[i].Assessments[j].EvaluationCode == Literals.TYPE_EVALUATION_OPPORTUNITY_CODE)
        {
            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true" data-newType="@Literals.TYPE_EVALUATION_WEAKNESS_CODE" onclick="@(new MvcHtmlString("moveAssessmentLeft(this)"))" style="display: none"></span>
          @*@Confluence.Label(Model.Modules[i].Assessments[j].ConditionCode)*@           
            @Model.Modules[i].Assessments[j].ConditionName
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionCode)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionId)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionName)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].AssessmentId)
            @*@Html.HiddenFor(model => model.Modules[i].Assessments[j].EvaluationType)*@
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].EvaluationCode)
            <input type="hidden" name="@string.Format("Modules[{0}].Assessments[{1}].EvaluationType",i,j)" id="@string.Format("Modules_{0}__Assessments_{1}__EvaluationType",i,j)" value="@Model.Modules[i].Assessments[j].EvaluationType" />
            <span class="glyphicon glyphicon-arrow-right" aria-hidden="true" data-newType="@Literals.TYPE_EVALUATION_STRENGTH_CODE" onclick="@(new MvcHtmlString("moveAssessmentRight(this)"))" style="display: none"></span>
        }
    </td>
    <td align="center" valign="middle" class="movableCellContent" id="isStrengths">
        @if (Model.Modules[i].Assessments[j].EvaluationCode == Literals.TYPE_EVALUATION_STRENGTH_CODE)
        {
            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true" data-newType="@Literals.TYPE_EVALUATION_OPPORTUNITY_CODE" onclick="@(new MvcHtmlString("moveAssessmentLeft(this)"))" style="display: none"></span>
            @*@Confluence.Label(Model.Modules[i].Assessments[j].ConditionCode)*@           
            @Model.Modules[i].Assessments[j].ConditionName
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionCode)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionId)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].ConditionName)
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].AssessmentId)
            @*@Html.HiddenFor(model => model.Modules[i].Assessments[j].EvaluationType)*@
            @Html.HiddenFor(model => model.Modules[i].Assessments[j].EvaluationCode)
            <input type="hidden" name="@string.Format("Modules[{0}].Assessments[{1}].EvaluationType",i,j)" id="@string.Format("Modules_{0}__Assessments_{1}__EvaluationType",i,j)" value="@Model.Modules[i].Assessments[j].EvaluationType" />
        }        
    </td>
    
</tr>