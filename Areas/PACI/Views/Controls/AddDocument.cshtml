@using IDB.Presentation.MVC4.Areas.PACI.Models
@model QuestionnaireViewModel
@{
    string userName = IDBContext.Current.UserName;
    var selectedCondition = Model.DisplayModule.Conditions.FirstOrDefault(n => n.PaciConditionId == Model.PaciConditionId);

    int i = Model.DisplayModule.Conditions.IndexOf(selectedCondition);
    var selectedQuestion = selectedCondition.Questions.FirstOrDefault(n => n.QuestionId == Model.QuestionId);
    int j = Model.DisplayModule.Conditions[i].Questions.IndexOf(selectedQuestion);
    int l = selectedQuestion.Documents.IndexOf(selectedQuestion.Documents.LastOrDefault());
}

<tr data-id="">
    <td align="left">
        @Confluence.Label(Model.DisplayModule.Conditions[i].Questions[j].Documents[l].CreatedBy)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].CreatedBy)
    </td>
    <td align="center">
        @Confluence.LabelGetDate(Model.DisplayModule.Conditions[i].Questions[j].Documents[l].Created)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].Created)
    </td>
    <td align="left">
        @Confluence.Label(Model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentReference)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentReference)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentId)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentName)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].QuestionId)
        @Html.HiddenFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].IsNewDocument)
    </td>
    <td align="left">
        @Html.EditorFor(model => model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentDescription, new { htmlAttributes = new { @class = "w100p inputText" } })
    </td>
    <td align="center">
        @if (userName == Model.DisplayModule.Conditions[i].Questions[j].Documents[l].CreatedBy)
        {
            @Confluence.ButtonTrash(null, action: "deleteDocument", required: false,
                dataAttributes: new Dictionary<string, string> {
                    { "documentId", Model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentId.ToString() },
                    { "questionId", Model.DisplayModule.Conditions[i].Questions[j].QuestionId.ToString() },
                })
        }
        @{var secureDownload = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(Model.DisplayModule.Conditions[i].Questions[j].Documents[l].DocumentReference);}

        <a href="@Html.Encode(secureDownload)" target="_blank">
            <div class="buttonDownload documentDownloadSize">
                <span class="icon"></span>
                <span></span>
            </div>
        </a>
    </td>
</tr>