@using System.Globalization
@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Models.Repeater
@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.General
@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Application.SGPModule.ViewModels

@model ProcurementCommentViewModel


@Confluence.LabelsGroup("", contentAlways: ComentContent(Model))

@helper ComentContent(ProcurementCommentViewModel comment) 
{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;
    var attributes = new Dictionary<string, string>() 
    {
        { "persist-comment-id", "-1" }
    };
    
    <div class="row-header row-header-comment">
        <span class="fontfam-regular" >@FormatHelper.Format(comment.Date, formatDate).HtmlEncode()</span>
        <span class="fontfam-regular" >@comment.User.HtmlEncode()</span>
    </div>

    if (comment.Id <= 0)
    {
        <div>
            @Confluence.InputTextArea(string.Empty, "comment", required: true, width: "100%", height: "100px", maxLength:1000, dataAttributes: attributes)
        </div>
    }
    else
    {
        if (comment.User == IDBContext.Current.UserName)
        {
            attributes["persist-comment-id"] = comment.Id.ToString();
            <div>
                @Confluence.InputTextArea(comment.Comment, "comment", required: true, width: "100%", height: "100px",  maxLength:1000, dataAttributes: attributes)
            </div>
        }
        else
        {
            <div>
                @comment.Comment.HtmlEncode()
            </div>
        }
    }
}