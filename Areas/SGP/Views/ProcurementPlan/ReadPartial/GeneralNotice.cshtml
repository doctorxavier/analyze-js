@using System.Globalization

@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Application.SGPModule.ViewModels
@using IDB.MW.Infrastructure.BaseClasses
@using IDB.MW.Application.Core.ViewModels
@using IDB.Presentation.MVC4.Areas.SGP.Mappers

@model OperationLevelViewModel


@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;

    var NonObjectionStatusList = Model.ViewContainer.GetValue<CustomEnumDictionary<MasterDataViewModel>>("NonObjectionStatus").ConvertToSelectListItems();
    var nonStartedId = Model.ViewContainer.GetValue<int>("NonStartedId");
    var canPublishAndRquestNon = Model.ViewContainer.GetValue<bool>("canPublishAndRquestNon");
    
    var config = Html.RenderDataTable(Model.GeneralNotice)
        .Name("GeneralNotice")
        .AddPrimaryKeyToName(false)
        .PrimaryKey(x => x.Id.ToString(CultureInfo.InvariantCulture))
        .UseDataTableNet(true)
        .UsePageMode(false)
        .Columns(columns =>
        {
            columns.Bound(c => c.User)
                .Orderable(false)
                .CssClass("colDocumentUser textalign-center")
                .CssHeaderClass("colDocumentUser")
                .Header(Localization.GetText("COMMON.User"))
                .Hidden(false);
            columns.Bound(c => FormatHelper.Format(c.Date, formatDate))
                .Orderable(false)
                .CssClass("colDate textalign-center")
                .CssHeaderClass("colDate")
                .Header(Localization.GetText("COMMON.Date"))
                .Hidden(false);
            columns.Template(c => Confluence.ButtonLink(c.DocumentNumber, "documentNumberLink", htmlClass: "bold"))
                .Orderable(false)
                .CssClass("document-number colDocumentNumber textalign-center")
                .CssHeaderClass("colDocumentNumber")
                .Header(Localization.GetText("COMMON.SVQ.DocNumber#"))
                .Hidden(false);
            columns.Bound(c => c.Description)
                .Orderable(false)
                .CssClass("")
                .CssHeaderClass("")
                .Header(Localization.GetText("COMMON.Description"))
                .Hidden(false);
            columns.Template(c => Confluence.LabelGetDropDown(c.NonObjectionStatusId, NonObjectionStatusList, false))
                .Orderable(false)
                .CssClass("colNonObjectionStatus")
                .CssHeaderClass("colNonObjectionStatus")
                .Header(Localization.GetText("SGP.Label.NonObjectionStatus"))
                .Hidden(false);
            columns.Template(c => Confluence.InputText(c.DocumentNumber, "GeneralNotice-DocumentIDBDoc", disabled: false, width: "100%", required: false))
                .Orderable(false)
                .Hidden(true);
            columns.Template(c => ActionsTermsReference(c))
                .Orderable(false)
                .CssClass("colAction140")
                .CssHeaderClass("colAction140")
                .Header(Localization.GetText("COMMON.Action"))
                .Hidden(false);
        })
;

    config.TableClass = "tableNormal";

}

<div class="row mb10">
    <div class="col-xs-4">
        @Confluence.LabelMainSubTitle(Localization.GetText("SGP.Label.GeneralProcurementNotice"), htmlClass: "fontSize20px subTitleSG mb0 mt15")
    </div>
    <div class="col-xs-2" style="padding-top:19px;">
        @Confluence.LabelLinkBlank(
                    text: Localization.GetText("SGP.COMMON.ViewTemplates"),
                    url: "",
                    name: "viewTemplatesLink",
                    htmlClass: "bold hide")
    </div>

    @if (canPublishAndRquestNon)
    {
        <div class="col-xs-6">
            @if (Model.ShowGeneralNoticeRequestButton)
            {
                <div data-id="headerButtons" class="float-right">
                    <div data-type="contentButtons">
                        @Confluence.ButtonBlue(Localization.GetText("SGP.Button.RequestNonObject"), disabled: !Model.IsEnableGeneralNoticeRequestButton, name: "requestNonObjectionGeneralDoc", dataAttributes: new Dictionary<string, string>() { { "entitytype", Model.WorkflowGeneralNoticeEntityType }, { "entityid", Model.WorkflowGeneralNoticeEntityId.ToString() } })
                    </div>
                </div>
            }
            @if (Model.ShowGeneralNoticePublishButton)
            {
                <div data-id="headerButtons" class="float-right">
                    <div class="mr5">
                        @Confluence.ButtonBlue(Localization.GetText("COMMON.SVQ.Publish"), "publishButton", disabled: !Model.IsEnableGeneralNoticePublishButton, dataAttributes: new Dictionary<string, string> { { "button-id", "generalNoticePublishButton" } })
                    </div>
                </div>
            }
        </div>
    }
</div>

<div class="row">
    <div class="col-xs-12">
        @Html.Partial("Controls/DataTable", config)
    </div>
</div>

@helper ActionsTermsReference(DocumentNoticeRowViewModel row)
{
    <div class="textalign-center">
        @Confluence.ButtonDownload("", "DownLoadDoc")
    </div>
}