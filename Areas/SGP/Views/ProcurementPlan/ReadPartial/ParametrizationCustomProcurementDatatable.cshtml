@using System.Web.Mvc
@using System.Globalization

@using IDB.Architecture.Language
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Infrastructure.BaseClasses
@using IDB.MW.Application.Core.ViewModels
@using IDB.Architecture.DataTables.Common
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Application.SGPModule.ViewModels
@using IDB.Presentation.MVC4.Areas.SGP.Mappers


@model ParameterizationViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;

    var config = Html.RenderDataTable(Model.CustomProcurementMethod)
        .Name("tableCustomMethods")
        .AddPrimaryKeyToName(false)
        .PrimaryKey(x => x.IdMethod.ToString(CultureInfo.InvariantCulture))
        .UseDataTableNet(false)
        .UsePageMode(false)
        .Columns(columns =>
        {
            columns.Template(c => TypeMultiDropdown(c))
            .Orderable(false)
            .CssClass("")
            .CssHeaderClass("colLotName")
            .Header(Localization.GetText("SGP.Label.ProcurementType"))
            .Hidden(false);

            columns.Bound(c => c.CustomProcurementMethodText)
            .Orderable(false)
            .CssClass("")
            .CssHeaderClass("")
            .Header(Localization.GetText("SGP.Label.CustomProcurementMethods"))
            .Hidden(false);

            columns.Template(c => DefaultSupervisionMethod(c))
            .Orderable(false)
            .CssClass("")
            .CssHeaderClass("colDefaultSupervisionMethods")
            .Header(Localization.GetText("SGP.Label.DefaultSupervisionMethod"))
            .Hidden(false);

            columns.Template(c => ActionsTermsReference(c))
            .Orderable(false)
            .CssClass("colCustomProcurementMethodsAction")
            .CssHeaderClass("")
            .Header(Localization.GetText("COMMON.Action"))
            .Hidden(false);
        });
    config.TableClass = "tableNormal";
}



<div class="aligment mb10">
    @(Html.CollapseSingle("collapseComponent")
            .HtmlClass("component-collapse alignSubtitle")
            .AsociatedCollapseAllSelector("[data-name=\"collapseAllParameterization\"]")
            .TargetRegionSelector("#tableCustomMethods")
    )    
        @Confluence.LabelMainSubTitle(Localization.GetText("SGP.Label.CustomProcurementMethods"), htmlClass: "component-collapse-h3")    
</div>

<div id="tableCustomMethods" class="mb30">
    @Html.Partial("Controls/DataTable", config)
</div>


@helper DefaultSupervisionMethod(CustomProcurementMethodViewModel row)
{
    var ExAnte = Model.ViewContainer.GetValue<string>("textExAnte");
    var ExPost = Model.ViewContainer.GetValue<string>("textExPost");
    var DefaultSupercisionMethodText = "";

    if (row.IsMethodExAnte)
    {
        DefaultSupercisionMethodText = ExAnte;
    }
    else
    {
        DefaultSupercisionMethodText = ExPost;
    }

    @Confluence.Label(DefaultSupercisionMethodText)

}


@helper TypeMultiDropdown(CustomProcurementMethodViewModel row)
{
    var procurementType = Model.ViewContainer.GetValue<CustomEnumDictionary<MasterDataViewModel>>("ProcurementTypeParametrization").ConvertToSelectListItems();

    @(Html.MultiDropDown("parametrization-custom-ProcurementType")
      .Items(procurementType)
      .CanSelectGroup()
      .Required()
      .SelectedItems(row.ProcurementTypeId)
      .DrawAsItemsSeparatedByCommas())
}

@helper ActionsTermsReference(CustomProcurementMethodViewModel row)
{

}