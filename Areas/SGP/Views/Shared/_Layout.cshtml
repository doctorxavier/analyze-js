@using IDB.Presentation.MVC4.Helpers
@using System.Configuration

@{
    MvcHelpers.ViewBag = ViewBag;
}
<!DOCTYPE html>
<html>
<head>
    <title>IDB</title>
    <meta charset="utf-8" />
    <meta name="Author" content="BID" />
    <meta name="Description" content="BID" />
    @Styles.Render("~/Content/cssBase")
    @Styles.Render("~/Content/themes/base/cssBase")
    @Styles.Render("~/Content/Confluence")
    @Styles.Render("~/Content/overrides/SGPOverride.css")
</head>
<body>
    <div id="layoutLoadingDiv">
        <img src="~/Images/General/Loading/convergence-loading-3.gif" style="top: 30%; left: 55%; margin: auto; position: fixed" />
        <div style="top: 34%; left: 54.5%; margin: auto; position: fixed"></div>
        <div style="top: 34%; left: 54.5%; margin: auto; position: fixed">
            @Localization.GetText("Loading")...
        </div>
    </div>
    <section class="container-fluid">
        <div id="header-section">
            @RenderSection("Header", required: false)
        </div>
    </section>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/scripts2")
    <script type="text/javascript">
        idbg.config.basePath = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
        idbg.config.baseSharePointAddress = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
        idbg.config.domain = '@System.Configuration.ConfigurationManager.AppSettings["Domain"]';
        idbg.config.language = '@Localization.CurrentLanguage';
        idbg.init();
    </script>
    @Scripts.Render("~/Scripts/fieldbehavior.js")
    @RenderSection("scripts", false)
    @Html.WriteScriptBlocks()
    <script type="text/javascript">
        ShowMessageFunctions.CurrentFunction = ShowMessageFunctions.GenericFunction;
        BIDConfig.CreateValidatorOnEdit = true;
        slideDownNotification(0, true, 3);
        hideLoader();
    </script>
    @if ((Model != null) && Model.ViewContainer.ContainsKey("ErrorMessage") && !string.IsNullOrWhiteSpace(Model.ViewContainer.GetValue<string>("ErrorMessage")))
    {
        <script type="text/javascript">
            registerCallback(function () {
                var message = '@(Model.ViewContainer.GetValue<string>("ErrorMessage"))';
                showMessage(message, false);
            });

        </script>
    }
    <section class="container-fluid">
        @RenderBody()
    </section>
</body>
</html>