@using System.Web.Mvc

@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Infrastructure.SecurityService.Enums
@using IDB.Presentation.MVC4.Helpers
@using IDB.Architecture.Language
@using IDB.MW.Application.SGPModule.Constants
@using IDB.MW.Application.SGPModule.ViewModels.ProcurementDetail

@model ProcurementDetailViewModel

@{
    var declareInegibility = Model.Header.DeclareIneligibility;
    var cancelProcess = Model.Header.CancelProcess;
    bool hasDeclareWfLaunched = false;
    bool hasCancelWfLaunched = false;

    if (declareInegibility != null)
    {
        hasDeclareWfLaunched = Model.Header.DeclareIneligibility.HasWfLaunched.HasValue && Model.Header.DeclareIneligibility.HasWfLaunched.Value;
    }

    if (cancelProcess != null)
    {
        hasCancelWfLaunched = Model.Header.CancelProcess.HasWfLaunched.HasValue && Model.Header.CancelProcess.HasWfLaunched.Value;
    }

    var hasWfLaunched = (hasDeclareWfLaunched || hasCancelWfLaunched) ? "hide" : "";
}

@if (Model != null)
{
    <div class="row">
        <div class="col-xs-12">
            <div class="@(hasWfLaunched)">
                @Html.Partial("ReadPartial/Checklist/Buttons", Model)
            </div>
            @Confluence.LabelMainSubTitle(Localization.GetText("SGP.Label.CheckList"), htmlClass: "subTitleSG mb10") 
        </div>
    </div>
    <div class="row mb10">
        <div class="col-xs-12">
            @Confluence.Label(Localization.GetText("SGP.Label.TheFollowingItemsMustbeCompleted"))
        </div>
    </div>
    <div class="row mb40">
        <div class="col-xs-12">
            @Html.Partial("ReadPartial/Checklist/ChecklistDataTablePartial", Model.ChecklistTab)
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="@(hasWfLaunched)">
                @Html.Partial("ReadPartial/Checklist/Buttons", Model)
            </div>
        </div>
    </div>

    @Html.ScriptBlock(
    @<script type="text/javascript">
        registerCallback(function () {
            $('[data-toggle="tooltip"]').tooltip();

            $('label[data-title]').each(function () {
                var source = $(this);
                var title = source.attr('data-title');
                source.attr('data-original-title', title);
                source.removeAttr('data-title');
                source.removeAttr('title');
            });
        });
    </script>
    )
}