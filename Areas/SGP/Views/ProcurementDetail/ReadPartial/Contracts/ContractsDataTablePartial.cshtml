@using System.Web.Mvc
@using System.Globalization

@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MW.Application.SGPModule.ViewModels
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Infrastructure.SecurityService.Enums
@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Application.SGPModule.Constants
@using IDB.MW.Application.SGPModule.ViewModels.ProcurementDetail
@using IDB.Architecture.Language
@using IDB.MW.Application.Core.ViewModels
@using IDB.Presentation.MVC4.Areas.SGP.Mappers
@using IDB.MW.Infrastructure.BaseClasses

@model ContractsTabViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;

    var config = Html.RenderDataTable(Model.Contracts)
        .Name("ContractsTable")
        .PrimaryKey(x => x.Id.ToString(CultureInfo.InvariantCulture))
        .AddPrimaryKeyToName(false)
        .UseDataTableNet(false)
        .UsePageMode(false)
        .Columns(columns =>
        {
            columns.Template(c => Contract(c))
            .CssClass("colContractId")
            .CssHeaderClass("colContractId sort")
            .Header(Localization.GetText("SGP.Label.ContractId"));

            columns.Bound(c => c.BidderText)
            .CssHeaderClass("sort")
            .HeaderAttribute("order-type", "text")
            .Header(Localization.GetText("SGP.Label.AwaderBidder"));

            columns.Template(c => Status(c))
            .HeaderAttribute("order-type", "text")
            .CssHeaderClass("sort")
            .Header(Localization.GetText("COMMON.Status"));

            columns.Bound(c => string.Empty)
            .CssClass("colActions")
            .CssHeaderClass("colActions")
            .Header(Localization.GetText("COMMON.Action"));
        });
        
     config.TableClass = "tableNormal";
}

@Html.Partial("Controls/DataTable", config)

@helper Contract(ContractRowViewModel row)
{
    @Confluence.ButtonLink(row.ContractNumber, "link-Contracts", dataAttributes: new Dictionary<string, string> { { "contractId", row.Id.ToString() }, { "statusId", row.StatusId.ToString() } })
}

@helper Status(ContractRowViewModel row)
{
    @Confluence.Label(row.StatusName)
    @Confluence.InputText(row.StatusId.ToString(), "contractStatus", htmlClass: "hide")
}
