@using System.Globalization

@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.General
@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Architecture.DataTables.Common
@using IDB.MW.Application.SGPModule.ViewModels.ProcurementDetail

@model ContractDetailsViewModel

@{
    var hideDeleteButton = string.IsNullOrWhiteSpace(Model.Country) && string.IsNullOrWhiteSpace(Model.State) && string.IsNullOrWhiteSpace(Model.District);
    var statusPendingId = Model.ViewContainer.GetValue<int>("contractStatusPendingSignature");
    var statusSignedId = Model.ViewContainer.GetValue<int>("contractStatusSigned");
}

@Confluence.InputHidden(Model.ContractId.ToString(), name: "contractId-validation")
@Confluence.InputHidden(PageSerializationHelper.SerializeObject(Model), name: "serializedContractDetail")

<div class="mb20">
    @Confluence.LabelMainTitle(Model.ContractNumber, htmlClass: "fontSize27")
</div>
<div class="row">
    @if (Model.IsSigned && Model.VisibleChanges)
    {
        <div class="col-xs-6">
            @(Html.CollapseSingle("collapseComponent")
            .HtmlClass("component-collapse alignSubtitle")
            .AsociatedCollapseAllSelector("[data-name=\"collapseAllParameterization\"]")
            .TargetRegionSelector("[data-name=\"cotract-details-section\"]")
            )
            <div style="display:inline-block; margin-left:10px;">
                @Confluence.LabelSubTitleGroup(Localization.GetText("SGP.Label.OriginalContractDetails"), htmlClass: "component-collapse-h3")
            </div>
        </div>
        <div class="col-xs-6">
            <div style="display:inline-block;">
                @Confluence.LabelSubTitleGroup(Localization.GetText("SGP.Label.CurrentContractDetails"))
            </div>
            <div style="display:inline-block;">
                <span class="iconOrangeBox"></span>
            </div>
            <div style="display:inline-block;">
                @Confluence.LabelBold(Localization.GetText("SGP.LabelChangedOriginalVersion"), htmlClass: "differentDataSGP fontSize14px")
            </div>
        </div>
    }
    else
    {
        <div class="col-xs-6">
            @(Html.CollapseSingle("collapseComponent")
        .HtmlClass("component-collapse alignSubtitle")
        .AsociatedCollapseAllSelector("[data-name=\"collapseAllParameterization\"]")
        .TargetRegionSelector("[data-name=\"cotract-details-section\"]")
            )
            <div style="display:inline-block; margin-left:10px;">
                @Confluence.LabelSubTitleGroup(Localization.GetText("SGP.Label.ContractDetails"), htmlClass: "component-collapse-h3")
            </div>
        </div>
        <div class="col-xs-6"></div>
    }
</div>
<div class="row mt30" data-name="cotract-details-section">
    @if (Model.IsSigned && Model.VisibleChanges)
    {
        <div class="col-xs-6">
            @Html.Partial("ReadPartial/Contracts/ContractDetailsPartial/ContractDataOriginalDetailsPartial", Model)
        </div>
        <div class="col-xs-6 lineGrayLeft">
            @Html.Partial("ReadPartial/Contracts/ContractDetailsPartial/ContractDataCurrentDetailsPartial", Model)
        </div>
    }
    else
    {
        <div class="col-xs-9">
            @if (!Model.IsSigned)
            {
                @Html.Partial("EditPartial/Contracts/ContractDetailsPartial/ContractDataDetailsPartial", Model)
            }
            else
            {
                @Html.Partial("ReadPartial/Contracts/ContractDetailsPartial/ContractDataOriginalDetailsPartial", Model)
            }
        </div>
        <div class="col-xs-3"></div>
    }
</div>
<div class="row mt25 mb30" data-section="location-contracts-section">
    @if (!Model.IsSigned)
    {
        <div class="col-md-3 lblcontent" style="padding-top:10px;">
            @Confluence.Label(Localization.GetText("SGP.Label.AdministrationLevelsOfContracts"))
        </div>
        <div class="col-md-9 lblcontent mb30">
            <div style="width : 70%">
                <div id="subnationalDropdown" class="details-search">
                    @if (string.IsNullOrEmpty(Model.Country))
                    {
                        @Confluence.InputButton(null, "subnationalSearch", "subnationalLevelSearch", false, width: "70%;", placeholder: Localization.GetText("SGP.Label.PleaseSubnationalLevel"))
                    }
                    <ul id="listSubnational" class="dropdown-menu" aria-labelledby="id-dropdown" style="width: 70%;"></ul>
                </div>
            </div>
            <div style="width: 70%">
                @Confluence.InputText("x", name: "validation-localization", required: false, htmlClass: "hide", dataAttributes: new Dictionary<string, string> { { "parsley-localizationRequired", "true" } })
            </div>
        </div>
    }
    else
    {
        <div class="col-md-12 lblcontent mb20" style="padding-top:10px;">
            @Confluence.Label(Localization.GetText("SGP.Label.AdministrationLevelsOfContracts"))
        </div>
    }
    <div class="col-md-3 lblcontent mb10">
        @Confluence.Label(Localization.GetText("SGP.Label.Level1"))
    </div>
    <div class="col-md-3 lblcontent mb10">
        @Confluence.Label(Localization.GetText("SGP.Label.Level2"))
    </div>
    <div class="col-md-6 lblcontent mb10">
        @Confluence.Label(Localization.GetText("SGP.Label.Level3"))
    </div>
    <div class="col-md-3 levels-label lblvalue mb10">
        @Confluence.LabelBold(Model.Country, dataAttributes: new Dictionary<string, string> { { "country", "data" } })
        @Confluence.InputText(Model.Country, name: "country", required: false, htmlClass: "hide")
    </div>
    <div class="col-md-3 levels-label lblvalue mb10">
        @Confluence.LabelBold(Model.State, dataAttributes: new Dictionary<string, string> { { "state", "data" } })
        @Confluence.InputText(Model.State, name: "state", required: false, htmlClass: "hide")
    </div>
    <div class="col-md-3 levels-label lblvalue mb10">
        @Confluence.LabelBold(Model.District, dataAttributes: new Dictionary<string, string> { { "district", "data" } })
        @Confluence.InputText(Model.District, name: "district", required: false, htmlClass: "hide")
    </div>

    @if (string.IsNullOrEmpty(Model.Country))
    {
        <div class="col-md-3 levels-label lblcontent floatRight" style="margin-top: -8px;">
            @Confluence.ButtonTrash(string.Empty, name: "clear-subnational-data", htmlClass: "trashMarginTop0" + (hideDeleteButton ? " hide" : string.Empty))
        </div>
    }
    else
    {
        <div class="col-md-3"></div>
    }
</div>
<div class="mb40">
    @Html.Partial("EditPartial/Contracts/ContractDetailsPartial/ContractsDocumentDataTablePartial", Model)
</div>
@if (Model.ContractStatusId != statusPendingId && Model.ContractStatusId != statusSignedId)
{
    <div class="mb40">
        @Html.Partial("EditPartial/Contracts/ContractDetailsPartial/ContractAmendmentsDetailsPartial", Model)
    </div>
}
