@using System.Web.Mvc
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General
@using IDB.Architecture.Language
@using IDB.MW.Application.Core.Container
@using IDB.MW.Infrastructure.BaseClasses
@using IDB.MW.Application.Core.ViewModels
@using IDB.Presentation.MVC4.Areas.SGP.Mappers

@model GenericContainer

@{
    var participantGenderTypeList = Model.GetValue<CustomEnumDictionary<MasterDataViewModel>>("ParticipantsGenderList").ConvertToSelectListItems();
    var participantsEconomicSectorList = Model.GetValue<CustomEnumDictionary<MasterDataViewModel>>("Sector").ConvertToSelectListItems();

}

<div class="hide">
    @Display.AddModalButton(new ModalViewModel(contentSelector: "[data-name=\"modal-view-bidder-details\"]",
            title: Localization.GetText("SGP.Label.EnterDetails"),
            type: CssClass.ModalInformationNoIcon,
            moveOriginalContent: true,
            name: "btn-open-popup-view-bidder-details",
            closeOnOverlay: false,
            allowClose: true,
            actionOnClose: "")
        .AddButton(name: "btn-details-cancel",
                    text: Localization.GetText("Common.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
        .AddButton(name: "btn-details-save",
                    text: Localization.GetText("Common.Save"),
                    type: CssClass.Button05,
                    callback: "updateRowFromDetails",
                    closeAtEnd: true))
    
    <div data-name="modal-view-bidder-details" class="modalBody" data-parsley-validate="data-parsley-validate" data-parsley-excluded="[disabled]" data-ignore-nullable-values="true">
        <div class="row mb30">
            <div class="col-xs-3">
                @Confluence.Label(Localization.GetText("COMMON.Name"))
            </div>
            <div class="col-xs-9">
                @Confluence.LabelBold(null, dataAttributes: new Dictionary<string, string>() { { "name", "name" } })
            </div>
        </div>
        <div class="row mb30">
            <div class="col-xs-3">
                @Confluence.Label(Localization.GetText("SGP.Label.Gender"))
            </div>
            <div class="col-xs-9">
                @Confluence.InputDropDown(null, name: "gender", elements: participantGenderTypeList, width: "538px", orderAsc: false ,dataAttributes: new Dictionary<string, string> { { "name", "gender" } })
            </div>
        </div>
        <div class="row mb30">
            <div class="col-xs-3">
                @Confluence.Label(Localization.GetText("COMMON.SVQ.Nationality"))
            </div>
            <div class="col-xs-9">
                @Confluence.LabelBold(null, dataAttributes: new Dictionary<string, string>() { { "name", "nationality" } })
            </div>
        </div>
        <div class="row mb30">
            <div class="col-xs-3">
                @Confluence.Label(Localization.GetText("SGP.Label.EconomicSector"))
            </div>
            <div class="col-xs-9">
                @Confluence.InputDropDown(null, name: "economicSector", elements: participantsEconomicSectorList, width: "538px", dataAttributes: new Dictionary<string, string>() { { "name", "economicSector" } })
            </div>
        </div>
        <div class="row mb30">
            <div class="col-xs-3">
                @Confluence.Label(Localization.GetText("SGP.Label.Address"))
            </div>
            <div class="col-xs-9">
                <div style="width:538px;">
                    @Confluence.InputText(null, "address", width: "538px", maxLength:100, dataAttributes: new Dictionary<string, string>() { { "name", "address" } })
                </div>
            </div>
        </div>
        <div class="row mb5">
            <div class="col-xs-12" style="padding-left: 0px;">
                <div data-idb-fieldname="location">
                    <div class="col-md-3 lblcontent">
                        @Confluence.Label(Localization.GetText("SGP.Label.AdministrationLevelsOfBidders"), dataAttributes: new Dictionary<string, string>() { { "name", "AdministrationLevelOfBidder" } }, htmlClass: "hide")
                        @Confluence.Label(Localization.GetText("SGP.Label.AdministrationLevelsOfParticipants"), dataAttributes: new Dictionary<string, string>() { { "name", "AdministrationLevelOfParticipants" } }, htmlClass: "hide")
                    </div>
                    <div class="col-md-8 lblcontent">
                        <div style="width : 100%">
                            <div id="subnationalDropdown" class="details-search">
                                @Confluence.InputButton(null, "subnationalSearch", "subnationalLevelSearch", false, width: "100%;", placeholder: Localization.GetText("SGP.Label.PleaseSubnationalLevel"))
                                <ul id="listSubnational" class="dropdown-menu" aria-labelledby="id-dropdown" style="width: 100%;"></ul>
                            </div>
                        </div>
                        <div style="width : 100%">
                                @Confluence.InputText("x", name: "validation-localization", required: false, htmlClass: "hide", dataAttributes: new Dictionary<string, string> { {"parsley-localizationRequired","true"}})
                        </div>
                    </div>
                    <div class="col-md-12 lblvalue" style="height: 15.2px;">
                    </div>
                </div>

                <div data-idb-fieldname="levels">
                    <div class="col-md-3 lblcontent">
                        @Confluence.Label(Localization.GetText("SGP.Label.Level1"))
                    </div>
                    <div class="col-md-4 lblcontent">
                        @Confluence.Label(Localization.GetText("SGP.Label.Level2"))
                    </div>
                    <div class="col-md-5 lblcontent">
                        @Confluence.Label(Localization.GetText("SGP.Label.Level3"))
                    </div>
                    <div class="col-md-3 levels-label lblvalue">
                        @Confluence.LabelBold(null, dataAttributes: new Dictionary<string, string> { { "country", "data" }, { "name", "country" } })
                        @Confluence.InputText(null, name: "country", required: false, htmlClass: "hide", dataAttributes: new Dictionary<string, string>() { { "name", "country" } })
                    </div>
                    <div class="col-md-4 levels-label lblvalue">
                        @Confluence.LabelBold(null, dataAttributes: new Dictionary<string, string> { { "state", "data" }, { "name", "state" } })
                        @Confluence.InputText(null, name: "state", required: false, htmlClass: "hide", dataAttributes: new Dictionary<string, string>() { { "name", "state" } })
                    </div>
                    <div class="col-md-4 levels-label lblvalue">
                        @Confluence.LabelBold(null, dataAttributes: new Dictionary<string, string> { { "district", "data" }, { "name", "district" } })
                        @Confluence.InputText(null, name: "district", required: false, htmlClass: "hide", dataAttributes: new Dictionary<string, string>() { { "name", "district" } })
                    </div>
                    <div class="col-md-1 lblcontent floatRight">
                        @Confluence.ButtonTrash(string.Empty, name: "clear-subnational-data", htmlClass: "trashMarginTop0")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


