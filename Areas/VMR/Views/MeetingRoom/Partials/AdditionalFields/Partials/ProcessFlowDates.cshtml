@using IDB.MVCControls.General.Helpers
@model IDB.MW.Business.VMRModule.DTOs.AdditionalFieldsModels.ProcessFlowDatesModel

<div data-action-parent="@Model.OptionParent">
    @if (Model.Label != null)
    {
        @Confluence.Label(Model.Label) <br><br>
    }

    <div class="w110" style="display: inline-block !important">
        @Confluence.Label(Model.StartDate.Label)
    </div>
    <div class="w200" style="display: inline-block !important">
        @Confluence.InputDatePicker(
            Model.StartDate.DateTimeValue,
            Model.StartDate.FieldName,
            disabled: Model.StartDate.IsReadOnly,
            width: "160px",
            required: Model.StartDate.IsRequired)
    </div>

    <div class="w110" style="display: inline-block !important">
        @Confluence.Label(Model.EndDate.Label)
    </div>

    <div class="w200" style="display: inline-block !important">

        @Confluence.InputDatePicker(
            Model.EndDate.DateTimeValue,
            Model.EndDate.FieldName,
            disabled: Model.EndDate.IsReadOnly,
            greaterThanNameDate: Model.StartDate.FieldName,
            width: "160px",
            minDate: Model.EndDate.DateTimeMin,
            maxDate: Model.EndDate.DateTimeMax,
            required: Model.EndDate.IsRequired,
            dataAttributes: new Dictionary<string, string>
            {
                {"last-day-of-year", FormatHelper.Format(Model.LastDayOfYear)},
                {"last-value", FormatHelper.Format(Model.EndDate.DateTimeValue)},
                {"min-date-circulation", FormatHelper.Format(Model.EndDate.DateTimeMin)},
                {"max-date-circulation", FormatHelper.Format(Model.EndDate.DateTimeMax)},
                {"max-date-circulation-ext-f2f", FormatHelper.Format(Model.DateTimeMaxExtF2F)},
                {"max-date-circulation-f2f", FormatHelper.Format(Model.DateTimeMaxF2F)},
                {"default-date", FormatHelper.Format(Model.DefaultDate)},
                {"default-days", Model.DefaultDays.ToString()},
                {"enabled-write-mode", Model.EndDate.EnabledInWriteMode.ToString()},
                {"holidays", string.Join("|", Model.UnavailableDates.Select(x => string.Format("{0:dd-MM-yyyy}", x)))}
            })
    </div>

    <div class="w90" style="display: inline-block !important">
        @Confluence.Label(Localization.GetText("VMR.MM.MeetingRoom.Days"))
        @Confluence.Label("[" + Model.Days + "]", new Dictionary<string, string> { { "type", "daysMeeting" } })
    </div>
</div>
