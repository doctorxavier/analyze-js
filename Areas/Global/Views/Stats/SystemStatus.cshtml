@using IDB.MW.Domain.Contracts.DomainServices
@using IDB.Architecture.Core
@using IDB.Architecture.Extensions

@model IDB.MW.Domain.Models.OperationProfile.BasicData.BasicDataModel

@{Layout = null; }

@{
    ViewBag.Title = "SystemStatus";
    Layout = null;
    var option = Request["op"];
    if (string.IsNullOrEmpty(option))
    {
        option = "status";
    }
    var btype = Request["btype"];   
}
@functions{
    public string GetAssemblyVersion(string name)
    {
        var assembly = AppDomain.CurrentDomain.GetAssemblies().
               SingleOrDefault(asm => asm.GetName().Name == name);
        if (assembly != null)
            return assembly.GetName()
                    .Version
                    .ToString();
        return string.Empty;
    }
}  
<!DOCTYPE html>
<html>
<head>
    <script src="~/scripts/jquery-1.10.2.min.js" defer></script>
    <link rel="stylesheet" href="~/content/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="~/content/bootstrap/docs.min.css">
    <script src="~/scripts/bootstrap/bootstrap.min.js" defer></script>
</head>
<body>

<script type="text/javascript">
    idbg.config.basePath = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
    idbg.config.baseSharePointAddress = '@System.Configuration.ConfigurationManager.AppSettings["BasePath"]';
    idbg.config.language = '@Localization.CurrentLanguage';
    idbg.init();
</script>




<div style="padding: 25px">

        <h1>System</h1>
        <ul class="nav nav-pills">
            <li class="@(option == "status" ? "active" : "")"><a href="@Url.Action("systemstatus", new { op = "status" })"><span class="glyphicon glyphicon-signal" aria-hidden="true"></span> System</a></li>
            <li class="@(option == "events" ? "active" : "")"><a href="@Url.Action("systemstatus", new { op = "events" })"><span class="glyphicon glyphicon-equalizer" aria-hidden="true"></span> Events</a></li>
            <li class="@(option == "version" ? "active" : "")"><a href="@Url.Action("systemstatus", new { op = "version" })"><span class="glyphicon glyphicon-dashboard" aria-hidden="true"></span> Version</a></li>
            <!--<li class="@(option == "log" ? "active" : "")"><a href="@Url.Action("systemstatus", new { op = "log" })"><span class="glyphicon glyphicon-warning-sign" aria-hidden="true"></span> Log</a></li>-->
        </ul>
        <div class="clear-fix"></div>

        @if (option == "status")
        {
            <h3>Security information</h3>
            <div>
                <table class="table table-bordered table-hover">
                    <tr>
                        <th></th>
                        <th>Value</th>
                    </tr>
                    <tr>
                        <th scope="row">Forms ticket:</th>
                        <td>@HttpContext.Current.User.Identity.Name</td>
                    </tr>
                    <tr>
                        <th scope="row">Is Authenticated:</th>
                        <td>@HttpContext.Current.User.Identity.IsAuthenticated</td>
                    </tr>
                    <tr>
                        <th scope="row">WebForms Authenticated user:</th>
                        <td>@HttpContext.Current.User.Identity.Name</td>
                    </tr>
                    <tr>
                        <th scope="row">Current authenticated user:</th>
                        <td>@IDBContext.Current.UserName</td>
                    </tr>
                    <tr>
                        <th scope="row">Current operation:</th>
                        <td>@IDBContext.Current.Operation</td>
                    </tr>
                    <tr>
                        <th scope="row">Assigned roles:</th>
                        <td>
                            @{
                                try
                                {
                                    foreach (var role in IDBContext.Current.Roles)
                                    {
                                        @role<br />
                                    }
                                }
                                catch (Exception ex)
                                {
                                    @ex.Message
                                }
                            }
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">Assigned permissions</th>
                        <td>
                            @{
                                try
                                {
                                    foreach (var permission in IDBContext.Current.Permissions)
                                    {
                                        @permission<br />
                                    }
                                }
                                catch (Exception ex)
                                {
                                    @ex.Message
                                }

                            }
                        </td>
                    </tr>
                </table>
            </div>


            <h3>Available variables</h3>
            <div class="bs-callout bs-callout-warning">
                <span>These are the variables that can be used within email templates. Remember that all of them depends on operation number.</span>
            </div>

            <table class="table table-bordered">
                @foreach (var variable in new IDB.MW.Application.UserNotification.UserNotifications().GetAvailableVariables().Variables)
                {

                    <tr>
                        <td class="column-title"></td>
                        <td>
                            <span style="margin-right: 10px;">[@variable.Code]</span>
                            <span style="margin-right: 10px;">@variable.Description</span>
                        </td>

                    </tr>
                }
            </table>
                                }
            @if (option == "version") { 
            <h3>Version</h3>
            <div>
                <table class="table table-bordered table-hover">
                    <tr>
                        <td class="column-title">IDB.MW.Application</td>
                        <td>@( GetAssemblyVersion("IDB.MW.Application") )</td>
                    </tr>
                    
                </table>
            </div>
                                }

        @if (option == "events")
        {
            <h3><span class="glyphicon glyphicon-equalizer" aria-hidden="true"></span> Available events </h3>

                    <ul class="nav nav-tabs">
                        <li role="presentation" class="@(btype!="business"?"active":"") "><a href="@Url.Action("systemstatus", new { op = "events", btype="all" })">All</a></li>
                        <li role="presentation" class="@(btype=="business"?"active":"")"><a href="@Url.Action("systemstatus", new { op = "events", btype="business" })">Business events</a></li>
                    </ul>
                                    <div class="bs-callout bs-callout-info">
                                        <h4>System events</h4>
                                        <span>Events presented on this page allows to expand functionality of the application. Business events can be disabled through master switch tables.</span>
                                    </div>

                                    <table class="table table-bordered">
                                        @foreach (var appEvent in Globals.Events.GetEvents())
                                        {

                                            <tr>
                                                <td style="width:25%">
                                                    <strong>@appEvent.EventMetadata.EventId</strong><br />
                                                    <span>
                                                        @appEvent.EventMetadata.Description
                                                    </span><br />
                                                    <span class="label label-info">
                                                        @appEvent.EventMetadata.ModuleId.GetStringValue()
                                                    </span>

                                                </td>
                                                <td>
                                                    @{
                                                        var targets = appEvent.TargetList;
                                                        if (btype == "business")
                                                        {
                                                            targets = targets
                                                                .Where(tg => tg.Metadata.ExecutionOptions.HasFlag(EventExecutionOption.BusinessEvent))
                                                                .ToList();
                                                        }
                                                    }
                                                    <h4>Event handlers (@targets.Count)</h4>
                                                    <table class="table">
                                                        @if (targets.Count == 0)
                                                        {
                                                            <div class="alert alert-info" role="alert">Not events configured yet</div>
                                                        }

                                                        @foreach (var target in targets)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <span>@(string.Format("{0}.{1}", target.TargetMethod.ReflectedType.FullName, target.TargetMethod.Name))</span>
                                                                    <ol class="breadcrumb">
                                                                        <li><span>EventKey: @target.Metadata.EventKey</span></li>
                                                                        <li><span>Module: @target.Metadata.ModuleId.GetStringValue()</span></li>
                                                                        <li><span>Priority: @target.Metadata.Priority</span></li>
                                                                        @if ((target.Metadata.ExecutionOptions & EventExecutionOption.AsyncExecution) != 0)
                                                                        {
                                                                            <li><span class="label label-info">AsyncExecution</span></li>}
                                                                        @if ((target.Metadata.ExecutionOptions & EventExecutionOption.LogErrors) != 0)
                                                                        {
                                                                            <li><span class="label label-info">LogErrors</span></li>}

                                                                        @if ((target.Metadata.ExecutionOptions & EventExecutionOption.BusinessEvent) != 0)
                                                                        {
                                                                            <li><span class="label label-info">BusinessEvent</span></li>}
                                                                        <li>Description: @target.Metadata.Description</li>
                                                                    </ol>

                                                                </td>
                                                            </tr>
                                                        }
                                                    </table>

                                                </td>

                                            </tr>
                                                        }
                                    </table>
                                                        }
        @if (option == "log")
        {
            <h3><span class="glyphicon glyphicon-warning-sign" aria-hidden="true"></span> Application log</h3>
                    <div class="bs-callout bs-callout-info">
                        <h4>System events</h4>
                        <span>Events presented on this page allows to expand functionality of the application. Business events can be disabled through master switch tables.</span>
                    </div>
            foreach (var appEvent in Globals.Events.GetEvents())
            {

            }
        }
    </div>
</body>
</html>