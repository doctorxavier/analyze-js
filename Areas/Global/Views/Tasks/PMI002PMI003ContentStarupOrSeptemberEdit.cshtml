@using IDB.Architecture.Extensions

@model IDB.MW.Domain.Models.Supervision.Workflow.BasicPMIWorkflowIds
@{
    var workflowCode = ((IDB.MW.Domain.Models.Architecture.Enumerations.K2CallType)(int)ViewBag.Workflow)
                            .GetAttribute<IDB.MW.Domain.Models.Architecture.Enumerations.K2CallTypeDefinitionAttribute>().Code;
    Layout = null;
}
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/kendo/kendo.common.min.css")"/>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004_edit.css")"/>



<script type="text/javascript" src="@Url.Content("~/Scripts/correctBackground/correctBackground.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/thumbnail/thumbnail.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/FindingRecomendations/main.js")"></script>

<style type="text/css">
    /* Styles for validation helpers */
    .field-validation-error {
        color: #ff0000;
        font-size: 13px;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: white !important;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }

    .statementErrorLocation {
        padding-top: 30px;
    }
</style>

@{
    ViewBag.Title = "title";
    Layout = null;

    string instructions = string.Empty;
    string actualClassification = string.Empty;

    int resultsMatrixId = Model.ResultsMatrixId;
    int intervalId = Model.interval.IntervalId;
    int cycleId = Model.interval.CycleId;
    string operationNumber = Model.OperationNumber;

    if (ViewBag.Description != null)
    {
        instructions = ViewBag.Description;
    }
    if (ViewBag.Classification != null)
    {
        actualClassification = ViewBag.Classification;
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        

        $("#classificationdll").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            height: 100
        });
    });
</script>




<section class="central">
    <h2 class="hide">Seccion central de Contenido</h2>
    @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "ConvergencePartialForm" }))
    {    
        @Html.HiddenFor(x => x.OperationId, new { data_val = "false" })
        @Html.HiddenFor(x => x.OperationNumber, new { data_val = "false" })
        @Html.HiddenFor(x => x.PMRCycleId, new { data_val = "false" })
        @Html.HiddenFor(x => x.ResultsMatrixId, new { data_val = "false" })
        @Html.HiddenFor(x => x.UserName, new { data_val = "false" })

        @Html.HiddenFor(x => x.CompleteTaskView.TaskId)
        @Html.HiddenFor(x => x.CompleteTaskView.TaskStatus)
        @Html.HiddenFor(x => x.CompleteTaskView.Code)
        @Html.HiddenFor(x => x.ActionType)
            
        <input hidden="hidden"  id="taskId" value="@Model.CompleteTaskView.TaskId"/>
       
        @Html.Hidden("UserName", @Model.UserName)

        <div class="mod_contenido_central modEditingBasicData">

            @{
                //Render additional validators
                Html.RenderAction("AdditionalValidators", "Tasks", new { 
                        area = "Global",
                        Code = workflowCode, 
                        Editable = false, 
                        TypeValidator = "Validation", 
                        TaskId = Model.CompleteTaskView.TaskId
                    });
             }
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data6">
                        <p class="dataTitle">@Localization.GetText("Instructions")</p>
                        <p>@instructions</p>
                    </div>
                    @{
        Html.RenderAction("VerifyContent", "VerifyContent", new { area = "ResultsMatrix", resultsMatrixId, intervalId, cycleId });
                    }
                </div>
            </div>
            <div class="operationData marginTop2Bottom1" style="padding-left: 40px;">
                <!--Colocar en css aparte-->
                <div class="operationData width_Off min_padding_left dataSocial" style="width: 30%;">
                    <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
                </div>
                <div id="commentslistdinamic">
                    <table id="commentTableUIRI002_edit" class="w100 grid">
                        <tbody id="comentContainer">
                            @for (int i = 0; i < Model.UserComments.Count(); i++)
                            {
                                if (Model.UserComments[i].CreatedBy == IDBContext.Current.UserName && Model.UserComments[i].IsEditable)
                                {
                                <tr>
                                    <td>
                                        <div class="padding10 leftAlign" style="width: 98%">
                                            <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                                <input type="button" value="Delete" data-itemDeleted="@Model.UserComments[i].UserCommentId" 
                                       class="deleteTextButton controlDelete verticalAlignTop absolute absRight DeletePMIRequest">
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@Model.UserComments[i].Modified.Value.ToString("dd MMM yy")</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3 lastRowCommentUserJS">@Model.UserComments[i].ModifiedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="padding10">
                                                    @Html.HiddenFor(x => x.UserComments[i].UserCommentId)
                                                    @Html.HiddenFor(x => x.UserComments[i].Text)
                                                    @Html.HiddenFor(x => x.UserComments[i].ModifiedBy)
                                                    @Html.HiddenFor(x => x.UserComments[i].Modified)
                                                    @Html.HiddenFor(x => x.UserComments[i].CreatedBy)
                                                    @Html.HiddenFor(x => x.UserComments[i].Created)

                                                    @Html.TextAreaFor(x => x.UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent " }, { "data-val", "true;" }, { "data-val-required", "Please, complete the mandatory fields" }, { "cols", "300" }, { "rows", "5" }, {"maxlength","1000"} })
                                                    @{Html.ValidateFor(x => x.UserComments[i].Text);}
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>

                                }
                                else
                                {
                                <tr>
                                    <td>
                                        <div class="padding10 leftAlign">
                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@Model.UserComments[i].Modified.Value.ToString("dd MMM yy")</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3 lastRowCommentUserJS">@Model.UserComments[i].CreatedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                @Html.HiddenFor(x => x.UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.UserComments[i].Modified)
                                                @Html.HiddenFor(x => x.UserComments[i].CreatedBy)
                                                @Html.HiddenFor(x => x.UserComments[i].Created)
                                                @Html.HiddenFor(x => x.UserComments[i].Text)
                                                <p class="padding10">@Model.UserComments[i].Text</p>
                                            </div>
                                        </div>
                                    </td>
                                </tr> 
                                }

                            }
                        </tbody>
                    </table>
                </div>
                <div class="editingButtonsEdit" style="width: 30%; position: relative; right: 1%;">
                    <a id="newCommentPMIRequestEdit" 
                       href="javascript:void(0)" 
                       class="btn-primary marginOff" 
                       title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")">
                    @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")</a>
                </div>
            </div>
        </div>
    }
</section>
