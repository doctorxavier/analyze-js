@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "CreateRevolvingFundApprovalRequest";
    Layout = null;
}
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/kendo/kendo.common.min.css")"/>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004_edit.css")"/>

<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Global/GlobalScript.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/FindingRecomendations/main.js")"></script>

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Document/addDocument.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/thumbnail/thumbnail.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/Clause/EditApprovalRequest.js")"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".optionSelect").kendoDropDownList();
        var grid1 = new GridComponent(".grid1", 20, false, true);
        var grid2 = new GridComponent(".grid2", 20, false, true);
        
        $(".cancelEditRequest").click(function () {
            var route = $("#DetailsRevolvingFundApprovalRequest").val();
            redirectPage(route);
        });
    });
</script>


@Html.Hidden("DetailsRevolvingFundApprovalRequest", Url.Action("DetailsRevolvingFundApprovalRequest", new { operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, revolvingFundId = Model.Contracts[0].RevolvingFund[0].RevolvingFundId, mainOperationNumber = Model.mainOperationNumber }))

<h2 class="hide">Seccion central</h2>
<section class="central">
    <div class="mod_contenido_central generic_tasks">
        <input type="hidden" name="UserName" id="UserName" value="@ViewBag.CurrentUser"/>
        @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "ConvergencePartialForm" })) {    
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.OperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].RevolvingFundId)

            @Html.HiddenFor(x => x.CompleteTaskView.TaskId)
            @Html.HiddenFor(x => x.CompleteTaskView.TaskStatus)
            @Html.HiddenFor(x => x.CompleteTaskView.Code)
            @Html.HiddenFor(x => x.ActionType)
      
                     
            <h3 class="hide">Contenido central</h3>
            
            Html.RenderAction("AdditionalValidators", "Tasks", new {
                area = "Global",
                Code = "WF-CL-001",
                Editable = true,
                TaskId = Model.CompleteTaskView.TaskId,
                ModelValidation = Model,
                isRequest = false
            });
            
            
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("Instructions")</p>
                        <p>@Localization.GetText("Please validate the revolving fund for the contract.")</p>
                    </div>
                </div>
            </div>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("Content")</p>
                        <p></p>
                    </div>
                </div>
            </div>                      
            
            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
            </div>
            <div class="editingButtonsEdit" style="position: relative; right: 3%;">
                <a id="newCommentContractAprprovalRevFund002" 
                   href="javascript:void(0)" 
                   class="btn-primary marginOff" 
                   title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")">
                @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")</a>
            </div>
            <div id="commentslistdinamic" style="margin-bottom: 3%;">
                <table id="commentTableUIRI002_edit" class="grid w100 noInnerPadding fixedValues" style="position: relative; left: 2.6%">
                    <tbody id="comentContainer">
                        @for (int i = 0; i < Model.Contracts[0].RevolvingFund[0].UserComments.Count(); i++) {
                            if (Model.Contracts[0].RevolvingFund[0].UserComments[i].CreatedBy == IDBContext.Current.UserName) {
                            <tr>
                                <td>
                                    <div class="padding10 leftAlign">
                                        <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                            <input type="button" value="@Localization.GetText("Delete")" class="deleteTextButton verticalAlignTop absolute absRight deleteTextButtonRevFund">
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="verticalMargin10 inline-block">@(Model.Contracts[0].RevolvingFund[0].UserComments[i].Modified == null ? "" : Model.Contracts[0].RevolvingFund[0].UserComments[i].Modified.Value.ToString("dd MMM yyyy"))</div>
                                            <div class="verticalMargin10 inline-block bold marginLeft3 lastRowCommentUserJS">@Model.Contracts[0].RevolvingFund[0].UserComments[i].ModifiedBy</div>
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="padding10">
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Modified)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Created)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].CreatedBy)

                                                @Html.TextAreaFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent" }, { "data-val", "true;" }, { "data-val-required", "Please, complete the mandatory fields" }, { "cols", "300" }, { "rows", "5" }, { "maxlength", "1000" } })
                                                @{Html.ValidateFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Text);}
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            } else { 
                            <tr>
                                <td>
                                    <div class="padding10 leftAlign">
                                        <div class="verticalMargin10 w100">
                                            <div class="verticalMargin10 inline-block">@Model.Contracts[0].RevolvingFund[0].UserComments[i].Modified</div>
                                            <div class="verticalMargin10 inline-block bold marginLeft3 lastRowCommentUserJS">@Model.Contracts[0].RevolvingFund[0].UserComments[i].ModifiedBy</div>
                                        </div>
                                        <div class="verticalMargin10 w100">
                                            <div class="padding10">
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].UserCommentId)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Text)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].ModifiedBy)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Modified)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Created)
                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].CreatedBy)

                                                @Html.HiddenFor(x => x.Contracts[0].RevolvingFund[0].UserComments[i].Text)
                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].RevolvingFund[0].UserComments[i].Text</div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            }

                        }
                    </tbody>
                </table>
            </div>
              
            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
            </div>
            <div class="editingButtonsEdit" style="margin-bottom: 4%; position: relative; right: 3%;">
                <input type="button" class="btn-primary marginOff lnkModal" value="@Localization.GetText("DM.Add.Document")" title="@Localization.GetText("DM.Add.Document")" data-title="@Localization.GetText("Add a document")" data-route="@(Url.Action("IndexDocumentRelationship", "Document", new { area = string.Empty, operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, parentEntityId = Model.Contracts[0].ContractId, subParentEntityId = Model.Contracts[0].RevolvingFund[0].RevolvingFundId, subsubParentEntityId = 0, entityRelated = "TASK_CLAUSE_REVOLVING", entityRegisterId = Model.Contracts[0].RevolvingFund[0].RevolvingFundId, isFirstTime = true, TaskId = Model.CompleteTaskView.TaskId, businessAreaCode = "BA_CONTRACTS" }))">
            </div>
            <div class="mod_tabla icon_entypo tableDocuments" style="width: 94%">
                <table class="grid w100 noInnerPadding fixedValues">
                    <thead>
                        <tr>
                            <th class="btn_azul_oscuro_flecha" data-field="User">@Localization.GetText("User")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Date">@Localization.GetText("Date")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="IDBDocNum">@Localization.GetText("IDB Doc number")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Content">@Localization.GetText("Content")</th>
                            <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var document in Model.Contracts[0].RevolvingFund[0].Documents) {
                            <tr>
                                <td>@document.CreatedBy</td>
                                <td>@String.Format("{0:dd MMM yyy}", document.Created)</td>
                                <td>@document.DocumentReference</td>
                                <td>@document.Description</td>
                                <td>
                                   @{
                                       var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                }
                                <a class="btn_entypo" title=" @Localization.GetText("Download")" href=@secureUrl target="_blank" style="position: relative;left: 25%;min-height: 0.9em;min-width: 1.5em;">&#58544;</a>

                                     <a class="btn_entypo" onclick="deleteItem(this)" title=" @Localization.GetText("Delete")" data-route="@Url.Action("DeleteItem", "Clause", new { area = "Clauses", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = 0, clauseIndividualId = 0, extensionId = 0, RevolvingFund = Model.Contracts[0].RevolvingFund[0].RevolvingFundId, entityRelated = "CLAUSE_CONTRACTS_REVOLVING", year = 0, entityRegisterId = Model.Contracts[0].RevolvingFund[0].RevolvingFundId, visualProjectId = 0, visualProjectVersionId = 0, documentId = @document.DocumentId, userCommentId = 0, itemToDelete = "Document", mainOperationNumber = Model.mainOperationNumber })" style="position: relative; left: 25%; min-height: 0.9em; min-width: 1.5em;">&#59177;</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</section>
