@using IDB.MW.Application.VERModule.ViewModels
@model VerParticipantRowViewModel
<tr data-id class="custom-odd even" role="row">
    <td class="text-left">
        <span data-pagemode="edit">
            @Confluence.LabelGetDropDown(Model.ParticipantTypeId, ViewBag.ParticipantsTypeList)
            @Confluence.InputHidden(Model.ParticipantTypeId.ToString(), "participantType")
        </span>
    </td>
    <td class="text-left">
        <span data-pagemode="edit">
            @if (Model.OrganizationalUnitId == null)
            {
                @Confluence.LabelGetDropDown(Model.Role.ToString(), (List<SelectListItem>)ViewBag.RoleListTable)
            }
            else
            {
                   if (Model.Role != null)
            {
                    @Confluence.LabelGetDropDown(Model.Role.ToString(), ViewBag.RoleListTable)
                    @Confluence.Label(" / ")
                    @Confluence.LabelGetDropDown(Model.OrganizationalUnitId.ToString(), (List<SelectListItem>)ViewBag.OrganizationUnit)
                }
                else
                {
                    @Confluence.LabelGetDropDown(Model.OrganizationalUnitId.ToString(), (List<SelectListItem>)ViewBag.OrganizationUnit)
            }
            }
            @Confluence.InputHidden(Model.Role.ToString(), "role")
            @Confluence.InputHidden(Model.OrganizationalUnitId.ToString(), "organizationalUnitId")
        </span>
    </td>
    <td class="text-left">
        <span data-pagemode="edit">

            @if (string.IsNullOrEmpty(Model.Email))
            {
                @Confluence.ListHelpers(new List<HelperResult>
                {
                    Confluence.Label(string.IsNullOrEmpty(Model.FullName) ? Localization.GetText("VER.Homepage.TabParticipant.NoUsersInRoles") : Model.FullName, new Dictionary<string, string> {{"labelUserName", "user"}})
                })

            }
            else
            {

                @Confluence.ListHelpers(new List<HelperResult>
                {
                    Confluence.Label(string.IsNullOrEmpty(Model.FullName) ? Localization.GetText("VER.Homepage.TabParticipant.NoUsersInRoles") : Model.FullName, new Dictionary<string, string> {{"labelUserName", "user"}}),
                    Confluence.Label(" / "),
                    Confluence.Label(Model.Email, new Dictionary<string, string> {{"labelEmail", "email"}})
                })
            }
            @Confluence.InputHidden(string.IsNullOrEmpty(Model.UserName) ? string.Empty : Model.UserName, "username")
            @Confluence.InputHidden(string.IsNullOrEmpty(Model.Email) ? string.Empty : Model.Email, "email")
        </span>
    </td>
    <td>
        <span data-pagemode="edit">
            @if(!string.IsNullOrEmpty(Model.Email))
        {
                @Confluence.InputHidden(string.Empty, "office365Permissions")
        }
        else
        {
                @Confluence.InputDropDown(string.Empty, "office365Permissions", (List<SelectListItem>) ViewBag.Office365PermissionsList)
        }
        </span>
    </td>
    <td class="text-center hide">
        <span data-pagemode="edit">
            @Confluence.InputHidden("0", "participantRowId")
        </span>
    </td>
    <td class="text-center hide">
        <span data-pagemode="edit">
            @Confluence.InputCheckbox(false, "isRequired", dataAttributes: new Dictionary<string, string> { { "isRequired", "newIsRequired" } })
        </span>
    </td>
    <td class="hide">
        <span data-pagemode="edit">
            @Confluence.InputHidden(Model.AccessLevelId.ToString(), "accessLevelId")
        </span>
    </td>
    <td class="hide">
        <span data-pagemode="edit">
            @Confluence.InputHidden(Model.AccessLevelCode, "accessLevelCode")
        </span>
    </td>
    <td class=" text-right "><span data-pagemode="edit">@Confluence.ButtonTrash("", "trashParticipant", "removeRow")</span></td>
</tr>