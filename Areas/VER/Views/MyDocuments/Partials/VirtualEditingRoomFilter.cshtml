@using IDB.Presentation.MVC4.Helpers
@model IDB.MW.Application.VERModule.ViewModels.MyDocument.VerFilterViewModel

<div id="searchOperationFilter" class="filterNormal mb35">
    <div class="row">
        @if (Model.SearchText != null)
        {
            <div class="col-md-2">
                @Confluence.InputText(Model.SearchText.TextValue,
                    Model.SearchText.FieldName,
                    width: "100%",
                    placeholder: Model.SearchText.Placeholder)
            </div>
        }

        @if (Model.TypeInstance != null)
        {
            var listTypeInstance =
                Model.TypeInstance != null &&
                Model.TypeInstance.DropDownSource != null &&
                Model.TypeInstance.DropDownSource.Any() ?
                    Html.BuildSelectItemList(Model.TypeInstance.DropDownSource,
                        o => o.Item2,
                        o => o.Item1).ToList() :
                    new List<SelectListItem>();
            <div class="col-md-3">
                <div class="col-md-3 pt10">
                    @Confluence.Label(Model.TypeInstance.Label, htmlClass: "text-center")
                </div>
                <div class="col-md-9">
                    @Confluence.InputDropDown(
                        Model.TypeInstance.IntValue.ToString(),
                        Model.TypeInstance.FieldName,
                        listTypeInstance,
                        required: Model.TypeInstance.IsRequired,
                        width: "100%")
                </div>
            </div>
        }

        @if (Model.Country != null)
        {
            var listCountry =
                Model.Country != null &&
                Model.Country.DropDownSource != null &&
                Model.Country.DropDownSource.Any() ?
                    Html.BuildSelectItemList(Model.Country.DropDownSource,
                        o => o.Item2,
                        o => o.Item1).ToList() :
                    new List<SelectListItem>();

            <div class="col-md-3">
                <div class="col-md-3 pt10">
                    @Confluence.Label(Model.Country.Label, htmlClass: "text-center")
                </div>
                <div class="col-md-9">
                    @Confluence.InputDropDown(
                        Model.Country.IntValue.ToString(),
                        Model.Country.FieldName,
                        listCountry,
                        required: Model.Country.IsRequired,
                        width: "100%")
                </div>
            </div>
        }

        <div class="col-md-4 float-right">
            @Confluence.ButtonBlue(Localization.GetText("VER.MD.VirtualEditingRoom.Filter"), action: "VirtualEditingRoomSearch", dataAttributes: ViewBag.Dictionary)
            @Confluence.ButtonBlue(Localization.GetText("VER.MD.VirtualEditingRoom.Clear"), action: "VirtualEditingRoomClearAll", dataAttributes: ViewBag.Dictionary)
        </div>
    </div>
</div>

@if (Model.Paginator != null)
{
    var paginatorList =
                Model.Paginator != null &&
                Model.Paginator.DropDownSource != null &&
                Model.Paginator.DropDownSource.Any() ?
                    Html.BuildSelectItemList(Model.Paginator.DropDownSource,
                        o => o.Item2,
                        o => o.Item1).ToList() :
                    new List<SelectListItem>();

    <div class="resultsPerPageDocuments mb20 pull-right">
        @Confluence.InputHidden(Model.Paginator.IntValue.ToString(), "defaultValuePagination")
        @Confluence.InputDropDown(
            Model.Paginator.IntValue.ToString(),
            Model.Paginator.FieldName,
            paginatorList,
            width: "180px",
            required: Model.Paginator.IsRequired,
            orderAsc: false,
            showEmptyOption: false)
    </div>
}