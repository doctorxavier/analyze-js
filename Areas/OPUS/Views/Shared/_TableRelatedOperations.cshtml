@using System.Globalization

@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MW.Domain.Values
@using IDB.MW.Infrastructure.Configuration

@model IDB.MW.Application.OPUSModule.ViewModels.OperationDataService.BasicDataViewModel
@{var formatDate = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDate; }
<div class="row row-header">
    <div class="col-md-12 subtitleGroup">
        @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.Title")
    </div>
</div>
<div class="row row-header" data-idb-fieldname="btnOpCollapseRltdOp">
    <div class="col-md-12 text-left" id="expandRelatedOperationsTable">
        @Confluence.ButtonColapse("relatedOperationsTable", false,
        dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "btnOpCollapseRltdOp" } })
    </div>
</div>
@Confluence.InputHidden("", "delRelRegisterList")
<div class="row row-body-40">
    <div class="col-md-12">
        @{
            var relatedOperationsTableName = "relatedOperationsTable";
            var configRelated = Html.RenderDataTable(Model.RelatedOperations);
            configRelated.Name(relatedOperationsTableName)
            .PrimaryKey(m => m.RowId.ToString(CultureInfo.InvariantCulture))
            .AddPrimaryKeyToName(false)
            .Columns(columns =>
            {
                columns.Bound(c => c.Name)
                    .Header(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.OperationName"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Template(c => GetLinkNumberOperation(c.Number))
                    .Header(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.Number"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Bound(c => c.OperationType)
                    .Header(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.OperationType"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Bound(c => c.RelationshipNumber)
                    .Header(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.RelationshipNumber"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Bound(c => c.RelationshipType)
                    .Header(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.RelationshipType"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Bound(c => c.RelationshipRole)
                    .Header(Localization.GetText("OP.OD.TabBasicData.RelatedOperations.RelationshipRole"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns
                    .Template(c =>
                        Confluence.LabelDecimal(c.TotalAmount > 0 ? c.TotalAmount : (decimal?)null))
                    .Header(Localization.GetText("OP.OD.AddRelationship.Result.TotalAmount"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Bound(c => c.OverallStage)
                    .Header(Localization.GetText("OP.OD.AddRelationship.Result.OverallStage"))
                    .Persistent()
                    .CssHeaderClass("sort");
                columns.Template(c =>
                        Confluence.ButtonShowRow(
                            dataAttributes: new Dictionary<string, string>() {
                                {
                                    "idb-fieldname", "btnShowRowRltdOp"
                                } }))
                    .Attribute("data-pagemode", y => "edit")
                    .HeaderAttribute("data-pagemode", "edit")
                    .EditableTemplate(x =>
                        GetRelatedExpandedButton(
                            relatedOperationsTableName, x.RowId, "removeRelatedOperation"))
                    .CssHeaderClass("w130");
                columns.Bound(c => c.RowId)
                    .EditableTemplate(row =>
                        Confluence.ListHelpers(new List<HelperResult>()
                        {
                            Confluence.InputText(row.RowId.ToString(), "relatedOperationId"),
                            Confluence.InputText(
                                row.OperationRelationshipId.ToString(),
                                "relatedOperationRelationshipId"),
                            Confluence.InputText(
                                row.OperationRelatedId.ToString(),
                                "OperationRelatedId"),
                            Confluence.InputText(
                                row.RelationshipRoleId.ToString(),
                                "relatedRelationRoleId"),
                            Confluence.InputText(
                                row.RelationshipTypeId.ToString(),
                                "relatedRelationTypeId"),
                            Confluence.InputText(
                                row.RelationShipRoleThisOperationId.ToString(),
                                "RelationShipRoleThisOperationId"),
                            Confluence.InputDatePicker(
                                Convert.ToDateTime(row.StartDate),
                                "relatedStartDate",
                                formatDate),
                            Confluence.InputText(
                                row.EndDate != DateTime.MinValue ? row.EndDate.ToString() : "",
                                "relatedEndDate",
                                required: false),
                            Confluence.InputText(
                                row.UserCommentId.ToString(),
                                "relatedUserCommentId"),
                            Confluence.InputText(
                                row.OperationTypeCode,
                                "operationTypeCode",
                                required:false),
                            Confluence.InputText(
                                row.RelationTypeCode,
                                "relationTypeCode",
                                required:false)
                        }))
                .Hidden(true);
            })

            .RowTemplates(rows => rows.Create(RowTemplateType.AllRows, OperationDataBasicRowComment));

            configRelated.TableClass = "tableNormal endSpacing";
            configRelated.useCusomRowClass = false;

        }
        @Confluence.InputHidden("10", "PageSizeOperationRelated")
        @Html.Partial("Controls/DataTable", configRelated)

        @if (Model.OperationType != ViewBag.CIPId &&
            Model.OperationType != ViewBag.ESWId)
        {
            <div class="col-md-12" data-idb-fieldname="btnShowRldOpModal">
                <div data-pagemode="edit" class="text-center">
                    @Confluence.ButtonAddNewRows(
                        Localization.GetText("OP.OD.TabBasicData.RelatedOperations.AddRelationship"),
                        relatedOperationsTableName, null, "showNewRelatedOperationModal",
                        dataAttributes: new Dictionary<string, string>() {
                            {
                                "idb-fieldname", "btnShowRldOpModal"
                            } })
                </div>
            </div>
        }
    </div>
</div>

@helper OperationDataBasicRowComment(
    IDB.MW.Application.OPUSModule.ViewModels.Common.RelatedOperationRowViewModel row)
{
    <tr data-persist="true" data-row-parent-id="@row.RowId" data-second-file="true">
        <td colspan="9">
            <div class="row row-header">
                <div class="col-md-12">
                    <p>@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.Comments").HtmlEncode()</p>
                </div>
            </div>
            <div class="row row-body-40">
                <div data-pagemode="read">
                    <div class="col-md-8">
                        <p>
                            <b>
                                @row.Comments.HtmlEncode()
                            </b>
                        </p>
                    </div>
                </div>
                <div data-pagemode="edit">
                    <div class="col-md-8">
                        @Confluence.InputTextArea(
                            row.Comments,
                            "relatedComments",
                            required: false,
                            width: "100%",
                            dataAttributes: new Dictionary<string, string>() {
                                {
                                    "idb-fieldname", "txaRltdComments"
                                } })
                        <br />
                        @Confluence.ButtonTrash(null, null, "deleteComentOperationRelated",
                            dataAttributes: new Dictionary<string, string>() {
                                {
                                    "idb-fieldname", "btnRemoveRltdComm"
                                } })
                    </div>
                </div>
            </div>
        </td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
        <td class="hidden"></td>
    </tr>
}
@helper GetRelatedExpandedButton(string tableName, int rowId, string dataAction)
{
    if (Model.OperationType != ViewBag.CIPId &&
        Model.OperationType != ViewBag.ESWId)
    {
        @Confluence.ButtonTrash(null, null, dataAction,
            dataAttributes: new Dictionary<string, string>() {
                {
                    "idb-fieldname", "btnRemoveRltdOp"
                } })
    }
    @Confluence.ButtonShowRow(
        dataAttributes: new Dictionary<string, string>() {
            {
                "idb-fieldname", "btnShowRowRltdOp"
            } })
}
@helper GetLinkNumberOperation(string numberOperation)
{

    string url = string.Empty;

    if (numberOperation.Substring(0, 2).Equals("DF"))
    {
        url = Globals.GetSetting("BasePath") + OPUSGlobalValues.DraftAddress + numberOperation;
    }
    else
    {
        url = Globals.GetSetting("BasePath") + "/Operation/" + numberOperation;
    }

    <a href=@url target="_parent" style="text-decoration: underline">@numberOperation</a>
}
