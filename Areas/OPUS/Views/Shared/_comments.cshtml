@*@using System.Globalization
    @using IDB.Presentation.MVC4.Helpers
    @using IDB.MVCControls.General.Helpers
    @using IDB.Presentation.MVC4.Models.Repeater
    @using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
    @using IDB.MW.Infrastructure.Configuration*@

@using IDB.MW.Application.OPUSModule.ViewModels.Common
@using IDB.MW.Infrastructure.Configuration
@using System.Collections.Generic
@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Models.Repeater
@using IDB.Presentation.MVC4.Helpers
@using IDB.Architecture.Language

@model IEnumerable<GenericCommentsViewModel>

@{
    var donthideatedit = "";
    var datapagemode = "";
}


<div data-pagemode="edit">

    @Html.Partial("~/Views/Shared/Controls/Repeater.cshtml",
            new RepeaterModel<GenericCommentsViewModel>
        {
            Name = "Comment",
            PartialViewName = "_newComment",
            RepeaterModelData = new List<GenericCommentsViewModel>(),
            ModelTemplate = new GenericCommentsViewModel
            {
                CommentId = -1,
            },
            PropertyNameId = "CommentId",

            ButtonNewRowContainerStyle = "row row-header",
            ButtonNewColContainerStyle = "col-md-12 text-right",
            ButtonNewStyle = "button01",
            ButtonNewText = Localization.GetText("OP.AP.Comments.New"),
            ButtonNewItemAction = "newComment",
            ButtonNewPosition = "top",

            ButtonDeletePosition = Position.Top,
            ButtonDeleteAlign = Position.Right,
            ButtonDeleteClass = "button07-left-icon button07_4 new-approval-comment-edition pull-right",
            ButtonDeleteHasIcon = true,
            ButtonDeleteText = "Delete",

            RepeaterItemClass = "repeater-item-comment"
        })
</div>

<div class="row row-header row-header">
    <div class="col-md-12">
        @foreach (var comment in Model)
        {
            <div class="repeater-item-btn-delete-pos-bottom repeater-item-btn-delete-align-left repeater-item repeater-item-comment">
                <div class="row row-header row-header-comment">
                    <div class="col-md-12">
                        <div data-pagemode="read">
                            <p>@Convert.ToDateTime(comment.Date).ToString("dd MMM yy")</p>
                            @if (!string.IsNullOrWhiteSpace(comment.User))
                            {
                                <p>@comment.User.HtmlEncode()</p>
                            }
                            @if (!string.IsNullOrWhiteSpace(comment.Status))
                            {
                                <p>@comment.Status.HtmlEncode()</p>
                            }
                        </div>
                        @if (ViewBag.user == comment.User)
                         {
                            <div data-pagemode="edit">
                                <p>@Convert.ToDateTime(comment.Date).ToString("dd MMM yy")</p>
                                @if (!string.IsNullOrWhiteSpace(comment.User))
                                {
                                    <p>@comment.User.HtmlEncode()</p>
                                }
                                @if (!string.IsNullOrWhiteSpace(comment.Status))
                                {
                                    <p>@comment.Status.HtmlEncode()</p>
                                }
                                @Display.Button(text: "Delete", htmlClass: "btnDelete-repeater button07-left-icon button07_4 approval-comment-edition pull-right", hasIcon: true,
                                         attributes: new Dictionary<string, string> { {"data-action","deleteComment"},
                                         {"data-id", comment.CommentId.ToString()}})
                            </div>
                        }
                    </div>
                </div>

                <div class="row repeater-item-comment">
                    @{
                        donthideatedit = (ViewBag.user == comment.User) ? "template dont-hide-at-edit" : "";
                        datapagemode = (ViewBag.user == comment.User) ? "read" : "";
                    }
                    <div data-pagemode="@datapagemode" class="@donthideatedit">
                        <div class="col-md-12 font-comment break-words">
                            <p>
                                <b>@Localization.GetText(comment.Comment).HtmlEncode()</b>
                            </p>
                        </div>
                    </div>
                    @if (ViewBag.user == comment.User)
                    {
                        <div data-pagemode="edit">
                            <div class="col-md-12 font-comment break-words">
                                @ControlTemplates.InputTextArea(comment.Comment, "commentComment", rows: 6)
                            </div>
                            <input type="hidden" name="commentCommentId" value="@comment.CommentId" />
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>



