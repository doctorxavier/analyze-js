@using IDB.Architecture.Language
@using IDB.Architecture.ApplicationParameter
@using IDB.MW.Business.Core.OPUSService.DTOs
@using IDB.MW.Domain.Values

@model IDB.MW.Application.OPUSModule.ViewModels.OperationDataService.OperationDataViewModel
@{
    ViewBag.showLoader = true;
    ViewBag.fixLoad = true;
    Layout = "~/Areas/OPUS/Views/Shared/_LayoutPreRelease.cshtml";
}
<input hidden data-idb-pagename="UI-CC-001-ClimateChangeParcialRead" />
<input hidden data-idb-pagename="UI-CC-003-ClimateChangeParcialEdit" />

@Confluence.InputHidden("", "ResponsabilityDataEnable")
<div class="header">
    <div class="row">
        <div class="col-md-12">
            @Confluence.LabelMainTitle(Localization.GetText("OP.OD.Header.Tittle"))
        </div>
    </div>
</div>

<div>
    @if (Model != null)
    {
        @Html.Partial("Partials/OperationData/OperationDataPartial", Model)
    }
</div>

<button data-id="butttonNewRelatedOperationModal" class="hide"
        data-modal-allowclose="true"
        data-custom-modal="newRelatedOperationModal"
        data-custom-modal-style=""
        data-custom-modal-title="@Localization.GetText("OP.OD.AddRelationship.Title")"
        data-custom-modal-validate="false"
        data-custom-buttons='["save", "cancel"]'
        data-custom-button-save-id="send"
        data-custom-button-save="@Localization.GetText("OP.OD.Save")"
        data-custom-button-save-style="buttonBlue"
        data-custom-button-save-callback="relatedOperationSave"
        data-custom-button-save-closeatend="true"
        data-custom-button-cancel-id="cancel"
        data-custom-button-cancel="@Localization.GetText("OP.OD.Cancel")"
        data-custom-button-cancel-style="buttonLink"
        data-custom-button-cancel-callback=""
        data-custom-modal-onclose="addNewRelatedOperation"
        data-custom-modal-closeonoverlayclick="false"></button>

<div id="newRelatedOperationModal" class="hide modalBody"></div>

<div data-id="ModalRegionThree">
    <button data-id="buttonNewAscInstitutionModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newAscInstitutionModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.CR.NewAscInstitution.Title")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "save"]'
            data-custom-button-save-id="send"
            data-custom-button-save="@Localization.GetText("OP.CR.NewAscInstitution.Save")"
            data-custom-button-save-style="buttonBlue"
            data-custom-button-save-callback="newInstitution"
            data-custom-button-save-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("OP.CR.NewAscInstitution.Cancel")"
            data-custom-button-cancel-style="buttonLink"
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="newAscInstitutionModal" class="hide modalBody"></div>
</div>

<div data-id="ModalRegionChangeHistory" id="idModalChangeHistory">
    <button data-id="buttonModalChangeHistory" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newModalChangeHistory"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.Title") - @Localization.GetText("OP.PD.TabBasicData.RelatedOperations.ChangeHistory")"
            data-custom-modal-validate="false"
            data-custom-modal-onclose=""
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="newModalChangeHistory" class="hide modalBody"></div>
</div>

<div data-id="ModalRegionTwo">
    <button data-id="butttonNewInstitutionModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newInstitutionModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText(" op.cr.newinstitution.header.title")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "save"]'
            data-custom-button-save-id="send"
            data-custom-button-save="@Localization.GetText(" op.cr.newinstitution.request")"
            data-custom-button-save-style="buttonBlue"
            data-custom-button-save-callback="institutionSave"
            data-custom-button-save-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText(" op.cr.newinstitution.cancel")"
            data-custom-button-cancel-style="buttonLink"
            data-custom-button-cancel-callback=""
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="newInstitutionModal" class="hide modalBody"></div>
</div>


<div data-id="ModalRegionFour">
    <button data-id="butttonsubnationalLevel" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="subnationalLevelContent"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.CR.SubnationalLevel")"
            data-custom-modal-validate="false"
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>

    <div id="subnationalLevelContent" class="hide modalBody">
    </div>
</div>

<div data-id="ModalRegionFive">
    <button data-id="butttoApprovedResponsabilityData" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="approvedResponsabilityDataContent"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.CR.ResponsabilityDataApproved")"
            data-custom-modal-validate="false"
            data-custom-modal-onclose=""
            data-custom-modal-closeonoverlayclick="false"></button>

    <div id="approvedResponsabilityDataContent" class="hide modalBody">
    </div>
</div>


@Scripts.Render("~/bundles/Modules/Opus/opus.js")

@section scripts{
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/relatedOperations.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/teamLeaders.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/TC/tcAbstractEditableFromOperationData.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/cclipOperationsHandlers.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/publicPrivatePartnershipHandlers.js")"></script>
    @ModuleScriptsOpus.CreationOperationScripts(Html, Url)
    @ModuleScriptsOpus.NewInstitutionScripts(Html, Url)

    <script type="text/javascript">

        var operationType = "";
        var otherSectorId = @ViewBag.OtherSectorId;
        var sgId = @ViewBag.SgId;
        var isCndOperation = JSON.parse(@Model.IsCndOperation.ToString().ToLower());
        var operationSupportTaxonomyId = "@Model.BasicData.OpsTaxonomyIdTypeId";

        tcAbstractEditableData.Init(
            @Model.IsEditableBasedOnTcAbstractState.ToString().ToLower(),
            '@Model.ExecutingAgencyRoleId',
            '@Model.ResponsibleRoleId',
            '@Model.DisbursRespUnitRoleId');

        cclipOperationsData.Init(
            false,
            '@Model.SectorMultipleId',
            '@AttributeCode.CCLIP_MULTI_SECTOR',
            '@Model.SubSectorMultipleId',
            '@Model.OperationNumber',
            '@OPUSGlobalValues.NEW_OPERATION_NUMBER',
            '@Model.RelationshipTypeCclipSId',
            '@Model.RelationshipTypeCclipRId',
            '@Localization.GetText("OP.CR.CreationForm.Message.Cclip.ExecAgenSectorDeletionWarning")',
            '@Model.ExecutingAgencyRoleId',
            '@Model.FacilityTypeSectorialCclipId',
            '@Model.FacilityTypeMultisectICclipId',
            '@Model.FacilityTypeMultisectIICclipId',
            '@Model.ConOperationId',
            '@Model.FinancingYesId',
            '@Model.ConModalityCreditLineId',
            '@(Json.Encode(Model.Institutions == null ? new List<AssociatedInstitution>() : Model.Institutions))'.replace(/&quot;/g, '"'));

        publicPrivatePartnership.Init(
            '@Model.ConOperationId',
            '@Model.FinancingYesId',
            '@Model.PrgOperationId',
            [@Model.PppUnavailablePrgModalityIds]);

        $(document).on("click", "[aria-labelledby = 'id-FacilityType']", cclipOperationsData.UpdateSectorsSubsectorsInputs);

        $(document).on('click', '[aria-labelledby="id-PRGModality"]', publicPrivatePartnership.UpdatePublicPrivatePartnershipAttributeVisibility);

        $(document).on('mousedown', 'button#id-sector,button#id-CONModality,button#id-FacilityType', function () {
            setTimeout(
                cclipOperationsData.CheckFieldEditableByCclipConditions(this),
                100);
        });

        $(document).on('mousedown', 'ul.chosen-choices.cclipMultiSectorChosenChoices > li.search-choice > a', cclipOperationsData.ValidateMultiSectorModifiable);
        $(document).on('mousedown', 'ul.chosen-choices.cclipMultiSectorChosenChoices > li.search-field > input', cclipOperationsData.ValidateMultiSectorModifiable);
        $(document).on('mousedown', 'ul.chosen-results.cclipMultiSectorAvailableChoices > li', cclipOperationsData.ValidateMultiSectorModifiable);

    function attributGroupForce() {
        $('.attributGroupForce').find('br').remove();
        $('.attributGroupForce').find('.row').each(function() {
            if ($(this).find('.LendingChild').length > 0) {
                $(this).addClass('LendingChild');
            }

            if ($(this).find('.LendingParent').length > 0) {
                $(this).addClass('LendingParent');
            }

            if ($(this).html().length === 1) {
                $(this).remove();
            }
        });

        $('.attributGroupForce').find('div.row').not('.LendingParent').not('.LendingChild')
            .each(function() {
                if ($(this).height() > $('[name="heightGroupForce"]').val()) {
                    $('[name="heightGroupForce"]').val($(this).height());
                }
            });

        $('.attributGroupForce').find('div.row').not('.LendingParent').not('.LendingChild')
            .css('min-height', $('[name="heightGroupForce"]').val() + 'px');

        $('.attributGroupForce').find('div.row.LendingParent.title').remove();

        if ($('.attributGroupForce').find('.LendingParent').length > 0) {
            $('.attributGroupForce')
                .find('div.row')
                .not('.LendingParent')
                .not('.LendingChild')
                .last()
                .after('<div class="row LendingParent title"></div>');
            $('.attributGroupForce').find('div.row.LendingParent.title')
                .html('<div class="grouping-section">' +
                '<div class="col-md-12"><label class="lbltitle">Lending Program</label></div>' +
                '</div>');
        }
    }

    function getUrlConcurrence() {
        var url = '';
        switch ($(".tab-pane.active").attr("id")) {
            case "tabResponsibilityData":
                url = '@OPUSGlobalValues.URL_OPERATION_RESPONSABILITY_DATA';
                break;
            case "tabBasicData":
                url = '@OPUSGlobalValues.URL_OPERATION_BASIC_DATA';
                break;
            case "tabClassificationData":
                url = '@OPUSGlobalValues.URL_OPERATION_CLASSIFICATION_DATA';
                break;
            case "tabStrAligData":
                url = '@OPUSGlobalValues.URL_OPERATION_STRATEGIC_ALIGNMENT';
                break;
        }

        return url;
    }

    function GetMbfItemSelect(){
        var item = $('#mbfCodeValue').val();
        var selectIndex = 0;
        $('[aria-labelledby=id-mbfCode] li').each(function( index ) {
            var id = $(this).find('a[dd-value]').attr('dd-value');
            if (id === item) {
                selectIndex = index;
                return false;
            }
        });

        return selectIndex;
    }

    function edit(source) {
        $('[name="operationTeamsRole"]').attr("data-parsley-required", true);
        $('table.main-table').find('span.collapse-button:first').click();
        var mbfCodeItemSelect = GetMbfItemSelect();
        initialCheckState();
        postUrlWithOptions(
            '@Url.Action("LockRegister", "View", new {area = "OPUS"})', { async: false },
            { url: getUrlConcurrence() })
            .done(function(data) {
                if (data.IsValid === true) {

                    var success = enterEditMode(false, $(".tab-pane.active"), false);
                    if (success) {
                        enterEditMode(false, $('[data-id=headerButtons]'), false);
                        enterEditMode(false, $('#subnationalLevelContent'), false);
                        disableEnableTabs(true);

                        BREngine.Init();

                        attributGroupForce();
                        prepareObjetiveFieldCip();
                        BR_VBR_BANK_EXECUTING_POLICIES.Init();
                    }

                    loadingFunctions();
                    businessRuleRadio();
                    if ($('[name="ResponsabilityDataEnable"]').val() === "true") {

                        var dropdown = $('#responsibleUnitsTable').find('.dropdown');
                        dropdown.find('input').attr('disabled', 'disabled');
                        dropdown.find('button').attr('disabled', 'disabled');
                        $('#responsibleUnitsTable')
                            .find('.inputText')
                            .attr('disabled', 'disabled');

                        var search = $('#responsibleUnitsTable')
                            .find('.inputSearch.lupa')
                            .attr('disabled', 'disabled');

                        search.find('input').attr('disabled', 'disabled');
                        $('#responsibleUnitsTable').find('.buttonTrash').hide();

                    } else {
                        if ($('#responsibleUnitsTable').find('[disabled]').length > 0) {
                            $('[name="ResponsabilityDataEnable"]').val("true");
                        }
                    }

                    if ($('[name="mbfCode"]').is('[disabled]')) {
                        $('[name="mbfCode"]')
                            .closest('.dropdown')
                            .removeClass('placeholder')
                            .find('[disabled]')
                            .removeAttr('disabled');
                    }

                    var nameSector = $("[name='sector']").GetText();
                    if (nameSector !== "OTHER" && $("[name='sector']").val() !== "") {
                        $('#id-subsector').removeAttr("disabled");
                        $('[name="subsector"]').attr("data-parsley-required", true);
                    } else {
                        $('#id-subsector').attr("disabled", "disabled");
                        $("[name='subsector']").attr("disabled", "disabled");
                        $('[name="subsector"]').attr("data-parsley-required", false);
                    }

                    if ($("#countryLabel").find('label').text() === "@OPUSGlobalValues.REGIONAL" &&
                        $("#cntOpType").find('label').text().substring(0, 3) !== "@OperationType.LON") {

                        $("[name='countryDepartmentId']").removeAttr("data-parsley-required");
                        $("[name='countryGroup']").removeAttr("data-parsley-required");
                        $("#cntCountryGroup").find('span').remove();
                        $("#cntCountryDept").find('span.asteriskColor').remove();
                    } else {
                        $("[name='countryGroup']").attr("data-parsley-required", true);
                        $("[name='countryDepartmentId']").attr("data-parsley-required", true);
                        if ('@ViewBag.IsRegionalPermission' === 'True') {
                            $("#cntCountryGroup label")
                                .after('<span class="asteriskColor">*</span>');
                            $("#cntCountryDept label")
                                .after('<span class="asteriskColor">*</span>');
                        }
                    }

                    cclipOperationsData.UpdateSectorsSubsectorsInputs();

                    $('[name="mbfCode"]').attr('data-parsley-required', "true");
                    initialState();
                    bindHandlers();
                    BR_VBR_BANK_EXECUTING_POLICIES.Init();
                    businessRuleMBF();
                    tcAbstractEditableData.PrepareFieldsAccordingTCAbstractState();

                    var isSubnational = 
                        $('[data-pagemode="read"] #chkSubnationalCreation').is(':checked');
                    var dataPageModeEdit = $('[data-pagemode="edit"]');

                    dataPageModeEdit.find('#chkSubnationalCreation')
                        .prop('checked', isSubnational);

                    if (isSubnational) {
                        dataPageModeEdit.find('a#openSubnationalCreation').show();
                    } else {
                        dataPageModeEdit.find('a#openSubnationalCreation').hide();
                    }

                } else {
                    showMessage(data.ErrorMessage);
                }
            });

        addNewRelationshipVisibility();
        applyStyleToRelationship();
        var isCountryStrategyApproved = $('input[name=hiddenIsCountryStrategyApprovedOpus]').val();
        if (isCountryStrategyApproved === "True") {
            hideOrShowRegionRelevanceOperation();
        }

        if (!$('[name="mbfCode"]').is('[disabled]')) {
            $('#id-mbfCode').SelectIndex(parseInt(mbfCodeItemSelect));
        }

        editModeHideFieldsOperationTypeEFC(operationType);
        removeInstitutionUSIdbTrashButton(operationType);
        GetFICBusinessRule();
        CheckFacilityTypeRule();
    }

    function businessRuleRadio() {
        var isSelected = true;
        $('#tabBasicData').find('[name="DDO"]').each(function() {
            if ($(this).prop('checked')) {
                isSelected = false;
            }
        });

        if (isSelected) {
            $('#tabBasicData').find('[name="DDO"]').first().prop('checked', true);
        }
    }

    function cancel(source) {
        var msg = "@Localization.GetText("OP.OD.Message.Cancel")";
        var $dataPageModeRead = $('[data-pagemode="read"]');
        var isSubnationalLevel =
             $dataPageModeRead.find('#chkSubnationalCreation').is(':checked');
        var isSubnationalLevelCurrent =
            $('[data-pagemode="edit"] #chkSubnationalCreation').is(':checked');
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                postUrlWithOptions(
                    '@Url.Action("UnlockRegister", "View", new {area = "OPUS"})', { async: true },
                    { url: getUrlConcurrence() });
                var editingTab = $('.tab-pane.active');
                exitEditModeLoader(true, editingTab, false, false);
                exitEditModeLoader(false, $('[data-id=headerButtons]'), false, false);
                disableEnableTabs(false);
                attributGroupForce();
                prepareObjetiveFieldCip();
                readModeHideFieldsOperationTypeEFC(operationType);

                var $subnationalInput = $('input[name="subnational"]');

                if (isSubnationalLevel != isSubnationalLevelCurrent &&
                    isSubnationalLevelCurrent) {
                    postUrlWithOptions(
                        '@Url.Action("DeleteSubnationalLevel", "View", new {area = "OPUS"})',
                        { async: false });

                    $subnationalInput.prop('checked', false);
                    $dataPageModeRead.find('#openSubnationalCreation span').hide();
                    $dataPageModeRead.find('#openSubnationalCreation a').hide();
                } else {
                    if (isSubnationalLevel) {
                        $subnationalInput.prop('checked', true);
                        $dataPageModeRead.find('#openSubnationalCreation span').show();
                        $dataPageModeRead.find('#openSubnationalCreation a').show();
                        $('#openSubnationalCreation span').show();
                    }
                }
            }

            loadingFunctions();
            $('.btn.btn-warning.vex-dialog-button.vex-first').off('click');
            initialState();

            $('[name="CTExceptionBlankP"]').next('div.chosen-container')
                .on("focusin click", function(){
                    $(this).find('div.chosen-drop')
                        .find('ul.chosen-results li:contains("None")')
                        .remove();
            });
            $('table.main-table').find('span.collapse-button:first').click();
            applyStyleToRelationship();
        });

        $('.btn.btn-warning.vex-dialog-button.vex-first').click(function() { showLoader(); });
    }

    function saveOperationData(source) {
        var isSubnational = true;
        var operationYearOriginal = $('input[name="hdOperationYear"]').val();
        var operationYear = $('input[name="operationYear"]').val();
        var modelSerialized = '#hidOperationViewModel';

        switch ($(".tab-pane.active").attr("id")) {
            case "tabResponsibilityData":
                modelSerialized = '#hidResponsibilityDataViewModel';
                break;
            case "tabBasicData":
                modelSerialized = '#hidBasicDataViewModel';
                break;
            case "tabClassificationData":
                modelSerialized = '#hidClassificationDataViewModel';
                break;
            case "tabStrAligData":
                modelSerialized = '#hidSADataViewModel';
                break;
        }

        if (validateRequired($(".tab-pane.active").attr("id"))) {

            if (!$('#chkSubnationalCreation').closest('div').next()
                .find('#chkSubnationalCreation').is(':checked')) {
                isSubnational = false;
            }

            destroyParsley();
            initParsley();
            destroyParsley();
            initParsley();

            if (!isSubnational) {
                postUrlWithOptions(
                    '@Url.Action("DeleteSubnationalLevel", "View",new {area = "OPUS"})',
                    { async: false });
            }

            var response = saveContainer($('#' + $(".tab-pane.active").attr("id") + ''),
                modelSerialized, true,
                $('#headerButtons'));

            if (response !== false) {
                response.done(function(data) {
                    if (!data.IsValid && data.ErrorMessage != null && data.ErrorMessage != '') {
                        showMessage(data.ErrorMessage);
                    } else {
                        if (operationYearOriginal !== "" &&
                            operationYearOriginal !== operationYear) {
                            showMessage(
                                '@Localization.GetText(
                                "OP.CR.CreationForm.Message.ApprovalDateWillBeDeleted")');
                        }

                        if (typeof cclipOperationsData !== 'undefined') {
                            cclipOperationsData.UpdateRelatedInstitutions();
                        }

                        if ($(".tab-pane.active").attr("id") === 'tabStrAligData') {
                            initialState();
                        } else {
                            if (!response.IsValidSap) {
                                showMessage(data.ErrorMessage);
                                exitEditMode(true, $('.tab-pane.active'), false, false);
                            }
                        }

                        exitEditMode(false, $('[data-id=headerButtons]'), false, false);
                        readModeHideFieldsOperationTypeEFC(operationType);
                        disableEnableTabs(false);

                        publicPrivatePartnership.UpdatePublicPrivatePartnershipAttributeVisibility();
                    }
                });
            }

            loadingFunctions();
        }
        $('table.main-table').find('span.collapse-button:first').click();
        attributGroupForce();

        applyStyleToRelationship();

        prepareObjetiveFieldCip();

        if (isSubnational && $('#subnationalLevelList').find('tr').length > 0) {
            $('#chkSubnationalCreation').prop('checked', true);
            $('[data-pagemode="read"] #openSubnationalCreation span').show();
        }
    }

    $(document).ready(function() {
        loadingFunctions();
        initializeGlobalLoader();
        attributGroupForce();
        businessRuleMBF();

        operationType = $('#cntOpType > label').text().substring(0, 3);

        $('ul[aria-labelledby="id-ReportingCycle"] li').each(function () {
            var isTCM = $(this).find('a').text();
            if (isTCM === "@OPUSGlobalValues.ISTCM") {
                $(this).remove();
            }
        });
        delegatorMessage('@Localization.GetText(
                                "R6.DEL.Message.NewPermission")', "@Model.DelegatorMessage", "@ViewBag.OperationNumber");

        $("[name='mitigation-sub-category']").each(function () {
            var obj = $(this);
            var subCategory = obj.find("span[name='mitigation-sub-category-text']");
            var text = subCategory.text();
            var tdAux = obj.next("td");
            if (text.trim() == "") {
                obj.addClass('hidden');
                tdAux.removeClass('hidden');
            }

        });

        $("[name='social-sub-category']").each(function () {
            var obj = $(this);
            var subCategory = obj.find("span[name='social-sub-category-text']");
            var text = subCategory.text();
            if (text.trim() == "") {
                obj.addClass('hidden');
            }

        });

        $("[name='adaptation-sub-category']").each(function () {
            var obj = $(this);
            var subCategory = obj.find("span[name='adaptation-sub-category-text']");
            var text = subCategory.text();
            if (text.trim() == "") {
                obj.addClass('hidden');
            }

        });

        applyStyleToRelationship();

        $('.tabs li[dd-tab="#tabStrAligData"]').click(function () {
            loadDataTabStrategyAligment();
        });

        $('.tabs li[dd-tab="#tabResponsibilityData"]').click(function () {
            loadDataTabResponsibilityData();
        });

        $('.tabs li[dd-tab="#tabClassificationData"]').click(function () {
            loadDataTabClassificationData();
        });

        $('.tabs li[dd-tab="#tabClimateChange"]').click(function () {
            loadDataTabClimateChange();
        });

        prepareObjetiveFieldCip();
        readModeHideFieldsOperationTypeEFC(operationType);

        cclipOperationsData.HideSectorSubSectorMultipleOption();
        cclipOperationsData.UpdateSectorsSubsectorsInputs();

        publicPrivatePartnership.SetInitialPublicPrivatePartnershipAttributeVisibility();

        updateSectorDropdown();

        validateRequired($(".tab-pane.active").attr("id"));

        $(document).on('click', '[aria-labelledby="id-TCTaxonomy"] a,[name=AdministrativeExpenses]', controlOPSTaxonomy);
    });

    function loadingFunctions() {
        resetRequired();
        checkCountry();
        ValidateDatetime();
        searchEnter();

        BREngine.Init();
        initialRegionRelevance();
    }

    function loadSubSectorCombo(event) {
        var idSector = $("input[name='sector']").attr('value');

        if (idSector !== '@Model.SectorOtherId' && idSector !== '') {
            if (idSector != cclipOperationsData.MultipleSectorId) {
                $('#id-subsector').removeAttr("disabled");
                $("[name='subsector']").removeAttr("disabled");
            }

            $.ajax({
                url: "@Url.Action("FillSubSector", "View", new {area = "OPUS"})",
                type: "POST",
                dataType: "json",
                data: { 'idSector': idSector },
                success: function(result) {
                    var data = $.map(result, function(item, a) {
                        return "<li><a dd-value=" + item.Value + ">" + item.Text + "</a></li>";
                    });

                    data.unshift("<li><a dd-value>(select option)</a></li>");
                    $subSector = $('ul.dropdown-menu[aria-labelledby="id-subsector"]');
                    $subSector.html(data.join(""));

                    if (event && event.type === 'click') {
                        $subSector.closest('div.dropdown').find('button').FirstorDefault();
                    }

                    cclipOperationsData.SetSubSectorValueForCCLIP();
                }
            });

            $('[name="subSector"]').attr("data-parsley-required", true);

        } else {
            $('#id-subsector').attr("disabled", "disabled");
            $("[name='subsector']").attr("disabled", "disabled");
            $('[name="subsector"]').attr("data-parsley-required", false);
            $('ul.dropdown-menu[aria-labelledby="id-subsector"]').
                closest('div.dropdown').find('button').FirstorDefault();
        }
    }

    $(document).on("click", '#expandRelatedOperationsTable', function() {
        applyStyleToRelationship();
    });

    $(document).on('paste', '[name^=operationObjective]', function() {
        var $node = $(this);
        setTimeout(function () {
            var txt = $node.val();
            $node.val(txt.replace(/[\r\n]+/g, ''));
        }, 500);
    });

    $(document).on('keypress', '[name^=operationObjective]', function(evt) {
        if (evt.which == 13)
            evt.preventDefault();
    });

    $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-sector"] a', loadSubSectorCombo);

    $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-operationTeamsRole"] a', function() {
            var selectedElementParentDropdown = $(this).closest("div.dropdown");

            var teamLeaderRoles = ['@Model.ResponsabilityData.TeamLeaderId', '@Model.ResponsabilityData.AlternateTeamLeaderId'];
            var userNotFromStaffMessage = "@Localization.GetText("GLOBAL.Save.NonStaffUsersAsTeamLeaders")";
            var urlAction = '@Url.Action("VerifyStaffMember", "View", new {area = "OPUS"})';

            var $user = selectedElementParentDropdown.parents('tr').find('[name="userNameTeam_text"]');
            var userName = $user.GetValue();
            var fullName = $user.GetText();

            var isNotRoleStaffMember =  checkForNonStaffUsersAsTeamLeaders(
                selectedElementParentDropdown,
                userName,
                fullName,
                teamLeaderRoles,
                userNotFromStaffMessage,
                urlAction);

            if (isNotRoleStaffMember)
                return;

            var countTeamLeader = 0;
            var countSpdSpecialist = 0;
            var spdspecialistRepeat = false;
            var indexNewUser = 0;

            $('table[id="operationTeamsTable"] td.role').each(function(){
                if ($(this).find('span.valueText').html() == '@Role.TEAM_LEADER' ||
                    $(this).find('span.showDataEdit').find('label.labelNormal').html()== '@Role.TEAM_LEADER') {
                    countTeamLeader++;
                }
            });

            $('table#operationTeamsTable span.valueText').each(function() {
                if ($(this).html() == '@Role.SPD_SPECIALIST') {

                    var indexUser = 0;
                    var newUser = "";
                    if ($('[name=userNameTeam_text]').eq(indexNewUser) !== undefined)
                    {
                        newUser = $('[name=userNameTeam_text]').eq(indexNewUser).val().toUpperCase().trim();
                    }
                    $('[data-username]').each(function(){

                        if($(this).text() == newUser)
                        {
                            if($('[data-rolename]').eq(indexUser).text() == '@Role.SPD_SPECIALIST')
                            {
                                spdspecialistRepeat = true;
                            }
                        }
                        indexUser++;
                    })
                    countSpdSpecialist++;}
                indexNewUser++;
            });

            if (countTeamLeader > 1 || countSpdSpecialist > 1 || spdspecialistRepeat) {
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("OP.CR.CreationForm.Message.AnyTeamLeader")');
                return false;
            }

            var thisSelect = $(this);
            var orgUnit = thisSelect.closest('td').next().next().find('.labelNormal').text();
            var roleId = $(this).attr('dd-value');
            if (orgUnit !== "") {
                postUrlWithOptions(
                    '@Url.Action("GetEsgPermission", "View", new {area = "OPUS"})', { async: true },
                    { orgUnit: orgUnit, roleId: roleId })
                    .done(function(data) {
                        if (data === false) {
                            showMessage('@Localization.GetText(
                            "OP.CR.CreationForm.Message.OnlyOneEsgLeadSpecialist")');
                            thisSelect.closest('div.dropdown').find('button').FirstorDefault();
                        }});
            }
        });

    $(document).on("focusout", '[name="responsibleUnitsEffortInDays"]', function() {
        if ($(this) == undefined || $(this) == null || $(this).val() === "") {
            return false;
        } else {
            var select = $(this);
            postUrlWithOptions(
                "@Url.Action("CalculationEffortDays",
                    "View",
                    new {area = "OPUS"})",
                    { async: true },
                    { 'effort': parseInt($(this).val()) })
                .done(function(result) {
                    $(select).closest('tr')
                        .find("[data-id='contribution']")
                        .children()
                        .first()
                        .text(result[0].toFixed(3));
                    $(select).closest('tr')
                        .find("[data-id='contributionPercent']")
                        .children()
                        .first()
                        .text(result[1].toFixed(2) + "%");
                });
        }
    });


    function newResponsibleUnit(button) {
        var container = $("#" + button.attr('dd-table')).find('tbody');

        postUrlWithOptions(
            "@Url.Action("GetRowResponsibleUnit", "View", new {area = "OPUS"})", { async: false },
            { 'operationType': parseInt($("[name='operationType']").val()) })
            .done(function(data) {
                if ($(container).find('td.dataTables_empty').length > 0) {
                    $(container).find('tr').remove();
                }
                $(container).append(data);
                enterEditMode(false, $(container), false);
                bindHandlers();
                tcAbstractEditableData.ToggleTcAbstractEditionFieldsResponsibilityUnits(true);
            });
    }

        function newRowClimateChange(button) {
        var container = $("#" + button.attr('dd-table')).find('tbody');

        postUrlWithOptions(
            "@Url.Action("GetClimateChange", "View", new {area = "OPUS"})", { async: false },
            { 'operationType': parseInt($("[name='operationType']").val()) })
            .done(function(data) {
                if ($(container).find('td.dataTables_empty').length > 0) {
                    $(container).find('tr').remove();
                }
                $(container).append(data);
                enterEditMode(false, $(container), false);
                bindHandlers();
            });
    }

    function newTeamMember(button) {
        var container = $("#" + button.attr('dd-table')).find('tbody');
        var tLorAtLnotEditable =
            '@Model.ResponsabilityData.ExistTeamLeaderNotEditable'.toLocaleLowerCase() === 'true';
        var operationAnalistNotEditable =
            '@Model.ResponsabilityData.ExistOperationAnalistNotEditable'
            .toLocaleLowerCase() === 'true';

        postUrlWithOptions(
            '@Url.Action("GetRowOperationTeam", "View", new {area = "OPUS"})', { async: true },
            { tLorAtLnotEditable: tLorAtLnotEditable,
                operationAnalistNotEditable: operationAnalistNotEditable })
            .done(function(data) {
                if ($(container).find('td.dataTables_empty').length > 0) {
                    $(container).find('tr').remove();
                }
                $(container).append(data);
                $('#operationTeamsTable').find(".dropdown-menu").css({"max-height": "120px"});
                enterEditMode(false, $(container), false);
                bindHandlers($(container));
            });
    }

    function newCountry(button) {
        if ($('#associatedCountriesTable tbody tr').length < 3) {
            postUrlWithOptions(
                '@Url.Action("GetRowAssociatedCountries", "View", new {area = "OPUS"})'
                , { async: true })
                .done(function(data) {
                    var container = $("#" + button.attr('dd-table')).find('tbody');
                    if ($(container).find('td.dataTables_empty').length > 0) {
                        $(container).find('tr').remove();
                    }
                    $(container).append(data);
                    enterEditMode(false, $(container), false);
                    bindHandlers($(container));
                    validateCountryAssociatedTable();
                });
        } else {
            showMessage('@Localization.GetText("OP.CR.CreationForm.Message.NewCountry")');
        }
    }

    function newUserComment() {
        var container = $('#UserCommentFields');
        $.get("../View/GetRowUserComment", function(data) {
            $(container).append(data);
            enterEditMode(false, $(container), false);
            bindHandlers();
        });
    }

    function removeRow(source) {
        if (!cclipOperationsData.ValidateCclipExecAgencyGettingRemoved(source)) {
            return false;
        }

        var msg = '@Localization.GetText("OP.OD.Delete.Msg")';
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                var button = source;
                var tableId = button.closest("table").attr("id");
                button.closest("tr").remove();
            }
        });
    }

    $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-associatedCountriesRole"] a',
        function() {
            var nameInCuestion = $(this).text();
            var count = 0;
            $('#associatedCountriesTable tr').each(function() {
                var nameInThisRow = $(this)
                    .find('td #id-associatedCountriesRole span:first')
                    .text();
                if (nameInCuestion === nameInThisRow) {
                    count = count + 1;
                }
            });

            if (count > 1) {
                showMessage('You need choose another role');
                $(this).closest('div.dropdown').find('button').FirstorDefault();
            } else {
                var element = $(this).closest('tr');
                var roleId = $(this).attr('dd-value');
                var opTypeId = $('[name=operationType]').val();
                var guaranteedId =
                    $('[aria-labelledby=id-LendingType] > li > a[dd-selected]').attr('dd-value');
                var isLon = OperationTypeLoadnId == '@Model.BasicData.OperationTypeLoadnId';
                var isSg = opTypeId == '@ViewBag.SGId';

                postUrlWithOptions('@Url.Action("GetCountryRelatedCountriesByRole",
                "View",
                new {area = "OPUS"})',
                    { async: false },
                    { roleId: parseInt(roleId), isSGLON: isLon && isSg }).done(function(data) {
                        var listdata = $.map(data, function(item) {
                            return "<option value=" + item.Value + ">" + item.Text + "</option>";
                        });

                        element.find('[name="listCountry"]').html(listdata);
                    });
                element.find('[name="listCountry"]').Clean();
            }
        });

    $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-associatedCountriesCountry"] a',
        function() {
            var select = $(this);
            var a = [];
            var i = 0;
            var count = 0;
            a = $("input[name = 'associatedCountriesCountry']");
            a.each(function() {
                if (select.attr("dd-value") === a[i].value) {
                    count = count + 1;
                    if (count >= 2) {
                        $(select).closest('div.dropdown').find('button').FirstorDefault();
                        showMessage("@Localization.GetText("OP.OD.TabBasicData.Message.Country")");
                        return false;
                    }
                }
                i = i + 1;
            });
        });

    function removeRowUserComment(source) {
        $(source).parent().parent().remove();
    }

    function resetRequired() {
        $("input[name='operationNamePortuguese']").attr("data-parsley-required", false);
        $("input[name='operationObjectivePortuguese']").attr("data-parsley-required", false);
        $("input[name='operationNameFrech']").attr("data-parsley-required", false);
        $("input[name='operationObjectiveFrench']").attr("data-parsley-required", false);

        $('#asteriskNameFr').addClass('hide');
        $('#asteriskNamePt').addClass('hide');
        $("#asteriskObjFr").addClass("hide");
        $("#asteriskObjPt").addClass("hide");
    }

    function checkCountry() {
        var countryId = $("[name='country']").val();

        if (countryId != undefined && countryId !== "") {

            $.get("../View/CheckCountry", { countryId: parseInt(countryId) }, function(data) {
                resetRequired();

                if (data.Portuguese === true) {
                    $("[name='operationNamePortuguese']").attr("data-parsley-required", true);
                    $("#asteriskNamePt").removeClass("hide");

                    if ($("#objetivesContent.hide").length === 0) {
                        $("[name='operationObjectivePortuguese']")
                            .attr("data-parsley-required", true);
                        $("#asteriskObjPt").removeClass("hide");
                    }
                } else if (data.French === true) {
                    $("[name='operationNameFrech']").attr("data-parsley-required", true);
                    $("#asteriskNameFr").removeClass("hide");

                    if ($("#objetivesContent.hide").length === 0) {
                        $("[name='operationObjectiveFrench']").attr("data-parsley-required", true);
                        $("#asteriskObjFr").removeClass("hide");
                    }
                }
            });
        }
    }

    $(document).on(
        "click",
        'ul.dropdown-menu[aria-labelledby="id-associatedInstitutions"] a',
        function() {

            var select = $(this);
            var a = [];
            var i = 0;
            var count = 0;
            a = $("input[name = 'associatedInstitutions']");
            a.each(function() {
                if (select.attr("dd-value") == a[i].value) {
                    count = count + 1;
                    if (count >= 2) {
                        $(select).closest('div.dropdown').find('button').FirstorDefault();
                        showMessage("@Localization.GetText("OP.OD.TabBasicData.Message.Institution")");
                        return false;
                    }
                }
                i = i + 1;
                return false;
            });
        });


    $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-userNameTeam"] a', function() {
        var org = $(this).attr('additional-data');
        var tableArray = new Array();
        $('#operationTeamsTable').find("[name='userNameTeam']").each(function() {
            tableArray.push($(this).val());
        });

        var users = tableArray;

        if(!thereAreDuplicatedUsersInTeamData(users)){
            if (tableArray.length > 0) {
                var responseUser = postUrl('@Url.Action("VerifyOperationTeamUser",
                    "View",
                    new {area = "Opus"})',
                    { userName: $(this).attr('dd-value'), tableArray: tableArray }).responseJSON;
            }

            var response = postUrl('@Url.Action("GetAdditionalDataOperationTeam",
                "View",
                new {area = "Opus"})',
                { userName: $(this).attr('dd-value'), organization: org, hideExpired: false })
                .responseJSON;
            if (response.IsValid) {
                if (response.ValidationMessage === null) {

                    var userId = $(this).attr('dd-value');
                    var nameUser = $(this).closest('tr').find("[name='operationTeamsName']");
                    $(nameUser).val($(this).text().trim());
                    $(nameUser).closest('td').find('label').remove();
                    $(nameUser).closest('td')
                        .append('<label class="labelNormal">' + userId + '</label>');
                    var organizationalUnit = $(this)
                        .closest('tr')
                        .find("[name='organizationalUnitTeam']");
                    var organizationalUnitText =
                        response.OrganizationalUnitName == null ?
                        "" :
                        response.OrganizationalUnitName;
                    $(organizationalUnit).val(response.OrganizationalUnitId);
                    $(organizationalUnit).closest('td').find('label').remove();
                    $(organizationalUnit)
                        .closest('td')
                        .append('<label class="labelNormal">' + organizationalUnitText + '</label>');

                    var department = $(this).closest('tr').find("[data-idb-fieldname='otDepartment']");
                    department.text(response.Department);

                    var division = $(this).closest('tr').find("[data-idb-fieldname='otDivision']");
                    division.text(response.Division);

                    var location = $(this).closest('tr').find("[data-idb-fieldname='otLocation']");
                    location.text(response.Location);

                    if (response.Delegator != null) {
                        organizationalUnit
                        .closest('td')
                        .next()
                        .find("span")
                        .first()
                        .text(response.Delegator);
                    } else {
                        organizationalUnit.closest('td').next().find("span").text("");
                    }

                } else {
                    showMessage(response.ValidationMessage);

                    var genericUserImageUrl = '@VirtualPathUtility.ToAbsolute("~/Images/Contenido/basicdata/DefaultPictureUrl.PNG")';
                    var teamMemberRow = $(this).closest('tr');

                    teamMemberRow.find("[name='operationTeamsName']").val("");
                    teamMemberRow.find("[name='userNameTeam_text']").val("");
                    teamMemberRow.find("img.img-flag").attr('src', genericUserImageUrl);
                }

            } else {
                showMessage(response.ErrorMessage);
            }

            $(this).closest('tr').find('div.dropdown').find('button').FirstorDefault();
        } else {
            showMessage('@Localization.GetText("CS.ResponsabilityData.Message.SelectOtherUser")');
            var row = $(this).closest('tr');
            row.find('div.dropdown').FirstorDefault();
            row.find('[type="hidden"]').val("");
            row.find('.labelNormal').text("");
            row.find('[name="userNameTeam_text"]').val("");
        }
    });

    $(document).on("click", '[name="approvedResponsabilityData"]', function() {
        var url = '@Url.Action("ApprovedOperationResponsabilityContent",
        "View",
        new {area = "OPUS", partial = "ApprovedResponsibilityDataPartial" })';
        postUrlWithOptions(url, { async: false })
            .done(function(data) {
                $('#approvedResponsabilityDataContent').html(data);
                $('[data-id="butttoApprovedResponsabilityData"]').click();
                allowMultiPopUp();
            });
    });

    function ValidateDatetime() {
        $('#newRelatedDates .hasDatepicker').change(function(source) {
            var dateSelected = $(source.target);
            var isCorrect = true;
            var otherDate = $(source.target).parent().parent().next().find('.hasDatepicker');
            if (otherDate.length > 0) {
                isCorrect = dateDiffInDays(dateSelected.val(), otherDate.val());
            } else {
                otherDate = $(source.target).parent().parent().prev().find('.hasDatepicker');
                isCorrect = dateDiffInDays(otherDate.val(), $(source.target).val());
            }

            if (!isCorrect) {
                $(source.target).val("");
                $(source.target).attr("data-parsley-required", true)
                    .removeClass('parsley-success')
                    .addClass('parsley-error');
                $(source.target).parent().find('ul').remove();
                $(otherDate).parent().find('ul').remove();
                $(otherDate).attr("data-parsley-required", false)
                    .removeClass('parsley-error')
                    .addClass('parsley-success');
                $(source.target).parent()
                    .append('<ul class="parsley-errors-list filled">'+
                    '<li class="parsley-required">range of dates incorrect.</li></ul>');
            }
            else {
                $(source.target).attr("data-parsley-required", false)
                    .removeClass('parsley-error')
                    .addClass('parsley-success');
                $(source.target).parent().find('ul').remove();
                $(otherDate).parent().find('ul').remove();
                $(otherDate).attr("data-parsley-required", false)
                    .removeClass('parsley-error')
                    .addClass('parsley-success');
            }
        });

        function dateDiffInDays(a, b) {
            var diff = true;
            var aDate = a == "" ? Date.parse("0") : Date.parse(a);
            var bDate = b == "" ? Date.parse("0") : Date.parse(b);
            var diff = (aDate) - (bDate);

            if (aDate == Date.parse("0") || bDate == Date.parse("0")) {
                return diff;
            }

            return diff <= 0 ? true : false;
        }
    }

    function searchEnter() {
        $('[name="associatedInstitutionsNameAcronym"], [name="relatedOperation"]')
            .keypress(function(e) {

                if (e.which === 13) {
                    var name = $(this).attr('name');
                    if (name === "associatedInstitutionsNameAcronym") {
                        $(this).closest('td').find('.searchFilter').click();
                    } else {
                        $(this).parent().next().find('[data-action="relatedOperationSearch"]').click();
                    }
                }
            });
    }

    function disableEnableTabs(enableOne) {

        if (enableOne) {
            var idTab = $('.tab-pane.active').attr('data-tab-control-id');
            $("[dd-tab]").not('[dd-tab=' + idTab + ']').addClass('disabled');
        } else {
            $("[dd-tab]").removeClass('disabled');
        }
    }

    function verificarRole(role) {
        var result = false;

        $('[name="associatedInstitutionsRole"]').each(function() {
            if ($(this).val() == role) {
                result = true;
            }
        });

        return result;
    }

    function validateBasicDataRequired() {

        var operationType = $("[name='operationType']").val();

            var response = postUrl('@Url.Action(
            "CheckBusinessPermisionSave", "View", new {area = "OPUS"})',
            { operationType: operationType }).responseJSON;
            if (response.IsValid) {

                var operationYear = $("[name='operationYear']").val();

                if (response.OperationYear &&
                        (operationYear == null || operationYear == "")) {
                    showMessage("@Localization.GetText("OP.Message.IncompleteBasicData")");
                    return false;
                }

                var sector = $("[name='sector']").val();

                if (response.RequiredSector &&
                        (sector == undefined || sector == null || sector == "")) {
                    showMessage("@Localization.GetText("OP.Message.IncompleteBasicData")");
                    return false;
                }

                var subSector = $("[name='subSector'] label").html()

                if (response.RequiredSubsector &&
                        (subSector == undefined || subSector == null || subSector == "") &&
                        sector != response.SectorOtherId) {
                    showMessage("@Localization.GetText("OP.Message.IncompleteBasicData")");
                    return false;
                }

                var countryDept = $("[name='countryDepartment'] label").html()

                if(response.RequiredRequiredDepartment &&
                    (countryDept == undefined || countryDept == null || countryDept == "")) {
                    showMessage("@Localization.GetText("OP.Message.IncompleteBasicData")");
                    return false;
                }

                var countryGroup = $("[name='countryGroup'] label").html()

                if(response.RequiredCountryGroup &&
                    (countryGroup == undefined || countryGroup == null || countryGroup == "")) {
                    showMessage("@Localization.GetText("OP.Message.IncompleteBasicData")");
                    return false;
                }

        } else if (!response.IsValid && response.ErrorMessage !== "") {
            showMessage(response.ErrorMessage);
            return false;
        }
        return true;
    }

    function validateRequired(tab) {
        var operationType = $("[name='operationType']").val();
        var psgAttribute = $("[name='psgAttribute']").val();

        if (tab === "tabResponsibilityData") {
            if (operationType != undefined && operationType != null && operationType != "") {

                var teamLeaderRequired = false;
                var borrowerRequired = false;
                var requiredInstitution = true;
                var requiredPsgCoordinator = false;

                var exist;
                if ($('table[id^="responsibleUnitsTable"]').length > 0) {
                    exist = 0;
                    $('[name="responsibleUnitsRole"]').each(function() {
                        if ($(this).val() == '@ViewBag.OrganizationalUnitResponsibleUnit') {
                            exist++;
                        }
                    });
                    if (exist == 0 &&
                        '@ViewBag.ResponsabilityDataPermission'.toLocaleLowerCase() === 'true') {

                        showMessage("@Localization.GetText(
                            "OP.OD.TabResponsibilityData.ResponsibilityUnits.Message.ResponsibleOU2")");
                        return false;
                    } else if (exist > 1 &&
                        '@ViewBag.ResponsabilityDataPermission'.toLocaleLowerCase() === 'true') {

                        showMessage("@Localization.GetText(
                        "OP.OD.TabResponsibilityData.ResponsibilityUnits.Message.ResponsibleOU")");
                        return false;
                    }

                    $('[name="responsibleUnitsOrganizationalUnit"]').each(function () {
                        $(this).attr("data-parsley-required", "true");
                    });
                }

                var response = postUrl('@Url.Action("CheckBusinessPermisionSave", "View",
                    new {area = "Opus"})',
                    { operationType: operationType }).responseJSON;

                if (response.IsValid) {
                    teamLeaderRequired = response.RequiredTeamLeader;
                    borrowerRequired = response.RequiredBorrower;
                    requiredInstitution = response.RequiredInstitution;
                    requiredPsgCoordinator = response.RequiredPsgCoordinator;

                } else if (!response.IsValid && response.ErrorMessage !== "") {
                    showMessage(response.ErrorMessage);
                    return false;
                }

                if (!validateContainer($('#' + $(".tab-pane.active").attr("id") + ''))) {
                    return false;
                }

                if (teamLeaderRequired &&
                    '@ViewBag.ResponsabilityDataPermission'.toLocaleLowerCase() === 'true' &&
                    '@Model.ResponsabilityData.ExistTeamLeaderNotEditable'
                        .toLocaleLowerCase() === 'false' &&
                        '@ViewBag.SPDDEMResponsibilityWritePermission'.toLocaleLowerCase() === 'false') {

                    var teamLeaderCount = 0;
                    if ($('table#operationTeamsTable').length > 0) {
                        teamLeaderCount = 0;
                        $('table#operationTeamsTable td.role').each(function(){
                            if ($(this).find('[name="operationTeamsRole"]').val() == '@Model.ResponsabilityData.TeamLeaderId' ||
                                $(this).find('[name="notMapField"]').val() == '@Model.ResponsabilityData.TeamLeaderId') {
                                teamLeaderCount++;
                            }
                        });
                        if (teamLeaderCount == 0) {
                            showMessage('@Localization.GetText(
                            "OP.CR.CreationForm.Message.TeamLeader")');
                            return false;
                        }
                    }
                }


                if (requiredPsgCoordinator &&
                        '@ViewBag.ResponsabilityDataPermission'.toLocaleLowerCase() === 'true' &&
                        psgAttribute.toLocaleLowerCase() === 'true') {

                    var gcmPsgCoordinatorCount = 0;
                    var ptrPsgCoordinatorCount = 0;
                    if ($('table[id^="operationTeamsTable"]').length > 0) {

                        $('[name="operationTeamsRole"]').each(function() {
                            if ($(this).val() == '@Model.ResponsabilityData.GcmPsgCoordinatorId') {
                                gcmPsgCoordinatorCount++;
                            }

                            if ($(this).val() == '@Model.ResponsabilityData.PtrPsgCoordinatorId') {
                                ptrPsgCoordinatorCount++;
                            }
                        });

                        if (gcmPsgCoordinatorCount == 0) {
                            showMessage('@Localization.GetText(
                            "OP.CR.CreationForm.Message.GcmPsgCoordinator")');
                            return false;
                        }else if (ptrPsgCoordinatorCount == 0) {
                            showMessage('@Localization.GetText(
                           "OP.CR.CreationForm.Message.PtrPsgCoordinator")');
                            return false;
                        }
                    }
                }

                if (requiredInstitution &&
                    '@ViewBag.ResponsabilityDataPermission'.toLocaleLowerCase() === 'true') {
                    if (borrowerRequired) {

                        if ('@ViewBag.ResponsabilityDataPermission'
                                .toLocaleLowerCase() === 'true' &&
                            !verificarRole(@ViewBag.BorrowerId)) {

                            showMessage("@Localization.GetText(
                                "OP.CR.CreationForm.Message.Borrower")");
                            return false;
                        }
                    }

                    if ('@ViewBag.ResponsabilityDataPermission'.toLocaleLowerCase() === 'true' &&
                        !verificarRole(@ViewBag.ExecutorId)) {

                        showMessage("@Localization.GetText(
                            "OP.CR.CreationForm.Message.Executor")");
                        return false;
                    }
                }

                if(cclipOperationsData.NeedMandatoryCreditLineExecutingAgency() &&
                    !verificarRole(@Model.CreditLineExecutingAgencyRoleId)) {

                    showMessage('@Localization.GetText("OP.CreationAndOperationData.Message.MandatoryCreditLineExecutingAgency")');

                    return false;
                }

                if(cclipOperationsData.NeedMandatoryLiaison() &&
                    !verificarRole(@Model.BasicData.LiaisonId)) {

                    showMessage('@Localization.GetText("OP.CR.CreationForm.Message.Liaison")');

                    return false;
                }

                if(!validateBasicDataRequired())
                        return false;

                return validateAssociatedCountries(
                    0,
                    0,
                    0,
                    0,
                    '@Model.ResponsabilityData.RegionalId',
                    false,
                    false,
                    '@ViewBag.CountryRelatedRoleAdmin',
                    '@ViewBag.CountryRelatedRoleParticipant',
                    1,
                    @ViewBag.ResponsabilityDataPermission.ToString().ToLower());

            } else {
                showMessage("@Localization.GetText(
                "OP.OD.TabResponsibilityData.Message.OperationType")");
                return false;
            }
        } else if (tab === "tabBasicData") {
            if (!validOpsRelation('@Model.BasicData.TcpOpTypeId',
                '@Model.BasicData.OpsTaxonomyIdTypeId',
                '@Model.BasicData.OpsRelationId')) {

                return false;
            }

            var responseRequired = postUrl('@Url.Action("CheckBusinessPermisionSave", "View",
                new {area = "Opus"})',
                { operationType: operationType }).responseJSON;
            if (responseRequired.IsValid) {

                if (responseRequired.RequiredSector || cclipOperationsData.IsCclipConOperation()) {
                    $("[name='sector']").attr("data-parsley-required", true);

                    if ($("#cntSector").find('span').length == 0) {
                        $("#cntSector label").after('<span class="asteriskColor">*</span>');
                    }

                    var $multiSectorContainer = $('[name="' + cclipOperationsData.MultiSectorAttribName + '"]');
                    var $multiSectorMainLabelContainer = $multiSectorContainer.closest('.LabelsGroup');
                    var $multiSectorMainLabel = $multiSectorContainer.closest('.LabelsGroup').find('label.lgTit');

                    if (cclipOperationsData.NeedMultipleSectors()) {
                        $multiSectorContainer.attr("data-parsley-required", true);

                        if ($multiSectorMainLabelContainer.find('span').length == 0) {
                            $multiSectorMainLabel.append('<span class="asteriskColor">*</span>');
                        }
                    } else {
                        $multiSectorContainer.removeAttr("data-parsley-required");
                        $multiSectorMainLabelContainer.find('span').remove();
                    }
                } else {
                    $("[name='sector']").removeAttr("data-parsley-required");
                    $("#cntSector").find('span').remove();
                }

                if (responseRequired.RequiredSubsector || cclipOperationsData.NeedMultipleSectors()) {
                    $("[name='subsector']").attr("data-parsley-required", true);

                    if ($("#cntsubSector").find('span').length == 0) {
                        $("#cntsubSector label").after('<span class="asteriskColor">*</span>');
                    }

                } else {
                    $("[name='subsector']").removeAttr("data-parsley-required");
                    $("#cntsubSector").find('span').remove();
                }

                @if (Model.BasicData.CountryCode == CountryCode.RG) {
                <text>
                    if (responseRequired.RequiredCountryGroup) {
                        $("[name='countryGroup']").attr("data-parsley-required", true);
                        if ($("#cntCountryGroup").find('span').length == 0) {
                            $("#cntCountryGroup label")
                                .after('<span class="asteriskColor">*</span>');
                        }

                    } else {
                        $("[name='countryGroup']").removeAttr("data-parsley-required");
                        $("#cntCountryGroup").find('span').remove();
                    }

                    if (responseRequired.RequiredRequiredDepartment) {
                        $("[name='countryDepartmentId']").attr("data-parsley-required", true);
                        if ($("#cntCountryDept").find('span.asteriskColor').length == 0) {
                            $("#cntCountryDept label")
                                .after('<span class="asteriskColor">*</span>');
                        }

                    } else {
                        $("[name='countryDepartmentId']").removeAttr("data-parsley-required");
                        $("#cntCountryDept").find('span.asteriskColor').remove();
                    }
                </text>
                }
            } else if (!responseRequired.IsValid && responseRequired.ErrorMessage !== "") {
                showMessage(responseRequired.ErrorMessage);
                return false;
            }
        }
        return true;
    }

    $(document).on(
        'click',
        'ul.dropdown-menu[aria-labelledby="id-responsibleUnitsRole"] a',
        function() {

            var countResponsible = 0;
            var countRepeatRow = 0;
            var roleValor = $(this).attr('dd-value');
            var ouValor =
                $(this)
                .closest('td')
                .next()
                .find('input[name="responsibleUnitsOrganizationalUnit"]')
                .val();

            $('[name="responsibleUnitsRole"]').each(function() {
                if ($(this).val() == '@Model.ResponsabilityData.OrganizationalUnitResponsibleUnit') {
                    countResponsible++;
                }
                if (roleValor !== "" && ouValor !== "") {
                    var ouValorRow = $(this).closest('td')
                        .next()
                        .find('input[name="responsibleUnitsOrganizationalUnit"]')
                        .val();
                    if ((roleValor == $(this).val()) && (ouValor == ouValorRow)) {
                        countRepeatRow++;
                    }
                }
            });

            if (countResponsible > 1) {
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("OP.CR.CreationForm.Message.ResponsibleOU")');
            } else if (countRepeatRow > 1) {
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("GLOBAL.DUPLICATE.ROW")');
            }
        });

    function confirmTeamLeaderChange() {
        $("[name=userNameTeam_text]").focusin(function(e) {
            if ($(this)
                .closest("tr")
                .find("[name=operationTeamsRole]")
                .val() === "@ViewBag.TeamLeader") {

                var current = $(this);
                confirmAction(
                    "@Localization.GetText("R6.Proposal.OperationData.Message.ChangeTL")")
                    .done(function(pressOk) {
                        if (pressOk) {
                            current.val("");
                            current.unbind("focusin");
                        } else {
                            e.stopPropagation();
                        }
                    });

            } else $(this).val("");

            if (countResponsible > 1) {
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("OP.CR.CreationForm.Message.ResponsibleOU")');
            } else if (countRepeatRow > 1) {
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("GLOBAL.DUPLICATE.ROW")');
            }
        });
    }


    $(document).on(
        "click",
        'ul.dropdown-menu[aria-labelledby="id-responsibleUnitsOrganizationalUnit"] a',
        function() {

            if ($(this) == undefined ||
                $(this) == null ||
                $(this).text() === "" ||
                $(this).attr("dd-value") === "") {
                return false;
            } else {
                institutionEFCController();
                var countRepeatRow = 0;

                var ouValor = $(this).attr('dd-value');
                var roleValor =
                    $(this).closest('td').prev().find('input[name="responsibleUnitsRole"]').val();

                $('[name="responsibleUnitsRole"]').each(function() {
                    var ouValorRow = $(this)
                        .closest('td')
                        .next()
                        .find('input[name="responsibleUnitsOrganizationalUnit"]')
                        .val();
                    if ((roleValor == $(this).val()) && (ouValor == ouValorRow)) {
                        countRepeatRow++;
                    }
                });

                if (countRepeatRow > 1) {
                    showMessage("@Localization.GetText(
                    "OP.OD.TabClassificationData.Message.OrganizationalUnit")");
                    $(this).closest('tr')
                        .find("[name='responsibleUnitsOrganizationalUnit_text']")
                        .val("");
                    $(this).closest('tr')
                        .find("[name='responsibleUnitsOrganizationalUnit']")
                        .val("");

                    return false;
                }

                return true;
            }
        });

    function exportTeamData(source) {
        var url = '@Url.Action("OperationTeamExcel", "View", new {area = "OPUS"})';
        window.open(url, '_blank');
    }
    </script>

    <script type="text/javascript">

        var BRHierachicalTextboxes = new Object();
        BRHierachicalTextboxes.Register = function(parentCode, children) {
            if (Attributes_Exists(parentCode)) {
                var parent = Attributes_GetElementByAttributeCode(parentCode);

                $(parent).change(function() {
                    var isChecked = $(this).is(":checked");

                    for (var i = 0; i < children.length; i++) {
                        var child = Attributes_GetElementByAttributeCode(children[i]);
                        if (child != null) {
                            $(child).prop('checked', isChecked);
                        }
                    }
                });

                for (var i = 0; i < children.length; i++) {
                    var child = Attributes_GetElementByAttributeCode(children[i]);
                    if (child != null) {
                        $(child).change(function() {
                            var isChecked = $(this).is(":checked");
                            if (isChecked) {
                                $(parent).prop('checked', isChecked);
                            }
                        });
                    }
                }
            }
        };

        BRHierachicalTextboxes.Init = function() {};

        var BR_VBR_SMALL_VULNERABLE = new Object({
            CountryGroup: '@Model.BasicData.CountryGroup',
            IsRegionalCountry: @Model.BasicData.IsRegional.ToString().ToLower()});

        BR_VBR_SMALL_VULNERABLE.Init = function() {
            if ((this.CountryGroup === 'A' || this.CountryGroup === 'B') &&
                !this.IsRegionalCountry) {

                if (Attributes_Exists("LPLendingSV")) {
                    var attr = Attributes_GetElementByAttributeCode("LPLendingSV");

                    $(attr).each(function(index, element) {
                        $(element).prop('checked', false);
                        $(element).prop('disabled', true);
                        $(element).unbind();
                    });
                }
            }

            if ((this.CountryGroup === 'C' || this.CountryGroup === 'D') &&
                !this.IsRegionalCountry) {

                if (Attributes_Exists("LPLendingSV")) {
                    var attr = Attributes_GetElementByAttributeCode("LPLendingSV");
                    $(attr).each(function(index, element) {
                        $(element).prop('checked', true);
                        $(element).prop('disabled', true);
                        $(element).unbind();
                    });
                }
            }

            if (this.IsRegionalCountry) {
                //If it is in edit mode
                if (isInEditMode($(".tab-pane.active"))) {
                    var attr = Attributes_GetElementByAttributeCode("LPLendingSV");
                    $(attr).each(function(index, element) {
                        $(element).prop('disabled', false);
                    });
                }
            }
        };

        /*VBR_LP_ENABLE_CHECKED SECTOR
        if it's 'A' is checked and disabled else is unchecked and enabled*/
        var BR_VBR_LP_ENABLE_CHECKED = new Object({
            Sector: 'A'
        });

        BR_VBR_LP_ENABLE_CHECKED.Init = function() {

        };

        var BR_VBR_BANK_EXECUTING_POLICIES = new Object({

        });

        BR_VBR_BANK_EXECUTING_POLICIES.Init = function() {
            window.setTimeout(function () {
                var multiSelect = $('[name="CTExceptionBlankP"]');
                var textArea = $('[name="CJustificationTExceptionBlankP"]');
                var valuesWhereJustificationForExceptionToBankPoliciesShouldBeVisible =
                    ["Financial Management Policies", "Other", "Procurement Policies"];
                var selectedValues = "";
                var currentSelectedValues = [];

                multiSelect.attr("data-parsley-required", "false");
                textArea.css("height", "150px");

                if (multiSelect.parents("div[data-pagemode=edit]").hasClass("hide")){
                    currentSelectedValues =
                        $.map(multiSelect.parents('div.LabelsGroup')
                        .find('div[data-pagemode=read] label')
                        .text()
                        .trim()
                        .split(","),
                        $.trim);
                }else{
                    var currentSelectedValues = $('[name="CTExceptionBlankP"]')
                        .parent()
                        .find('.chosen-container ul.chosen-choices li span')
                        .map(function() {
                            return $(this).text();
                    }).toArray();
                }

                var justificationForExceptionIsVisible =
                    valuesWhereJustificationForExceptionToBankPoliciesShouldBeVisible
                    .some(function (v) {

                    return currentSelectedValues.indexOf(v) >= 0;
                });

                if (textArea.length > 0 &&
                    textArea.next('ul.parsley-errors-list.filled').length == 0 &&
                    (!justificationForExceptionIsVisible || currentSelectedValues.length == 0))
                {
                    textArea.hideElement();
                }else{
                    textArea.attr("data-parsley-required", "true");
                }

                if (multiSelect.length > 0) {
                    multiSelect.on('change', function() {
                        window.setTimeout(function () {

                            $('[name="CTExceptionBlankP"]')
                                .next('div.chosen-container')
                                .find('div.chosen-drop')
                                .find('ul.chosen-results li:contains("None")')
                                .remove();

                            selectedValues = $('[name="CTExceptionBlankP"]')
                                .parent()
                                .find('.chosen-container ul.chosen-choices li span')
                                .map(function() {
                                    return $(this).text();
                            }).toArray();

                            var justificationForExceptionToBankPoliciesIsVisible =
                                valuesWhereJustificationForExceptionToBankPoliciesShouldBeVisible
                                .some(function (v) {
                                    return selectedValues.indexOf(v) >= 0;
                            });

                            if (justificationForExceptionToBankPoliciesIsVisible)
                            {
                                textArea.showAndCleanErrorsList();
                            }
                            else{
                                textArea.hideElement();
                            }
                        }, 10)

                    });
                }
            }, 10)

            $('[name="CTExceptionBlankP"]')
                .next('div.chosen-container')
                .on("focusin click", function(){

                $(this).find('div.chosen-drop')
                    .find('ul.chosen-results li:contains("None")')
                    .remove();
            });
        };

        $.fn.showAndCleanErrorsList = function () {
            $(this).removeClass("hide");
            $(this).removeClass('parsley-error');
            $(this).parent().parent().removeClass('hide');
            $(this).attr("data-parsley-required", "true");
            $(this).next('ul.parsley-errors-list.filled').removeClass('filled');
        }

        $.fn.hideElement = function() {
            $(this).val("");
            $(this).addClass("hide");
            $(this).attr("data-parsley-required", "false");
            $(this).parent().parent().addClass('hide');
        }

        var BRLendingMain = new Object();
        BRLendingMain.Init = function() {

            BRHierachicalTextboxes.Init();
            BRHierachicalTextboxes.Register("LPLendingSV", []);
            BRHierachicalTextboxes.Register("LPPovertyEquityE",
                ["LPGeoClassif", "LPHeadcount", "LPHeadcount", "LPRatioNetIncome"]);
            BRHierachicalTextboxes.Register("LPInitiativesEneEnv",
                ["LPMitigation", "LPAdaptation", "LPSustainableEnergy", "LPEnvSustainability"]);
            BRHierachicalTextboxes.Register("LPRegCoopInt",
                ["LPInfrastructure", "LPInstStrDevelop", "LPPublicGoods"]);
            BR_VBR_SMALL_VULNERABLE.Init();
            BR_VBR_LP_ENABLE_CHECKED.Init();
            BR_VBR_BANK_EXECUTING_POLICIES.Init();
        }

        var BREngine = new Object();
        BREngine.Init = function() {
            BRLendingMain.Init();
        };

    </script>

    <script type="text/javascript">
        registerCallback(function() {
            initialState();

            $(document).on('click', 'button[name="linktoprofile"]',
                function(e){
                    var source = $(this);
                    var url = source.attr('data-url');
                    window.open(url, '_blank');
                });

            $(document).on('click', '[name=indicator-Check]:not([data-isValid=false])', function(e) {
                var source = $(this);
                if (typeof(source.attr('data-persist-subindicatorid')) == "undefined"){
                    showOwnData(source);
                }
                checkChecks(source);
            });


            $(document).on('click', '[name="objectivesAligned"]', function (e) {
                var source = $(this);
                var valueSource = source.val();
                var regionAligned = $('div[data-content="aligned"]');
                var regionNotAligned = $('div[data-content="notAligned"]');
                var asteriskAligned = $('span[data-name="asteriskAligned"]');
                var asteriskNotAligned = $('span[data-name="asteriskNotAligned"]');
                var comboAligned = $('[name="objectives"]');
                var comboNotAligned = $('[name="objectivesNotAligned"]');

                var isIncludeOpr = $('input[name=hiddenIndicativePipelines]').val();

                if (valueSource == 'aligned') {
                    regionNotAligned.addClass('hide');
                    regionAligned.removeClass('hide');
                    regionNotAligned.find('#objectivesNotAligned').attr('disabled', 'disabled');
                    asteriskNotAligned.addClass('hide');
                    asteriskAligned.removeClass('hide');
                    comboAligned.removeAttr('disabled');
                    comboAligned.attr('required', 'required');
                    comboNotAligned.removeAttr('required');

                    var chosenInitial = comboAligned.data('chosen');
                    chosenInitial.destroy();
                    comboAligned.CustomChosen();

                    if (isIncludeOpr != undefined) {
                        $("div[name=regionRelevanceOperation]").addClass('hide');
                        setValidationRequired("false");
                    }
                } else {
                    regionNotAligned.removeClass('hide');
                    regionAligned.addClass('hide');
                    regionAligned.find('select').val('');
                    var closeSelected = regionAligned.find('a.search-choice-close');
                    closeSelected.each(function () {
                        $(this).click();
                    });
                    regionAligned.find('select').attr('disabled', 'disabled');
                    asteriskAligned.addClass('hide');
                    asteriskNotAligned.removeClass('hide');
                    comboNotAligned.removeAttr('disabled');
                    comboAligned.removeAttr('required');
                    comboNotAligned.attr('required', 'required');

                    var isOperationOpr = $('input[name=hiddenIsOperationOpr]').val();

                    if ((isIncludeOpr === "False") && !(isOperationOpr === "False")) {
                        $("div[name=regionRelevanceOperation]").removeClass('hide');
                        setValidationRequired("true");
                    }
                }
            });

            function checkChecks(source) {
                if (typeof(source.attr('data-persist-subindicatorid')) == "undefined") {
                    if (!source.is(':checked')) {
                        $('div[data-parent-indicator=' +
                            source.attr('data-id') +
                            '] input[name=indicator-Check]').each(function(e, data, source) {
                                $(data).prop('checked', false);
                                showOwnData(data);
                            });
                    }
                } else {
                    if (source.is(':checked')) {
                        var parent = $('[data-target-section=' + source.attr('data-id') + ']');
                        parent.prop('checked', true);
                        showOwnData(parent);
                    }
                }
            }

            window.ParsleyValidator
                .addValidator('valitationermcombos', function(value, requirement) {
                    var resul = true;
                    var source = $('div[' + requirement + ']');
                    var impact = source.find('[name=impactIndicators-Combo]');
                    var outcome = source.find('[name=outcomeIndicators-Combo]');
                    var outputs = source.find('[name=outputs-Combo]');
                    var instruction = source.find('div[name="instructionMessage"]');
                    var isCheck = source
                        .closest('div[data-parent-indicator]')
                        .find('[name=indicator-Check]')
                        .is(':checked');

                    if ((impact.val() == '' || impact.val() == null) &&
                        (outcome.val() == '' || outcome.val() == null) &&
                        (outputs.val() == '' || outputs.val() == null) &&
                        isCheck) {
                        resul = false;
                    }
                    return resul;

                }, 32)
                .addMessage('en', 'valitationermcombos', 'Please select at least one indicator.');
        });

        //FunctionsAxuiliar

        function initialCheckState(){
            var alignedCheckBox = $('input[value="aligned"]');
            var notAlignedCheckBox = $('input[value="not-aligned"]');
            var alignedCombo = $('[name="objectives"]');
            var notAlignedCombo = $('[name="objectivesNotAligned"]');
            var asteriskAligned= $('span[data-name="asteriskAligned"]');
            var asteriskNotAligned = $('span[data-name="asteriskNotAligned"]');

            if(alignedCheckBox.is(':checked')){
                alignedCombo.removeAttr('disabled');
                notAlignedCombo.attr('disabled', 'disabled');
                asteriskNotAligned.addClass('hide');
                asteriskAligned.removeClass('hide');
            }else{
                notAlignedCombo.removeAttr('disabled');
                alignedCombo.attr('disabled', 'disabled');
                asteriskAligned.addClass('hide');
                asteriskNotAligned.removeClass('hide');
            }
        }

        function initialState() {
            $('[name=indicator-Check], [name=indicator-Check-dis]').each(function() {
                var source = $(this);
                showOwnData(source);
            });
        }

        function showOwnData(source) {
            source = $(source);
            var sectionName = source.attr('data-target-section');
            var regionSelector = String.format('[data-section="{0}"]', sectionName);
            var region = $(regionSelector);
            var textarea = region.find('textarea');
            var isValid = region.parent().find('input').val() == 'True';
            if (source.is(':checked')) {
                region.show('blind', 500);
                if (isValid) {
                    if(textarea.length != 0){
                        textarea.removeAttr('disabled');
                        textarea.parsley().destroy();
                        textarea.parsley();
                        textarea.parsley().destroy();
                        textarea.parsley();
                    }
                }
            } else {
                region.hide('blind', 500);
                textarea.attr('disabled', 'disabled');
            }
        }

        var BingMapsKey = "@AppParameter.GetValue("BING_MAP_KEY")";
        var resultSubnational = [];
        var newResultSubnational = [];
        var deleteSubnationalItems = [];

        function cancelSubnationalLevel() {
            var msg = "@Localization.GetText("OP.OD.Message.Cancel")";
            confirmAction(msg).done(function(pressOk) {
                if (pressOk) {
                    $('.vex-close').click();
                }
            });
        }

        $(document).on("click", 'input[name="subnational"]', function() {
            if ($(this).is(':checked')) {
                $('a#openSubnationalCreation').show();
            } else {
                $('a#openSubnationalCreation').hide();
            }
        });

        $(document).on("click", 'a#openSubnationalCreation', function() {

            var url = '@Url.Action("GetSubnationalLevel",
                "View",
                new {area = "OPUS", partial = "_SubnationalLevel"})';
            postUrlWithOptions(url, { async: false })
                .done(function(data) {
                    $('#subnationalLevelContent').html(data);
                    if (isInEditMode($('.tab-pane.active'))) {
                        enterEditMode(false, $('#subnationalLevelContent'), false);
                    }
                    $('[data-id="butttonsubnationalLevel"]').click();
                    allowMultiPopUp();
                });
        });

        function subnationalLevelSearch() {
            $("#listSubnational").empty();

            var valorInput = $("[name=subnationalSearch_text]").val();
            var url = "https://dev.virtualearth.net/REST/v1/Locations?q=";
            url = url + valorInput + "&key=" + BingMapsKey;
            url += '&jsonp=?';
            $.getJSON(url, function(response) {
                getListSubnationalLevel(response);
            });
            $("#subnationalDropdown").addClass("dropdown open");
        }

        function getListSubnationalLevel(res) {
            var name = "";
            var resultados = res.resourceSets[0];
            for (var i = 0; i < resultados.resources.length; i++) {
                var item = resultados.resources[i];

                if (item.address.locality == null && item.address.adminDistrict == null) {
                    name = item.address.countryRegion;

                } else if (item.address.locality == null) {
                    name = item.address.adminDistrict + ", " + item.address.countryRegion;

                } else {
                    name = item.address.locality + ", " +
                        item.address.adminDistrict + ", " +
                        item.address.countryRegion;
                }

                $("#listSubnational").append("<li>" + "<a name='itemSubnational'>" + name + "</a></li>");

                resultSubnational.push({
                    value: name,
                    countryRegion: item.address.countryRegion,
                    adminDistrict: item.address.adminDistrict,
                    locality: item.address.locality
                });
            }
        }

        $(document).on("click", "[name=itemSubnational]", function() {

            var itemSelected = $(this).html();
            $("#subnationalDropdown").removeClass("dropdown open");

            for (var i = 0; i < resultSubnational.length; i++) {
                var item = resultSubnational[i];

                if (itemSelected == item.value) {
                    var countryRegion = item.countryRegion;
                    var adminDistrict = item.adminDistrict;
                    var locality = item.locality;

                    newResultSubnational.push({
                        value: itemSelected,
                        countryRegion: item.countryRegion,
                        adminDistrict: item.adminDistrict,
                        locality: item.locality
                    });

                    $.get("@Url.Action("GetRowSubnationalLevel", new {tp = "noTree"})",
                        {
                            countryRegion: countryRegion,
                            adminDistrict: adminDistrict,
                            locality: locality
                        },
                        function(data) {
                            $("#subnationalLevelList").append(data);
                        });

                    itemSelected = "";
                    $("[name=subnationalSearch_text]").val("");
                    resultSubnational = [];
                }
            }
        });

        $(document).on("click", "[name=subnationalSearch_text]", function() {
            $("[name=subnationalSearch_text]").val("");
            $("#listSubnational").empty();
            $("#subnationalDropdown").removeClass("dropdown open");
        });

        function saveSubnationalLevel() {
            if (newResultSubnational.length === 0 && deleteSubnationalItems.length === 0) {
                $("div.vex-close").click();
                return false;
            }

            postUrlWithOptions(
                '@Url.Action("SaveRowSubnationalLevel", "View", new {area = "OPUS"})',{ async: false },
                {
                    newResultSubnational: newResultSubnational,
                    deleteSubnationalItems: deleteSubnationalItems
                })
                .done(function(data) {
                    if (data) {
                        $("div.vex-close").click();
                        resultSubnational = [];
                        deleteSubnationalItems = [];
                    }
                });
            return true;
        }

        $(document).on("click", "[name=deleteSubnationalItems]", function() {
            var countryRegion = $(this).closest('tr').find("#countryRegion label").text();
            var adminDistrict = $(this).closest('tr').find("#adminDistrict label").text();
            var locality = $(this).closest('tr').find("#locality label").text();

            $(this).closest('tr').remove();

            deleteSubnationalItems.push({
                countryRegion: countryRegion,
                adminDistrict: adminDistrict,
                locality: locality
            });
        });

        $(document).on("click", "div.vex-close", function() {
            deleteSubnationalItems = [];
            resultSubnational = [];
        });

	function delegatorMessage(message, state, opNumber) {
    	if (state === "True") {
        	infoBar(message + ": " + opNumber, 10000, true);
    	}
	}


        function loadDataTabStrategyAligment(){
            $("#tabStrAligData").empty();
            showLoader();
            $.ajax({
                url: '@Url.Action("StrategicAlignmentDataContent", "View", new { area = "OPUS" })',
                cache: false,
                async: true,
                type: 'POST',
                dataType: 'html',

            }).done(function (data) {
                $('#tabStrAligData').html(data);
                initialState();
                hideLoader();
            });
        }

        function loadDataTabResponsibilityData(){
            $("#tabResponsibilityData").empty();
            showLoader();
            $.ajax({
                url: '@Url.Action("OperationResponsabilityContent", "View", new { area = "OPUS" })',
                cache: false,
                async: true,
                type: 'POST',
                dataType: 'html'
            }).done(function (data) {
                $('#tabResponsibilityData').html(data);
                hideLoader();
            });
        }


        function loadDataTabClassificationData(){
            $("#tabClassificationData").empty();
            showLoader();
            $.ajax({
                url: '@Url.Action("OperationClassificationDataContent", "View", new { area = "OPUS" })',
                cache: false,
                async: true,
                type: 'POST',
                dataType: 'html'
            }).done(function (data) {
                $('#tabClassificationData').html(data);
                disableEnableTabs(false);
                loadingFunctions();
                attributGroupForce();
                applyStyleToRelationship();
                hideLoader();
            });
        }



        function loadDataTabClimateChange(){
            $("#tabClimateChange").empty();
            showLoader();
            $.ajax({
                url: '@Url.Action("ClimateChangeDataContent", "View", new { area = "OPUS" })',
                cache: false,
                async: true,
                type: 'POST',
                dataType: 'html',

            }).done(function (data) {
                $('#tabClimateChange').html(data);
                disableEnableTabs(false);
                hideLoader();
            });
            }


    function cancelCCES() {
        var msg = "@Localization.GetText("CCES.Delete.Message")";
        confirmAction(msg).done(function (pressOk) {
            if (pressOk) {
                showLoader();
                var container = $(".tab-pane.active");
                $.ajax({
                    url: '@Url.Action("RedirectToClimateChangeParcialRead", "View", new { area = "OPUS" })',
                    cache: false,
                    contentType: false,
                    processData: false,
                    async: true,
                    type: 'POST'
                }).done(function (data) {
                    container.empty();
                    container.append(data);
                    bindHandlers();
                    hideLoader();
                    $('[dd-tab]:not(.active)').removeClass('disabled');
                    $("[name='mitigation-sub-category']").each(function () {
                        var obj = $(this);
                        var subCategory = obj.find("span[name='mitigation-sub-category-text']");
                        var text = subCategory.text();
                        var tdAux = obj.next("td");
                        if (text.trim() == "") {
                            obj.addClass('hidden');
                            tdAux.removeClass('hidden');
                        }

                    });

                    $("[name='social-sub-category']").each(function () {
                        var obj = $(this);
                        var subCategory = obj.find("span[name='social-sub-category-text']");
                        var text = subCategory.text();
                        if (text.trim() == "") {
                            obj.addClass('hidden');
                        }

                    });

                    $("[name='adaptation-sub-category']").each(function () {
                        var obj = $(this);
                        var subCategory = obj.find("span[name='adaptation-sub-category-text']");
                        var text = subCategory.text();
                        if (text.trim() == "") {
                            obj.addClass('hidden');
                        }

                    });
                });
            }
        });
    }

    function loadChild(source, objTR, valueSelect) {
        showLoader();
        var parentId = parseInt(valueSelect);
        $.ajax({
            url: '@Url.Action("LoadDropdownChilds", "View", new { area = "OPUS" })',
            cache: false,
            async: true,
            type: 'POST',
            dataType: 'json',
            data: { 'parentId': parentId }
        }).done(function (data) {
            var dataList = $.map(data, function(item) {
                return "<li><a dd-value=" + item.Value + ">" + item.Text + "</a></li>";
            });
            dataList.unshift("<li><a dd-value>(select option)</a></li>");
            if (source == "CCMitigation") {
                objTR.next("tr").find("ul[aria-labelledby^='id-CCMitigationSub']").html(dataList.join(""));
                objTR.next("tr").find("ul[aria-labelledby^='id-CCMitigationSub']").
                closest('div.dropdown').find('button').FirstorDefault();
            } else if (source == "CCAdaptation") {
                objTR.next("tr").next("tr").find("ul[aria-labelledby^='id-AdaptationSubCategory']").html(dataList.join(""));
                objTR.next("tr").next("tr").find("ul[aria-labelledby^='id-AdaptationSubCategory']").
                closest('div.dropdown').find('button').FirstorDefault();
            } else if (source == "SocialSustainability") {
                objTR.next("tr").find("ul[aria-labelledby^='id-SocialSubCategory']").html(dataList.join(""));
                objTR.next("tr").find("ul[aria-labelledby^='id-SocialSubCategory']").
                closest('div.dropdown').find('button').FirstorDefault();
            }

            hideLoader();
        });
    }

    function newRowClimateChange(button) {
        var container = $("#" + button.attr('dd-table')).find('tbody');
        postUrlWithOptions(
            "@Url.Action("GetRowClimateChange", "View", new { area = "OPUS" })", { async: false })
    .done(function(data) {
        if ($(container).find('td.dataTables_empty').length > 0) {
            $(container).find('tr').remove();
        }
        $(container).append(data);
        enterEditMode(false, $(container), false);
        bindHandlers();
    });
    }

    var message_yes = "@Html.Raw(@Localization.GetText("CCES.Text.Yes"))";

    var message_warning = "@Localization.GetText("CCES.Warning.Notification")";

     $(document).on('click', '[id="buttonESG"]', function () {
            confirmAction(message_warning).done(function(pressOk) {
                if (pressOk) {
                    $('[data-idb-fieldname=ddlTrackedESG]').find('label').text(message_yes);
                    $('#warningESG').remove();
                }
              });
      });
      $(document).on('click', '[id="buttonCCS"]', function () {
            confirmAction(message_warning).done(function(pressOk) {
                if (pressOk) {
                    $('[data-idb-fieldname=ddlTrackedCCS]').find('label').text(message_yes);
                    $('#warningCCS').remove();
                }
            });
        });

        $(document).on('click', '[name="cancel-climate-change"]', function () {
            cancelCCES();
        });

        function editClimateChange() {
            showLoader();
            var container = $(".tab-pane.active");
            $.ajax({
                url: '@Url.Action("RedirectToClimateChangeParcialEdit", "View", new { area = "OPUS" })',
            cache: false,
            contentType: false,
            processData: false,
            async: true,
            type: 'POST'
        }).done(function (data) {
            container.empty();
            container.append(data);
            bindHandlers();
            hideLoader();
            $('[dd-tab]:not(.active)').addClass('disabled');
            $("input[name='CCMitigation']").each(function () {
                var objTR = $(this).parents().closest("tr");
                var trId = objTR.attr("data-id");
                var childElements = $("[data-row-parent-id="+trId+"]");
                var valueSelect = $(this).val();
                var nameId = objTR.next("tr").find("td[id^='CCMitigationSub-']");
                var tdAux = objTR.next("tr").find("td[id^='CCMitigationSubAux']");
                var trName = objTR.next("tr");
                if (valueSelect == '') {
                    nameId.addClass('hidden');
                    tdAux.removeClass('hidden');
                }

            });

            $("input[name='SocialSustainability']").each(function () {
                var objTR = $(this).parents().closest("tr");
                var trId = objTR.attr("data-id");
                var valueSelect = $(this).val();
                var nameId = objTR.next("tr").find("td[id^='SocialSubCategory-']");
                var tdAux = objTR.next("tr").find("td[id^='CCMitigationSubAux']");
                var trName = objTR.next("tr");
                var ccMitigation = objTR.next("tr").find("td[id^='CCMitigationSub-']");
                if (valueSelect == '') {
                    nameId.addClass('hidden');
                }
            });
            $("input[name='CCAdaptation']").each(function () {
                var objTR = $(this).parents().closest("tr");
                var trId = objTR.attr("data-id");
                var valueSelect = $(this).val();
                var nameId = objTR.next("tr").next("tr").find("td[id^='AdaptationSubCategory-']");
                var trName = objTR.next("tr").next("tr");
                if (valueSelect == '') {
                    nameId.addClass('hidden');
                }
            });
        });
    }

    $(document).on('click', '[name="edit-ClimateChange"]', function () {
        editClimateChange();
    });

    var flagCCMitigationSub = false;
    var flagSocialSubCategory = false;

    $(document).on('change', "input[name='CCMitigationSub']", function () {
        var valueSelect = $(this).val();
        if (valueSelect == '') {
            $(this).attr("data-force-parsley-validation", "true");
            $(this).attr("data-parsley-required", "true");
        } else {

        }
    });

    $(document).on('change', "input[name='AdaptationSubCategory']", function () {
        var valueSelect = $(this).val();
        if (valueSelect == '') {
            $(this).attr("data-force-parsley-validation", "true");
            $(this).attr("data-parsley-required", "true");
        } else {

        }
    });

    $(document).on('change', "input[name='SocialSubCategory']", function () {
        var valueSelect = $(this).val();
        if (valueSelect == '') {
            $(this).attr("data-force-parsley-validation", "true");
            $(this).attr("data-parsley-required", "true");
        } else {

        }
    });

    $(document).on('change', "input[name='CCMitigation']", function () {
        var objTR = $(this).parents().closest("tr");
        var trId = objTR.attr("data-id");
        var mitigationChild = $("#CCMitigationSub-" + trId);
        var childElements = $("[data-row-parent-id="+trId+"]");
        var valueSelect = $(this).val();
        var nameId = objTR.next("tr").find("td[id^='CCMitigationSub-']");
        var tdAux = objTR.next("tr").find("td[id^='CCMitigationSubAux']");
        var trName = objTR.next("tr");
        if (valueSelect == '') {
            nameId.addClass('hidden');
            mitigationChild.find("input").val("");
            mitigationChild.find("input").attr("data-force-parsley-validation", "false");
            mitigationChild.find("input").attr("data-parsley-required", "false");
            tdAux.removeClass('hidden');
            flagCCMitigationSub = false;
        } else {
            trName.removeClass('hidden');
            mitigationChild.find("input").attr("data-force-parsley-validation", "true");
            mitigationChild.find("input").attr("data-parsley-required", "true");
            tdAux.addClass('hidden');
            nameId.removeClass('hidden');
            flagCCMitigationSub = true;
            var element = objTR.find("button[class='buttonShowRow']");
            expandRow(element);
            loadChild("CCMitigation", objTR, valueSelect);
        }
    });
    $(document).on('change', "input[name='SocialSustainability']", function () {
        var objTR = $(this).parents().closest("tr");
        var trId = objTR.attr("data-id");
        var socialChild = $("#SocialSubCategory-" + trId);
        var valueSelect = $(this).val();
        var nameId = objTR.next("tr").find("td[id^='SocialSubCategory-']");
        var tdAux = objTR.next("tr").find("td[id^='CCMitigationSubAux']");
        var trName = objTR.next("tr");
        var ccMitigation = objTR.next("tr").find("td[id^='CCMitigationSub-']");
        if (valueSelect == '') {
            socialChild.find("input").val("");
            socialChild.find("input").attr("data-force-parsley-validation", "false");
            socialChild.find("input").attr("data-parsley-required", "false");
            nameId.addClass('hidden');
            flagSocialSubCategory = false;
        } else {
            trName.removeClass('hidden');
            nameId.removeClass('hidden');
            socialChild.find("input").attr("data-force-parsley-validation", "true");
            socialChild.find("input").attr("data-parsley-required", "true");
            if(ccMitigation.hasClass("hidden"))
            {
                tdAux.removeClass('hidden');
            }
            flagSocialSubCategory = true;
            var element = objTR.find("button[class='buttonShowRow']");
            expandRow(element);
            loadChild("SocialSustainability", objTR, valueSelect);
        }

    });
    $(document).on('change', "input[name='CCAdaptation']", function () {
        var objTR = $(this).parents().closest("tr");
        var trId = objTR.attr("data-id");
        var adaptationChild = $("#AdaptationSubCategory-" + trId);
        var valueSelect = $(this).val();
        var nameId = objTR.next("tr").next("tr").find("td[id^='AdaptationSubCategory-']");
        var trName = objTR.next("tr").next("tr");
        if (valueSelect == '') {
            adaptationChild.find("input").val("");
            adaptationChild.find("input").attr("data-force-parsley-validation", "false");
            adaptationChild.find("input").attr("data-parsley-required", "false");
            nameId.addClass('hidden');
        } else {
            nameId.removeClass('hidden');
            adaptationChild.find("input").attr("data-force-parsley-validation", "true");
            adaptationChild.find("input").attr("data-parsley-required", "true");
            var element = objTR.find("button[class='buttonShowRow']");
            expandRow(element);
            loadChild("CCAdaptation", objTR, valueSelect);
        }
    });

    $(document).on('change', '#LendingType', updateSectorDropdown);

    function expandRow(element)
    {
        var id = $(element).closest('tr').attr("data-id");
        var row = $(element).closest('tbody').find('[data-row-parent-id="' + id + '"]');
        var isButton = $(element).is('.icon');
        var tempTexp;
        var label;
        var colapsable;
        var rowExpandido;

        row.removeClass('hide');
        row.removeClass('hidden');
            if (!$(element).is('.active')) {
                row.addClass('showChildRow');
                $(element).addClass("active");

                $(element).closest('tr').addClass('lineup');
                $(row).last().addClass('linedown');

                if ($(document).find('[dd-contenedor="' + $(element).closest('table').attr('id') + '"]').length > 0) {
                    rowExpandido = true;
                    $(element).closest('tbody').find('button.buttonShowRow').each(function () {
                        if (!$(this).is('.active')) {
                            rowExpandido = false;
                        }
                    });

                    if (rowExpandido) {
                        colapsable = $(document).find('[dd-contenedor="' + $(element).closest('table').attr('id') + '"]');
                        if (!colapsable.is('.collapse')) {
                            colapsable.addClass('collapse');
                            label = colapsable.find('label[dd-value]');
                            tempTexp = label.text();
                            $(label).text($(label).attr('dd-value'));
                            $(label).attr('dd-value', tempTexp);
                        }
                    }
                }
            }
    }

    $(document).on('click', '[name="removeRowCCES"]', function () {

        var msg = '@Localization.GetText("CCES.Delete.Message")';
        var objTR = $(this).parents().closest("tr");
        var trId = objTR.attr("data-id");
        var childElements = $("[data-row-parent-id= " + trId + "]");
        var isNewElement = objTR.attr("data-row");
        confirmAction(msg).done(function(pressOk) {
            if (pressOk) {
                if(isNewElement != 'new-row')
                {
                    $.ajax({
                        type: "POST",
                        async: true,
                        url: "@Url.Action("RemoveCCES", "View", new { area = "Opus" })",
                        data: {rowId:trId}
                    }).done(function(){
                        if ($('#climateChangeTable').find('tbody').find('tr').length > 1) {
                            objTR.remove();
                            childElements.remove();
                        } else {
                            showMessage("@Localization.GetText("OP.RP.ControlInformation.MessageErrorDeleteRowRule")");
                        }
                    });
                }
                else
                {
                    if ($('#climateChangeTable').find('tbody').find('tr').length > 1) {
                        objTR.remove();
                        childElements.remove();
                    } else {
                        showMessage("@Localization.GetText("OP.RP.ControlInformation.MessageErrorDeleteRowRule")");
                    }
                }
            }
        });

    });

    function addJustification(source) {
        var element = source.closest('tr').prev().find('#justificationRow');
        element.append(commentBox);
        $('#UserAction').val(1);
    }

    function save() {
        var flag = true;
        $('#CITable tr:not(:first)').each(function() {
            var controlPermissionSelect = $(this).find('[name="IDControlPermissionRow"]').attr('value');
            var fieldSelect = $(this).find('[name="FieldRow"]').attr('value');
            var pageSelect = $(this).find('[name="PageRow"]').attr('value');
            var countrySelect = $(this).find('ul.dropdown-menu[aria-labelledby="id-CountryRow"] a[dd-selected]').attr('dd-value');
            var divisionSelect = $(this).find('ul.dropdown-menu[aria-labelledby="id-DivisionRow"] a[dd-selected]').attr('dd-value');
            var operationTypeSelect = $(this).find('ul.dropdown-menu[aria-labelledby="id-OperationTypeRow"] a[dd-selected]').attr('dd-value');
            var operationStatusSelect = $(this).find('ul.dropdown-menu[aria-labelledby="id-OperationStatusRow"] a[dd-selected]').attr('dd-value');
            var count = 0;
            $('#CITable tbody tr').each(function() {
                var controlPermissionIterated = $(this).find('[name="IDControlPermissionRow"]').attr('value');
                var fieldIterated = $(this).find('[name="FieldRow"]').attr('value');
                var pageIterated = $(this).find('[name="PageRow"]').attr('value');
                var countryIterated = $(this).find('ul.dropdown-menu[aria-labelledby="id-CountryRow"] a[dd-selected]').attr('dd-value');
                var divisionIterated = $(this).find('ul.dropdown-menu[aria-labelledby="id-DivisionRow"] a[dd-selected]').attr('dd-value');
                var operationTypeIterated = $(this).find('ul.dropdown-menu[aria-labelledby="id-OperationTypeRow"] a[dd-selected]').attr('dd-value');
                var operationStatusIterated = $(this).find('ul.dropdown-menu[aria-labelledby="id-OperationStatusRow"] a[dd-selected]').attr('dd-value');
                if (controlPermissionSelect !== controlPermissionIterated) {
                    if (fieldSelect === fieldIterated && pageSelect === pageIterated && countrySelect === countryIterated &&
                        divisionSelect === divisionIterated && operationTypeSelect === operationTypeIterated && operationStatusSelect === operationStatusIterated) {
                        count = count + 1;
                        if (count > 1) {
                            $(this).css('background-color', '#f00');
                            flag = false;
                        }
                    }
                }
            });
            countryForValidate = $(this).find('td:nth-child(3) .search-choice-close').attr('data-option-array-index');
            divisionForValidate = $(this).find('td:nth-child(4) .search-choice-close').attr('data-option-array-index');
            opTypeForValidate = $(this).find('td:nth-child(5) .search-choice-close').attr('data-option-array-index');
            opStatusForValidate = $(this).find('td:nth-child(6) .search-choice-close').attr('data-option-array-index');
            if (countryForValidate === undefined && divisionForValidate === undefined && opTypeForValidate === undefined && opStatusForValidate === undefined) {
                var msMulti = '@Localization.GetText("OP.RP.ControlInformation.msgNewRuleMultiselect")';
                showMessage(msMulti);
                flag = false;
            }
        });
        if (flag) {
            var modelSerialized = '#hidViewModel';
            var response = saveContainer($('#PageContent'), modelSerialized, false, $('headerButtons'), null, false);

            if (response !== false) {
                response.done(function(data) {
                    if (data.IsValid === true) {
                        $("[data-action='searchControlInformationFilter']").trigger('click');

                        cclipOperationsData.UpdateSectorsSubsectorsInputs();

                        publicPrivatePartnership.UpdatePublicPrivatePartnershipAttributeVisibility();
                    } else {
                        showMessage(data.ErrorMessage);
                    }
                });
            }
        }
    }

    function saveNewRuleControlInformation() {
        var modelSerialized = '#hidModalModel';
        if (validateContainer($('#PageContentModal')) && validateNewRule()) {
            var response = saveContainer($('#PageContentModal'), modelSerialized, false, $('buttonNewRole'), null, false);
            if (response !== false) {
                response.done(function(data) {
                    if (data.ErrorMessage == null || data.ErrorMessage === "") {
                        var searchPermissionId = isNaN(parseInt($("[name='NewPermission']").val())) ? 0 : parseInt($("[name='NewPermission']").val());
                        var searchPageId = isNaN(parseInt($('[name="NewPage"]').val())) ? 0 : parseInt($('[name="NewPage"]').val());

                        var searchCountryId = $('[name="NewCountry"]').val();
                        if (searchCountryId === null || searchCountryId === undefined) {
                            searchCountryId = "";
                        } else {
                            searchCountryId = searchCountryId.join(',');
                        }
                        var searchDivisionId = $('[name="NewDivision"]').val();
                        if (searchDivisionId === null || searchDivisionId === undefined) {
                            searchDivisionId = "";
                        } else {
                            searchDivisionId = searchDivisionId.join(',');
                        }
                        var searchOperationType = $('[name="NewOperationType"]').val();
                        if (searchOperationType === null || searchOperationType === undefined) {
                            searchOperationType = "";
                        } else {
                            searchOperationType = searchOperationType.join(',');
                        }
                        var searchOperationStatus = $('[name="NewOperationStatus"]').val();
                        if (searchOperationStatus === null || searchOperationStatus === undefined) {
                            searchOperationStatus = "";
                        } else {
                            searchOperationStatus = searchOperationStatus.join(',');
                        }

                        filterTableControlInformation(searchPermissionId, searchPageId, searchCountryId, searchDivisionId, searchOperationType, searchOperationStatus);
                        vex.close();
                    } else {
                        showMessage(data.ErrorMessage);
                    }
                });
            }
        }
    }

    function SaveClimate(){
        var trackedByESG =  $($("[data-idb-fieldname='ddlTrackedESG']").find("label")).text();
        var trackedByCCS =  $($("[data-idb-fieldname='ddlTrackedCCS']").find("label")).text()
        var ccesId = $("[data-cces-id]");
        var originalIDBAmount = $("[name='Amount']");
        var climateChangeMitigationSubId = $("[name='CCMitigationSub']");
        var climateChangeAdaptationSubId = $("[name='AdaptationSubCategory']");
        var environmentId = $("[name='Environment']");
        var disasterRiskManagmentId = $("[name='DisasterRiskManagement']");
        var socialSustainabilitySubId = $("[name='SocialSubCategory']");
        var justificationUser = $("[name='JustificationUser']");
        var justificationDate = $("[name='JustificationDate']");
        var justification = $("[name='justificationClimate']");
        var modelTable = new Array();
        var modelData = {
            TrackedByESG :trackedByESG,
            TrackedByCCS :trackedByCCS
        }
        var sum = 0;
        var message_warning_category = "@Localization.GetText("CCES.Warning.Save.Category")";
        var rowEmpty = 0;
        var message_warning_exceed = "@Localization.GetText("CCES.Warning.Exceed")";
        $("[name='CCMitigation']").each(function () {
            var obj = $(this);
            var rowId = obj.closest("tr").attr("data-id");
            var buttonCollapse = obj.closest("tr").find("button[class^='buttonShowRow']");
            var child = obj.closest("tr").parent().find("tr[id='CCMitigationSubTR-" + rowId +"']");
            var childValue = child.find("input[name='CCMitigationSub']").val();
            if (obj.val().trim() != "" && childValue.trim() == "") {
                expandRow(buttonCollapse);
            }
        });
        $("[name='CCAdaptation']").each(function () {
            var obj = $(this);
            var rowId = obj.closest("tr").attr("data-id");
            var buttonCollapse = obj.closest("tr").find("button[class^='buttonShowRow']");
            var child = obj.closest("tr").parent().find("tr[id='AdaptationSubCategoryTR-" + rowId +"']");
            var childValue = child.find("input[name='AdaptationSubCategory']").val();
            if (obj.val().trim() != "" && childValue.trim() == "") {
                expandRow(buttonCollapse);
            }
        });
        $("[name='SocialSustainability']").each(function () {
            var obj = $(this);
            var rowId = obj.closest("tr").attr("data-id");
            var buttonCollapse = obj.closest("tr").find("button[class^='buttonShowRow']");
            var child = obj.closest("tr").parent().find("tr[id='CCMitigationSubTR-" + rowId +"']");
            var childValue = child.find("input[name='SocialSubCategory']").val();
            if (obj.val().trim() != "" && childValue.trim() == "") {
                expandRow(buttonCollapse);
            }
        });
        $("[name='justificationClimate']").each(function () {
            var obj = $(this);
            var rowId = obj.parents().closest('tr').attr("data-row-parent-id");
            var buttonCollapse = obj.parents().closest('tr').parent().find("tr[data-id='"+ rowId + "']").find("button[class^='buttonShowRow']");
            if (obj.val().trim() == "") {
                expandRow(buttonCollapse);
            }
        });
        $("[name='Amount']").each(function () {
            sum += parseFloat($(this).val());
        });
        for(x = 0;x <= originalIDBAmount.length-1;x++){
            modelTable.push({
                CCESId : $(ccesId[x]).data("cces-id"),
                OriginalIDBAmount : originalIDBAmount[x].value,
                ClimateChangeMitigationSubId : climateChangeMitigationSubId[x].value,
                ClimateChangeAdaptationSubId : climateChangeAdaptationSubId[x].value,
                EnvironmentId : environmentId[x].value,
                DisasterRiskManagmentId : disasterRiskManagmentId[x].value,
                SocialSustainabilitySubId : socialSustainabilitySubId[x].value,
                JustificationUser : $(justificationUser[x]).text(),
                JustificationDate : $(justificationDate[x]).text(),
                Justification : $(justification[x]).text()
            })
        }

        for(x = 0;x <= originalIDBAmount.length-1;x++){

            if(climateChangeMitigationSubId[x].value == "" && climateChangeAdaptationSubId[x].value == "" &&
                environmentId[x].value == "" && disasterRiskManagmentId[x].value == "" &&
                socialSustainabilitySubId[x].value == ""){
                rowEmpty++;
            }

            if (originalIDBAmount[x].value == "")
                originalIDBAmount[x].value == "0.00";
        }

        if(sum > 100.0)
        {
            confirmAction(message_warning_exceed);
        }
        else  if (rowEmpty > 0){
            confirmAction(message_warning_category);
            validateContainer($(".tab-pane.active"));
        }
        else if (validateContainer($(".tab-pane.active")))
        {
            showLoaderOptional();
            $.ajax({
                type: "POST",
                async: true,
                url: "@Url.Action("SaveClimate", "View", new { area = "Opus" })",
                data: {modelData:modelData,modelTable:modelTable}
            }).done(function(data){
                var container = $(".tab-pane.active");
                $.ajax({
                    url: '@Url.Action("RedirectToClimateChangeParcialRead", "View", new { area = "OPUS" })',
                    cache: false,
                    contentType: false,
                    processData: false,
                    async: true,
                    type: 'POST'
                }).done(function (data) {
                    container.empty();
                    container.append(data);
                    bindHandlers();
                    hideLoaderOptional();
                    $('[dd-tab]:not(.active)').removeClass('disabled');
                    $("[name='mitigation-sub-category']").each(function () {
                        var obj = $(this);
                        var subCategory = obj.find("span[name='mitigation-sub-category-text']");
                        var text = subCategory.text();
                        var tdAux = obj.next("td");
                        if (text.trim() == "") {
                            obj.addClass('hidden');
                            tdAux.removeClass('hidden');
                        }

                    });

                    $("[name='social-sub-category']").each(function () {
                        var obj = $(this);
                        var subCategory = obj.find("span[name='social-sub-category-text']");
                        var text = subCategory.text();
                        if (text.trim() == "") {
                            obj.addClass('hidden');
                        }

                    });

                    $("[name='adaptation-sub-category']").each(function () {
                        var obj = $(this);
                        var subCategory = obj.find("span[name='adaptation-sub-category-text']");
                        var text = subCategory.text();
                        if (text.trim() == "") {
                            obj.addClass('hidden');
                        }

                    });
                });
            });
        }
    }

        function hideOrShowRegionRelevanceOperation(){
            var isIncludeOpr = $('input[name=hiddenIndicativePipelines]').val();
            if (isIncludeOpr != undefined)
            {
                var isOperationOpr = $('input[name=hiddenIsOperationOpr]').val();

                if((isIncludeOpr === "False") &&
                    !$('input[name=objectivesAligned]').prop("checked") &&
                    !(isOperationOpr === "False"))
                {
                    $("div[name=regionRelevanceOperation]").removeClass('hide');
                    setValidationRequired ("true");
                }
                else
                {
                    $("div[name=regionRelevanceOperation]").addClass('hide');
                    setValidationRequired ("false");
                }
            }
        }

        function initialRegionRelevance(){
            var isIncludeOpr = $('input[name=hiddenIndicativePipelines]').val();

            if ('@Model.StrategicAlignment.IsCountryStrategyAlignmentIncluded' == 'True') {
                setValidationRequired ("false");
            }
            else if (isIncludeOpr != undefined)
            {
                if ($('input[name=objectivesAligned]').prop("checked") == 'True' || $('input[name=objectivesAligned]').prop("checked") == undefined) {
                    setValidationRequired ("false");
                }
                else
                {
                    setValidationRequired ("true");
                }
            }
        }

        function thereAreDuplicatedUsersInTeamData(tableArray) {
            var tableArrayFullLength = tableArray.length;
            var tableArrayWithoutDuplicated = $.unique(tableArray).length;

            return tableArrayWithoutDuplicated < tableArrayFullLength;
        }

        function setValidationRequired (value) {
            var relevanceAreaEn = $("textarea[name=enRelevanceArea]");
            var relevanceAreaEs = $("textarea[name=esRelevanceArea]");

            relevanceAreaEn.attr("data-force-parsley-validation", value);
            relevanceAreaEn.attr("data-parsley-required", value);

            relevanceAreaEs.attr("data-force-parsley-validation", value);
            relevanceAreaEs.attr("data-parsley-required", value);
        }

        function prepareObjetiveFieldCip() {

            var operationCode = $('#cntOpType > label').text().substring(0, 3);

            if (operationCode == "@OperationType.CIP") {

                var objetivesContent = $("[data-idb-fieldname='tblObjName']");

                objetivesContent.find("span[class='asteriskColor']")
                    .remove();
                objetivesContent.find('[data-parsley-required]')
                    .removeAttr('data-parsley-required');
            }
        }

        function editModeHideFieldsOperationTypeEFC(operationType) {
            if (operationType == '@OperationType.EFC') {
                var countryDeparmentDropdown = $('#id-countryDepartmentId');
                var sectorDropdown = $('#id-sector');
                var subsectorDropdown = $('#id-subsector');
                var sectorLabel = $('#cntsubSector');
                var subSectorLabel = $('#cntSector');
                var countryDepartmentLabel = $('#cntCountryDept');
                var relatedOperationsSection = $('#OperationDataRelatedOperations');

                countryDeparmentDropdown.hide();
                sectorDropdown.hide();
                subsectorDropdown.hide();
                sectorLabel.hide();
                subSectorLabel.hide();
                countryDepartmentLabel.hide();
                relatedOperationsSection.hide();
            }
        }

        function readModeHideFieldsOperationTypeEFC(operationType) {
            if (operationType == '@OperationType.EFC') {
                var sectorSection = $('[data-idb-fieldname=ddlSector]');
                var subSectorSection = $('[data-idb-fieldname=ddlSubSector]');
                var countryDepartmentSection = $('[data-idb-fieldname=ddlCountryDepartment]');
                var subnationalLevelSection = $('[data-idb-fieldname=subnational]');
                var relatedOperationsSection = $('[data-idb-fieldname=opRelated]');
                var countryGroupSection = $('[data-idb-fieldname=ddlCountryGroup]');

                sectorSection.hide();
                subSectorSection.hide();
                countryDepartmentSection.hide();
                subnationalLevelSection.hide();
                relatedOperationsSection.hide();
                countryGroupSection.hide();
            }
        }

        function removeInstitutionUSIdbTrashButton(operationType) {
            if (operationType == '@OperationType.EFC') {
                $("#associatedInstitutionsTable tr:contains('@ClauseConstants.ACRNM_US_IDB')")
                    .find('.buttonTrash').remove();
            }
        }

        function institutionEFCController() {
            clearInstitution();

            if (hasIICInterAmericanInvestmentCorp())
                saveAsocInstitution(@Model.ExecutingAgencyRoleId, @Model.UsIICInstitutionId);
            else
                saveAsocInstitution(@Model.ExecutingAgencyRoleId, @Model.UsIdbInstitutionId);

            removeInstitutionUSIdbTrashButton(operationType);
        }

        function hasIICInterAmericanInvestmentCorp() {
            if (operationType != '@OperationType.EFC')
                return false;

            var hasIICInterAmericanInvestmentCorp = false;

            $('#responsibleUnitsTable tbody tr').each(function() {
                var $row = $(this);
                var rowIdOrganizationalUnit =
                    $row.find('[aria-labelledby=id-responsibleUnitsOrganizationalUnit] a[dd-selected]')
                        .attr('dd-value');
                var rowIdRole = $('#responsibleUnitsRole').val();

                if(rowIdOrganizationalUnit == "@Model.OrgUnitIICId" &&
                    rowIdRole == "@Model.ResponsibleRoleId") {
                    hasIICInterAmericanInvestmentCorp = true;
                    return false;
                }
            });

            return hasIICInterAmericanInvestmentCorp;
        }

        function clearInstitution(){
            var $institutionTr = $("#associatedInstitutionsTable tbody tr");
            var roleId = @Model.ExecutingAgencyRoleId;

            if($institutionTr.length > 0){
                $institutionTr.find("td[data-role]").each(function(){
                    if($(this).data("role") === roleId){
                        $(this).closest("tr").remove();
                    }
                });
            }
        }

    </script>
}

<script type="text/javascript">
    $('[name="' + cclipOperationsData.MultiSectorAttribName + '"]').find('[value='+ cclipOperationsData.MultipleSectorId +']').hide();
</script>