@using IDB.Architecture.ApplicationParameter;
@using IDB.MVCControls.General.Helpers;
@using IDB.MW.Domain.Values;

@model IDB.MW.Application.OPUSModule.ViewModels.CreationFormService.CreationFormViewModel
@{
    ViewBag.showLoader = true;
    ViewBag.Title = @Localization.GetText("TC.Header.Title").HtmlEncode();
    Layout = "~/Areas/OPUS/Views/Shared/_LayoutPreRelease.cshtml";
}

@if (ViewBag.CreationOperation == false)
{
    <input hidden data-idb-pagename="UI-CA-001-basicdata" />
    <input hidden data-idb-pagename="UI-CA-001-objetivesoperation" />
    <input hidden data-idb-pagename="UI-CA-001-organizationalunit" />
    <input hidden data-idb-pagename="UI-CA-001-responsabilitydata" />
    <input hidden data-idb-pagename="UI-CA-001-institutionrelated" />
    <input hidden data-idb-pagename="UI-CA-001-Financingdata" />
    <input hidden data-idb-pagename="UI-CA-001" />
    <input hidden data-idb-pagename="UI-CA-002-NewRelatedOperationModal" />
    <input hidden data-idb-pagename="UI-CA-003-NewAssociatedInstitution" />
    <input hidden data-idb-pagename="OperationDataBasicDataPartial" />
    <input hidden data-idb-pagename="UI-OPE-003Partial-TabClassificationData" />
}

<div class="header">
    <div class="row">
        <div class="col-md-12">
            <span class="text-right">
                @Html.Partial("Partials/CreationForm/buttons")
            </span>
            @Confluence.LabelMainTitle(Localization.GetText("OP.CR.CreationForm.Creation"))
        </div>
    </div>
</div>

<div class="page">
    <div id="PageContent"
         data-parsley-validate="data-parsley-validate"
         data-parsley-excluded="[disabled]"
         data-loadurl="@Url.Action(ViewBag.CreationOperation == true ?
             "CreateCreationFormContent" :
             "CreationFormContent", "View", new { area = "OPUS" })"
         data-url="@(ViewBag.CreationOperation == true ?
             Url.Action("CreationForm", "Save", new { area = "OPUS", operationNumber = Model.OperationNumber }) :
             Url.Action("CreationForm", "Save", new { area = "OPUS" }))">
        @Html.Partial("Partials/CreationForm/CreationFormPartial", Model)
        <div class="hidden" data-pagemode="edit">
            <input type="Hidden"
                   id="isGoingToSaveOnly-model-property"
                   name="isGoingToSaveOnly"
                   value="false" />
        </div>
    </div>
</div>

<div class="header">
    <input type="Hidden" id="operationTypeAux" value="@Model.BasicData.OperationType">
    <div class="row row-title">
        <div class="col-md-12">
            <span class="text-right">
                @Html.Partial("Partials/CreationForm/buttons")
            </span>
        </div>
    </div>
</div>

<div data-id="ModalRegion">
    <button data-id="butttonNewRelatedOperationModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newRelatedOperationModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.CR.RelatedOperation.Header.Title")"
            data-custom-modal-validate="false"
            data-custom-buttons='["save", "cancel"]'
            data-custom-button-save-id="send"
            data-custom-button-save="@Localization.GetText("OP.CR.RelatedOperation.Footer.Save")"
            data-custom-button-save-style="buttonBlue"
            data-custom-button-save-callback="relatedOperationSave"
            data-custom-button-save-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("OP.CR.RelatedOperation.Footer.Cancel")"
            data-custom-button-cancel-style="buttonLink"
            data-custom-button-cancel-callback=""
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>

    <div id="newRelatedOperationModal" class="hide modalBody"></div>

</div>

<div data-id="ModalRegionTwo">
    <button data-id="butttonNewInstitutionModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newInstitutionModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("op.cr.newinstitution.header.title")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "save"]'
            data-custom-button-save-id="send"
            data-custom-button-save="@Localization.GetText("op.cr.newinstitution.request")"
            data-custom-button-save-style="buttonBlue"
            data-custom-button-save-callback="institutionSave"
            data-custom-button-save-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("op.cr.newinstitution.cancel")"
            data-custom-button-cancel-style="buttonLink"
            data-custom-button-cancel-callback=""
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="newInstitutionModal" class="hide modalBody"></div>
</div>

<div data-id="ModalRegionThree">
    <button data-id="buttonNewAscInstitutionModal" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="newAscInstitutionModal"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.CR.NewAscInstitution.Title")"
            data-custom-modal-validate="false"
            data-custom-buttons='["cancel", "save"]'
            data-custom-button-save-id="send"
            data-custom-button-save="@Localization.GetText("OP.CR.NewAscInstitution.Save")"
            data-custom-button-save-style="buttonBlue"
            data-custom-button-save-callback="newInstitution"
            data-custom-button-save-closeatend="true"
            data-custom-button-cancel-id="cancel"
            data-custom-button-cancel="@Localization.GetText("OP.CR.NewAscInstitution.Cancel")"
            data-custom-button-cancel-style="buttonLink"
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>
    <div id="newAscInstitutionModal" class="hide modalBody"></div>
</div>

<div data-id="ModalRegionFour">
    <button data-id="butttonsubnationalLevel" class="hide"
            data-modal-allowclose="true"
            data-custom-modal="subnationalLevelContent"
            data-custom-modal-style=""
            data-custom-modal-title="@Localization.GetText("OP.CR.SubnationalLevel")"
            data-custom-modal-validate="false"
            data-custom-modal-onclose="addNewRelatedOperation"
            data-custom-modal-closeonoverlayclick="false"></button>

    <div id="subnationalLevelContent" class="hide modalBody">
    </div>
    @Confluence.InputHidden(Model.CipOperationId.ToString(), "CIPCode")
</div>

@Scripts.Render("~/bundles/Modules/Opus/opus.js")

@section scripts{

    @ModuleScriptsOpus.CreationOperationScripts(Html, Url)

    @ModuleScriptsOpus.NewInstitutionScripts(Html, Url)

    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Task/ForClientTasks.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/relatedOperations.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/teamLeaders.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/cclipOperationsHandlers.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/mifOperationalProgUnit.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Opus/publicPrivatePartnershipHandlers.js")"></script>
    <script type="text/javascript">

        var actionOperationGlobal = "";
        var actionCountryGlobal = "";
        var operationCode = "";
        var otherSectorId = @ViewBag.OtherSectorId;
        var sgId = @ViewBag.SgId;
        var actionPlanCndId = @ViewBag.ActionPlanCndId;
        var operationSupportTaxonomyId = "@Model.BasicData.OpsTaxonomyIdTypeId";

        cclipOperationsData.Init(
            true,
            '@Model.SectorMultipleId',
            '@AttributeCode.CCLIP_MULTI_SECTOR',
            '@Model.SubSectorMultipleId',
            '@Model.OperationNumber',
            '@OPUSGlobalValues.NEW_OPERATION_NUMBER',
            '@Model.RelationshipTypeCclipSId',
            '@Model.RelationshipTypeCclipRId',
            '@Localization.GetText("OP.CR.CreationForm.Message.Cclip.ExecAgenSectorDeletionWarning")',
            '@Model.ExecutingAgencyRoleId',
            '@Model.FacilityTypeSectorialCclipId',
            '@Model.FacilityTypeMultisectICclipId',
            '@Model.FacilityTypeMultisectIICclipId',
            '@Model.ConOperationId',
            '@Model.FinancingYesId',
            '@Model.ConModalityCreditLineId',
            '');

        mifOperationalProgUnit.Init(
            ['@Model.ConOperatNsgCategSepId', '@Model.ConOperatNsgCategMifId'],
            ['@Model.MifOpuOperatNsgCategSmpId', '@Model.MifOpuOperatNsgCategMifId'],
            ['@Model.LonOperationId', '@Model.TcpOperationId', '@Model.IgrOperationId', '@Model.EquOperationId', '@Model.GuaOperationId'],
            '@Model.LendingTypeNsgId',
            '@Model.ConOperationId',
            '@Model.ResponsibleRoleId');

        publicPrivatePartnership.Init(
            '@Model.ConOperationId',
            '@Model.FinancingYesId',
            '@Model.PrgOperationId',
            [@Model.PppUnavailablePrgModalityIds]);

        $(document).on("click", "[aria-labelledby = 'id-FacilityType']", cclipOperationsData.UpdateSectorsSubsectorsInputs);

        $(document).on('click', '[aria-labelledby="id-PRGModality"]', publicPrivatePartnership.UpdatePublicPrivatePartnershipAttributeVisibility);

        $(document).on('mousedown', 'button#id-sector,button#id-CONModality,button#id-FacilityType', function () {
            setTimeout(
                cclipOperationsData.CheckFieldEditableByCclipConditions(this),
                100);
        });

        $(document).on(
            'mouseup',
            '[aria-labelledby="id-CONModality"],[aria-labelledby="id-MIFNSGInst"],[aria-labelledby="id-LendingType"],[aria-labelledby="id-Intruments"]',
            function () {
                setTimeout(
                    mifOperationalProgUnit.UpdateMifOpuOperationData,
                    cleanerObject.OrganizationalUnit(),
                    cleanerObject.AssociatedInstitutions(),
                    cleanerObject.FinancingData(), 100);
            });

        $(document).on('mousedown', 'ul.chosen-choices.cclipMultiSectorChosenChoices > li.search-choice > a', cclipOperationsData.ValidateMultiSectorModifiable);
        $(document).on('mousedown', 'ul.chosen-choices.cclipMultiSectorChosenChoices > li.search-field > input', cclipOperationsData.ValidateMultiSectorModifiable);
        $(document).on('mousedown', 'ul.chosen-results.cclipMultiSectorAvailableChoices > li', cclipOperationsData.ValidateMultiSectorModifiable);

        $(document).on('paste', '[name^=operationObjective]', function() {
            var $node = $(this);
            setTimeout(function () {
                var txt = $node.val();
                $node.val(txt.replace(/[\r\n]+/g, ''));
            }, 500);
        });

        $(document).on('keypress', '[name^=operationObjective]', function(evt) {
            if (evt.which == 13)
                evt.preventDefault();
        });

        $(document).ready(function() {

            $('ul[aria-labelledby="id-ReportingCycle"] li').each(function () {
                var isTCM = $(this).find('a').text();
                if (isTCM === "TCM") {
                    $(this).remove();
                }
            });

            @if (ViewBag.CreationOperation == true)
            {
                @: $(".ContenidoOcultable").hide();
                @: edit();
            }
            initializeGlobalLoader();
            if ('@ViewBag.HQOperation' === 'True') {
                isRegional();
                reloadLabels();
            }

            var countryText = $('#id-country span').text();
            if (countryText === "REGIONAL") {
                $('div#subnationalLevel').hide();
            }

            if ($('#SectionSectorSubsector').is(':hidden')) {
                $('#SectionSectorSubsector').show();
            }

            CONModality(true);

            $('td#fundTbdColumn').attr("hidden", "hidden");
            $('#fundTbdTitle').attr("hidden", "hidden");

            applyStyleToRelationship();

            $('[name="FinancingContainer"]').on('click', function() {
                CONModality();
            });

            controlPSGAttribute();

            if (isPsg()) {
                $('#gridExpectedIDB tbody tr').each(function() {
                    var donorHasValue = $(this).find('[name=selectedPsgDonors]').val() != null
                    controlFundList($(this), donorHasValue);
                });
            }

            if ('@Model.OperationNumber' != '@OPUSGlobalValues.NEW_OPERATION_NUMBER') {
                operationCode = $('#id-operationType span.valueText').text().substring(0, 3);

                setUnsetUIDataOperationTypeEFC();
            }

            cclipOperationsData.HideSectorSubSectorMultipleOption();

            @if (!(bool)ViewBag.CreationOperation)
            {
                @: cclipOperationsData.UpdateSectorsSubsectorsInputs();
            }

            mifOperationalProgUnit.SetInitialMifOpuOperationStatus();

            publicPrivatePartnership.SetInitialPublicPrivatePartnershipAttributeVisibility();

            updateSectorDropdown();

            $(document).on('click', '[aria-labelledby="id-TCTaxonomy"] a,[name=AdministrativeExpenses]', controlOPSTaxonomy);
        });

        function reloadLabels() {
            var countryText = $('#id-country').find('.valueText').text();
            if (countryText === "REGIONAL" || countryText === "BANKWIDE"){
                $('#CountryDeptDDL').removeAttr("hidden");
                $('#CountryDeptlbl').attr("hidden", "hidden");
                $('#CountryDeptlbl').find('label').text('');
            } else {
                var countryId = $('input[name="country"]').val();
                if (countryId !== ""){
                    $('#CountryDeptDDL').attr("hidden", "hidden");
                    $('#CountryDeptlbl').removeAttr("hidden");
                } else {
                    $('#CountryDeptDDL').removeAttr("hidden");
                    $('#CountryDeptlbl').attr("hidden", "hidden");
                }
            }
            var isESW = $('#id-operationType').find('.valueText').text();
            if (isESW === "ESW - Economic and Sector Work"){
                $('#lblCountryDept').attr("hidden", "hidden");
                $('div [data-idb-fieldname="ddlCountryDept"]').find('span.lblCountryDeptReadValue').attr("hidden", "hidden");
            }
        }

        registerCallback(function() {
            validateCountry();
            chekGridBldItem();

            actionOperationGlobal = $('input[name="operationType"]').val();

            if (actionOperationGlobal === '@Model.CipOperationId') {
                $("#id-country").prop("disabled", true);
                prepareObjetiveFieldCip();
            }

            controlPSGAttribute();

            $(document).on('change', '[name=selectedPsgDonors]', controlDonorSelection);

            $(document).on('click', '.attributeRightColumnGray .checkbox-default-icon', function() {
                setTimeout(controlPSGAttribute, 500);
            });

            $(document).on('change', '#PSG',function() {
                $('#gridExpectedIDB tbody tr').remove();
            });

            $(document).on('change', '[name="operationType"]', controlPSGAttribute);

            @if(Model.IsPsgOperation)
            {
                @: showDonorColumn();
            }

            setTimeout(function() { controlPSGAttribute(); }, 1000);
        });

        $(document).on("change", 'input[name="UsAmount"]', function() {
            checkCategoryByFundsAmount();
        });

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-ExecutedBy"] a', function() {
            var val = getAttribute("ExecutedBy");
            if (val === '@Model.ExecutedByBank' && $("[name='operationType']").val() === '@Model.BasicData.TcpOpTypeId'){
                if (!existInstitutions('@Model.BasicData.ExecutorId', '@Model.UsIdbInstitutionId')){
                    saveAsocInstitution('@Model.BasicData.ExecutorId', '@Model.UsIdbInstitutionId');
                }
            }
        });

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-RoleOrganizationalUnit"] a', function() {
            institutionEFCController();

            var countResponsible = 0;
            var countRepeatRow = 0;
            var roleValor = $(this).attr('dd-value');
            var ouValor = $(this).closest('td').next().find('input[name="OrganizationalUnit"]').val();
            $('[name="RoleOrganizationalUnit"]').each(function() {
                if ($(this).val() == '@Model.ResponsibilityData.OrganizationalUnitResponsibleUnit') {
                    countResponsible++;
                }

                if (roleValor !== "" && ouValor !== "") {
                    var ouValorRow = $(this).closest('td').next().find('input[name="OrganizationalUnit"]').val();
                    if ((roleValor == $(this).val()) && (ouValor == ouValorRow)) {
                        countRepeatRow++;
                    }
                }
            });

            if (countResponsible > 1){
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("OP.CR.CreationForm.Message.ResponsibleOU")');
            }
            else if (countRepeatRow > 1){
                $(this).closest('ul').FirstorDefault();
                showMessage('@Localization.GetText("GLOBAL.DUPLICATE.ROW")');
            }
        });

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-OrganizationalUnit"] a', function() {
            institutionEFCController();

            if ($(this) == undefined || $(this) == null || $(this).text() === "" || $(this).attr("dd-value") === ""){
                return false;
            } else {
                var countRepeatRow = 0;

                var ouValor = $(this).attr('dd-value');
                var roleValor = $(this).closest('td').prev().find('input[name="RoleOrganizationalUnit"]').val();

                $('[name="RoleOrganizationalUnit"]').each(function() {
                    var ouValorRow = $(this).closest('td').next().find('input[name="OrganizationalUnit"]').val();
                    if ((roleValor == $(this).val()) && (ouValor == ouValorRow)) {
                        countRepeatRow++;
                    }
                });

                if (countRepeatRow > 1){
                    showMessage("@Localization.GetText("OP.OD.TabClassificationData.Message.OrganizationalUnit")");
                    $(this).closest('tr').find("[name='OrganizationalUnit_text']").val("");
                    $(this).closest('tr').find("[name='OrganizationalUnit']").val("");
                    return false;
                }
                return true;
            }
        });

        $(document).on('click', 'ul.dropdown-menu[aria-labelledby="id-operationTeamsRole"] a', function() {
            var selectedElementParentDropdown = $(this).closest('div.dropdown');

            var teamLeaderRoles = ['@Model.ResponsibilityData.TeamLeaderId','@Model.ResponsibilityData.AlternateTeamLeaderId'];
            var userNotFromStaffMessage = "@Localization.GetText("GLOBAL.Save.NonStaffUsersAsTeamLeaders")";
            var urlAction = '@Url.Action("VerifyStaffMember", "View", new {area = "OPUS"})';

            var $user = selectedElementParentDropdown.parents('tr').find('[name="userNameTeam_text"]');
            var userName = $user.GetValue();
            var fullName = $user.GetText();

            var isNotRoleStaffMember =  checkForNonStaffUsersAsTeamLeaders(
                selectedElementParentDropdown,
                userName,
                fullName,
                teamLeaderRoles,
                userNotFromStaffMessage,
                urlAction);

            if (isNotRoleStaffMember)
                return;

            var countTeamLeader = 0;
            var countEsgLeadSpecialistId = 0;
            if ($(this).attr("dd-value") == '@Model.ResponsibilityData.TeamLeaderId' ||
                $(this).attr("dd-value") == '@Model.ResponsibilityData.EsgPrimaryTeamId') {
                $('[name="operationTeamsRole"]').each(function() {
                    if (($(this).val() == '@Model.ResponsibilityData.TeamLeaderId') &&
                        ($(this).val() != '@ViewBag.EsgSpecialistAssignmentWritePermission')) {
                        countTeamLeader++;
                    } else if ($(this).val() == '@Model.ResponsibilityData.EsgPrimaryTeamId') {
                        countEsgLeadSpecialistId++;
                    }
                });
                if (countTeamLeader == 2) {
                    $(this).closest('ul').FirstorDefault();
                    showMessage('@Localization.GetText("OP.CR.CreationForm.Message.AnyTeamLeader")');
                }
            }
            var thisSelect = $(this);
            var orgUnit = thisSelect.closest('td').next().next().find('.labelNormal').text();
            var roleId = $(this).attr('dd-value');
            if (orgUnit !== "") {
                postUrlWithOptions(
                    '@Url.Action("GetEsgPermission", "View", new {area = "OPUS"})', { async: true },
                    { orgUnit: orgUnit, roleId: roleId })
                    .done(function(data) {
                        if (data === false) {
                            showMessage('@Localization.GetText("OP.CR.CreationForm.Message.OnlyOneEsgLeadSpecialist")');
                            thisSelect.closest('div.dropdown').find('button').FirstorDefault();
                        }
                    });
            }
        });

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-operationType"] a', function() {

            $('#id-countryDepartmentId').parent().find('li').remove();
            $('ul.dropdown-menu[aria-labelledby="id-countryDepartmentId"]').html('<li><a dd-value>(select an option)</a></li>');

            $("[name='subSector']").removeAttr("data-parsley-required");
            $('#id-subSector').parent().find('.filled').remove();
            $("#cntsubSector").find('span').remove();

            cleanerObject.ClearAll();
            enableRegisterAndOp();

            if ($(this).attr('dd-value') !== "") {
                @if (ViewBag.CreationOperation == true)
                {
                    @: $(".ContenidoOcultable").show();
                }

                if ($(this).attr('dd-value') === "@Model.EswOperationId") {
                    $('div#subnationalLevel').hide();
                }

                if ($('#SectionSectorSubsector').is(':hidden')) {
                    $('#SectionSectorSubsector').show();
                }

                actionOperationGlobal = $(this).attr('dd-value');

                $("[data-idb-fieldname='ddlSector']").find('span.asteriskColor').remove();

                if (actionOperationGlobal === '@Model.CipOperationId') {
                    $('[data-idb-fieldname="ddlSector"] label').after('<span class="asteriskColor">*</span>');
                    prepareObjetiveFieldCip();
                }

                if (actionOperationGlobal == '@Model.EswOperationId')
                    $('[data-idb-fieldname="ddlSector"] label').after('<span class="asteriskColor">*</span>');

                $("[name='operationType'").val(actionOperationGlobal);
                var valueOperationType = $("#operationTypeAux").val();

                var currentAttribute = getAttribute('FinancingContainer') !== "" ? getAttribute('FinancingContainer') : 0;

                clearMBFCodeValue();

                businessRuleMBF();

                CONModality();

                IsSectionVisibleCreation(actionOperationGlobal, currentAttribute);

                setRequiredCategory(false);

                teamMembersRequired();

                postUrlWithOptions(
                    '@Url.Action("GetOrgRole", "View", new {area = "OPUS"})', { async: true },
                    {operationTypeId: actionOperationGlobal})
                    .done(function(data) {
                        var listdata = $.map(data, function(item) {
                            return "<li><a dd-value=" + item.Value + ">" + item.Text + "</a></li>";
                        });
                        listdata.unshift("<li><a dd-value>(select an option)</a></li>");

                        $('ul.dropdown-menu[aria-labelledby="id-RoleOrganizationalUnit"]').html(listdata);
                    });

                if (actionOperationGlobal === '@Model.CipOperationId') {
                    prepareObjetiveFieldCip();
                }

                if (actionOperationGlobal === '@Model.PrgOperationId'
                    || actionOperationGlobal === '@Model.EswOperationId'
                    || actionOperationGlobal === '@Model.CipOperationId')
                {
                    $("#InstitutionCreationForm").addClass("hide");
                    $("#InstitutionCreationForm").find('table tbody').empty();
                } else {
                    $("#InstitutionCreationForm").removeClass("hide");
                }

                operationCode = $(this).text().substring(0, 3);
                var hqCountry = $('[aria-labelledby=id-country] li a:contains("HQ")');

                var bankWideTexts = [
                    "@ViewBag.countryBkEn",
                    "@ViewBag.countryBkEs",
                    "@ViewBag.countryBkFr",
                    "@ViewBag.countryBkPt"
                ];

                var bkCountry = $();

                $('[aria-labelledby=id-country] li a').each(function() {

                    var $this = $(this);

                    if (bankWideTexts.indexOf($this.text().trim()) >= 0) {
                        bkCountry = $this;
                        return false;
                    }
                });

                if (operationCode === '@OperationType.LON') {
                    setSectorRequired();
                }

                checkCountriesByOperationType(operationCode, hqCountry, bkCountry);

                postUrlWithOptions(
                    '@Url.Action("GetInstitutionRole", "View", new {area = "OPUS"})', { async: true },
                    { operationType: actionOperationGlobal })
                    .done(function(data) {
                        var listdata = $.map(data, function(item) {
                            return "<li><a dd-value=" + item.Value + ">" + item.Text + "</a></li>";
                        });
                        listdata.unshift("<li><a dd-value>(select an option)</a></li>");

                        $('ul.dropdown-menu[aria-labelledby="id-associatedInstitutionsRoleFilter"]').html(listdata);
                    });

                $("#operationTypeAux").val(actionOperationGlobal);

                postUrlWithOptions(
                    '@Url.Action("GetAttributtes", "View", new {area = "OPUS"})', { async: true },
                    { operationType: actionOperationGlobal })
                    .done(function(responseText, textStatus, jqXHR) {

                        $("#ContentAttributtes").html(responseText);
                        $("#hidViewModel").val($("#ModelUpdate").val());
                        enterEditMode(false, $('#ContentAttributtes'), false);
                        $('[name="' + cclipOperationsData.MultiSectorAttribName + '"]').find('[value='+ cclipOperationsData.MultipleSectorId +']').remove();
                        bindHandlers();
                        GetFICBusinessRule();

                        $('ul[aria-labelledby="id-ReportingCycle"] li').each(function () {
                            var isTCM = $(this).find('a').text();
                            if (isTCM === "TCM") {
                                $(this).remove();
                            }
                        });

                        cclipOperationsData.UpdateSectorsSubsectorsInputs();
                        mifOperationalProgUnit.UpdateMifOpuOperationData();

                        publicPrivatePartnership.UpdatePublicPrivatePartnershipAttributeVisibility();
                    });

                postUrlWithOptions(
                    '@Url.Action("GetCountries", "View", new {area = "OPUS"})', { async: true },
                    { operationTypeId: actionOperationGlobal })
                    .done(function(data) {

                        var idCountry = data.CountryCode;
                        if (data.Disabled) {
                            $("[aria-labelledby=id-country] li a").removeAttr("dd-selected");
                            $('[aria-labelledby=id-country] li a[dd-value="' + idCountry + '"]').attr("dd-selected", "");
                            $("#id-country").SetValue(idCountry, $('[aria-labelledby=id-country] li a[dd-value="' + idCountry + '"]').text());
                            $("#id-country").attr("disabled", true);
                            if ($('#id-operationType').find('span').text() === "ESW - Economic and Sector Work") {
                                $('#id-countryDepartmentId').FirstorDefault();
                                $('#id-countryDepartmentId').parent().find('li').remove();
                                $('#CountryDeptDDL').attr("hidden", "hidden");
                                $('#CountryDeptlbl').text('');
                                $('#CountryDeptlbl').attr("hidden", "hidden");
                                $('#lblCountryDept').attr("hidden", "hidden");
                                $('div [data-idb-fieldname="ddlCountryDept"]').find('span.lblCountryDeptReadValue').attr("hidden", "hidden");
                            } else {
                                isRegional();
                            }
                            checkCountry(idCountry);
                        } else {
                            $("#id-country").removeAttr("disabled");
                            $("#id-country").FirstorDefault();
                            isRegional();
                        }
                    });

                actionCountryGlobal = $("[name='country']").val();

                if ($(this).attr('dd-value') === '@ViewBag.OperationTypeTCP' || $(this).attr('dd-value') === '@ViewBag.OperationTypeIGR') {
                    if ($('[name="country"]').GetValue() === '@ViewBag.CountryBK') {
                        $('[name="country"]').FirstorDefault();
                    }
                    $('[name="country"]').closest('div.dropdown').find('[dd-value="@ViewBag.CountryBK"]').closest('li').hide();
                } else {
                    $('[name="country"]').closest('div.dropdown').find('[dd-value="@ViewBag.CountryBK"]').closest('li').show();
                }
            } else {
                @if (ViewBag.CreationOperation == true)
                {
                    @: $(".ContenidoOcultable").hide();
                }
            }

            if (actionOperationGlobal === '@Model.EswOperationId'
                || actionOperationGlobal === '@Model.CipOperationId') {
                $('#CountryCreationForm').addClass("hide");
            }

            ValidateWorkflow();
            addNewRelationshipVisibility();
            setUnsetUIDataOperationTypeEFC();
            autofillCleanAssociatedInstitutionsEFC();

            $('[name=FinancingContainer]').parent().addClass('fieldEditableByCclip');
        });

        $(document).on("click", "[type='radio'][name='FinancingContainer']", function() {
            enableRegisterAndOp();

            var isRegionalCountry = '@Model.RegionalId' == $('#id-country').GetValue();
            var adminId = '@Model.ResponsibilityData.CountryRelatedRoleAdminId';
            var participantId = '@Model.ResponsibilityData.CountryRelatedRoleParticipantId';

            if (checkOpr()) {
                setRowsAssociatedCountriesOPR(isRegionalCountry, adminId, participantId);
            }

            if (operationCode == '@OperationType.CON') {
                clearMBFCodeValue();
            };
        });

        function IsSectionVisibleCreation(actionOperationGlobal, currentAttribute) {
            postUrlWithOptions(
                    '@Url.Action("IsSectionVisibleCreation", "View", new {area = "OPUS"})',
                    { async: true },
                { operationType: actionOperationGlobal, attribute: currentAttribute })
                .done(function(response) {

                    if (response.FinancingData) {
                        $("#tableFinancingData").removeClass("hide");
                    } else {
                        $("#tableFinancingData").addClass("hide");
                        $("#tableFinancingData").find('table tbody').empty();
                    }

                    if (response.Category) {
                        $('#SectionCategoryField').removeClass("hide");
                    } else {
                        $('#SectionCategoryField').addClass("hide");
                        $("#id-category").FirstorDefault();
                    }

                    if (response.Institution) {
                        $("#InstitutionCreationForm").removeClass("hide");
                    } else {
                        $("#InstitutionCreationForm").addClass("hide");
                        $("#InstitutionCreationForm").find('table tbody').empty();
                    }

                    if (response.Objetive) {
                        $("#objetivesContent").removeClass("hide");

                        if (operationCode != '@OperationType.CIP'){
                            $("#objetivesContent").find("[name='operationObjectiveEnglish']")
                               .attr("data-parsley-required", true);
                            $("#objetivesContent").find("[name='operationObjectiveSpanish']")
                                .attr("data-parsley-required", true);
                        } else {
                            notRequiredObjetives();
                        }
                    } else {
                        $("#objetivesContent").addClass("hide");
                        notRequiredObjetives();
                    }

                    if (response.ApprovalDate) {
                        $('#SectionApprovalDateField').removeClass("hide");
                        $('[name="approvalDate"]').val("");
                    } else {
                        $('#SectionApprovalDateField').addClass("hide");
                    }

                    if (response.OperationRelated) {
                        $("#OperationDataRelatedOperations").removeClass("hide");
                    } else {
                        $("#OperationDataRelatedOperations").addClass("hide");
                        $("#OperationDataRelatedOperations").find('table tbody').empty();
                    }

                    bindHandlers();
                });
        }

        function addRowDefaultInstitution(role) {
            postUrlWithOptions(
                '@Url.Action("GetRowInstitutionByRole", "View", new {area = "OPUS"})', { async: true },
                { roleSelected: role })
                .done(function(data) {
                    var tableInstitution = $("#associatedInstitutionsTable tbody");
                    if ($(tableInstitution).find('td.dataTables_empty').length > 0) {
                        $(tableInstitution).find('tr').remove();
                    }
                    $(tableInstitution).append(data);
                    enterEditMode(false, $(tableInstitution), false);
                    bindHandlers();
                });
        }

        function chekGridBldItem() {
            $("#gridExpectedIDB").removeClass("table");
            var container = $("#gridExpectedIDB").find('tbody>tr');
            $.each(container, function() {
                var isBld = checkRowBld($(this));
                if (isBld) {
                    insertRowsBld($(this), false);
                }
            });
        }

        function checkRowBld(row) {
            if (row.find("input[name='isBld']").length > 0) {
                return row.find("input[name='isBld']").val().toLowerCase() == "true";
            } else {
                return false;
            }
        }

        function insertRowsBld(rowParent, edit) {
            var field = rowParent.find("[name='UsAmount']").val();

            if (field == undefined) {
                field = rowParent.find("[data-amount-id-read-permision]").text();
            }
            var amount = field.replace(/\,/g, "");

            var countryId = $('[name="country"]').val();

            if (countryId != "") {
                if (amount.length > 0) {
                    $.get("@Url.Action("GetRowsBld", new {tp = "noTree"})",
                        {
                            amount: amount,
                            countryId: countryId,
                            name: '@OPUSGlobalValues.CREATION'
                        },
                        function(data) {
                            rowParent.after(data);
                            if (edit) {
                                rowParent.next().find("td[data-pagemode='edit']").removeClass();
                                rowParent.next().next().find("td[data-pagemode='edit']").removeClass();
                            }
                        });
                }
            } else {
                showMessage("@Localization.GetText("OP.CR.CreationForm.Message.Country")");
            }
        }

        function removeRowExpectedIDB(source) {
            var msg = '@Localization.GetText("OP.OD.Delete.Msg")';
            confirmAction(msg).done(function(pressOk) {
                if (pressOk) {
                    removeRowExpectedIDBWithoutConfirmation(source);
                }
            });
        }

        function removeRowExpectedIDBWithoutConfirmation(source) {
            var row = source.closest('tr');
            var isBld = checkRowBld(row);

            if (isBld) {
                removeBldRows(row);
            }

            row.remove();
            checkCategoryByFundsAmount();
        }

        function removeBldRows(row) {
            row.next().remove();
            row.next().remove();
        }

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-FundId"] a', function() {
            var row = $(this).closest('tr');
            var codFund = $(this).text().split('-')[0].trim();
            var isBld = row.find("input[name='isBld']");
            $.get("@Url.Action("CheckBld")", { fundCode: codFund }, function(data) {
                if (data === true) {
                    isBld.val(true);
                    insertRowsBld(row, true);
                } else if (isBld.val().toLowerCase() === "true") {
                    isBld.val(false);
                    removeBldRows(row);
                }
            });

            var fundCode = $(this).GetText().split('-')[0].trim();
            var amount = parseInt($(this).closest('td').next().next().find('input').attr('value').replaceAll(',',''));
            var actualSelect = $(this).closest('td').next('#fundTbdColumn');
            var opTypeCode = $('#id-operationType').GetText().split('-')[0].trim();

            @if (ViewBag.IsDraft)
            {
                <text>
            $.get("@Url.Action("CheckIsFundTbd", "View")",
                {
                    fundCode: fundCode,
                    amount: amount,
                    operationType: opTypeCode
                },
                function (data) {
                    if (data && !isPsg()) {
                        actualSelect.find('[data-pagemode="edit"]')
                            .attr('class', 'showDataEdit');
                        actualSelect.find('[data-pagemode="edit"]')
                            .removeAttr('hidden', 'hidden');

                        if ($('th#fundTbdTitle.selected').length === 0) {
                            $('td#fundTbdColumn').removeAttr("hidden", "hidden");
                            $('#fundTbdTitle').removeAttr("hidden", "hidden");
                            $('#fundTbdTitle').attr("class", "selected");
                        }

                        actualSelect.find('select[name="FundTBD"]')
                            .removeAttr("hidden", "hidden");
                    } else {
                        actualSelect.find('[data-pagemode="edit"]')
                            .removeAttr('class', 'showDataEdit');
                        actualSelect.find('[data-pagemode="edit"]').attr('hidden', 'hidden');

                        if ($('td#fundTbdColumn .showDataEdit').length === 0) {
                            $('td#fundTbdColumn').attr("hidden", "hidden");
                            $('#fundTbdTitle').attr("hidden", "hidden");
                            $('#fundTbdTitle').removeAttr("class", "selected");
                        }

                        actualSelect.find('select[name="FundTBD"]').Clean();
                    }
                });
            </text>
            }
        });

        $(document).on("focusout", "input[name='Amount']", function() {

            var row = $(this).closest('tr');
            var isBld = row.find("input[name='isBld']");
            if (isBld.val().toLowerCase() == "true") {
                removeBldRows(row);
                insertRowsBld(row, true);
            }
        });

        function verificarRoleInstitution(role) {
            var result = false;

            $('[name="associatedInstitutionsRole"]').each(function() {
                if ($(this).val() == role) {
                    result = true;
                }
            });
            return result;
        }

        function hasFinancingData() {
            var result = false;
            $('[name="FinancingTypeId"]').each(function()
            {
                if ($(this).GetValue() !== '') {
                    result = true;
                }
            });
            return result;
        }

        function teamMembersRequired() {
            var operationType = $("[name='operationType']").val();
            var response = postUrl('@Url.Action(
            "CheckBusinessPermisionSave", "View", new {area = "OPUS"})',
                { operationType: operationType }).responseJSON;
            if (response.IsValid) {
                if (!response.RequiredTeamLeader && $("#operationTeamsTable").length > 0) {
                    if ($("#operationTeamsTable").find('input[name="operationTeamsName"]').val() === "") {
                        $("#operationTeamsTable tbody").find('tr').remove();
                    } else {
                        if ($("#operationTeamsTable tbody tr").length === 0) {
                            $("button[data-action='newTeamMember']").trigger("click");
                        }
                    }
                }
                return true;
            } else if (!response.IsValid && response.ErrorMessage !== "") {
                return false;
            }
        }

        function teamMembersRequired() {
            var response = postUrl('@Url.Action(
            "CheckBusinessPermisionSave", "View", new {area = "OPUS"})',
                { operationType: actionOperationGlobal }).responseJSON;
            if (response.IsValid) {
                if (response.RequiredTeamLeader) {
                    if ($("#operationTeamsTable tbody tr").length === 0) {
                        $("button[data-action='newTeamMember']").trigger("click");
                    }
                } else {
                    if ($("#operationTeamsTable").find('input[name="operationTeamsName"]').val() === "")
                    {
                        $("#operationTeamsTable tbody").find('tr').remove();
                    }
                }

                return true;
            } else if (!response.IsValid && response.ErrorMessage !== "") {
                return false;
            }
        }

        function validateRequired() {

            notRequiredObjetives();

            var operationType = $("[name='operationType']").val();
            if (operationType != undefined && operationType !== "" && operationType !== "0") {
                var teamLeaderRequired = false;
                var borrowerRequired = false;
                var institutionRequired = true;
                var fundRequired = false;
                var sgId = 0;
                var response = postUrl('@Url.Action(
                "CheckBusinessPermisionSave", "View", new {area = "OPUS"})',
                    { operationType: operationType }).responseJSON;
                if (response.IsValid) {

                    if (response.RequiredSector || cclipOperationsData.IsCclipConOperation()) {
                        $("[name='sector']").attr("data-parsley-required", true);

                        if ($("#cntSector").find('span').length == 0) {
                            $("#cntSector label").after('<span class="asteriskColor">*</span>');
                        }

                        var $multiSectorContainer = $('[name="' + cclipOperationsData.MultiSectorAttribName + '"]');
                        var $multiSectorMainLabelContainer = $multiSectorContainer.closest('.LabelsGroup');
                        var $multiSectorMainLabel = $multiSectorContainer.closest('.LabelsGroup').find('label.lgTit');

                        if (cclipOperationsData.NeedMultipleSectors()) {
                            $multiSectorContainer.attr("data-parsley-required", true);

                            if ($multiSectorMainLabelContainer.find('span').length == 0) {
                                $multiSectorMainLabel.append('<span class="asteriskColor">*</span>');
                            }
                        } else {
                            $multiSectorContainer.removeAttr("data-parsley-required");
                            $multiSectorMainLabelContainer.find('span').remove();
                        }
                    } else {
                        $("[name='sector']").removeAttr("data-parsley-required");
                        $("#cntSector").find('span').remove();
                    }

                    if (response.RequiredSubsector || cclipOperationsData.NeedMultipleSectors()) {
                        $("[name='subSector']").attr("data-parsley-required", true);

                        if ($("#cntsubSector").find('span').length == 0) {
                            $("#cntsubSector label").after('<span class="asteriskColor">*</span>');
                        }

                    } else {
                        $("[name='subSector']").removeAttr("data-parsley-required");
                        $("#cntsubSector").find('span').remove();
                    }

                    teamLeaderRequired = response.RequiredTeamLeader;
                    borrowerRequired = response.RequiredBorrower;
                    institutionRequired = response.RequiredInstitution;
                    fundRequired = response.RequiredFund;
                    sgId = response.SgId;

                } else if (!response.IsValid && response.ErrorMessage !== "") {
                    showMessage(response.ErrorMessage);
                    return false;
                }

                var isContainer = $('#id-operationType span.valueText').text()
                    .indexOf("@OperationType.CON") > -1;
                var isCip = $('#id-CONModality span.valueText').text()
                    .indexOf("@OperationType.CIP") > -1;
                var isEsw = $('#id-CONModality span.valueText').text()
                    .indexOf("@OperationType.ESW") > -1;

                if (!validateContainer($('#PageContent'))) {
                    return false;
                }

                if ($('table[id^="organizationalUnitTable"]').length > 0) {
                    var organizationalUnitCount = 0;
                    $('[name="RoleOrganizationalUnit"]').each(function() {
                        if ($(this).val() == '@Model.ResponsibilityData.OrganizationalUnitResponsibleUnit') {
                            organizationalUnitCount++;
                        }
                    });
                    if (organizationalUnitCount == 0) {
                        showMessage("@Localization.GetText("OP.CR.CreationForm.Message.ResponsibleOU2")");
                        return false;
                    } else if (organizationalUnitCount > 1) {
                        showMessage("@Localization.GetText("OP.CR.CreationForm.Message.ResponsibleOU")");
                        return false;
                    }
                }

                if (teamLeaderRequired && '@Model.ExistTeamLeaderNotEditable'.toLocaleLowerCase() === 'false') {
                    var teamLeaderCount = 0;
                    if ($('table[id^="operationTeamsTable"]').length > 0) {
                        teamLeaderCount = 0;
                        $('[name="operationTeamsRole"]').each(function() {
                            if ($(this).val() == '@Model.ResponsibilityData.TeamLeaderId') {
                                teamLeaderCount++;
                            }
                        });
                        if (teamLeaderCount == 0) {
                            showMessage('@Localization.GetText("OP.CR.CreationForm.Message.TeamLeader")');
                            return false;
                        }
                    }
                }

                if (institutionRequired) {
                    if (borrowerRequired) {
                        if (!verificarRoleInstitution(@ViewBag.BorrowerId)) {
                            showMessage("@Localization.GetText("OP.CR.CreationForm.Message.Borrower")");
                            return false;
                        }
                    }
                    if (!verificarRoleInstitution(@ViewBag.ExecutorId)) {
                        showMessage("@Localization.GetText("OP.CR.CreationForm.Message.Executor")");
                        return false;
                    }
                }

                if(cclipOperationsData.NeedMandatoryCreditLineExecutingAgency() &&
                    !verificarRoleInstitution(@Model.CreditLineExecutingAgencyRoleId)) {

                    showMessage('@Localization.GetText("OP.CreationAndOperationData.Message.MandatoryCreditLineExecutingAgency")');

                    return false;
                }

                if(cclipOperationsData.NeedMandatoryLiaison() &&
                    !verificarRoleInstitution(@Model.BasicData.LiaisonId)) {

                    showMessage('@Localization.GetText("OP.CR.CreationForm.Message.Liaison")');

                    return false;
                }

                if(fundRequired){
                    if(!hasFinancingData()){
                        showMessage("@Localization.GetText("OP.CR.CreationForm.Message.FinancingData")");
                        return false;
                    }
                }

                return validateAssociatedCountries(
                    actionOperationGlobal,
                    '@Model.BasicData.TcpOpTypeId',
                    '@Model.BasicData.OpsTaxonomyIdTypeId',
                    '@Model.BasicData.OpsRelationId',
                    '@Model.RegionalId',
                    isEsw,
                    isContainer,
                    '@ViewBag.CountryRelatedRoleAdmin',
                    '@ViewBag.CountryRelatedRoleParticipant',
                    '@Model.EswOperationId',
                    true);

                var operationYear = $("[name='operationYear']").val();
                var conModality = $('[name=CONModality]').val();

                if (isContainer && (isCip || isEsw)) {
                    var responseESWCIP = postUrl('@Url.Action(
                    "CheckAnnualAllocationYear", "View", new {area = "OPUS"})',
                        { conModality: conModality, operationYear: operationYear }).responseJSON;
                    if (responseESWCIP.IsValid) {
                        var msg = '@Localization.GetText("R6.Proposal.CreationForm.Message.OperationYear")';
                        var msgreplaced = msg.replace('{0}', operationYear);
                        showMessage(msgreplaced);

                        return false;
                    }
                }

                return true;
            } else {
                showMessage("@Localization.GetText("OP.CR.CreationForm.Message.OperationType")");

                return false;
            }
        }

        function notRequiredObjetives() {
            if ($("#objetivesContent.hide").length > 0) {
                $("#objetivesContent").find("[name='operationObjectiveEnglish']").val(" ");
                $("#objetivesContent").find("[name='operationObjectiveSpanish']").val(" ");
                $("#objetivesContent").find("[name='operationObjectivePortuguese']").val(" ");
                $("#objetivesContent").find("[name='operationObjectiveFrench']").val(" ");
                $("#objetivesContent").find('[data-parsley-required]').removeAttr('data-parsley-required');
            }
        }

        function edit() {
            var isFirstSave = @ViewBag.CreationOperation.ToString().ToLower();
            var canEdit = true;

            if (!isFirstSave) {
                postUrlWithOptions(
                    '@Url.Action("LockRegister", "View", new {area = "OPUS"})', { async: false },
                    { url: '@OPUSGlobalValues.URL_CREATION_FORM' })
                    .done(function(data) {
                        if (data.IsValid === false) {
                            canEdit = false;
                            showMessage(data.ErrorMessage);
                        }
                    });
            }
            if (canEdit) {
                var success = enterEditMode(false, $('#PageContent'), false);

                if (success) {
                    enterEditMode(false, $('[data-id=headerButtons]'), false);
                    enterEditMode(false, $('#subnationalLevelContent'), false);
                    checkCountry($('[name="country"]').val());
                }

                var idSector = $("input[name='sector']").attr('value');

                if (idSector != '@Model.SectorOtherId' && idSector !== '') {
                    $('#id-subSector').removeAttr("disabled");

                } else {
                    $('#id-subSector').attr("disabled", "disabled");
                    $("[name='subSector']").attr("disabled", "disabled");
                    $('[name="subSector"]').attr("data-parsley-required", false);
                }

                if ($('[name="operationType"]').GetValue() === '@ViewBag.OperationTypeTCP' ||
                    $('[name="operationType"]').GetValue() === '@ViewBag.OperationTypeIGR') {
                    if ($('[name="country"]').GetValue() === '@ViewBag.CountryBK') {
                        $('[name="country"]').FirstorDefault();
                    }
                    $('[name="country"]').closest('div.dropdown').find('[dd-value="@ViewBag.CountryBK"]').closest('li').hide();
                } else {
                    $('[name="country"]').closest('div.dropdown').find('[dd-value="@ViewBag.CountryBK"]').closest('li').show();
                }
                isRegional();

                bindHandlers();

                actionOperationGlobal = $('input[name="operationType"]').val();

                if (actionOperationGlobal === '@Model.CipOperationId') {
                    $("#id-country").prop("disabled", true);
                    prepareObjetiveFieldCip();
                }

                $('#gridExpectedIDB tbody tr').each(function () {
                    var actualLine = $(this).find("[aria-labelledby='id-FundId']").closest('div.dropdown');
                    if (actualLine.length > 0) {
                        var fundCode = actualLine.find('button').GetText().split('-')[0].trim();
                        var amount = parseInt(actualLine.closest('td').next().next().find('input').attr('value'));
                        enableDonorTrustFund(actualLine, fundCode, amount);
                    }
                });

                cclipOperationsData.UpdateSectorsSubsectorsInputs();

                var isSubnational =
                    $('[data-pagemode="read"] #chkSubnationalCreation').is(':checked');

                if (!isSubnational) {
                    $('[data-pagemode="edit"] a#openSubnationalCreation').hide();
                }
            }

            if ($('#hidRelatedBasicData').length > 0){
                applyStyleToRelationship();
            }

            hideOperationTypeAndCountry();
            setUnsetUIDataOperationTypeEFC();
            removeInstitutionUSIdbTrashButton(operationCode);
            GetFICBusinessRule();
            CheckFacilityTypeRule();
        }

        function cancel() {
            var msg = "@Localization.GetText("OP.CR.CreationForm.Message.Cancel")";
            var $dataPagemodeRead = $('[data-pagemode="read"]');
            var isSubnationalLevel =
                $dataPagemodeRead.find('#chkSubnationalCreation').is(':checked');
            var isSubnationalLevelCurrent =
                $('[data-pagemode="edit"] #chkSubnationalCreation').is(':checked');
            confirmAction(msg).done(function(pressOk) {
                if (pressOk) {

                    @if (ViewBag.CreationOperation == true)
                    {
                        @: var urlRedirect = "@Globals.GetSetting("BasePath")";
                        @: window.top.location.href = urlRedirect;
                    }
                    else
                    {
                        @: postUrlWithOptions(
                        @:    '@Url.Action("UnlockRegister", "View", new {area = "OPUS"})',
                        @:    { async: true },
                        @:    { url: '@OPUSGlobalValues.URL_CREATION_FORM' });
                        @: exitEditMode(true, $('#PageContent'), true, true);
                        @: exitEditMode(false, $('[data-id=headerButtons]'), false, true);
                        @: setUnsetUIDataOperationTypeEFC();
                        @: chekGridBldItem();
                    }

                    if (isSubnationalLevel != isSubnationalLevelCurrent &&
                        isSubnationalLevelCurrent) {
                        postUrlWithOptions(
                            '@Url.Action("DeleteSubnationalLevel", "View", new {area = "OPUS"})',
                            { async: false });

                        $('input[name="subnational"]').prop('checked', false);
                        $('#openSubnationalCreation').hide();
                    }

                    if (!isSubnationalLevelCurrent && $('#subnationalLevelList').find('tr').length > 0) {
                        postUrlWithOptions(
                            '@Url.Action("DeleteSubnationalLevel", "View", new {area = "OPUS"})',
                            { async: false });

                        $('input[name="subnational"]').prop('checked', false);
                        $('#openSubnationalCreation').hide();
                    }

                    actionOperationGlobal = $('input[name="operationType"]').val();

                    if (actionOperationGlobal === '@Model.CipOperationId') {
                        prepareObjetiveFieldCip();
                    }
                    
                    if ($('#SectionSectorSubsector').is(':hidden')) {
                        $('#SectionSectorSubsector').show();
                    }

                    if ($('#hidRelatedBasicData').length > 0) {
                        applyStyleToRelationship();
                    }

                    controlPSGAttribute();
                    $('td#fundTbdColumn').attr("hidden", "hidden");
                    $('#fundTbdTitle').attr("hidden", "hidden");
                }
            });
        }

        function resetRequired() {
            $("[name='operationNamePortuguese']").attr("data-parsley-required", false);
            $("[name='operationObjectivePortuguese']").attr("data-parsley-required", false);
            $("[name='operationNameFrech']").attr("data-parsley-required", false);
            $("[name='operationObjectiveFrench']").attr("data-parsley-required", false);

            $('[dd-lang="pt"]').removeClass('error');
            $('[dd-lang="fr"]').removeClass('error');

            $('#asteriskNameFr').addClass('hide');
            $('#asteriskNamePt').addClass('hide');
            $("#asteriskObjFr").addClass("hide");
            $("#asteriskObjPt").addClass("hide");
        }

        function checkCountry(countryId) {
            if (countryId != undefined && countryId !== "") {
                if (countryId === '@Model.RegionalId' && actionOperationGlobal != '@Model.EswOperationId') {
                    $("#CountryCreationForm").removeClass("hide");
                } else {
                    $("#CountryCreationForm").addClass("hide");
                    $("#CountryCreationForm").find('table tbody').empty();
                }

                postUrlWithOptions(
                    '@Url.Action("CheckCountry", "View", new {area = "OPUS"})', { async: true },
                    { countryId: parseInt(countryId) })
                    .done(function(data) {
                        resetRequired();
                        if (data.Portuguese === true) {
                            $("[name='operationNamePortuguese']").attr("data-parsley-required", true);
                            $("#asteriskNamePt").removeClass("hide");

                            if ($("#objetivesContent.hide").length === 0) {
                                $("[name='operationObjectivePortuguese']").attr("data-parsley-required", true);
                                $("#asteriskObjPt").removeClass("hide");
                            }
                        } else if (data.French === true) {
                            $("[name='operationNameFrech']").attr("data-parsley-required", true);
                            $("#asteriskNameFr").removeClass("hide");

                            if ($("#objetivesContent.hide").length === 0) {
                                $("[name='operationObjectiveFrench']").attr("data-parsley-required", true);
                                $("#asteriskObjFr").removeClass("hide");
                            }
                        }
                    });
            }

        }

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-country"] a', function() {
            checkCountry($(this).attr('dd-value'));
            if ('@ViewBag.HQOperation' === 'True') {
                $('input[name="countryDepartmentId"]').FirstorDefault();
                isRegional();
            }

            ValidateWorkflow();

            var adminId = '@Model.ResponsibilityData.CountryRelatedRoleAdminId';
            var participantId = '@Model.ResponsibilityData.CountryRelatedRoleParticipantId';
            var isRegionalCountry = '@Model.RegionalId' == $(this).GetValue();

            if (checkOpr()) {
                setRowsAssociatedCountriesOPR(isRegionalCountry, adminId, participantId);
            }

            autofillAssociatedCountriesOperationTypeEFC();
        });

        function checkOpr(){

            var isOprModality = '@Model.OprConModalityId' == getAttribute("CONModality");
            var isOperTypeCon = $('[name="operationType"]').val() == '@Model.ConOperationId';
            var isFinancingNo =  '@Model.FinancingNo' == $('[name="FinancingContainer"]:checked').val();

            cleanAssociatedCountries();

            return isOprModality && isOperTypeCon && isFinancingNo;
        }

        function isRegional() {
            $('#id-countryDepartmentId').parent().find('li').remove();
            $('#lblCountryDept').removeAttr("hidden");
            $('div [data-idb-fieldname="ddlCountryDept"]').find('span.lblCountryDeptReadValue').removeAttr("hidden");
            var countryText = $('#id-country').find('.valueText').text();
            if (countryText === "REGIONAL" || countryText === "BANKWIDE") {
                postUrlWithOptions(
                    '@Url.Action("GetCountryDepartmentList", "View", new {area = "OPUS"})', { async: true })
                    .done(function(data) {
                        var listdata = $.map(data, function(item) {
                            return "<li><a dd-value=" + item.Value + ">" + item.Text + "</a></li>";
                        });
                        listdata.unshift("<li><a dd-value>(select an option)</a></li>");

                        $('ul.dropdown-menu[aria-labelledby="id-countryDepartmentId"]').html(listdata);
                        if ($('#id-countryDepartmentId span:first').text() === "") {
                            $('input[name="countryDepartmentId"]').FirstorDefault();
                        }
                    });
                $('#CountryDeptDDL').removeAttr("hidden");
                $('#CountryDeptlbl').attr("hidden", "hidden");
                $('div#subnationalLevel').hide();
            } else {
                var countryId = $('input[name="country"]').val();
                if (countryId !== "") {
                    postUrlWithOptions(
                        '@Url.Action("GetCountryDeptByCountry", "View", new {area = "OPUS"})', { async: false },
                        { countryId: parseInt(countryId) })
                        .done(function(data) {
                            if (data.IsValid === true) {
                                $('#CountryDeptlbl').html('<label class="labelNormal bold"  ><span>' + data.Text + '</span></label>');
                                $('input[name="countryDepartmentId"]').val(data.Value);
                            }
                        });
                    $('#CountryDeptDDL').attr("hidden", "hidden");
                    $('#CountryDeptlbl').removeAttr("hidden");
                } else {
                    $('#CountryDeptlbl').find('label').text('');
                    $('input[name="countryDepartmentId"]').val('');
                    $('#id-countryDepartmentId').parent().find('li').remove();
                    $('ul.dropdown-menu[aria-labelledby="id-countryDepartmentId"]').html('<li><a dd-value>(select an option)</a></li>');
                    $('#CountryDeptDDL').removeAttr("hidden");
                    $('#CountryDeptlbl').attr("hidden", "hidden");
                }

                if (operationCode != '@OperationType.EFC')
                    $('div#subnationalLevel').show();
            }
        }

        function registerOperation() {
            var isOperationCreated = @ViewBag.CreationOperation.ToString().ToLower();

            if (isInEditMode($('#PageContent'))) {
                if (!save(isOperationCreated)) {
                    return false;
                }
            } else {
                var attribute = $('#SectionCategoryField');
                if (!validateAttribute(attribute))
                {
                    var errorMessage = '@Localization.GetText("TC.TCAbstractModalNotSave.Message")' + '<br>';
                    errorMessage += '- ' + attribute.find('label').text();
                    showMessage(errorMessage);
                    return false;
                }
            }

            if (isOperationCreated == true) {
                var url = "@Url.Action(
                          "RegisterOperation",
                          "Save",
                          new { Area = "OPUS", operationNumber = Model.OperationNumber })"
                    .replace("@OPUSGlobalValues.NEW_OPERATION_NUMBER", $("#OPNum").val());
            } else {
                var url = "@Url.Action("RegisterOperation", "Save", new { Area = "OPUS" })";
            }

            var response = postUrl(url).responseJSON;

            if (response.IsValid) {
                showMessageWithReloadParentIframeAbsolute(
                    response.CreationMessage.replaceAll("@OPUSGlobalValues.SEPARATOR", "<br />"),
                    '@Globals.GetSetting("BasePath")');
            } else {
                if (isOperationCreated == true) {
                    var urlRedirect = "@Globals.GetSetting("BasePath")" +
                        "@OPUSGlobalValues.DraftAddress" +
                        response.OperationNumber;
                    showMessageWithReloadParentIframeAbsolute(response.ErrorMessage, urlRedirect);
                } else {
                    checkIfOperationCreated(response);
                }
            }
        }

        function checkIfOperationCreated(response){
            if (response.IsValidSap == true) {
                showMessageWithReloadParentIframeAbsolute(
                    response.ErrorMessage,
                    '@Globals.GetSetting("BasePath")');
            }
            else {
                showMessage(response.ErrorMessage);
            }
        }

        function save(isFirstSave, isSaveOnly) {
            assignIsSaveOnly(isSaveOnly);
            var isSave = false;
            var isSubnational = true;
            destroyParsley($('#PageContent'));
            initParsley($('#PageContent'));
            destroyParsley($('#PageContent'));
            initParsley($('#PageContent'));

            if (validateRequired()) {
                if (!$('#chkSubnationalCreation').closest('div').next().find('#chkSubnationalCreation').is(':checked')) {
                    isSubnational = false;
                }

                if (!isSubnational) {
                    postUrlWithOptions(
                        '@Url.Action("DeleteSubnationalLevel", "View", new {area = "OPUS"})',
                        { async: false });
                }

                var $facilityIdentifierCode = $('input[name="FacilityIdentifierCode"]');

                if ($facilityIdentifierCode > 0)
                    $facilityIdentifierCode.val($facilityIdentifierCode.val().toUpperCase());

                var response = saveContainer($('#PageContent'), '#hidViewModel', true, $('#headerButtons'));

                if (response.responseJSON.ErrorMessage != null && response.responseJSON.ErrorMessage !== '') {
                    if(response.responseJSON.ErrorMessage !== "@OPUSGlobalValues.REQUIRED"){
                        showMessage(response.responseJSON.ErrorMessage);
                    } else {
                        var container = $("[name='countryDepartmentId']");
                        container.attr("data-parsley-required", true);
                        $("#lblCountryDept label").after('<span class="asteriskColor">*</span>');

                        if (container.closest("div").find('ul.parsley-errors-list')) {
                            container.closest("div")
                                .find('ul.parsley-errors-list')
                                .addClass('filled')
                                .append('<li class="parsley-required">' +
                                    '@Localization.GetText("TCM.ValueRequired")</li>');
                        }
                    }
                } else {
                    var isOperationCreated = @ViewBag.CreationOperation.ToString().ToLower();

                    if (isOperationCreated == true) {
                        var isButtonSave = (isFirstSave !== true);
                        if (isButtonSave) {
                            var msg = "@Localization.GetText("OP.CR.CreationForm.Message.NewOperationMsg")" +
                                " " + response.responseJSON.OperationNumber;
                            var url = "@Globals.GetSetting("BasePath")" +
                                "/operation/Draft/Pages/default?idOperation=" +
                                response.responseJSON.OperationNumber;

                            $(document).bind("keyup",keyUp);

                            showMessageWithReloadParentIframeAbsolute(msg, url);
                        }
                    } else {
                        exitEditMode(true, $('#PageContent'), true, true);
                        exitEditMode(false, $('[data-id=headerButtons]'), false, true);
                        setUnsetUIDataOperationTypeEFC();
                        reloadLabels();
                    }

                    $("#OPNum").val(response.responseJSON.OperationNumber);
                    $("#relatedOperationsTable").paginationConfluense($('[name="PageSizeOperationRelated"]').val());
                    isSave = true;

                    var countryText = $('#id-country').find('.valueText').text();
                    if (countryText === "REGIONAL" || operationCode == '@OperationType.EFC') {
                        $('div#subnationalLevel').hide();
                    }

                    actionOperationGlobal = $('input[name="operationType"]').val();

                    if (actionOperationGlobal === '@Model.CipOperationId') {
                        prepareObjetiveFieldCip();
                    }
                    
                    if ($('#SectionSectorSubsector').is(':hidden')) {
                        $('#SectionSectorSubsector').show();
                    }

                    var isFundTBD = @ViewBag.IsFundTBD.ToString().ToLower();;

                    if (isFundTBD != true) {
                        $('td#fundTbdColumn').attr("hidden", "hidden");
                        $('#fundTbdTitle').attr("hidden", "hidden");
                        chekGridBldItem();
                    }

                    CONModality(true);
                    cclipOperationsData.UpdateSectorsSubsectorsInputs();
                    mifOperationalProgUnit.UpdateMifOpuOperationData();

                    publicPrivatePartnership.UpdatePublicPrivatePartnershipAttributeVisibility();
                }

                if ($('#chkSubnationalCreation').closest('div').next().find('#chkSubnationalCreation').is(':checked')) {
                    if (newOperationSubnational.length > 0) {

                        newOperationSubnational = newOperationSubnational.filter(Boolean);

                        postUrlWithOptions(
                                '@Url.Action("SaveRowSubnationalLevel", "View", new {area = "OPUS"})',
                                { async: false },
                                {
                                    newResultSubnational: newOperationSubnational,
                                    operationNumber: response.responseJSON.OperationNumber
                                })
                            .done(function(data) {
                                if (data) {
                                    newOperationSubnational = [];
                                }
                            });
                    }
                }
            }

            var isNewRelatedView = $('#hidRelatedBasicData').length > 0;

            if (isNewRelatedView) {
                applyStyleToRelationship();
            }

            controlPSGAttribute();

            $('td#fundTbdColumn').attr("hidden", "hidden");
            $('#fundTbdTitle').attr("hidden", "hidden");

            return isSave;
        }

        function deleteOperation() {
            var msg = "@Localization.GetText("OP.CR.CreationForm.Message.Delete")";
            confirmAction(msg).done(function(pressOk) {
                if (pressOk) {
                    var response = postUrl('@Url.Action("DeleteCreationForm", "Save", new {area = "OPUS"})').responseJSON;
                    if (response.IsValid === true) {
                        var msg = '@Localization.GetText("OP.CR.CreationFrom.MsgDeleteOperation")';
                        showMessageWithReloadParentIframeAbsolute(msg, '@Globals.GetSetting("BasePath")');
                    } else {
                        showMessage(response.ErrorMessage);
                    }
                }
            });
        }

        function removeRow(source) {
            if (!cclipOperationsData.ValidateCclipExecAgencyGettingRemoved(source)) {
                return false;
            }

            var msg = '@Localization.GetText("OP.OD.Delete.Msg")';
            confirmAction(msg).done(function(pressOk) {
                if (pressOk) {
                    var button = source;
                    button.closest("tr").remove();

                    institutionEFCController();
                }
            });
        }

        function newOrganizationalUnit(button) {
            var container = $("#" + button.attr('dd-table')).find('tbody');
            var opeTypeId = $('ul.dropdown-menu[aria-labelledby="id-operationType"] a[dd-selected]').GetValue();

            postUrlWithOptions(
                '@Url.Action("GetRowOrganizationalUnit", "View", new {area = "OPUS"})',
                { async: false },
                {
                    operationTypeId: opeTypeId
                })
                .done(function(data) {
                    if ($(container).find('td.dataTables_empty').length > 0) {
                        $(container).find('tr').remove();
                    }
                    $(container).append(data);
                    enterEditMode(false, $(container), false);
                    bindHandlers();
                });
        }

        function newCountryRelated(
            button, roleCode, roleId, isSelectCountryHQByDefault, isSelectCountriesWithoutHQByDefault) {
            if ($('#associatedCountriesTable tbody tr').length < 3) {
                var container = $("#" + button.attr('dd-table')).find('tbody');

                if (isSelectCountryHQByDefault == null)
                    isSelectCountryHQByDefault = false;

                if (isSelectCountriesWithoutHQByDefault == null)
                    isSelectCountriesWithoutHQByDefault = false;

                postUrlWithOptions(
                    '@Url.Action("GetRowCountryRelated", "View", new {area = "OPUS"})',
                    { async: false },
                    {
                        isSelectCountryHQByDefault: isSelectCountryHQByDefault,
                        isSelectCountriesWithoutHQByDefault: isSelectCountriesWithoutHQByDefault
                    })
                    .done(function(data) {
                        if(data.IsValid != null && !data.IsValid) {
                            showMessage(data.ErrorMessage);
                        }

                        if ($(container).find('td.dataTables_empty').length > 0) {
                            $(container).find('tr').remove();
                        }

                        $(container).append(data);
                        enterEditMode(false, $(container), false);
                        bindHandlers($(container));
                        validateCountryAssociatedTable();

                        if (typeof(roleCode) != 'undefined' && typeof(roleId) != 'undefined' &&
                                !isSelectCountriesWithoutHQByDefault && !isSelectCountryHQByDefault)

                            setValuesAssociatedCountriesOPR(roleCode, roleId, 5132);
                    });
            } else {
                showMessage('@Localization.GetText("OP.CR.CreationForm.Message.NewCountry")');
            }
        }

        function newTeamMember(button) {
            var container = $("#" + button.attr('dd-table')).find('tbody');
            var tLorAtLnotEditable = '@Model.ExistTeamLeaderNotEditable'.toLocaleLowerCase() === 'true';
            var operationAnalistNotEditable = '@Model.ExistOperationAnalistNotEditable'.toLocaleLowerCase() === 'true';

            postUrlWithOptions(
                '@Url.Action("GetRowOperationTeamData", "View", new {area = "OPUS"})', { async: true },
                { tLorAtLnotEditable: tLorAtLnotEditable, operationAnalistNotEditable: operationAnalistNotEditable })
                .done(function(data) {
                    if ($(container).find('td.dataTables_empty').length > 0) {
                        $(container).find('tr').remove();
                    }
                    $(container).append(data);
                    enterEditMode(false, $(container), false);
                    bindHandlers($(container));
                });
        }

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-associatedCountriesRole"] a', function() {
            var nameInCuestion = $(this).text();
            var count = 0;
            $('#associatedCountriesTable tr').each(function() {
                var nameInThisRow = $(this).find('td #id-associatedCountriesRole span:first').text();
                if (nameInCuestion === nameInThisRow) {
                    count = count + 1;
                }
            });

            if (count > 1) {
                showMessage('You need choose another role');
                $(this).closest('div.dropdown').find('button').FirstorDefault();
            } else {
                var element = $(this).closest('tr');
                var roleId = $(this).attr('dd-value');
                var opTypeId = $('[name=operationType]').val();
                var guaranteedId =
                    $('[aria-labelledby=id-LendingType] > li > a[dd-selected]').attr('dd-value');
                var isLon = opTypeId == '@Model.BasicData.OperationTypeLoadnId';

                postUrlWithOptions('@Url.Action("GetCountryRelatedCountriesByRole",
                "View",
                new {area = "OPUS"})',
                    { async: false },
                    { roleId: parseInt(roleId), isSGLON: isLon })
                    .done(function(data) {
                        var listdata = $.map(data, function(item) {
                            return "<option value=" + item.Value + ">" + item.Text + "</option>";
                        });

                        element.find('[name="listCountry"]').html(listdata);
                    });
                element.find('[name="listCountry"]').Clean();
            }
        });

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-userNameTeam"] a', function() {
            var org = $(this).attr('additional-data');
            var tableArray = new Array();
            $('#operationTeamsTable').find("[name='userNameTeam']").each(function() {
                tableArray.push($(this).val());
            });

            if (tableArray.length > 0) {
                var responseUser = postUrl('@Url.Action("VerifyOperationTeamUser", "View", new {area = "OPUS"})',
                    { userName: $(this).attr('dd-value'), tableArray: tableArray }).responseJSON;
                if (responseUser.IsValid === false) {

                    $(this).closest(".inputSearch").find("[name='userNameTeam']").val("");
                    $(this).closest('div').find('[name="userNameTeam_text"]').val("");
                    showMessage('@Localization.GetText("OP.CR.CreationForm.Message.User")');

                    return false;
                }
            }

            var response = postUrl('@Url.Action("GetAdditionalDataOperationTeam", "View", new {area = "OPUS"})',
                { userName: $(this).attr('dd-value'), organization: org, hideExpired: true }).responseJSON;
            if (response.IsValid) {
                if (response.ValidationMessage === null) {
                    var userId = $(this).attr('dd-value');
                    var nameUser = $(this).closest('tr').find("[name='operationTeamsName']");
                    $(nameUser).val($(this).text().trim());
                    $(nameUser).closest('td').find('label').remove();
                    $(nameUser).closest('td').append('<label class="labelNormal">' + userId + '</label>');
                    var organizationalUnit = $(this).closest('tr').find("[name='organizationalUnitTeam']");
                    var organizationalUnitText = response.OrganizationalUnitName == null ? "" : response.OrganizationalUnitName;
                    $(organizationalUnit).val(response.OrganizationalUnitId);
                    $(organizationalUnit).closest('td').find('label').remove();
                    $(organizationalUnit).closest('td').append('<label class="labelNormal">' + organizationalUnitText + '</label>');

                    var department = $(this).closest('tr').find("[data-idb-fieldname='otDepartment']");
                    department.text(response.Department);

                    var division = $(this).closest('tr').find("[data-idb-fieldname='otDivision']");
                    division.text(response.Division);

                    var location = $(this).closest('tr').find("[data-idb-fieldname='otLocation']");
                    location.text(response.Location);

                    if (response.Delegator != null) {
                        organizationalUnit.closest('td').next().find("span").first().text(response.Delegator);
                    } else {
                        organizationalUnit.closest('td').next().find("span").text("");
                    }
                } else {
                    showMessage(response.ValidationMessage);
                    $(this).closest('tr').find("[name='operationTeamsName']").val("");
                    $("[name='userNameTeam_text']").val("");
                }
            } else {
                showMessage(response.ErrorMessage);
            }
            $(this).closest('tr').find('div.dropdown').find('button').FirstorDefault();
        });

        function searchEnter() {
            $('[name="associatedInstitutionsNameAcronymFilter"], [name="relatedOperation"]').keypress(function(e) {
                if (e.which == 13) {
                    var name = $(this).attr('name');
                    if (name == "associatedInstitutionsNameAcronym") {
                        $(this).closest('td').find('.searchFilter').click();
                    } else {
                        $(this).parent().next().find('[data-action="relatedOperationSearch"]').click();
                    }
                }
            });
        }

        function ValidateDatetime() {
            $('#newRelatedDates .hasDatepicker').change(function(source) {
                var dateSelected = $(source.target);
                var isCorrect = true;
                var otherDate = $(source.target).parent().parent().next().find('.hasDatepicker');
                if (otherDate.length > 0) {
                    isCorrect = dateDiffInDays(dateSelected.val(), otherDate.val());
                } else {
                    otherDate = $(source.target).parent().parent().prev().find('.hasDatepicker');
                    isCorrect = dateDiffInDays(otherDate.val(), $(source.target).val());
                }

                if (!isCorrect) {
                    $(source.target).val("");
                    $(source.target).attr("data-parsley-required", true).removeClass('parsley-success').addClass('parsley-error');
                    $(source.target).parent().find('ul').remove();
                    $(otherDate).parent().find('ul').remove();
                    $(otherDate).attr("data-parsley-required", false).removeClass('parsley-error').addClass('parsley-success');
                    $(source.target).parent().append('<ul class="parsley-errors-list filled"><li class="parsley-required">range of dates incorrect.</li></ul>');
                    $(source.target).focus();
                } else {
                    $(source.target).attr("data-parsley-required", false).removeClass('parsley-error').addClass('parsley-success');
                    $(source.target).parent().find('ul').remove();
                    $(otherDate).parent().find('ul').remove();
                    $(otherDate).attr("data-parsley-required", false).removeClass('parsley-error').addClass('parsley-success');
                }
            });

            function dateDiffInDays(a, b) {
                var diff = true;
                var aDate = a == "" ? Date.parse("0") : Date.parse(a);
                var bDate = b == "" ? Date.parse("0") : Date.parse(b);
                var diff = (aDate) - (bDate);

                if (aDate == Date.parse("0") || bDate == Date.parse("0")) {
                    return diff;
                }
                return diff <= 0 ? true : false;
            }
        }

        function addNewRowExpectedIDB() {
            var container = $("#gridExpectedIDB").find('tbody');
            var operationType = $("[name='operationType']").val();
            var countryId = $("[name='country']").val() !== "" ? $("[name='country']").val() : 0;
            var hiddenTbd = $('#gridExpectedIDB tbody tr #fundTbdColumn[hidden="hidden"]').length;
            var totalTbd = $('#gridExpectedIDB tbody tr #fundTbdColumn').length;

            var attribute = isNaN(parseInt(getAttribute("SGInstruments"))) ? 0 : parseInt(getAttribute("SGInstruments"));

            $.get("@Url.Action("GetRowExpectedIDB", new {tp = "noTree"})",
                { operationType: operationType,
                    country: countryId,
                    attribute: attribute,
                    isPsgOperation: isPsg(),
                    isFromPreparationFinancialData: false,
                    isMifOpuOperation: mifOperationalProgUnit.CheckIsCurrentlyMifOpuOperation() },
                function(data) {
                    if ($(container).find('td.dataTables_empty').length > 0) {
                        $(container).find('tr').remove();
                    }
                    $(container).append(data);
                    enterEditMode(false, $(container), false);
                    bindHandlers();

                    $('#gridExpectedIDB tbody tr').each(function () {
                        var actualLine = $(this).find("[aria-labelledby='id-FundId']")
                            .closest('div.dropdown');

                        if (actualLine.length > 0) {
                            var fundCode = actualLine.find('button').GetText().split('-')[0].trim();
                            var amount = parseInt(
                                actualLine.closest('td').next().next().find('input').attr('value'));

                            enableDonorTrustFund(actualLine, fundCode, amount);
                        }
                    });
                });

            var actualSelect = $('#gridExpectedIDB tr:last #fundTbdColumn div[data-pagemode="edit"]');
            actualSelect.removeAttr('class', 'showDataEdit');
            actualSelect.attr('hidden', 'hidden');

            if (hiddenTbd === totalTbd) {
                $('#fundTbdTitle').attr("hidden", "hidden");
                $('#gridExpectedIDB tr:last #fundTbdColumn').attr('hidden', 'hidden');
            }
        }

        function requestAuthorization() {
            var isOperationCreated = @ViewBag.CreationOperation.ToString().ToLower();
            if (save(isOperationCreated, false)) {
                if (isOperationCreated == true) {
                    var url = "@Url.Action(
                              "CreateWorkflow",
                              "CreationK2",
                              new {Area = "OPUS", operationNumber = Model.OperationNumber})".
                        replace("@OPUSGlobalValues.NEW_OPERATION_NUMBER", $("#OPNum").val());

                    var msg = "@Localization.GetText("OP.CR.CreationForm.Message.NewOperationMsg")" +
                        " " + $("#OPNum").val();

                    $(document).bind("keyup",keyUp);
                    showMessage(msg, true, url);
                } else {
                    var url = "@Url.Action("CreateWorkflow", "CreationK2", new {Area = "OPUS"})";
                    location.pathname = url;
                }
            }
        }

        $(document).on("click", 'ul.dropdown-menu[aria-labelledby="id-sector"] a', loadSubSectorCombo);

        $(document).on("change", "input[name='approvalDate']", function() {

            var approvalDate = converToDate($("input[name = 'approvalDate']").val());
            var dateNow = new Date;
            dateNow.setHours(0, 0, 0, 0);
            if (approvalDate < dateNow) {
                $("#parsley-errors-list.date").remove();
                $('input[name="approvalDate"]').closest("div").find('ul').addClass("filled").
                    append("<li id='parsley-errors-list' class='date'>@Localization.GetText("OP.CR.CreationForm.BD.ApprovalDateMessage")</li>");
            } else {
                $('input[name="approvalDate"]').closest("div").find('ul').removeClass("filled").find("li").remove();
            }
        });

        $(document).on("click", "[aria-labelledby='id-CONModality']", function() {

            enableRegisterAndOp();
            businessRuleMBF();
            cleanAssociatedCountries();
            CONModality();
            controlOPSTaxonomy();
        });

        function CONModality(ignoreOpr) {
            var regionalId = '@Model.RegionalId';
            var opType = $('[name="operationType"]').val();
            var conModalityAttribute = getAttribute("CONModality");
            var operationCON = '@Model.ConOperationId';
            var cipConmodality = '@Model.CipConmodality';
            var eswConmodality = '@Model.EswConmodality';
            var countryBankwide = '@Model.CountryBankwide';
            var oprModality = '@Model.OprConModalityId';
            var sectionSubsector = $('#SectionSectorSubsector');
            var country = $("#id-country");

            if (opType == operationCON) {
                switch (conModalityAttribute) {
                    case cipConmodality:
                        sectionSubsector.hide();
                        var idCountry = countryBankwide;
                        country.SetValue(
                            idCountry,
                            $('[aria-labelledby=id-country] li a[dd-value="' + idCountry + '"]').text());
                        country.prop("disabled", true);
                        break;

                    case eswConmodality:
                        sectionSubsector.hide();
                        var idCountry = regionalId;
                        country.SetValue(
                            idCountry,
                            $('[aria-labelledby=id-country] li a[dd-value="' + idCountry + '"]').text());
                        country.prop("disabled", true);
                        isRegional();
                        break;
                    case oprModality:
                        var adminId = '@Model.ResponsibilityData.CountryRelatedRoleAdminId';
                        var participantId = '@Model.ResponsibilityData.CountryRelatedRoleParticipantId';

                        country.prop("disabled", false);

                        if (sectionSubsector.is(':hidden')) {
                            sectionSubsector.show();
                        }

                        if(!ignoreOpr)
                            setRowsAssociatedCountriesOPR(
                                country.GetValue() == regionalId, adminId, participantId);
                        break;
                    default:
                        country.prop("disabled", false);

                        if (sectionSubsector.is(':hidden')) {
                            sectionSubsector.show();
                        }
                        break;
                }
            }
        }

        function enableRegisterAndOp() {
            var canRegisterOperation = @IDBContext.Current.HasPermission(
                Permission.REGISTER_OPERATION_WRITE).ToString().ToLower();

            if (!canRegisterOperation) {
                return;
            }

            if ($("[id='spnRegisterAndOp']").length > 0) {
                $("[id='spnRegisterAndOp']").addClass('hide');

                var conModalityAttribute = getAttribute("CONModality");
                var opType = $('[name="operationType"]').val();
                var currentAttribute = getAttribute('FinancingContainer');

                if (opType === "@Model.ConOperationId" && currentAttribute === "@Model.FinancingNo" &&
                    (conModalityAttribute === "@Model.EswConmodality" || conModalityAttribute === "@Model.CipConmodality")) {
                    $("[id='spnRegisterAndOp']").removeClass('hide');
                }
            }
        }

        function validateCountry() {

            $("[name=associatedCountriesCountry]").click(function() {
                var select = this.selectedOptions.item().value;
                var a = [];
                var i = 0;
                var count = 0;
                a = $("[name=associatedCountriesCountry] option:selected");
                a.each(function() {
                    if (select == a[i].value) {
                        count = count + 1;
                        if (count >= 2) {
                            this.parentElement.options.selectedIndex = 0;
                            showMessage("@Localization.GetText("OP.CR.CreationForm.Message.Country")");
                            return false;
                        }
                    }
                    i = i + 1;
                });
            });
        }

        var BingMapsKey = "@AppParameter.GetValue("BING_MAP_KEY")";

        var resultSubnational = [];
        var newResultSubnational = [];
        var newOperationSubnational = [];
        var deleteSubnationalItems = [];
        var deleteSubnationalCache = [];
        var newOperation = "XXXX0000";

        $(document).on("click", 'input[name="subnational"]', function() {
            if ($(this).is(':checked')) {
                $('a#openSubnationalCreation').show();
            } else {
                $('a#openSubnationalCreation').hide();
            }
        });

        $(document).on("click", 'a#openSubnationalCreation', function() {

            var url = '@Url.Action("GetSubnationalLevel", "View", new {area = "OPUS", partial = "_SubnationalLevel"})';
            postUrlWithOptions(url, { async: false })
                .done(function(data) {
                    $('#subnationalLevelContent').html(data);
                    if (isInEditMode($('#PageContent'))) {
                        enterEditMode(false, $('#subnationalLevelContent'), false);
                    }
                    $('[data-id="butttonsubnationalLevel"]').click();
                    allowMultiPopUp();
                });

            if (newOperationSubnational.length > 0 && $("input#OPNum").val() === newOperation) {

                for (var i = 0; i < newOperationSubnational.length; i++) {
                    var item = newOperationSubnational[i];

                    if (item !== undefined) {
                        $.get("@Url.Action("GetRowSubnationalLevel", new {tp = "noTree"})",
                            { countryRegion: item.countryRegion, adminDistrict: item.adminDistrict, locality: item.locality },
                            function(data) {
                                $("#subnationalLevelList").append(data);
                            });
                    }
                }
            }
        });

        function cancelSubnationalLevel() {
            var msg = "@Localization.GetText("OP.OD.Message.Cancel")";
            confirmAction(msg).done(function(pressOk) {
                if (pressOk) {
                    $('.vex-close').click();
                    deleteSubnationalItems = [];
                    resultSubnational = [];
                    newResultSubnational = [];
                    deleteSubnationalCache = [];
                }
            });
        }

        function subnationalLevelSearch() {
            $("#listSubnational").empty();

            var valorInput = $("[name=subnationalSearch_text]").val();
            var url = "https://dev.virtualearth.net/REST/v1/Locations?q=";
            url = url + valorInput + "&key=" + BingMapsKey;
            url += '&jsonp=?';
            $.getJSON(url, function(response) {
                getListSubnationalLevel(response);
            });
            $("#subnationalDropdown").addClass("dropdown open");
        }

        function getListSubnationalLevel(res) {
            var name = "";
            var resultados = res.resourceSets[0];
            for (var i = 0; i < resultados.resources.length; i++) {
                var item = resultados.resources[i];

                if (item.address.locality == null && item.address.adminDistrict == null) {
                    name = item.address.countryRegion;

                } else if (item.address.locality == null) {
                    name = item.address.adminDistrict + ", " + item.address.countryRegion;

                } else {
                    name = item.address.locality + ", " + item.address.adminDistrict + ", " + item.address.countryRegion;
                }

                $("#listSubnational").append("<li>" + "<a name='itemSubnational'>" + name + "</a></li>");

                resultSubnational.push({
                    value: name,
                    countryRegion: item.address.countryRegion,
                    adminDistrict: item.address.adminDistrict,
                    locality: item.address.locality
                });
            }
        }

        $(document).on("click", "[name=itemSubnational]", function() {

            var itemSelected = $(this).html();
            $("#subnationalDropdown").removeClass("dropdown open");
            for (var i = 0; i < resultSubnational.length; i++) {
                var item = resultSubnational[i];

                if (itemSelected === item.value) {
                    var countryRegion = item.countryRegion;
                    var adminDistrict = item.adminDistrict;
                    var locality = item.locality;

                    newResultSubnational.push({
                        value: itemSelected,
                        countryRegion: item.countryRegion,
                        adminDistrict: item.adminDistrict,
                        locality: item.locality
                    });

                    $.get("@Url.Action("GetRowSubnationalLevel", new {tp = "noTree"})",
                        { countryRegion: countryRegion, adminDistrict: adminDistrict, locality: locality },
                        function(data) {
                            $("#subnationalLevelList").append(data);
                        });

                    itemSelected = "";
                    $("[name=subnationalSearch_text]").val("");
                    resultSubnational = [];
                }
            }
        });

        $(document).on("click", "[name=subnationalSearch_text]", function() {
            $("[name=subnationalSearch_text]").val("");
            $("#listSubnational").empty();
            $("#subnationalDropdown").removeClass("dropdown open");
        });

        function saveSubnationalLevel() {
            if ($("input#OPNum").val() !== newOperation) {
                if (newResultSubnational.length === 0 && deleteSubnationalItems.length === 0) {
                    $("div.vex-close").click();
                    return false;
                }

                postUrlWithOptions(
                    '@Url.Action("SaveRowSubnationalLevel", "View",new {area = "OPUS"})', { async: false },
                    {
                        newResultSubnational: newResultSubnational,
                        deleteSubnationalItems: deleteSubnationalItems
                    })
                    .done(function(data) {
                        if (data) {
                            $("div.vex-close").click();
                            resultSubnational = [];
                            deleteSubnationalItems = [];
                            newResultSubnational = [];
                            deleteSubnationalCache = [];
                        }
                    });
                return true;
            }

            if (newResultSubnational.length > 0) {
                if (newOperationSubnational.length === 0) {
                    newOperationSubnational = newResultSubnational;
                } else {
                    for (var i = 0; i < newResultSubnational.length; i++) {
                        var item = newResultSubnational[i];

                        newOperationSubnational.push({
                            countryRegion: item.countryRegion,
                            adminDistrict: item.adminDistrict,
                            locality: item.locality
                        });
                    }
                }
            }

            if (newOperationSubnational.length > 0 && deleteSubnationalCache.length > 0) {
                for (var i = 0; i < newOperationSubnational.length; i++) {
                    var items = newOperationSubnational[i];
                    var adminDistrictExist;
                    var localityExist;
                    var countryRegionExist;

                    if (items !== undefined) {
                        if (items.countryRegion == null) {
                            countryRegionExist = "";
                        } else {
                            countryRegionExist = items.countryRegion;
                        }
                        if (items.adminDistrict == null) {
                            adminDistrictExist = "";
                        } else {
                            adminDistrictExist = items.adminDistrict;
                        }

                        if (items.locality == null) {
                            localityExist = "";
                        } else {
                            localityExist = items.locality;
                        }

                        for (var n = 0; n < deleteSubnationalCache.length; n++) {
                            var items = deleteSubnationalCache[n];
                            var adminDistrictDelete;
                            var localityDelete;
                            var countryRegionDelete;

                            if (items !== undefined) {
                                if (items.countryRegion == null) {
                                    countryRegionDelete = "";
                                } else {
                                    countryRegionDelete = items.countryRegion;
                                }
                                if (items.adminDistrict == null) {
                                    adminDistrictDelete = "";
                                } else {
                                    adminDistrictDelete = items.adminDistrict;
                                }

                                if (items.locality == null) {
                                    localityDelete = "";
                                } else {
                                    localityDelete = items.locality;
                                }

                                if (countryRegionDelete === countryRegionExist &&
                                    adminDistrictDelete === adminDistrictExist &&
                                    localityDelete === localityExist) {

                                    delete newOperationSubnational[i];
                                }
                            }
                        }
                    }
                }
                newOperationSubnational = newOperationSubnational.filter(Boolean);
            }
            $("div.vex-close").click();
            return true;
        }

        $(document).on("click", "[name=deleteSubnationalItems]", function() {
            var countryRegion = $(this).closest('tr').find("#countryRegion label").text();
            var adminDistrict = $(this).closest('tr').find("#adminDistrict label").text();
            var locality = $(this).closest('tr').find("#locality label").text();
            $(this).closest('tr').remove();

            if ($("input#OPNum").val() === newOperation) {

                deleteSubnationalCache.push({
                    countryRegion: countryRegion,
                    adminDistrict: adminDistrict,
                    locality: locality
                });
                return true;
            }

            deleteSubnationalItems.push({
                countryRegion: countryRegion,
                adminDistrict: adminDistrict,
                locality: locality
            });
        });

        $(document).on("click", "div.vex-close", function() {
            deleteSubnationalItems = [];
            resultSubnational = [];
            newResultSubnational = [];
            deleteSubnationalCache = [];

            disableButtons($(this));
        });

        $(document).on('change', '#operationType, #LendingType', updateSectorDropdown);

        function keyUp(e) {
            var escKey = 27;
            if (e.which == escKey) {
                disableButtons($('.vex-content'));
                $(document).unbind("keyup", keyUp);
            }
        }

        function disableButtons(element){
            var msg = "@Localization.GetText("OP.CR.CreationForm.Message.NewOperationMsg")";
            var saveModal = element.parent('div').find('div:contains("' + msg + '")').length ;

            if (saveModal > 0) {
                $('[data-idb-fieldname="btnSave"]').prop('disabled', 'disabled');
                $('[data-idb-fieldname="btnRequestAndAuth"]').prop('disabled', 'disabled');
                $('[data-idb-fieldname="btnCancel"]').prop('disabled', 'disabled');
            }
        }

        function enableDonorTrustFund(actualLine, codFund, amount) {

            if (!isPsg()) {
                var opTypeCode = $('#id-operationType').GetText().split('-')[0].trim();

                @if (ViewBag.IsDraft)
                {
                    <text>
                $.get("@Url.Action("CheckIsFundTbd", "View")",
                    {
                        fundCode: codFund,
                        amount: amount,
                        operationType: opTypeCode
                    },
                    function (data) {
                        if (data) {
                            actualLine.find('#isTbd').attr('class', 'yes');

                            if ($('th#fundTbdTitle.selected').length === 0) {
                                $('#fundTbdTitle').attr("class", "selected");
                            }

                            actualLine.closest('td')
                                .next('#fundTbdColumn')
                                .find('[data-pagemode="edit"]')
                                .attr('class', 'showDataEdit');
                            actualLine.closest('td')
                                .next('#fundTbdColumn')
                                .find('[data-pagemode="edit"]')
                                .removeAttr('hidden','hidden')
                        } else {
                            actualLine.find('#isTbd').removeAttr('class', 'yes');

                            actualLine.closest('td')
                                    .next('#fundTbdColumn')
                                    .find('[data-pagemode="edit"]')
                                    .removeAttr('class', 'showDataEdit');
                            actualLine.closest('td')
                                .next('#fundTbdColumn')
                                .find('[data-pagemode="edit"]')
                                .attr('hidden','hidden')

                            actualLine.find('select[name="FundTBD"] option').removeAttr('selected');
                            actualLine.find('select[name="FundTBD"]')
                                .next('div')
                                .find('.search-choice')
                                .remove();
                        }
                    });
                </text>
                }
                else
                {
                    @: $('[data-name="ExpectedIDB"] th:nth-child(3)').attr('hidden','hidden');
                    @: $('[name="FundTBD"]').closest('td').attr('hidden','hidden');
                }
            }
        }

        function showDonorColumn() {
            var financingTable = $('#gridExpectedIDB');

            financingTable.find('th#fundDonorCellHeader').show();
            financingTable.find('th#donor-header').show();
            $('[name=selectedPsgDonors]').closest('td').show();
            financingTable.find('td.donor').show();
        }

        function hideDonorColumn() {
            var financingTable = $('#gridExpectedIDB');
            var selectedPsg = $('[name=selectedPsgDonors]');

            financingTable.find('th#fundDonorCellHeader').hide();
            financingTable.find('th#donor-header').hide();
            selectedPsg.closest('td').hide();
            selectedPsg.closest('.chosenMultiSelect').find('a.search-choice-close').click();
            financingTable.find('td.donor').hide();
        }

        function controlPSGAttribute() {
            var isPSG = isPsg();

            if(!isPSG) {
                hideDonorColumn();
            } else {
                showDonorColumn();
            }
        }

        function textMatchTBD(str) {
            return Boolean(str.match(/\s*TBD\s*/i));
        }

        function isPsg(){
            var inputElement = $('[data-pagemode=edit] #PSG');
            var isPSG = inputElement.is(':checked');
            return isPSG;
        }

        function controlDonorSelection(evt) {

            var $this = $(this);
            row = $this.closest('tr');
            donorHasValue = $this.val();

            controlFundList(row, donorHasValue);
        }

        function controlFundList(row, donorHasValue) {

            var fundList = row.find('[aria-labelledby="id-FundId"]');

            var fundListItems = fundList.children('li');

            if (donorHasValue) {
                var hideListItems = fundListItems.filter(function() {

                    var link = $(this).children('a');
                    var isTBD = Boolean(textMatchTBD(link.text()));
                    var isInitial = link.attr('dd-value') === "";
                    var remove = true;

                    return !isTBD && !isInitial && remove;});

                hideListItems.hide();

                var selectedText = row.find('#id-FundId .valueText').text();

                if (!textMatchTBD(selectedText)) {
                    fundListItems.filter(':first').children('a').trigger('click');
                }

            } else {
                fundListItems.show();
            }
        }

        function requestAutorizationDraft() {
            var attribute = $('#SectionCategoryField');
            if (!validateAttribute(attribute))
            {
                var errorMessage = '@Localization.GetText("TC.TCAbstractModalNotSave.Message")' + '<br>';
                errorMessage += '- ' + attribute.find('label').text();
                showMessage(errorMessage);
                return false;
            }
            postUrl('@Url.Action("RequestAuthorizationDraftOperation", "View", new {area = "OPUS"})')
                .done(function(data) {
                    if (data.IsValid)
                    {
                        window.location.href = '@Url.Action("CreateWorkflow", "CreationK2", new { area = "OPUS" })';
                    }
                    showMessage(data.ErrorMessage, "Data required");
                });
        }

        function assignIsSaveOnly(isSaveOnly) {
            if (isSaveOnly == null) {
                isSaveOnly = true;
            }

            $('#isGoingToSaveOnly-model-property').val(isSaveOnly.toString());
        }

        function clearMBFCodeValue() {
            var mbfBlock = $('#id-mbfCode').closest('div');
            var selectOptionItem = mbfBlock.find('ul.dropdown-menu a:first');
            selectOptionItem.click();
            mbfBlock.find('input').val('');
            mbfBlock.find('span.valueText').text(selectOptionItem.text());
        }

        function hideOperationTypeAndCountry(){

            var operatioType = $('input[name="operationType"]');
            if (operatioType.val() !== '') {
                $('#id-operationType').prop('disabled', true)
            }

            var country = $('input[name="country"]');
            if (country.val() !== '') {
                $('#id-country').prop('disabled', true)
            }

            var countryDepartment = $('[name=countryDepartmentId]');
            var countryDepartmentCombo = $('#id-countryDepartmentId');
            if (countryDepartmentCombo.length > 0 && countryDepartment.val() !== '') {
                countryDepartmentCombo.prop('disabled', true)
            }
        }

        function prepareObjetiveFieldCip() {
            var objetivesContent = $("#objetivesContent");
            objetivesContent.find("span[class='asteriskColor']").remove();
            objetivesContent.find('[data-parsley-required]').removeAttr('data-parsley-required');
        }

        function setUnsetUIDataOperationTypeEFC() {
            hideShowFieldsOperationTypeEFC();
            dropdownFieldsSetUnsetDefaultValueOperationTypeEFC();
        }

        function hideShowFieldsOperationTypeEFC() {
            var countryDeparmentDropdown = $('#id-countryDepartmentId');
            var sectorDropdown = $('#id-sector');
            var subsectorDropdown = $('#id-subSector');
            var sectorLabel = $('#cntsubSector');
            var subSectorLabel = $('#cntSector');
            var countryDepartmentLabel = $('#lblCountryDept');
            var countryDeptLabelReadValue =
                $('div [data-idb-fieldname="ddlCountryDept"]').find('span.lblCountryDeptReadValue');
            var labelCountryDepartment = $('#CountryDeptlbl');
            var relatedOperationsSection = $('#OperationDataRelatedOperations');
            var subnationalLevelCheckBox = $('#subnationalLevel');

            if (operationCode == '@OperationType.EFC') {
                countryDeparmentDropdown.hide();
                sectorDropdown.hide();
                subsectorDropdown.hide();
                sectorLabel.hide();
                subSectorLabel.hide();
                countryDepartmentLabel.hide();
                countryDeptLabelReadValue.hide();
                relatedOperationsSection.hide();
                subnationalLevelCheckBox.hide();
                labelCountryDepartment.hide();
            } else {
                countryDeparmentDropdown.show();
                sectorDropdown.show();
                subsectorDropdown.show();
                sectorLabel.show();
                subSectorLabel.show();
                countryDepartmentLabel.show();
                countryDeptLabelReadValue.show();
                relatedOperationsSection.show();
                subnationalLevelCheckBox.show();
                labelCountryDepartment.show();
            }
        }

        function dropdownFieldsSetUnsetDefaultValueOperationTypeEFC() {
            var subSectorName = $('[name="subSector"]');
            var countryDeparmentName = $('[name="countryDepartmentId"]');

            if (operationCode == '@OperationType.EFC') {
                $('[aria-labelledby=id-sector] li:eq(0) a').click()

                subSectorName.removeAttr("data-force-parsley-validation", "");
                countryDeparmentName.removeAttr("data-force-parsley-validation", "");

                $('#relatedOperationsTable tbody tr').each( function(){
                    this.parentNode.removeChild( this );
                });

                $('#relatedOperationsTable_wrapper .Pagination').remove();
            } else {
                subSectorName.add("data-force-parsley-validation", true);
                countryDeparmentName.add("data-force-parsley-validation", true);

                if($('#relatedOperationsTable > tbody tr').length < 1)
                    $('#relatedOperationsTable > tbody')
                        .append('<tr class="odd"><td valign="top" colspan="10"' +
                            'class="dataTables_empty">' +
                            '@Localization.GetText("COMMON.Search.Related.Operation.RowsEmpty")' +
                            '</td></tr>');
            }
        }

        function autofillAssociatedCountriesOperationTypeEFC() {
            var regionalId = '@Model.RegionalId';

            if($('[aria-labelledby=id-country] li a[dd-selected][dd-value="' +
                    regionalId + '"]').length > 0 &&
                (operationCode == '@OperationType.EFC')) {
                var newCountryRelatedbutton = $('[data-action="newCountryRelated"]');

                newCountryRelated(newCountryRelatedbutton, false, false, true, false);
                newCountryRelated(newCountryRelatedbutton, false, false, false, true);
            }
        }

        function autofillCleanAssociatedInstitutionsEFC() {

            if (operationCode == '@OperationType.EFC' &&
                $("#associatedInstitutionsTable > tbody tr").length < 1) {
                saveAsocInstitution(@Model.ExecutingAgencyRoleId, @Model.UsIdbInstitutionId);
                $('#associatedInstitutionsTable > tbody td').find('.buttonTrash').remove();
            }
            else
            {
                var associatedInstitutionsTableRows = $("#associatedInstitutionsTable > tbody tr");

                if (operationCode != '@OperationType.EFC' &&
                    associatedInstitutionsTableRows.length == 0) {
                    associatedInstitutionsTableRows.remove();
                    $('#associatedInstitutionsTable > tbody')
                        .append('<tr class="odd"><td valign="top" colspan="10"' +
                            'class="dataTables_empty">' +
                            '@Localization.GetText("COMMON.Search.Related.Operation.RowsEmpty")' +
                            '</td></tr>');
                }
            }
        }

        function checkCategoryByFundsAmount() {
            if ($('div#SectionCategoryField').hasClass('hide'))
                return;

            var totalAmount = 0.0;
            $('#gridExpectedIDB tbody tr').each(function() {
                var amount = $(this).find('input[name="UsAmount"]').val();
                if (amount != undefined) {
                    totalAmount += parseFloat(amount.replace(/\,/g, ""));
                }
            });

            postUrl(
                '@Url.Action("CheckCategoryByFundsAmount", "View", new { area = "OPUS" })',
                {
                    operationTypeId: actionOperationGlobal,
                    totalAmount: totalAmount,
                })
            .done(function (response) {
                if (response.IsValid) {
                    setRequiredCategory(response.NullableValue)
                } else {
                    showMessage(response.ErrorMessage);
                }
            });
        }

        function removeInstitutionUSIdbTrashButton(operationType) {
            if (operationType == '@OperationType.EFC') {
                $("#associatedInstitutionsTable tr:contains('@ClauseConstants.ACRNM_US_IDB')")
                    .find('.buttonTrash').remove();
            }
        }

        function checkCountriesByOperationType(operationCode, hqCountry, bkCountry) {
            checkHqByOperationType(operationCode, hqCountry);
            checkBkByOperationType(operationCode, bkCountry);
        }

        function checkHqByOperationType(operationCode, hqCountry) {
            var operationsTypes = [
                '@OperationType.EFC',
                '@OperationType.EQU',
                '@OperationType.CON',
                '@OperationType.GUA',
                '@OperationType.LON',
                '@OperationType.IGR'];

            if ($.inArray(operationCode, operationsTypes) >= 0) {
                hqCountry.hide();

                return;
            }

            hqCountry.show();
        }

        function checkBkByOperationType(operationCode, bkCountry) {
            var operationsTypes = [
                '@OperationType.TCP',
                '@OperationType.IGR',
                '@OperationType.EFC',
                '@OperationType.EQU',
                '@OperationType.GUA',
                '@OperationType.LON'];

            if ($.inArray(operationCode, operationsTypes) >= 0) {
                bkCountry.hide();

                return;
            }

            bkCountry.show();
        }

        function loadSubSectorCombo(event) {
            var idSector = $("input[name='sector']").attr('value');

            if (idSector !== '@Model.SectorOtherId' && idSector !== '') {
                if (idSector != cclipOperationsData.MultipleSectorId) {
                    $('#id-subSector').removeAttr("disabled");
                    $("[name='subSector']").removeAttr("disabled");
                }

                $.ajax({
                    url: "@Url.Action("FillSubSector", "View", new {area = "OPUS"})",
                    type: "POST",
                    dataType: "json",
                    data: { 'idSector': idSector },
                    success: function(result) {
                        var data = $.map(result, function(item, a) {
                            return "<li><a dd-value=" + item.Value + ">" + item.Text + "</a></li>";
                        });

                        data.unshift("<li><a dd-value>(select option)</a></li>");
                        $subSector = $('ul.dropdown-menu[aria-labelledby="id-subSector"]');
                        $subSector.html(data.join(""));

                        if (event && event.type === 'click') {
                            $subSector.closest('div.dropdown').find('button').FirstorDefault();
                        }

                        cclipOperationsData.SetSubSectorValueForCCLIP();
                    }
                });

                $('[name="subSector"]').attr("data-parsley-required", true);

            } else {
                $('#id-subSector').attr("disabled", "disabled");
                $("[name='subSector']").attr("disabled", "disabled");
                $('[name="subSector"]').attr("data-parsley-required", false);
                $('ul.dropdown-menu[aria-labelledby="id-subSector"]').
                closest('div.dropdown').find('button').FirstorDefault();
            }
        }

        function hasIICInterAmericanInvestmentCorp() {

            if (operationCode != '@OperationType.EFC')
                return false;

            var hasIICInterAmericanInvestmentCorp = false;

            $('#organizationalUnitTable tbody tr').each(function() {

                var $row = $(this);

                var rowIdOrganizationalUnit =
                    $row.find('[aria-labelledby=id-OrganizationalUnit] a[dd-selected]')
                        .attr('dd-value');
                var rowIdRole = $('#RoleOrganizationalUnit').val();

                if(rowIdOrganizationalUnit == "@Model.OrgUnitIICId" &&
                    rowIdRole == "@Model.ResponsibleRoleId") {
                    hasIICInterAmericanInvestmentCorp = true;
                    return false;
                }

            });

            return hasIICInterAmericanInvestmentCorp;
        }

        function cleanAllInstitutions () {
            $("#associatedInstitutionsTable > tbody tr").remove();
        }

        function addIICInstitution() {
            saveAsocInstitution(@Model.ExecutingAgencyRoleId, @Model.UsIICInstitutionId)
            $('#associatedInstitutionsTable > tbody td').find('.buttonTrash').remove();
        }

        function institutionEFCController() {
            if (hasIICInterAmericanInvestmentCorp()) {
                cleanAllInstitutions();
                addIICInstitution();
            }
            else {
                autofillCleanAssociatedInstitutionsEFC();
            }
        }

    </script>
}

<script type="text/javascript">
    $('[name="' + cclipOperationsData.MultiSectorAttribName + '"]').find('[value='+ cclipOperationsData.MultipleSectorId +']').hide();
</script>