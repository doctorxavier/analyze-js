@using IDB.Presentation.MVC4.Helpers
@model IDB.MW.Application.OPUSModule.ViewModels.ApprovalIncreasesRevampService.RequestIncreaseViewModel

<div class="roundedBox container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="mt15">
                @Confluence.Label(Localization.GetText("OP.FD.PopUp.TransactionType"))
                <div>
                    @{            
                        var transactionTypes = Html.BuildSelectItemList(
                            Model.TransactionTypes,
                            tran => tran.Text,
                            tran => tran.Value);
                    }

                    @Confluence.InputDropDown(Model.TransactionTypeId != 0 ? 
                        Model.TransactionTypeId.ToString() : 
                        string.Empty, 
                        "ddlTransactionType",
                        transactionTypes, 
                        width: "415px")
                </div>
            </div>
            <div class="mt15">
                <span id="lblFund" class="visibilityHidden">
                    @Confluence.Label(Localization.GetText("OP.FD.PopUp.SelectExistingFund"))
                </span>
                <div id="funds" class="visibilityHidden">
                    @Confluence.InputDropDown(Model.FundId != 0 ? 
                        Model.FundId.ToString() : 
                        string.Empty,
                        "ddlFunds",
                        Model.Funds != null ? 
                            Html.BuildSelectItemList(
                                Model.Funds,
                                source => source.Text,
                                source => source.Value) :
                            null,
                        width: "415px")
                </div>
            </div>           
        </div>
        <div class="col-md-6">
            <div class="mt15">
                @Confluence.Label(Localization.GetText("OP.FD.PopUp.FundingSource"))
                <div>
                    @{
                        var fundingSources = Html.BuildSelectItemList(
                            Model.FundingSources,
                            source => source.Text,
                            source => source.Value);
                    }

                    @Confluence.InputDropDown(Model.FundingSourceId != 0 ? 
                        Model.FundingSourceId.ToString() : 
                        string.Empty, 
                        "ddlFundingSource",
                        fundingSources, 
                        width: "415px")
                </div>
            </div>
        </div>
    </div>
    <div>
        <table class="tableNormal mt30 mb20">
            <thead>
                <tr>
                    <th class="col-md-3">@Localization.GetText("OP.FD.PopUp.FinancingType")</th>
                    <th class="col-md-1">@Localization.GetText("OP.FD.PopUp.Transaction")</th>
                    <th class="col-md-3">@Localization.GetText("OP.FD.PopUp.FundCurrency")</th>
                    <th class="col-md-2">@Localization.GetText("OP.FD.PopUp.Amount")</th>
                    <th class="col-md-1">@Localization.GetText("OP.FD.PopUp.UsEquivalent")</th>
                    <th class="col-md-2">@Localization.GetText("OP.FD.ExecutingAgency")</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Confluence.InputDropDown(Model.FinancingTypeId != 0 ? 
                            Model.FinancingTypeId.ToString() : 
                            string.Empty, 
                            "ddlFinancingType",
                            Model.FinancingTypes != null ?
                                Html.BuildSelectItemList(
                                    Model.FinancingTypes,
                                    finType => finType.Text,
                                    finType => finType.Value) :
                                null,
                            width: "200px")
                    </td>
                    <td id="lblTransactionType">@Confluence.Label(string.Empty)</td>
                    <td id="lblFundCurrency">
                        @Confluence.Label(Model.FundCurrencyName)
                        @Confluence.InputHidden(Model.FundCurrencyCode, id: "hidCurrencyCode")
                    </td>
                    <td>
                        @Confluence.InputDecimal(Model.Amount,
                            "txtAmountIncreases",
                            minValue: "0.00",
                            maxValue: "999999999999.99",
                            htmlClass: "text-right", 
                            width: "100%")
                    </td>
                    <td id="lblUsAmount" class="text-right">
                        @Confluence.LabelDecimal(Model.UsAmount)
                    </td>
                    <td>
                        @{
                            var executingAgencies = Html.BuildSelectItemList(
                                Model.ExecutingAgencies,
                                agency => agency.Text,
                                agency => agency.Value);
                        }                        

                        @Confluence.InputDropDown(Model.ExecutingAgencyId != 0 ? 
                            Model.ExecutingAgencyId.ToString() : 
                            string.Empty, 
                            "ddlExecutingAgency",
                            executingAgencies, 
                            width: "130px")
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="modal-footer">
        <div data-id="headerButtons" class="text-right">
            @Confluence.ButtonLink(Localization.GetText("OP.FD.Cancel"), 
                action: "cancelRequestIncrease")
            @if (Model.TransactionTypeId == 0)
            { 
                @Confluence.ButtonBlue(Localization.GetText("OP.FD.RequestIncrease"), 
                    action: "newRequestIncrease")
            }
            else
            {
                @Confluence.ButtonBlue(Localization.GetText("OP.FD.PopUp.ChangeIncrease"),
                    action: "saveChangeIncrease")
            }
        </div>
    </div>
</div>