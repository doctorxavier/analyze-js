@using IDB.Presentation.MVC4.Areas.OPUS.Helpers;
@using IDB.MW.Application.OPUSModule.ViewModels.FinancialDataPreparationService;
@using IDB.MW.Domain.Values;

@model FinancialDataPreparationViewModel

<table id="CounterpartFinancing" class="tableNormal CounterpartFinancing mb20">
    <thead>
        <tr>
            <th class="tree icon singleTableCollapseCofinancing" colspan="7">
                <span class="icon singleTableCollapse">-</span>
                <span style="display:none"></span>
                <div class="cofinancing-tables-header-wrapper">
                    <div class="firstLabel">
                        @Confluence.LabelBold(
                            Localization.GetText("OP.FD.Preparation.CounterPartFinancing"))
                        <div name="localCounterpartAmount" class="inlineBlock alignCoFinancing text-right">
                            <div data-pagemode="edit" class="alignTotalAmount amounts-left-position">
                                @Confluence.LabelDecimal(
                            Model.CounterpartFinancing.CounterpartAmount,
                            htmlClass: "counterPartAmountOnEditMode",
                            dataAttributes: new Dictionary<string, string>() {
                            { "idb-fieldname", "txtCountFinAmount" },
                            { "id", "CounterpartFinancingAmount" } },
                            bold: true)
                            </div>
                            <div data-pagemode="read" class="amounts-left-position">
                                @Confluence.LabelDecimal(
                            Model.CounterpartFinancing.CounterpartAmount,
                            bold: true,
                            htmlClass: "counterPartAmountOnReadMode")
                            </div>
                        </div>

                    </div>
                    @Confluence.InformationSection(
                        Localization.GetText(
                            "OP.FD.Preparation.CounterpartResources.Info"),
                            "100%",
                            htmlClass: "mt10 complementary-resources-info-text")
                </div>

            </th>
        </tr>
        <tr data-id="">
            <td class="tree">
                <span></span><span class="selected"></span>
            </td>
            <th class="w150">
                @Localization.GetText("OP.FD.Preparation.CounterPartFinancing.Type")
            </th>
            <th class="coFinancing-column-width-eighteen-percent">
                @Localization.GetText("OP.FD.Preparation.CounterPartFinancing.FundingSource")
            </th>
            <th class="coFinancing-column-width-ten-percent">
                @Localization.GetText("OP.FD.Preparation.CounterPartFinancing.CashOrInKind")
            </th>
            <th class="coFinancing-column-width-thirtyfive-percent" title="@Localization.GetText("OP.FD.Preparation.TooltipMessage")">
                @Localization.GetText("OP.FD.Preparation.CounterPartFinancing.DescriptionOfResources")
            </th>
            <th class="coFinancing-column-width-ten-percent">
                @Localization.GetText("OP.FD.Preparation.CounterPartFinancing.Amount")
            </th>
            <th class="coFinancing-column-width-ten-percent">
                @Localization.GetText("OP.FD.Preparation.CounterPartFinancing.Status")
            </th>
            <th class="coFinancing-column-width-four-percent"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.CounterpartFinancing.CounterpartFinancingDetail.Any())
        {
            foreach (var row in Model.CounterpartFinancing.CounterpartFinancingDetail)
            {

                <tr data-id="@row.Id">
                    <td class="tree"><span></span><span class="selected"></span></td>
                    <td class="coFinancing-column-width-thirteen-percent">
                        @{ var listFundingSource = CofinancingHelper.GetCounterPartTypes(); }

                        <div data-pagemode="read">@CofinancingHelper.GetDescriptionByCode(
                                                 row.TypeCode, listFundingSource)</div>
                        <div data-pagemode="edit">
                            <input type="hidden" name="CounterpartDetailId" value="@row.Id.ToString()" />

                            @if (Model.Permissions.LocalCounterpartPermission ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.InputDropDown(row.TypeCode,
                                     "CounterpartFinancingTypes",
                                     listFundingSource,
                                     width: "130px",
                                     required: true)
                            }
                            else
                            {
                                @Confluence.Label(CofinancingHelper.
                                     GetDescriptionByCode(row.TypeCode, listFundingSource))
                                <input type="hidden" name="CounterpartDetailId" value="@row.Id.ToString()" />
                                <input type="hidden" name="CounterpartFinancingTypes" value="@row.TypeCode.ToString()" />
                            }

                        </div>
                    </td>
                    <td>
                        <div data-pagemode="read">
                            @Confluence.Label(row.FundingSourceDescription)
                        </div>
                        <div data-pagemode="edit">
                            @if (Model.Permissions.LocalCounterpartPermission ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.InputSelectDropDownAutoComplete(
                                    row.FundingSourceCode,
                                    "CounterpartFundingSource",
                                    CofinancingHelper.GetFundingSources(row.FundingSourceCode),
                                    required: true,
                                    orderAsc: false,
                                    groupName: true,
                                    dataAttributes: new Dictionary<string, string>()
                                    {
                                        { "value", row.FundingSourceCode },
                                        { "text", row.FundingSourceDescription }
                                    },
                                    width: "100%",
                                    maxLength: 200)
                            }
                            else
                            {
                                @Confluence.Label(row.FundingSourceDescription)
                                <input type="hidden" name="CounterpartFundingSource" 
                                    value="@row.FundingSourceCode.ToString()" />
                            }
                        </div>

                    </td>
                    <td>
                        @{ 
                            var listCashhOrKindSources = CofinancingHelper.GetCashOrInKindList(); 
                        }
                        <div data-pagemode="read">
                            @Confluence.Label(CofinancingHelper.GetDescriptionByCode(
                                row.CashKindCode, listCashhOrKindSources), 
                                htmlClass: "CounterpartFinancingCashOrInKind")
                        </div>
                        <div data-pagemode="edit">
                            @if (Model.Permissions.LocalCounterpartPermission ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.InputDropDown(row.CashKindCode,
                                    "CounterpartFinancingCashOrInKind",
                                    CofinancingHelper.GetCashOrInKindList(row.CashKindCode),
                                    width: "100%",
                                    required: true)
                            }
                            else
                            {
                                @Confluence.Label(CofinancingHelper.GetDescriptionByCode(
                                    row.CashKindCode, listCashhOrKindSources),
                                    htmlClass: "CounterpartFinancingCashOrInKind")
                                <input type="hidden" name="CounterpartFinancingCashOrInKind"
                                       value="@row.CashKindCode.ToString()" />
                            }
                        </div>
                    </td>
                    <td>
                        <div data-pagemode="read">
                            @Confluence.Label(row.DescriptionResources)
                        </div>
                        <div data-pagemode="edit">
                            @if (Model.Permissions.LocalCounterpartPermission ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.InputText(row.DescriptionResources,
                                    "CounterpartFinancingDescription",
                                    width: "100%",
                                    required: CofinancingHelper.IsDescriptionRequired(
                                        row.CashKindCode,
                                        row.FundingSourceCode),
                                    maxLength: 200,
                                    dataAttributes: new Dictionary<string, string>()
                                    {
                                        { "idb-fieldname", "txtCountFinName" }
                                    })
                            }
                            else
                            {
                                @Confluence.Label(row.DescriptionResources)
                                <input type="hidden" name="CounterpartFinancingDescription"
                                       value="@row.DescriptionResources.ToString()" />
                            }
                        </div>
                    </td>
                    <td class="text-right">
                        <div data-pagemode="read">
                            @Confluence.LabelDecimal(
                                row.Amount,
                                htmlClass: "CounterPartAmountReadMode")
                        </div>
                        <div data-pagemode="edit">
                            @if ((Model.Permissions.LocalCounterpartPermission && !Model.AreLockedAmountsByGCM) ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.InputDecimal(
                                    row.Amount,
                                    "CounterPartAmount",
                                    width: "100%",
                                    required: true,
                                    htmlClass: "text-right")
                            }
                            else
                            {
                                @Confluence.LabelDecimal(
                                    row.Amount, 
                                    htmlClass: "CounterPartAmountReadMode")
                                @Confluence.InputDecimal(
                                    row.Amount,
                                    "CounterPartAmount",
                                    width: "100%",
                                    required: true,
                                    htmlClass: "text-right hide")
                            }
                        </div>
                    </td>
                    <td>
                        <div data-pagemode="read">
                            @Confluence.Label(row.StatusName, 
                                htmlClass: "statusReadMode", 
                                dataAttributes: new Dictionary<string, string>()
                                {
                                    { "statusCodeValue", row.StatusTypeCode }
                                })
                        </div>
                        <div data-pagemode="edit">
                            @if (Model.Permissions.LocalCounterpartPermission ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.InputDropDown(
                                    row.StatusTypeCode,
                                    "CounterpartStatus",
                                    CofinancingHelper.GetMasterCodeSources(OPUSGlobalValues.COFIN_STATUS),
                                    width: "100%",
                                    required: true)
                            }
                            else
                            {
                                @Confluence.Label(row.StatusTypeCode, htmlClass: "statusReadMode")
                                <input type="hidden" name="CounterpartStatus"
                                       value="@row.StatusTypeCode.ToString()" />
                            }
                        </div>
                    </td>
                    <td>
                        <div data-pagemode="edit">
                            @if ((Model.Permissions.LocalCounterpartPermission && !Model.AreLockedAmountsByGCM) ||
                                Model.Permissions.FinancialWritePermision)
                            {
                                @Confluence.ButtonTrash(
                                    text: "",
                                    name: "removeCounterPart")
                            }
                        </div>
                    </td>
                </tr>

             }
        }
        <tr class="no-height"></tr>
    </tbody>
</table>

@if (!Model.CounterpartFinancing.CounterpartFinancingDetail.Any())
{
    <div class='col-md-12 noRecords CounterpartFinancing'>
        <p class='noRecords text-center mb10'>
            @Localization.GetText("OP.FD.Preparation.NoRecords")
        </p>
    </div>
}

@if ((Model.Permissions.LocalCounterpartPermission && !Model.AreLockedAmountsByGCM) ||
    Model.Permissions.FinancialWritePermision)
{
    <div class="col-md-12 buttonWrapper CounterpartFinancing">
        <div data-pagemode="edit" class="text-center mb20">
            @Confluence.ButtonAddNewRows(
                Localization.GetText(
                    "OP.FD.Preparation.AddNewCounterpartFinancing"),
                    "CounterpartFinancing",
                    "CounterpartFinancing"
            )
        </div>
    </div>
}