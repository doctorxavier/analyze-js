@using IDB.MVCControls.DataTable.Helpers
@using System.Globalization

@model List<IDB.MW.Application.OPUSModule.ViewModels.CreationFormService.OrganizationalUnitRowViewModel>

@{
    var jquerySelector = "{\"BasicFilter\":{\"basic\":\"[name='operationType']\"}};";
    jquerySelector += "{\"BasicFilter\":{\"basic\":\"[name='LendingType']\"}};";
    jquerySelector += "{\"ElementFilter\":{\"closest\":\"tr\",\"find\":\"[name='RoleOrganizationalUnit']\"}};";
    jquerySelector += "{\"BasicFilter\":{\"basic\":\"[name='Intruments']\"}};";
    jquerySelector += "{\"BasicFilter\":{\"basic\":\"[name='MIFNSGInst']\"}}";

 }

<div class="row row-header">
    <div class="col-md-12 subtitleGroup">
        @Localization.GetText("OP.CR.CreationForm.BD.RD.OrganizationalUnit")
    </div>
</div>
<div class="row row-body-40">
    <div class="col-md-12">
        @if (ViewBag.CreationWritePermission == true || ViewBag.Creation == true)
        {
            var configOrganizationalUnitTable = Html.RenderDataTable(Model);
            configOrganizationalUnitTable.Name("organizationalUnitTable")
                .PrimaryKey(m => m.RowId.ToString(CultureInfo.InvariantCulture))
                .AddPrimaryKeyToName(false)
                .Columns(columns =>
                {
                    columns.Template(c => Confluence.LabelGetDropDown(c.Role.ToString(), 
                        ViewBag.RoleList)).EditableTemplate(row =>
                            Confluence.InputDropDown(
                                row.Role.ToString(),
                                "RoleOrganizationalUnit",
                                ViewBag.RoleList,
                                width: "100%",
                                dataAttributes: new Dictionary<string, string>() {
                                    { "idb-fieldname", "ddlOrgUnitRole" }
                                }))
                        .Header(Localization.GetText("OP.CR.CreationForm.BD.RD.OU.Role"));
                    columns.Template(c =>
                            Confluence.LabelGetDropDown(c.OrganizationalUnit.ToString(), 
                            ViewBag.OrganizationalUnitList)) .EditableTemplate(row =>
                            Confluence.InputDropDownAsync(
                                row.OrganizationalUnit > 0 ? row.OrganizationalUnit.ToString() : null,
                                "OrganizationalUnit",
                                Url.Action("GetOrganizationalUnits", "View", new
                                {
                                    area = "Opus",
                                    actualDivision = row.OrganizationalUnit
                                }),
                                textSelected: ControlTemplates.DropDownGetSelectedString(
                                    row.OrganizationalUnit, ViewBag.OrganizationalUnitList),
                                width: "100%",
                                dataAttributes: new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlOrgUnit" }
                                },
                                evalGuaranteed: true,
                                dependenceComponentSelectors: jquerySelector))
                        .Header(Localization
                            .GetText("OP.CR.CreationForm.BD.RD.OU.OrganizationalUnit"));
                    columns.Bound(c => c.RowId).Hidden(true)
                        .EditableTemplate(
                            @<input type="hidden" name="OrganizationalUnitRowId" 
                                    value="@item.RowId.ToString()"/>);
                    columns.Bound(c => String.Empty)
                        .EditableTemplate(row =>
                            Confluence.ButtonTrash(
                                null,
                                null,
                                "removeRow",
                                dataAttributes: new Dictionary<string, string>() {
                                    { "idb-fieldname", "btnDeleteOrgUnit" }
                                }))
                        .CssHeaderClass("w130");
                });
            configOrganizationalUnitTable.TableClass = "tableNormal endSpacing";
            @Html.Partial("Controls/DataTable", configOrganizationalUnitTable)
            <div class="col-md-12">
                <div data-pagemode="edit" class="text-center">
                    @Confluence.ButtonAddNewRows(
                        Localization.GetText("OP.CR.CreationForm.BD.RD.OU.NewOrganizationalUnit"),
                        "organizationalUnitTable",
                        null,
                        "newOrganizationalUnit",
                        dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "btnNewOrgUnit" } })
                </div>
            </div>
        }
        else
        {
            var configOrganizationalUnitTable = Html.RenderDataTable(Model);
            configOrganizationalUnitTable.Name("organizationalUnitTable")
                .PrimaryKey(m => m.RowId.ToString(CultureInfo.InvariantCulture))
                .AddPrimaryKeyToName(false)
                .Columns(columns =>
                {
                    columns.Template(c => Confluence.LabelGetDropDown(c.Role.ToString(), 
                        ViewBag.RoleList)).EditableTemplate(row =>
                            Confluence.InputDropDown(
                                row.Role.ToString(),
                                "RoleOrganizationalUnit",
                                ViewBag.RoleList,
                                width: "100%",
                                dataAttributes: new Dictionary<string, string>() {
                                    { "idb-fieldname", "ddlOrgUnitRole" }
                                },
                                htmlClass: "hide"))
                        .Header(Localization.GetText("OP.CR.CreationForm.BD.RD.OU.Role")).Persistent();
                    columns.Template(c =>
                            Confluence.LabelGetDropDown(c.OrganizationalUnit.ToString(), 
                            ViewBag.OrganizationalUnitList)).EditableTemplate(row =>
                            Confluence.InputDropDownAsync(
                                row.OrganizationalUnit > 0 ? row.OrganizationalUnit.ToString() : null,
                                "OrganizationalUnit",
                                Url.Action("GetOrganizationalUnits", "View", new
                                {
                                    area = "Opus",
                                    actualDivision = row.OrganizationalUnit
                                }),
                                textSelected: ControlTemplates.DropDownGetSelectedString(
                                    row.OrganizationalUnit, ViewBag.OrganizationalUnitList),
                                width: "100%",
                                dataAttributes: new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlOrgUnit" }
                                },
                                evalGuaranteed: true,
                                dependenceComponentSelectors: jquerySelector,
                                htmlClass: "hide"))
                        .Header(Localization
                            .GetText("OP.CR.CreationForm.BD.RD.OU.OrganizationalUnit")).Persistent();
                    columns.Bound(c => c.RowId).Hidden(true)
                        .EditableTemplate(
                            @<input type="hidden" name="OrganizationalUnitRowId" 
                                    value="@item.RowId.ToString()"/>);
                });
            configOrganizationalUnitTable.TableClass = "tableNormal endSpacing";
            @Html.Partial("Controls/DataTable", configOrganizationalUnitTable)
        }
    </div>
</div>