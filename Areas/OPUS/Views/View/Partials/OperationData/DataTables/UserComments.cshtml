@using IDB.MVCControls.General.Helpers
@using IDB.MW.Infrastructure.Configuration

@model List<IDB.MW.Application.OPUSModule.ViewModels.Common.GenericCommentsViewModel>
@{var formatDate = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDate; }

<div class="row row-body">
    <div id="UserCommentFields">
        @foreach (var comment in Model)
{
    <div class="col-md-12">
        @if (IDBContext.Current.UserName == comment.User)
        {


            <div data-pagemode="read">

                @Confluence.InputCommentBox(
                    Confluence.Label(comment.User),
                    Confluence.Label(FormatHelper.Format(Convert.ToDateTime(comment.Date), formatDate)),
                    null, comment.Comment, "commentComment", disabled: true, isReadOnly: true)
            </div>
            <div data-pagemode="edit">
                                @Confluence.InputCommentBox(
                    Confluence.Label(comment.User),
                    Confluence.Label(FormatHelper.Format(Convert.ToDateTime(comment.Date), formatDate)),
                    null, comment.Comment, "commentComment")
                <div class="hide">
                    <span class="hide"><input type="hidden" name="commentCommentId" value="@comment.CommentId" /></span>
                </div>
            </div>
            <div data-pagemode="edit" class="btnDeleteRepeater col-md-12">
                @Confluence.ButtonTrash(null, null, "removeRowUserComment")
                <br/><br/><br/>
            </div>
        }
        else
        {
            @Confluence.InputCommentBox(
                    Confluence.Label(comment.User),
                    Confluence.Label(FormatHelper.Format(Convert.ToDateTime(comment.Date), formatDate)),
                    null, comment.Comment, "commentComment", disabled: true, isReadOnly: true)
        }
    </div>
    
}
    </div>
</div>
