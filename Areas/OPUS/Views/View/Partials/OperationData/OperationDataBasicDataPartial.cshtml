@using IDB.MW.Application.OPUSModule.ViewModels.OperationDataService
@using IDB.MW.Application.Core.ViewModels.FormRendering
@using IDB.MW.Domain.Values
@using IDB.Architecture.Extensions
@using IDB.Presentation.MVC4.Helpers

@model  BasicDataViewModel

@if (ViewBag.BasicDataPermission ?? false ||
    ViewBag.GCMWritePermission ?? false ||
    ViewBag.VPCWritePermission ?? false ||
    ViewBag.VPSManagerWrite ?? false)
{
    <div class="header">
        <div class="row">
            <div class="col-md-12">
                @Html.Partial("Partials/OperationData/buttonsBasicData")
            </div>
        </div>
    </div>
}

@if (Model != null)
{
    var mbfCodes = Model.MbfCodes != null ?
        Html.BuildSelectItemList(Model.MbfCodes,
            o => o.Text,
            o => o.Value) :
        new List<SelectListItem>();
    
    <input type="hidden" id="hidBasicDataViewModel" value="@Model.SerializedModel" />
    <input type="hidden" name="operationCountryId" value="@Model.CountryId">
    <input type="hidden" name="operationResponsible" value="@Model.CountryDepartmentId">
    <input type="hidden" name="operationType" value="@Model.OperationType">
    <input type="hidden" name="psgAttribute" value="@Model.PsgAttribute.ToString()">
    <input type="hidden" id="mbfCodeValue" value="@Model.MbfCode.ToString()">

    <div class="row">
        <div class="grouping-section">
            <div class="groupColumn col-md-12">
                <label class="lbltitle">
                    @Localization.GetText("OP.OD.TabBasicData.GeneralInformation")
                </label>
            </div>
            <div class="groupColumn col-md-4">
                <div class="col-md-12 lblcontent">
                    @Localization.GetText("OP.OD.TabBasicData.OperationType")
                </div>
                <div id="cntOpType" class="col-md-12 lblvalue">
                    @Confluence.LabelGetDropDown(
                        Model.OperationType.ToString(),
                        (List<SelectListItem>)ViewBag.OperationTypeList,
                        true)
                </div>

                @if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "ddlOperationYear"))
                {
                    <div data-idb-fieldname="ddlOperationYear">
                        <div  id="cntOperationYear" class="col-md-12 lblcontent">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabBasicData.OperationYear"),
                                new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlOperationYear" }
                                })
                            @Confluence.LabelAsterisk()
                        </div>
                        <div class="col-md-12 lblvalue">
                            <span data-pagemode="read">
                                @Confluence.LabelBold(
                                    Model.OperationYear > 0 ? Model.OperationYear.ToString() : "")
                            </span>
                            <span data-pagemode="edit">
                                @Confluence.InputHidden(
                                    Model.OperationYear > 0 ? Model.OperationYear.ToString() : "",
                                    "hdOperationYear")
                                @Confluence.InputDropDown(
                                    Model.OperationYear == 0 ?
                                        DateTime.Now.Year.ToString() :
                                        Model.OperationYear.ToString(),
                                    "operationYear",
                                    (List<SelectListItem>)ViewBag.Years,
                                    disabled: SecurityHelper.IsReadOnly(
                                        ViewBag.FieldAccessList,
                                        "ddlOperationYear"),
                                    required: true,
                                    dataAttributes: new Dictionary<string, string>()
                                    {
                                        { "idb-fieldname", "ddlOperationYear" }
                                    })
                            </span>
                        </div>
                    </div>
                }

                @if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "ddlSector"))
                {
                    <div data-idb-fieldname="ddlSector">
                        <div id="cntSector" class="col-md-12 lblcontent">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabBasicData.Sector"),
                                new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlSector" }
                                })
                            @Confluence.LabelAsterisk()
                        </div>
                        <div class="col-md-12 lblvalue">
                            <span data-pagemode="read">
                                @Confluence.LabelGetDropDown(
                                    Model.Sector.ToString(),
                                    (List<SelectListItem>)ViewBag.OperationSectorList,
                                    true)
                            </span>
                            <span data-pagemode="edit">
                                @Confluence.InputDropDown(
                                    Model.Sector.ToString(),
                                    "sector",
                                    (List<SelectListItem>)ViewBag.OperationSectorList,
                                    disabled: SecurityHelper.IsReadOnly(
                                        ViewBag.FieldAccessList,
                                        "ddlSector"),
                                    required: SecurityHelper.IsRequired(
                                        ViewBag.FieldAccessList,
                                        "ddlSector"),
                                    dataAttributes: new Dictionary<string, string>()
                                    {
                                        { "idb-fieldname", "ddlSector" }
                                    })
                            </span>
                        </div>
                    </div>
                }

                @if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "ddlSubSector"))
                {
                    <div data-idb-fieldname="ddlSubSector">
                        <div id="cntsubSector" class="col-md-12 lblcontent">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabBasicData.Subsector"),
                                new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlSubSector" }
                                })
                            @Confluence.LabelAsterisk()
                        </div>
                        <div class="col-md-12 lblvalue" name="subSector">
                            <span data-pagemode="read">
                                @Confluence.LabelGetDropDown(
                                    Model.Subsector.ToString(),
                                    (List<SelectListItem>)ViewBag.OperationSubsectorList,
                                    true)
                            </span>
                            <span data-pagemode="edit">
                                @Confluence.InputDropDown(
                                    Model.Subsector.ToString(),
                                    "subsector",
                                    (List<SelectListItem>)ViewBag.OperationSubSectorList,
                                    required: SecurityHelper.IsRequired(
                                        ViewBag.FieldAccessList,
                                        "ddlSubSector"),
                                    dataAttributes: new Dictionary<string, string>()
                                    {
                                        { "idb-fieldname", "ddlSubSector" }
                                    },
                                    disabled: Model.Subsector == 0)
                            </span>
                        </div>
                    </div>
                }
                </div>
            <div class="groupColumn col-md-4">
                <div class="col-md-12 lblcontent">
                    @Confluence.InputHidden(Model.CountryId.ToString(), "country")
                    @Localization.GetText("OP.OD.TabBasicData.Country")
                </div>
                <div id="countryLabel" class="col-md-12 lblvalue">
                    @Confluence.LabelGetDropDown(
                        Model.CountryId.ToString(),
                        (List<SelectListItem>)ViewBag.CountryList,
                        true)
                </div>

                @if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "ddlCountryDepartment"))
                {
                    <div data-idb-fieldname="ddlCountryDepartment">
                        <div id="cntCountryDept" class="col-md-12 lblcontent opdata-table-like">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabBasicData.CountryDepartment"),
                                new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlCountryDepartment" }
                                },
                                null,
                                "opdata-cell-like text-nowrap")
                            <span class="tc-abstract-not-editable-message pull-left opdata-table-like opdata-padding-left hide">
                                <span class="information-circle-gray opdata-cell-like"></span>
                                <span class="information opdata-cell-like">
                                    @Localization.GetText("TCAbstract.Service.NotEditable.Fields.InformationMessage")
                                </span>
                            </span>
                        </div>
                        <div class="col-md-12 lblvalue" name="countryDepartment">
                            <span data-pagemode="read">
                                @Confluence.LabelBold(Model.CountryDepartment)
                            </span>
                            @if (ViewBag.IsRegionalPermission)
                            {
                                <span data-pagemode="edit">
                                    @Confluence.InputDropDown(
                                        Model.CountryDepartmentId.ToString(),
                                        "countryDepartmentId",
                                        (List<SelectListItem>)ViewBag.CountryDepartmentList,
                                        disabled: SecurityHelper.IsReadOnly(
                                            ViewBag.FieldAccessList,
                                            "ddlCountryDepartment"),
                                        required: SecurityHelper.IsRequired(
                                            ViewBag.FieldAccessList,
                                            "ddlCountryDepartment"),
                                        dataAttributes: new Dictionary<string, string>()
                                        {
                                            { "idb-fieldname", "ddlCountryDepartment" }
                                        })
                                </span>
                            }
                            else
                            {
                                <span data-pagemode="edit">
                                    @Confluence.LabelBold(Model.CountryDepartment)
                                </span>
                            }
                        </div>
                    </div>
                }

                @if (ViewBag.Visibility.CountryGroup)
                {
                    if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "ddlCountryGroup"))
                    {
                        <div data-idb-fieldname="ddlCountryGroup">
                            <div id="cntCountryGroup" class="col-md-12 lblcontent">
                                @Confluence.Label(
                                    Localization.GetText("OP.OD.TabBasicData.CountryGroup"),
                                    new Dictionary<string, string>()
                                    {
                                        { "idb-fieldname", "ddlCountryGroup" }
                                    })
                            </div>
                            <div class="col-md-12 lblvalue" name="countryGroup">
                                <span data-pagemode="read">
                                    @Confluence.Label(Model.CountryGroup)
                                </span>
                                @if (ViewBag.IsRegionalPermission)
                                {
                                    <span data-pagemode="edit">
                                        @Confluence.InputDropDown(
                                            Model.CountryGroup,
                                            "countryGroup",
                                            (List<SelectListItem>)ViewBag.CountryGroupList,
                                            disabled: SecurityHelper.IsReadOnly(
                                                ViewBag.FieldAccessList,
                                                "ddlCountryGroup"),
                                            required: SecurityHelper.IsRequired(
                                                ViewBag.FieldAccessList,
                                                "ddlCountryGroup"),
                                            dataAttributes: new Dictionary<string, string>()
                                            {
                                                { "idb-fieldname", "ddlCountryGroup" }
                                            })
                                    </span>
                                }
                                else
                                {
                                    <span data-pagemode="edit">
                                        @Confluence.Label(Model.CountryGroup)
                                    </span>
                                }
                            </div>
                        </div>
                    }
                }

                @if (Model.CategoryAccess.IsVisible &&
                    SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "ddlCategory"))
                {
                        <div data-idb-fieldname="ddlCategory">
                        <div class="col-md-12 lblcontent" id="lblCategory">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabBasicData.Category"),
                                new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlCategory" }
                                })
                            @if (Model.CategoryAccess.IsRequired)
                            {
                                @Confluence.LabelAsterisk()
                            }
                            </div>
                            <div class="col-md-12 lblvalue">
                                <span data-pagemode="read">
                                @Confluence.LabelGetDropDown(
                                    Model.Category.ToString(),
                                    (List<SelectListItem>)ViewBag.CategoryList,
                                    true)
                                </span>
                                <span data-pagemode="edit">
                                @Confluence.InputDropDown(
                                    Model.Category.ToString(),
                                    "category",
                                    (List<SelectListItem>)ViewBag.CategoryList,
                                    disabled: SecurityHelper.IsReadOnly(
                                        ViewBag.FieldAccessList,
                                        "ddlCategory"),
                                    required: Model.CategoryAccess.IsRequired,
                                    dataAttributes: new Dictionary<string, string>()
                                    {
                                        { "idb-fieldname", "ddlCategory" }
                                    })
                                </span>
                            </div>
                        </div>
                    }

                <div data-idb-fieldname="subnational" id="subnationalLevel">
                    <div class="col-md-12 lblvalue">
                            <div data-pagemode="read">
                            @Confluence.InputCheckbox(
                                ViewBag.HasSubnational ?? false,
                                "subnational",
                                "chkSubnationalCreation",
                                Localization.GetText("OP.CR.Subnational"),
                                true,
                                true)
                                <a href="#" id="openSubnationalCreation">
                                @if (ViewBag.HasSubnational ?? false)
                                {
                                    <span class="glyphicon glyphicon-globe"></span>
                                }
                                else
                                {
                                    <span class="glyphicon glyphicon-globe" style="display: none">
                                    </span>
                                }
                                </a>
                            </div>
                            <div data-pagemode="edit">
                            @Confluence.InputCheckbox(
                                ViewBag.HasSubnational ?? false,
                                "subnational",
                                "chkSubnationalCreation",
                                Localization.GetText("OP.CR.Subnational"),
                                true)
                            @if (ViewBag.HasSubnational ?? false)
                            {
                                <a href="#" id="openSubnationalCreation">
                                    <span class="glyphicon glyphicon-globe"></span>
                                </a>
                        }
                        else
                        {
                                <a href="#" id="openSubnationalCreation" style="display: none">
                                    <span class="glyphicon glyphicon-globe"></span>
                                </a>
                        }
                    </div>
                </div>
            </div>
            </div>

            <div class="groupColumn col-md-4">
                <div>
                    <div class="col-md-12 lblcontent">
                        @Confluence.Label(Localization.GetText("OP.OD.TabBasicData.MBFCode"))
                        @Confluence.LabelAsterisk()
                    </div>
                    <div class="col-md-12 lblvalue">
                        <span data-pagemode="read">
                            @Confluence.LabelBold(Model.MbfDescription)
                        </span>
                        <span data-pagemode="edit">
                            @Confluence.InputDropDown(
                                Model.MbfCode.ToString(),
                                "mbfCode",
                                mbfCodes,
                                disabled: Model.MbfIsDisabled,
                                dataAttributes: new Dictionary<string, string>()
                                {
                                    { "idb-fieldname", "ddlMbfCode" }
                                })
                        </span>
                    </div>

                    @if (Model.OperationTypeCode == OperationType.TCP)
                    {
                        <div class="col-md-12 lblcontent">
                            @Confluence.Label(Localization.GetText("OP.OD.TabBasicData.TCMRequired"))
                        </div>
                        <div class="col-md-12 lblvalue">
                            <span>
                                @Confluence.LabelGetBool(Model.IsPmrNotRequired, true)
                            </span>
                        </div>
                    }
                </div>

                @if (ViewBag.Visibility.Reformulation)
                {
                <div>
                    <div class="col-md-12 lblcontent">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabClassificationData.Classifications.PMR"))
                    </div>
                    <div class="col-md-12 lblvalue">
                        <span data-pagemode="read">
                            @Confluence.LabelGetBool(Model.IsPmrNotRequired)
                        </span>
                        <span data-pagemode="edit">
                                @(IDBContext.Current.HasPermission(Permission.RESULTS_MATRIX_ADMIN) ?
                                    Confluence.InputCheckbox(Model.IsPmrNotRequired, "IsPmrNotRequired") :
                                    Confluence.LabelGetBool(Model.IsPmrNotRequired))
                        </span>
                    </div>
                </div>

                <div>
                    <div class="col-md-12 lblcontent">
                            @Confluence.Label(
                                Localization.GetText("OP.OD.TabBasicData.ConvergenceRelatedOp"))
                    </div>
                    <div class="col-md-12 lblvalue">
                        @Model.OperationRelatedF1
                    </div>
                </div>
                }
            </div>
        </div>
    </div>

    if (ViewBag.Visibility.Reformulation)
    {
         <div class="grouping-section">
             <div class="col-md-12">
                 <label class="lbltitle">
                    @Localization.GetText("OP.OD.TabBasicData.ReformulationInformation")
                 </label>
             </div>
             <div class="col-md-3">
                 @Confluence.LabelsGroup(
                    Localization.GetText("OP.OD.TabBasicData.ObjThisReformulated"),
                     Confluence.LabelGetBool(Model.IsObjectiveReformulated),
                     Confluence.LabelGetBool(Model.IsObjectiveReformulated))
             </div>
             <div class="col-md-3">
                 @Confluence.LabelsGroup(
                    Localization.GetText("OP.OD.TabBasicData.ReformulatedDateApproval"),
                     Confluence.LabelGetDate(Model.ReformulationApprovalDate),
                     Confluence.LabelGetDate(Model.ReformulationApprovalDate))
             </div>
         </div>
     }

    if (Model != null && (Model.OperationTypeCode == OperationType.LON || Model.OperationTypeCode == OperationType.IGR || Model.OperationTypeCode == OperationType.GUA))
    {
        <div class="grouping-section">
            <div class="col-md-12">
                <label class="lbltitle">@Localization.GetText("PEP.OperationData.IntegratedTools")</label>
            </div>
            <div class="col-md-3">
                @Confluence.LabelsGroup(Localization.GetText("PEP.OperationData.PlanningInstrumentsIntegrated"),
                    Confluence.LabelGetBool(Model.PlanningInstrumentsIntegrated),
                    (IDBContext.Current.HasPermission(Permission.INTEGRATED_INSTRUMENTS_WRITE))
                        ? Confluence.InputCheckbox(Model.PlanningInstrumentsIntegrated,
                            "PlanningInstrumentsIntegratedCheck", disabled: Model.HasStartup,
                            dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "chkPlanningInstruments" } })
                        : Confluence.LabelGetBool(Model.PlanningInstrumentsIntegrated))

                @if (!IDBContext.Current.HasPermission(Permission.INTEGRATED_INSTRUMENTS_WRITE))
                {
                    Confluence.InputHidden(Model.PlanningInstrumentsIntegrated.ToString(), 
                        "PlanningInstrumentsIntegratedCheck");
                }
            </div>
            <div class="col-md-3">
                @Confluence.LabelsGroup(Localization.GetText("PEP.OperationData.LastModified"),
                    Confluence.LabelGetDate(Model.LastModifiedIntegration), Confluence.LabelGetDate(Model.LastModifiedIntegration))
            </div>
        </div>
    }

    if (Model != null)
    {
        if (Model.HasAbstractLock)
        {
            <div data-pagemode="edit">
                <div class="row tc-abstract-not-editable-message pull-left mt30">
                    <span class="information-circle-gray"></span>
                    <span class="information">
                        @Localization.GetText("TCAbstract.Service.NotEditable.TaxonomyAndSupport.InformationMessage")
                    </span>
                </div>
            </div>
        }

        @Html.Partial(
            "FormRendering/FormRenderer",
            (FormDataViewModel)ViewBag.FormBasicAttributes,
            new ViewDataDictionary() {
                { "pageName", OPUSGlobalValues.PAGE_NAME_TAB_BASIC_DATA_RELATED_OPERATION },
                { "OverallStage", Model.OverallCode } })
    }

    if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "tblOpeName"))
    {
        <div data-idb-fieldname="tblOpeName">
            @Html.Partial("Partials/OperationData/DataTables/OperationName")
        </div>
    }

    if (ViewBag.Visibility.Objetive)
    {
        if (SecurityHelper.IsVisibleByDefault(ViewBag.FieldAccessList, "tblObjName"))
        {
            <div data-idb-fieldname="tblObjName">
                @Html.Partial("Partials/OperationData/DataTables/OperationObjectives")
            </div>
        }
    }

    if (ViewBag.Visibility.OperationRelated ||
        Model.OperationTypeCode.ContainsAny(OperationType.CON, OperationType.CIP, OperationType.ESW))
    {
            <div id="OperationDataRelatedOperations" data-idb-fieldname="opRelated" data-view="OperationData">
                @Html.Partial("_TableRelations", Model)
            </div>
    }

@helper GetRelatedExpandedButton(string tableName, int rowId, string dataAction)
{
    <span data-pagemode="edit">
        <button class="trash-icon" data-action="@(dataAction)"></button>
    </span>
    @Confluence.ButtonShowRow()
}

    if (Model.Comments != null)
{
    <div class="row-header mb1em">
        <div class="nopadding col-md-3 subtitleGroup">
            @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.Comments")
        </div>
        <div class="right-buttons text-right">
            <div data-pagemode="edit">
                    @Confluence.ButtonBlue(
                        Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments"),
                        null,
                        "newUserComment",
                        dataAttributes: new Dictionary<string, string>()
                        {
                            { "idb-fieldname", "btnNewUserComment" }
                        })
            </div>
        </div>
    </div>
    <div class="row row-body">
        <div class="col-md-12">
            @Html.Partial("Partials/OperationData/DataTables/UserComments", Model.Comments)
        </div>
    </div>
}
}

@if (ViewBag.BasicDataPermission ?? false ||
    ViewBag.GCMWritePermission ?? false ||
    ViewBag.VPCWritePermission ?? false ||
    ViewBag.VPSManagerWrite ?? false)
{
    <div class="header">
        <div class="row">
            <div class="text-right">
                @Html.Partial("Partials/OperationData/buttonsBasicData")
            </div>
        </div>
    </div>
}