@{
    var rand = new Random();
    var rowId = rand.Next(1000000, 3000000);
}

<tr data-id="@rowId" class="custom-even even lineup customRowEven" role="row">
    <td class="text-center">
        <span data-pagemode="edit" class="showdataedit">
            <label class="labelNormal w85">-</label>
        </span>
    </td>
    <td>
        <span data-pagemode="edit" class="showdataedit">
            @Confluence.InputDropDown(null, "deliverablesYearPlanned", ViewBag.DeliverableYearList, width: "80px")
        </span>
    </td>
    <td class="text-center">
        <label class="labelNormal">-</label>
    </td>
    <td class="text-center">
        <span data-pagemode="edit">
            @Confluence.InputDropDown(null, "deliverableType", ViewBag.DeliverableList, width: "100%", htmlClass: "w160")
        </span>
    </td>
    <td class="text-center">
        <span data-pagemode="edit">
            @Confluence.InputText(null, "deliverableName", width: "100%", maxLength: 200)
        </span>
    </td>
    <td>
        <span data-pagemode="edit">
            @Confluence.InputDatePicker(null, "planedDate", width: "150px", htmlClass: "w120")
        </span>
    </td>
    <td></td>
    <td></td>
    <td class="hide">
        <span data-pagemode="edit" class="hide">
            <input type="hidden" name="deliverableId" value="0">
            <input type="hidden" name="deliverableDocumentId" value="0">
        </span>
    </td>
    <td>
        <span data-pagemode="edit" class="showDataEdit ">
            @Confluence.ButtonTrash(null, null, "removeRowDeliverable")
            @Confluence.ButtonShowRow(true, "floatRight")
        </span>
    </td>
</tr>

<tr class="template" data-persist="true" role="row" data-row-parent-id="@rowId" style="display: table-row;">
    <td colspan="9">
        <div class="col-xs-2">
            @Confluence.LabelsGroup(Localization.GetText("OP.DL.Responsible"), "",
            Confluence.InputDropDownAsync(ViewBag.OperationResponsible.ToString(), "deliverablesResponsible", Url.Action("GetListResponsibleDeliverable", "View", new { area = "Opus" }),
            textSelected: ControlTemplates.DropDownFilterGetSelectedString(ViewBag.OperationResponsible.ToString(), ViewBag.ResponsibleList)))
        </div>
        <div class="col-xs-1">
            @Confluence.Label(Localization.GetText("R6.Proposal.Deliverables.Type"))
            <div class="pt5">
                @Confluence.Label("Not in Proposal")
            </div>
        </div>
        <div class="col-xs-2">
            @Confluence.LabelsGroup(Localization.GetText("OP.DL.Country"), "", Confluence.InputDropDown(ViewBag.OperationCountry.ToString(), "deliverablesCountry", ViewBag.CountryCodeList, width: "100%"))
        </div>
        <div class="col-xs-4">
            <div>@Confluence.Label(Localization.GetText("R6.Proposal.Deliverables.DocumentID"))</div>

            <div data-pagemode="edit" style="float: left;">
                @Confluence.ButtonLink(
                    "",
                    name: "deliverablesDocumentNumber",
                    action: "downloadDocument",
                    htmlClass: "ButtonLinkIdNumberDeliverables link-document-id",
                    dataAttributes: new Dictionary<string, string>
                    {
                        { "docnumber", "" }
                    })
            </div>

            <div data-pagemode="edit" class="lgCont" style="float: right;">

                <span>
                    @Confluence.ButtonUpload(text: "", name: "buttonModalDocument", action: "showWarningDocument")
                    <span class="hide">
                        @Confluence.ButtonUpload(text: "", name: "deliverableDocumentsAdd", dataAttributes: new Dictionary<string, string>
                        {
                            { "id", "DeliverableDocuments-add" },
                            { "custom-modal", "DeliverableDocuments-modal-add" },
                            { "modal-allowclose", "true" },
                            { "custom-modal-validate", "false" },
                            { "custom-modal-title", Localization.GetText("OP.AP.Documents.Search") },
                            { "deliverableRow-id", Convert.ToString(rowId) },
                            { "btn_add_document_Help", "true" } })
                    </span>
                </span>

                @Confluence.InputHidden("", name: "documentNumberHidden", dataAttributes: new Dictionary<string, string> { { "docnumber", "" } })
                @Confluence.ButtonTrash(null, name: "deleteButtonDeliverable", action: "actionDeleteDeliverable", disabled: true, dataAttributes: new Dictionary<string, string> { { "deliverableRow-delete-id", Convert.ToString(@rowId) } })
            </div>
        </div>
        <div class="col-xs-2">
            @Confluence.LabelsGroup(Localization.GetText("OP.DL.CompletedDate"), "", Confluence.InputDatePicker(null, "completedDate", required: false, width: "150px"))
        </div>
        <div class="col-xs-1 text-center">
            @Confluence.LabelsGroup(Localization.GetText("OP.DL.Dismiss"), "", Confluence.InputCheckbox(false, "IsDismiss", disabled: true))
        </div>
    </td>
</tr>