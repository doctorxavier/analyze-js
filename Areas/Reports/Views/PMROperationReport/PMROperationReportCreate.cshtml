@model IDB.MW.Domain.Models.Architecture.Reports.PMRExtraModels.PMROperation.PMROperationReportModel

@{   
   var agreggatedOptions= new  Dictionary<string,bool >();
   agreggatedOptions.Add(@Localization.GetText("Yes"),true );
   agreggatedOptions.Add(@Localization.GetText("No"), false);

   //This message should be displayed only for the cycles of March. Cycles for September, no. TODO: calculate the cycle with a function   
   var isCycleMarch = false;
}

@if (isCycleMarch){
<div class="messages message-warning">
    @Localization.GetText("Please note that due to the non-linear methodology for the automatic calculation of the EOP(a), you must first edit and save your results matrix so that the most up-to-date data is reflected in any report you wish to generate.")
</div>
}

<link href="@Url.Content("~/Content/esmartGeneral.css")" rel="stylesheet"/>
<link href="@Url.Content("~/Content/Modules/Reports/ui_rt_011.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/Modules/Reports/PMROperationCustom.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/Modules/Reports/ReportsGenericCustom.css")" rel="stylesheet" />

<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Reports/main.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Reports/PMROperationReportJS.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

<div class="padding20">

   <div class="verticalMargin20 w100">
      <h3 class="font2em AlingTitles">@Localization.GetText("Operation Reports")</h3>
   </div>
   <div class="verticalMargin20 w100">
      <h6 class="font1-5em AlingTitles">@Localization.GetText("Operation Reports")</h6>
   </div>

   @using (Html.BeginForm("GetURLPMROPeration", "PMROperationReport", FormMethod.Post, new { @id = "FormPMROperationReport", @target="_blank" }))
   {
      @Html.HiddenFor(x => x.OperationId)
      @Html.HiddenFor(x => x.FinancialDataAggregation)

      <!-- Filter container -->

      <div id="searchBoxContainerReports011" class="padding10 grayBackground hideNI" style="display: block;">
         @Html.HiddenFor(x => x.OperationId)

         <div class="inline-block inputContainer w31-5" style="width: 270px">

            <div class="inline-block w65 verticalAlignMiddle">
               <label for="countryDepartmentFilterReports" class="font08em inline-block w23 verticalAlignMiddle noPadding labelSelectNormalPMROperation">@Localization.GetText("Type of Report")</label>
               <ul class="optionList small">
                  <li class="small">
                     @Html.DropDownListFor(x => x.TypeReport, new SelectList(ViewBag.ListReportsType, "Value", "Text"), new { @class = "kendoDropDown optionSelect", @id = "SelectorTypeOfReportList" })
                  </li>
               </ul>

            </div>

         </div>

         <div class="inline-block inputContainer w31-5 marginLeft1">

            <div class="inline-block w65 verticalAlignMiddle">
               <label for="pmrCycleFilterReports" class="font08em inline-block w23 verticalAlignMiddle noPadding labelSelectNormalPMROperation">@Localization.GetText("PMR Cycle")</label>
               @Html.ListBoxFor(x => x.PMRCycleId, new MultiSelectList(ViewBag.ListPMRCycle, "Value", "Text", ViewBag.Value), new { @id = "ListPMRCycleID", @class = "MultiSelectCustom" })
            </div>

         </div>

         @if (Model.FinancialDataAggregation == true)
         {
            <div class="inline-block inputContainer w31-5" style="padding: 10px; margin-left: 50px;">
               <div class="inline-block w65 verticalAlignMiddle">
                  <label for="SelectorTypeOfAggregatedData" class="font08em inline-block w25 verticalAlignMiddle labelSelectNormalPMROperation">@Localization.GetText("Financial data aggregated")</label>
                  @Html.DropDownListFor(x => x.ReportParts["isFinancialDataAggregated"],new SelectList(agreggatedOptions, "Value", "Key"), new { @class = "kendoDropDown optionSelect", @id = "SelectorTypeOfAggregatedData" })
@*                  <select id="SelectorFinancialDataAggregatedList" class="kendoDropDown">
                     <option value="true" selected>@Localization.GetText("Yes")</option>
                     <option value="false">@Localization.GetText("No")</option>
                  </select>*@
               </div>
            </div>   
         }
        
      </div>

      <!-- End filter container -->

      <!-- Checkbox table -->

      <div class="verticalMargin20">
         <table id="tableUIRT011" class="grid w100">

            <thead class="leftAlign">
               <tr>
                  <th>
                     <label for="basicDataCheck" class="bold inline-block verticalAlignMiddle">@Localization.GetText("Basic Data")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        <input id="BasicDataCheck" class="fancy-checkbox CheckMasterControlOperationReport ItemTableReportOperation" type="checkbox" disabled />
                        <label id="LabelBasicDataCheck" for="BasicDataCheck" class="fancy-label white bold" onclick="changeCheckboxSelected('#BasicDataCheck', this)"></label>
                     </span>
                  </th>
                  <th>
                     <label for="resultMatrixCheck" class="bold inline-block verticalAlignMiddle">@Localization.GetText("Result Matrix")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        <input id="resultMatrixCheck" class="fancy-checkbox CheckMasterControlOperationReport ItemTableReportOperation" type="checkbox" disabled />
                        <label id="LabelresultMatrixCheck" for="resultMatrixCheck" class="fancy-label white bold" onclick="changeCheckboxSelected('#resultMatrixCheck', this)"></label>
                     </span>
                  </th>
                  <th>
                     <label for="findingRecommendationCheck" class="bold inline-block verticalAlignMiddle">@Localization.GetText("Findings and recommendations")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["FindingRecommendation"], new { @class = "fancy-checkbox CheckMasterControlOperationReport ItemTableReportOperation", @disabled = "disabled" })
                        <label id="LabelReportParts_FindingRecommendation_" for="ReportParts_FindingRecommendation_" class="fancy-label white bold" onclick="changeCheckboxSelected('#ReportParts_FindingRecommendation_', this)"></label>
                     </span>
                  </th>
                  <th>
                     <label for="disbursementCheck" class="bold inline-block verticalAlignMiddle">@Localization.GetText("Disbursement")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["Disbursements"], new { @class = "fancy-checkbox CheckMasterControlOperationReport ItemTableReportOperation", @disabled = "disabled" })
                        <label id="LabelReportParts_Disbursements" for="ReportParts_Disbursements_" class="fancy-label white bold" onclick="changeCheckboxSelected('#ReportParts_Disbursements_', this)"></label>
                     </span>
                  </th>
                  <th>
                     <label for="riskCheck" class="bold inline-block verticalAlignMiddle">@Localization.GetText("Risk")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["Risk"], new { @class = "fancy-checkbox CheckMasterControlOperationReport ItemTableReportOperation", @disabled = "disabled" })
                        <label for="ReportParts_Risk_" class="fancy-label white bold" onclick="changeCheckboxSelected('#ReportParts_Risk_', this)"></label>
                     </span>
                  </th>
               </tr>
            </thead>

            <tbody class="leftAlign">

               <tr>
                  <td>
                     <label for="operationBasicDataCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Operation Basic Data")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OperationBasicData"], new { @class = "fancy-checkbox ItemTableReportOperation ItemBasicDataCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_OperationBasicData_" class="fancy-label bold LabelItemBasicDataCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_OperationBasicData_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="impactsCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Impacts")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["Impacts"], new { @class = "fancy-checkbox ItemTableReportOperation ItemResultMatrixCheck ItemReportResultMatrix ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_Impacts_" class="fancy-label bold LabelItemResultMatrixCheck LabelItemReportPublicInformation LabelItemReportResultMatrix" onclick="changeCheckboxSelected('#ReportParts_Impacts_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="frResolvedIssuesCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Findings/delay (only resolved issues)")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["DELAY_SOLVED"], new { @class = "fancy-checkbox ItemTableReportOperation ItemFindingCheck", @disabled = "disabled" })
                        <label for="ReportParts_DELAY_SOLVED_" class="fancy-label bold LabelItemFindingCheck" onclick="changeCheckboxSelected('#ReportParts_DELAY_SOLVED_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>

                  <td>
                     <label for="operationObjectiveCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Operation Objective")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OperationObjective"], new { @class = "fancy-checkbox ItemTableReportOperation ItemResultMatrixCheck ItemReportResultMatrix ItemReportPublicInformation ItemBasicDataCheck", @disabled = "disabled" })
                        <label for="ReportParts_OperationObjective_" class="fancy-label bold LabelItemBasicDataCheck LabelItemResultMatrixCheck LabelItemReportPublicInformation LabelItemReportResultMatrix" onclick="changeCheckboxSelected('#ReportParts_OperationObjective_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="impactsIndicatorCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Impact Indicators Detail (Means of Verification)")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["ImpactIndicators"], new { @class = "fancy-checkbox ItemResultMatrixCheck specialCheckCustomReal ", @disabled = "disabled" })
                        <label for="ReportParts_ImpactIndicators_" class="fancy-label bold LabelItemResultMatrixCheck specialCheckCustom " onclick="changeCheckboxSelected('#ReportParts_ImpactIndicators_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="frUnesolvedIssuesCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Findings/delay (only Unresolved issues)")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["DELAY_UNSOLVED"], new { @class = "fancy-checkbox ItemTableReportOperation ItemFindingCheck", @disabled = "disabled" })
                        <label for="ReportParts_DELAY_UNSOLVED_" class="fancy-label bold LabelItemFindingCheck" onclick="changeCheckboxSelected('#ReportParts_DELAY_UNSOLVED_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="totalCostCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Total Cost and Source")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["TotalCostSource"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_TotalCostSource_" class="fancy-label bold LabelItemBasicDataCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_TotalCostSource_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="outcomesCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Outcomes")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["Outcomes"], new { @class = "fancy-checkbox ItemTableReportOperation ItemResultMatrixCheck ItemReportResultMatrix ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_Outcomes_" class="fancy-label bold LabelItemResultMatrixCheck LabelItemReportPublicInformation LabelItemReportResultMatrix" onclick="changeCheckboxSelected('#ReportParts_Outcomes_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="availableFundsCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Available Funds (US$)")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["AvailableFunds"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_AvailableFunds_" class="fancy-label bold LabelItemBasicDataCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_AvailableFunds_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="outcomesIndicatorsCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Outcomes Indicators Detail (Means of Verification)")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OutcomesIndicators"], new { @class = "fancy-checkbox  ItemResultMatrixCheck specialCheckCustomReal", @disabled = "disabled" })
                        <label for="ReportParts_OutcomesIndicators_" class="fancy-label bold LabelItemResultMatrixCheck specialCheckCustom" onclick="changeCheckboxSelected('#ReportParts_OutcomesIndicators_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="eventsDatesCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Event's Dates")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["Events"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck", @disabled = "disabled" })
                        <label for="ReportParts_Events_" class="fancy-label bold LabelItemBasicDataCheck" onclick="changeCheckboxSelected('#ReportParts_Events_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="outputsPhysicalCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Outputs Physical progress")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OutputsPhysicalProgress"], new { @class = "fancy-checkbox ItemTableReportOperation ItemResultMatrixCheck ItemReportResultMatrix ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_OutputsPhysicalProgress_" class="fancy-label bold LabelItemResultMatrixCheck LabelItemReportPublicInformation LabelItemReportResultMatrix" onclick="changeCheckboxSelected('#ReportParts_OutputsPhysicalProgress_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="environmentalSocialImpactsCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Environmental and Social Impacts")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["EnvironmentSocialImpact"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_EnvironmentSocialImpact_" class="fancy-label bold LabelItemBasicDataCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_EnvironmentSocialImpact_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="outputsIndicatorCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Outputs Indicators Detail (Means of Verification)")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OutputsDetail"], new { @class = "fancy-checkbox  ItemResultMatrixCheck specialCheckCustomReal ", @disabled = "disabled" })
                        <label for="ReportParts_OutputsDetail_" class="fancy-label bold LabelItemResultMatrixCheck specialCheckCustom" onclick="changeCheckboxSelected('#ReportParts_OutputsDetail_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="reformulationCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Reformulation")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["Reformulation"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_Reformulation_" class="fancy-label bold LabelItemBasicDataCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_Reformulation_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="outputsFinancialCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Outputs Financial Progress")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OutputsFinancialProgress"], new { @class = "fancy-checkbox ItemTableReportOperation ItemResultMatrixCheck", @disabled = "disabled" })
                        <label for="ReportParts_OutputsFinancialProgress_" class="fancy-label bold LabelItemResultMatrixCheck" onclick="changeCheckboxSelected('#ReportParts_OutputsFinancialProgress_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="demInformationCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("DEM Information")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["DEMInformation"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck", @disabled = "disabled" })
                        <label for="ReportParts_DEMInformation_" class="fancy-label bold LabelItemBasicDataCheck" onclick="changeCheckboxSelected('#ReportParts_DEMInformation_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="outputsAPFPCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Outputs: Annual Physical and Financial Progress")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["OutputsAnnualProgress"], new { @class = "fancy-checkbox   ItemResultMatrixCheck specialCheckCustomReal", @disabled = "disabled" })
                        <label for="ReportParts_OutputsAnnualProgress_" class="fancy-label bold LabelItemResultMatrixCheck LabelItemReportPublicInformation specialCheckCustom" onclick="changeCheckboxSelected('#ReportParts_OutputsAnnualProgress_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td>
                     <label for="expenditureCategoriesCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Expenditure Categories")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["ExpenseCategories"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemBasicDataCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_ExpenseCategories_" class="fancy-label bold LabelItemBasicDataCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_ExpenseCategories_', this)"></label>
                     </span>
                  </td>
                  <td>
                     <label for="inactiveOutputsCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Show Inactive Outputs")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["IS_DEACTIVATED"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemResultMatrixCheck", @disabled = "disabled" })
                        <label for="ReportParts_IS_DEACTIVATED_" class="fancy-label bold LabelItemResultMatrixCheck" onclick="changeCheckboxSelected('#ReportParts_IS_DEACTIVATED_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td></td>
                  <td>
                     <label for="displayDisaggregationCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Display Disaggregation")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["DisaggregationCategories"], new { @class = "fancy-checkbox ItemTableReportOperation ItemReportResultMatrix ItemResultMatrixCheck", @disabled = "disabled" })
                        <label for="ReportParts_DisaggregationCategories_" class="fancy-label bold LabelItemReportResultMatrix LabelItemResultMatrixCheck" onclick="changeCheckboxSelected('#ReportParts_DisaggregationCategories_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td></td>
                  <td>
                     <label for="performanceIndicatorsGraphicCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Performance/Indicators - Graphic")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["PMIGraphics"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemResultMatrixCheck", @disabled = "disabled" })
                        <label for="ReportParts_PMIGraphics_" class="fancy-label bold LabelItemResultMatrixCheck" onclick="changeCheckboxSelected('#ReportParts_PMIGraphics_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td></td>
                  <td>
                     <label for="performanceIndicatorsTablesCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Performance/Indicators - Tables")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["PMITables"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemResultMatrixCheck", @disabled = "disabled" })
                        <label for="ReportParts_PMITables_" class="fancy-label bold LabelItemResultMatrixCheck" onclick="changeCheckboxSelected('#ReportParts_PMITables_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td></td>
                  <td>
                     <label for="validationProcessCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Validation Process")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["ClassificationValidation"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemResultMatrixCheck", @disabled = "disabled" })
                        <label for="ReportParts_ClassificationValidation_" class="fancy-label bold LabelItemResultMatrixCheck" onclick="changeCheckboxSelected('#ReportParts_ClassificationValidation_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

               <tr>
                  <td></td>
                  <td>
                     <label for="changesToTheMatrixCheck" class="inline-block verticalAlignMiddle">@Localization.GetText("Changes to the Matrix")</label>
                     <span class="inline-block marginLeft5 verticalAlignMiddle">
                        @Html.CheckBoxFor(x => x.ReportParts["MatrixChanges"], new { @class = "fancy-checkbox ItemTableReportOperation  ItemResultMatrixCheck ItemReportPublicInformation", @disabled = "disabled" })
                        <label for="ReportParts_MatrixChanges_" class="fancy-label bold LabelItemResultMatrixCheck LabelItemReportPublicInformation" onclick="changeCheckboxSelected('#ReportParts_MatrixChanges_', this)"></label>
                     </span>
                  </td>
                  <td></td>
                  <td></td>
                  <td></td>
               </tr>

            </tbody>

         </table>
      </div>

      <!-- End checkbox table -->

      <div>
         <div class="verticalMargin20">
            <span class="grayColor">@Localization.GetText("Format")</span>
         </div>
         <div class="w100 verticalMargin10">
            @Html.RadioButtonFor(x => x.ExportTypeReport["ExportReport"], "EXCELOPENXML", new { @class = "fancy-radio verticalAlignMiddle", @checked = "checked", @id = "ExportTypeReport_ExportReport_1" })
            <label id="LabelExportTypeReport_ExportReport_1" for="ExportTypeReport_ExportReport_1" class="fancy-label-radio-circle bold verticalAlignMiddle">@Localization.GetText("Excel")</label>
            @Html.RadioButtonFor(x => x.ExportTypeReport["ExportReport"], "PDF", new { @class = "fancy-radio verticalAlignMiddle", @id = "ExportTypeReport_ExportReport_2" })
            <label id="LabelExportTypeReport_ExportReport_2" for="ExportTypeReport_ExportReport_2" class="fancy-label-radio-circle bold marginLeft5 verticalAlignMiddle">@Localization.GetText("PDF")</label>
            <input type="button" id="ButtonDownloadReportPMROperation" class="button download inline-block verticalAlignMiddle marginLeft5" value=" @Localization.GetText("Download")" title="@Localization.GetText("Download")" />
            <span class="alingImageRigth">
               <img src="@Url.Content("~/Images/Modulos/icons/AjaxLoad.gif")" class="imageCustomAjaxLoad AjaxExportRight" id="AjaxLoadForPMROpertionReportExport" />
            </span>
         </div>
      </div>
        
   }
</div>

<script>
    // Provided by Cognos
    function openLinkInNewWindow(link) {
        var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
        if (isChrome) {
            var a = document.createElement("a");
            a.href = link;
            var evt = document.createEvent("MouseEvents");
            evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0,
            true, false, false, false, 0, null);
            a.dispatchEvent(evt);
        } else {
            var win = window.open(link, '_blank');
        }
    }

    $('#FormPMROperationReport').submit(function () {
        var formdata = $("#FormPMROperationReport").serializeArray();
        var data = {};
        $(formdata).each(function (index, obj) {
            data[obj.name] = obj.value;
        });

        var originalUrl = $('#FormPMROperationReport').attr('action');
        var edwURL = originalUrl.replace('GetURLPMROPeration', 'IsRedirectToEDWReport');
        var isURL = false;

        $.ajax({
            'async': false,
            'url': edwURL,
            'data': formdata,
            'type': 'post',
            'dataType': 'json',
            'success': function (data) {

                if (data) {
                    openLinkInNewWindow(data);
                    isURL = true;
                }
            }

        });

        if (isURL) {
            return false;
        }
    });

    $(document).ready(function () {
        setTimeout(function () { resizeIframeCloud(100); }, 1000);
    })    
</script>