@model IDB.MW.Application.PMR.Models.CreatePortfolioViewModel

@{
    Layout = "../Shared/_NewLayout.cshtml";

    var portfolioLoaderDataProp = "portfolio-loader-id";
    var portfolioLoaderDataValue = "portfolioLoaderId";
}

@Confluence.Loader(
    showPermanent: true,
    dataAttributes: new Dictionary<string, string> { { portfolioLoaderDataProp, portfolioLoaderDataValue } })

<div id="header-section">
    @Html.Partial("Partials/_CreatePortfolioIndexHeader", Model)
</div>
<br />

<div id="grid-section">
    @Html.Partial("Partials/_CreatePortfolioIndexGrid", Model)
</div>
<br />

<div id="footer-section">
    @if (Model.IsDraftPortfolio && Model.IsCurrentCycleOpen)
    {
        @Html.Partial("Partials/_CreatePortfolioIndexButtons")
    }
</div>

@Scripts.Render("~/bundles/PMRCreatePortfolio")

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            PMRPortfolioGrid.Init(
                '#tblPortfolio',
                '50',
                @Model.CurrentPMRCycle,
                '@Localization.GetText("COMMON.Justification")',
                '@Localization.GetText("OP.AP.EditRegister.RegisterApproval.RequiredField")',
                '@Localization.GetText("AP.PMR.Portfolio.Message.SaveBeforeDownloadReport")');

            PMRPortfolioGrid._downloadPortfolioUrl = '@Url.Action(
                "DownloadPortfolio",
                "CloseOfPMRCycle",
                new { area = "Administration" })';

            @if (@Model.IsDraftPortfolio)
            {
                @:PMRPortfolioGrid._resetPortfolioUrl = '@Url.Action(
                    "ResetPortfolio",
                    "CloseOfPMRCycle",
                    new
                    {
                        area = "Administration",
                        displayedPmrCycleId = Model.CurrentPMRCycle
                    })';

                @:PMRPortfolioGrid._savePortfolioUrl = '@Url.Action(
                    "SavePortfolio",
                    "CloseOfPMRCycle",
                    new { area = "Administration" })';
            }

            PMRPortfolioGrid.RemoveCreatePortfolioLoader('@portfolioLoaderDataProp', '@portfolioLoaderDataValue');
        });

        function downloadPortfolio() {
            PMRPortfolioGrid.DownloadPortfolio();
        };

        @if (@Model.IsDraftPortfolio)
        {
            @:function resetPortfolio() {
            @:    PMRPortfolioGrid.ResetPortfolio();
            @:};

            @:function saveDraftPortfolio() {
            @:    PMRPortfolioGrid.SavePortfolio(true);
            @:};

            @:function createPortfolio() {
            @:    PMRPortfolioGrid.SavePortfolio(false);
            @:};
        }
    </script>
}