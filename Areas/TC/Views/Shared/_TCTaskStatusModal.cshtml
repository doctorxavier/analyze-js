@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Areas.TC.Controllers

@model IDB.MW.Application.TCAbstractModule.ViewModels.Shared.TCTaskStatusViewModel

@if (Model.OperationStatus != null)
{
    @Html.Partial("_OperationStatusModal", Model.OperationStatus)
    <br>
}

<div class="modalBodyInformation lineheight" id="tcTaskStatus">
    @if (Model.TitleMilestone != null && Model.StatusMilestone != null)
    {
        <p>@Model.TitleMilestone.HtmlEncode() @Model.StatusMilestone.HtmlEncode()</p>
        <br>
    }
    @if (Model.HasEmailNotification)
    {
        var emailTitle = Localization.GetText("Email Status") + ":";

        <input type="hidden"
               name="@SaveController.SUBMIT_EMAIL_STAGE"
               value="@Model.EmailNotificationStatus.EmailStage">

        <span hidden id="emailTitle">@emailTitle</span>

        if (Model.EmailNotificationStatus.IsValidEmail)
        {
            <p id="emailValidMsg">@emailTitle @Model.EmailNotificationStatus.ValidMessage</p>
        }
        else
        {
            <p id="emailErrorMsg">@emailTitle @Model.EmailNotificationStatus.ErrorMessage</p>
            <br>
            <div data-id="modalButtonsContainer"
                 class="new-modal-buttons-container"
                 style="text-align:right"
                 data-url="@Url.Action("RetrySendEmail", "Save", new { area = "TC" })">
                @Display.Button01(
                    Localization.GetText("Send Email"),
                    "TCRetrySendEmail",
                    "retrySendEmail")
            </div>
        }
        <br>
    }
    @if (!string.IsNullOrEmpty(Model.SAPStatus))
    {
        var sapStatus = Model.SAPStatus.Split(';').ToList();

        foreach (string status in sapStatus)
        {
            if (!string.IsNullOrEmpty(status)) { <p>@status</p> }
        }
    }
</div>
