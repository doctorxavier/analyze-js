@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Helpers

@model TCAbstractCommentsViewModel

@{
    var formatDate = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDate;
}

@if (Model.CommentId <= 0)
{
    <div class="row row-header row-header-comment">
        <div class="col-md-12">
            <span>@FormatHelper.Format(DateTime.Today, formatDate).HtmlEncode()</span>
            <span>@ViewBag.UserName</span>
        </div>
    </div>
    <div data-id="@Model.CommentId" data-pagemode="edit">
        <div class="row row-body-comment">
            <div class="col-md-12">
                @ControlTemplates.InputTextArea(
                    string.Empty,
                    "comment",
                    rows: 6,
                    required: true,
                    dataAttributes: new Dictionary<string, string>
                    {
                        { "id", Model.CommentId.ToString() },
                        { "label", Localization.GetText("TC.TCAbstract.Comments.Title") }
                    })
            </div>
        </div>
    </div>
}
else
{
    <div class="row row-header row-header-comment">
        <div class="col-md-12">
            <span>@FormatHelper.Format(Model.Date, formatDate).HtmlEncode()</span>
            <span>@Model.User.HtmlEncode()</span>
        </div>
    </div>
    if (Model.User == ViewBag.UserName)
    {
        <div data-id="@Model.CommentId" data-pagemode="edit">
            <div class="row row-body-comment">
                <div class="col-md-12">
                    @ControlTemplates.InputTextArea(
                        Model.Comment,
                        "comment",
                        rows: 6,
                        required: true,
                        dataAttributes: new Dictionary<string, string>
                        {
                            { "id", Model.CommentId.ToString() },
                            { "label", Localization.GetText("TC.TCAbstract.Comments.Title") }
                        })
                </div>
            </div>
        </div>
        <div class="row repeater-item-comment" data-pagemode="read">
            <div class="col-md-12">
                <div class="font-comment">
                    @Model.Comment.HtmlEncode()
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row repeater-item-comment">
            <div class="col-md-12">
                <div class="font-comment">
                    @Model.Comment.HtmlEncode()
                </div>
            </div>
        </div>
    }
}