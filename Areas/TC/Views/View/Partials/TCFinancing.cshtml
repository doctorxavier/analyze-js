@using System.Globalization

@using IDB.Architecture.Language
@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Helpers

@model TCAbstractFinancingViewModel

<div id="financingTableContainer" class="row row-body-20 font-body" data-name="financing-table">
    <div class="col-md-12">
        @{
            string expRegDecimal = ConfigurationServiceFactory.Current.GetApplicationSettings().ValidationDecimalExpReg;
            string formatDecimal = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDecimal;

            var config = Html.RenderDataTable(Model.Components);

            config.Name("financingTable")
                .AddPrimaryKeyToName(false)
                .PrimaryKey(m => m.ComponentId.ToString(CultureInfo.InvariantCulture))
                .Columns(columns =>
                {
                    columns.Bound(c => c.ComponentName)
                        .Persistent()
                        .Header(@Localization.GetText("TC.TCAbstract.Financing.ComponentName").HtmlEncode().ToString());

                    columns.Bound(c => FormatHelper.Format(@c.Financing, formatDecimal))
                        .EditableTemplate(modelRow =>
                            ControlTemplates.InputDecimal(
                                modelRow.Financing,
                                "financingComponent",
                                true,
                                decimalSeparator: ".",
                                numberSeparator: ",",
                                minValue: "0.00",
                                maxValue: "999999999999.99",
                                expReg: expRegDecimal))
                        .Header(@Localization.GetText("TC.TCAbstract.Financing.Financing").HtmlEncode().ToString());

                    columns.Bound(c => FormatHelper.Format(@c.CounterpartFinancing, formatDecimal))
                        .EditableTemplate(modelRow =>
                            ControlTemplates.InputDecimal(
                                modelRow.CounterpartFinancing,
                                "counterpartFinancingComponent",
                                true,
                                decimalSeparator: ".",
                                numberSeparator: ",",
                                minValue: "0.00",
                                maxValue: "999999999999.99",
                                expReg: expRegDecimal))
                        .Header(@Localization.GetText("TC.TCAbstract.Financing.CounterpartFinancing").HtmlEncode().ToString());

                    columns.Bound(c => FormatHelper.Format(@c.TotalFinancing, formatDecimal))
                        .Persistent()
                        .Header(@Localization.GetText("TC.TCAbstract.Financing.TotalFinancing").HtmlEncode().ToString());
                })
                .RowTemplates(rows =>
                    rows.Create(
                        RowTemplateType.FirstRow,
                        row => TCFinancingBasicRow(expRegDecimal, formatDecimal)))
                .FootTemplates(rows => rows.Create(row => TCFinancingFooterRow(formatDecimal)))
                .TableClass = "table-default";
        }

        @Html.Partial("Controls/DataTable", config)
    </div>
</div>

@helper TCFinancingBasicRow(string expRegDecimal, string formatDecimal)
{
    <tr class="hide">
        <td style="width:650px"><span></span></td>
        <td>
            <span data-pagemode="read" class="hide">0.00</span>
            <span data-pagemode="edit" class="">
                @ControlTemplates.InputDecimal(
                    0.00M,
                    "financingComponent-new",
                    true,
                    decimalSeparator: ".",
                    numberSeparator: ",",
                    minValue: "0.00",
                    maxValue: "999999999999.99",
                    expReg: expRegDecimal,
                    disabled: true)
            </span>
        </td>
        <td>
            <span data-pagemode="read" class="hide">0.00</span>
            <span data-pagemode="edit" class="">
                @ControlTemplates.InputDecimal(
                    0.00M,
                    "counterpartFinancingComponent-new",
                    true,
                    decimalSeparator: ".",
                    numberSeparator: ",",
                    minValue: "0.00",
                    maxValue: "999999999999.99",
                    expReg: expRegDecimal,
                    disabled: true)
            </span>
        </td>
        <td>
            <span>0.00</span>
        </td>
    </tr>
}

@helper TCFinancingFooterRow(string formatDecimal)
{
    <tr class="awardTableFooter">
        <td>@Localization.GetText("TC.TCAbstract.Financing.TotalRequested").HtmlEncode()</td>
        <td>@FormatHelper.Format(Model.TotalRequestedFinancing, formatDecimal)</td>
        <td>@FormatHelper.Format(Model.TotalRequestedCounterpartFinancing, formatDecimal)</td>
        <td>@FormatHelper.Format(Model.TotalRequestedTotalFinancing, formatDecimal)</td>
    </tr>

    <tr class="awardTableFooter">
        <td><b>@Localization.GetText("TC.TCAbstract.Financing.TotalApproved").HtmlEncode()</b></td>
        <td>@FormatHelper.Format(Model.TotalApprovedFinancing, formatDecimal)</td>
        <td>@FormatHelper.Format(Model.TotalApprovedCounterpartFinancing, formatDecimal)</td>
        <td>@FormatHelper.Format(Model.TotalApprovedTotalFinancing, formatDecimal)</td>
    </tr>
}