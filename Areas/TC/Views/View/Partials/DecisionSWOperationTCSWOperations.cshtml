@using IDB.Presentation.MVC4.Areas.TC.Controllers
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Application.TCAbstractModule.Enums
@using IDB.Presentation.MVC4.Areas.TC.Models;
@using IDB.Presentation.MVC4.Areas.TC.Enums;
@using System.Configuration
@using IDB.MW.Infrastructure.Configuration

@model IDB.MW.Application.TCAbstractModule.ViewModels.SingleWindowOperationDecision.DecisionSWOperationViewModel

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var expRegDate = appSettings.ValidationDataPickerExpReg;
    var formatDate = appSettings.FormatDate;
}
<input type="hidden" id="hidViewModel" value="@ViewBag.SerializedViewModel" />

<div data-pagemode="edit">
	<input type="hidden" name="@SaveController.SAVE_CONTROLLER_SUBMITTYPE" value="@SaveControllerTypeEnum.Save" />
</div>

<div class="row row-body-40 font-body">
    <div class="col-md-12">
        <div data-pagemode="read">
            @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[OperationTypeEnum.Flex]).ToString(), "operationTypeDis", disabled: true, required: false,
                                               isChecked: (Model.OperationType == OperationTypeEnum.Flex),
                                               label: @Localization.GetText("TC.DecisionSWO.TypeOperation.Flex"),
                                               isDisplayBlock: true)

            @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[OperationTypeEnum.FundingGap]).ToString(), "operationTypeDis", disabled: true, required: false,
                                               isChecked: (Model.OperationType == OperationTypeEnum.FundingGap),
                                               label: @Localization.GetText("TC.DecisionSWO.TypeOperation.Funding"),
                                               isDisplayBlock: true)
    </div>

        <div data-pagemode="edit">
            @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[OperationTypeEnum.Flex]).ToString(), "operationType", disabled: false, required: true, id: "flexOperation",
                                               isChecked: (Model.OperationType == OperationTypeEnum.Flex),
                                               label: @Localization.GetText("TC.DecisionSWO.TypeOperation.Flex"),
                                               isDisplayBlock: true)

            @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[OperationTypeEnum.FundingGap]).ToString(), "operationType", disabled: false, required: true, id: "fundingGapOperation",
                                               isChecked: (Model.OperationType == OperationTypeEnum.FundingGap),
                                               label: @Localization.GetText("TC.DecisionSWO.TypeOperation.Funding"),
                                               isDisplayBlock: true)
        </div>
    </div>
</div>


<div id="flexOption" class="hide">
	<div class="row row-header">
		<div class="col-md-12">
            <h3 class="leftmarginh3">
                @Localization.GetText("TC.DecisionSWO.Decision.Title").HtmlEncode()
            </h3>
		</div>
	</div>
    
    <div class="row row-body-40 font-body">
        <div class="col-md-12">
            <div data-pagemode="read">
                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.AwardFundEligibility]).ToString(), "decisionDis", disabled: true, required: false,
                                               isChecked: ((Model.OperationType == OperationTypeEnum.Flex) && (Model.Decision == DecisionOperationTypeEnum.AwardFundEligibility)),
                                               label: @Localization.GetText("TC.DecisionSWO.AwardFundEligibility"),
                                               isDisplayBlock: true)

                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.FundingGapOperation]).ToString(), "decisionDis", disabled: true, required: false,
                                               isChecked: (Model.Decision == DecisionOperationTypeEnum.FundingGapOperation),
                                               label: @Localization.GetText("TC.DecisionSWO.FundingGapOperation"),
                                               isDisplayBlock: true)
        </div>

            <div data-pagemode="edit">
                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.AwardFundEligibility]).ToString(), "decisionFlex", id: "awardEligibilityFlex",
                                                   isChecked: ((Model.OperationType == OperationTypeEnum.Flex) && (Model.Decision == DecisionOperationTypeEnum.AwardFundEligibility)),
                                                   label: @Localization.GetText("TC.DecisionSWO.AwardFundEligibility"),
                                                   isDisplayBlock: true)

                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.FundingGapOperation]).ToString(), "decisionFlex", id: "decisionFGapOperation",
                                                   isChecked: (Model.Decision == DecisionOperationTypeEnum.FundingGapOperation),
                                                   label: @Localization.GetText("TC.DecisionSWO.FundingGapOperation"),
                                                   isDisplayBlock: true)
            </div>
        </div>
    </div>
</div>

<div id="fundingGapOption" class="hide">
    <div class="row row-header font-header">
		<div class="col-md-12">
            <h3 class="leftmarginh3">
                @Localization.GetText("TC.DecisionSWO.Decision.Title").HtmlEncode()
            </h3>
		</div>
	</div>
    
    <div class="row row-body-40 font-body">
        <div class="col-md-12">
            <div data-pagemode="read">

                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.AwardFundEligibility]).ToString(), "decisionDis", disabled: true, required: false,
                                               isChecked: ((Model.OperationType == OperationTypeEnum.FundingGap) && (Model.Decision == DecisionOperationTypeEnum.AwardFundEligibility)),
                                               label: @Localization.GetText("TC.DecisionSWO.AwardFundEligibility"),
                                               isDisplayBlock: true)

                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.ReturnSingleWindowMeeting]).ToString(), "decisionDis", disabled: true, required: false,
                                               isChecked: (Model.Decision == DecisionOperationTypeEnum.ReturnSingleWindowMeeting),
                                               label: @Localization.GetText("TC.DecisionSWO.ReturnSingleWindowMeeting"),
                                               isDisplayBlock: true)
        </div>

            <div data-pagemode="edit">
                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.AwardFundEligibility]).ToString(), "decision", id: "awardEligibilityGap",
                                                   isChecked: ((Model.OperationType == OperationTypeEnum.FundingGap) && (Model.Decision == DecisionOperationTypeEnum.AwardFundEligibility)),
                                                   label: @Localization.GetText("TC.DecisionSWO.AwardFundEligibility"),
                                                   isDisplayBlock: true)

                @ControlTemplates.InputRadioButtonNew((ViewBag.EnumMapping[DecisionOperationTypeEnum.ReturnSingleWindowMeeting]).ToString(), "decision", id: "returnSWMeeting",
                                                   isChecked: (Model.Decision == DecisionOperationTypeEnum.ReturnSingleWindowMeeting),
                                                   label: @Localization.GetText("TC.DecisionSWO.ReturnSingleWindowMeeting"),
                                                   isDisplayBlock: true)
            </div>
        </div>
    </div>

	<div id="formDataMeeting" class="hide">
        <div class="row row-header font-header">
			<div class="col-md-12">
                <h3 class="leftmarginh3">@Localization.GetText("TC.DecisionSWO.DateSingleWindowMeeting.Title").HtmlEncode()</h3>
			</div>
		</div>

        <div class="row row-header font-header">
			<div class="col-md-12">
                @Localization.GetText("TC.DecisionSWO.DateSingleWindowMeeting.DateMeeting").HtmlEncode()
			</div>
		</div>

        <div class="row row-body-50 font-body">
			<div class="col-md-12">
                <span class="own-datepicker" data-pagemode="read">@FormatHelper.Format(Model.DateMeeting, formatDate)</span>
				<div data-pagemode="edit">
                    @ControlTemplates.InputDatePicker(Model.DateMeeting, "dateMeeting", required: true, expReg: expRegDate,
                    format: formatDate,
                    dataAttributes: new Dictionary<string, string> { { "parsley-onOrAfterDate", "[name=dateMeeting]" } })
				</div>
			</div>
		</div>

	</div>
</div>

<div class="row row-header font-header">
	<div class="col-md-12">
        <h3 class="leftmarginh3">@Localization.GetText("TC.DecisionSWO.Comments.Title").HtmlEncode()</h3>
	</div>
</div>

<div class="row row-body-40 font-body">
	<div class="col-md-12">
		@Html.Partial("Partials/TCComments", new TCCommentRepeaterViewModel { Comments = Model.Comments, Type = CommentTypeEnum.TCSingleWindowOperationsDecision })
	</div>
</div>
