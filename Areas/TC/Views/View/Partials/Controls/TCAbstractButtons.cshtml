@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.MW.Domain.Values.FundingProcess
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General

@model HeaderViewModel

<div id="headerButtons" class="float-right main-buttons tcAbstract-headerButtons">
    <div data-pagemode="read">
        @if (Model.ValidationStage == TCAbstractStageCode.AWARDED)
        {
            if (ViewBag.WriteRole)
            {
                @Display.Button01(
                    Localization.GetText("TC.RequestIncrease"),
                    action: "requestIncrease")
            }

            if (Model.HasRevertFundingProcessPermission)
            {
                @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button01,
                    allowClose: true,
                    contentSelector: "#revertModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                    validateForm: true,
                    actionOnClose: "openModalSendToSingleWindow",
                    closeOnOverlay: false,
                    name: "RevertModal",
                    text: Localization.GetText("TC.RevertFundingProcess"))
                .AddButton("cancel",
                    id: "RevertFP_Cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("send",
                    id: "RevertFP_Send",
                    type: CssClass.Button01,
                    text: Localization.GetText("TC.Send"),
                    callback: "revertFundingProcess",
                    closeAtEnd: true))
            }
        }
        else if (ViewBag.IsEditable && ViewBag.WriteRole)
        {
            @Display.Button01(Localization.GetText("TC.Edit"), action: "editTCAbstract")
        }
    </div>
    <div data-pagemode="edit">
        @if (ViewBag.WriteRole)
        {
            @Display.ButtonLink(
                Localization.GetText("TC.Cancel"),
                action: "cancelEditTCAbstract")

            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button05,
                    allowClose: true,
                    contentSelector: "#saveModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    validateForm: false,
                    validateOptialRequired: false,
                    name: "saveModal",
                    text: Localization.GetText("TC.Save"))
                .AddButton("cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("save",
                    text: Localization.GetText("TC.Save"),
                    type: CssClass.Button05,
                    callback: "save",
                    closeAtEnd: true))
        }

        @if (ViewBag.WriteTLRole)
        {
            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button01,
                    allowClose: true,
                    contentSelector: "#sendModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                    validateForm: true,
                    actionOnClose: "openModalSendToSingleWindow",
                    closeOnOverlay: false,
                    name: "sendModal",
                    text: Localization.GetText("TC.Header.SendSingleWindow"))
                .AddButton("cancel",
                    id: "TCAbstract_SSW_Cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("send",
                    id: "EditTCAbstract_SSW_Send",
                    type: CssClass.Button01,
                    text: Localization.GetText("TC.Header.SendSingleWindow"),
                    callback: "saveAndSend",
                    closeAtEnd: true))
        }
    </div>
</div>