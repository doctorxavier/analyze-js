@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General

@if(ViewBag.CanEdit)
{
    <div id="headerButtons" class="float-right main-buttons donorDecisionButtons">
		<div data-pagemode="read">
            @Display.Button01(Localization.GetText("TC.Edit"), action: "edit")
		</div>
		<div data-pagemode="edit">

            @Display.ButtonLink(Localization.GetText("TC.Cancel"), action: "cancel")

            @Display.Button05(Localization.GetText("TC.Save"), action: "save")

            @Display.Button01(Localization.GetText("TC.SaveAndSend"), name: "sendButton", action: "sendSelector")

            @Display.AddModalButton(
                new ModalViewModel(name: "saveAndSendAwardFundEligibility",
                    allowClose: true,
                    contentSelector: "#saveAndSendAwardFundEligibilityModal",
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    validateForm: true,
                    type: CssClass.ModalWarning,
                    actionOnClose: "showOperationStatusModal",
                    closeOnOverlay: false,
                    text: Localization.GetText("TC.AwardFundEligibility.Button.CommitFund"))
                .AddButton("cancel",
                    id: "cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("commit",
                    id: "send",
                    text: Localization.GetText("TC.AwardFundEligibility.Button.CommitFund"),
                    type: CssClass.Button01,
                    callback: "send",
                    closeAtEnd: true)
            )

            @Display.AddModalButton(
                new ModalViewModel(name: "saveAndSendAwardFundEligibilityDistinctTotal",
                    allowClose: true,
                    contentSelector: "#saveAndSendAwardFundEligibilityDistinctTotal",
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    validateForm: true,
                    type: CssClass.ModalWarning,
                    actionOnClose: "showOperationStatusModal",
                    closeOnOverlay: false,
                    text: Localization.GetText("TC.AwardFundEligibility.Button.CommitFund"))
                .AddButton("cancel",
                    id: "cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("commit",
                    id: "send",
                    text: Localization.GetText("TC.AwardFundEligibility.Button.CommitFund"),
                    type: CssClass.Button01,
                    callback: "send",
                    closeAtEnd: true)
            )

            @Display.AddModalButton(
            new ModalViewModel(name : "saveAndSendRejectFundEligibility",
                allowClose : true,
                contentSelector: "#saveAndSendRejectFundEligibilityModal",
                title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                validateForm : true,
                type: CssClass.ModalWarning,
                actionOnClose: "showOperationStatusModal",
                closeOnOverlay : false,
                text : Localization.GetText("TC.Header.SaveAndSend"))
            .AddButton("cancel",
                id :"cancel",
                text: Localization.GetText("TC.Cancel"),
                type : CssClass.ButtonLink,
                callback : "" )
            .AddButton("send",
                id:"send",
                text: Localization.GetText("TC.Reject"),
                type : CssClass.Button01,
                callback : "send",
                closeAtEnd : true)
            )
			
		</div>
	</div>

    @Display.AddModalButton(
        new ModalViewModel(name: "operationStatusModalButton",
            allowClose: true,
            contentSelector: "#operationStatusModal",
            type: CssClass.ModalInformation,
            title: Localization.GetText("TC.TCAbstractModalFundingProcess.Title"),
            validateForm : false)
    )
}