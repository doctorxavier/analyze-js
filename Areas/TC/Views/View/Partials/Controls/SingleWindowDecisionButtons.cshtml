@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General
@using IDB.Architecture.Language
@using IDB.MVCControls.General.Helpers

@if( ( ViewBag.WriteRole != null ) && ViewBag.WriteRole && !ViewBag.WorkFlowRunning )
{
    <div id="formButtons" class="float-right main-buttons singleWindowDecisionButtons">
        <div data-pagemode="read">
            @Display.Button01(Localization.GetText("TC.Edit"), action: "edit")
        </div>

        <div data-pagemode="edit">
            @Display.ButtonLink(Localization.GetText("TC.Cancel"), action: "cancel")

            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button05,
                    allowClose: true,
                    contentSelector: "#saveModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    validateForm: true,
                    text: Localization.GetText("TC.Save")
                )
                .AddButton(
                    "cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: ""
                    )
                .AddButton(
                    "save",
                    text: Localization.GetText("TC.Save"),
                    type: CssClass.Button05,
                    callback: "save",
                    closeAtEnd: true
                )
            )

            @Display.AddModalButton(
                new ModalViewModel(
                    name: "SaveModal",
                    validateForm: true,
                    allowClose: true,
                    contentSelector: "#saveModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    actionOnClose: "showOperationStatusModal",
                    closeOnOverlay: false,
                    text: Localization.GetText("TC.Save")
                )
                .AddButton(
                    "cancel",
                    id: "save_Cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: ""
                )
                .AddButton(
                    "send",
                    id: "save_Send",
                    text: Localization.GetText("TC.Save"),
                    type: CssClass.Button01,
                    callback: "save",
                    closeAtEnd: true
                )
                .AddButton(
                    "save",
                    text: Localization.GetText("TC.Save"),
                    type: CssClass.Button05,
                    callback: "save",
                    closeAtEnd: true
                )
            )

            @Display.Button01(
                Localization.GetText("TC.SaveAndSend"),
                name: "SaveAndSend",
                action: "saveAndSendSelector")

            @Display.AddModalButton(
                new ModalViewModel(
                    name: "SaveAndSendNotifyFundCoordinator",
                    validateForm: true,
                    allowClose: true,
                    contentSelector: "#saveAndSendNotifyFundCoordinator",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    actionOnClose: "showOperationStatusModal",
                    closeOnOverlay: false,
                    text: Localization.GetText("TC.Header.SaveAndSend")
                )
                .AddButton(
                    "cancel",
                    id: "saveAndSendNotifyFundCoordinator_Cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: ""
                    )
                .AddButton(
                    "send",
                    id: "saveAndSendNotifyFundCoordinator_Send",
                    text: Localization.GetText("TC.Send"),
                    type: CssClass.Button01,
                    callback: "send",
                    closeAtEnd: true
                )
            )

            @Display.AddModalButton(
                new ModalViewModel(
                    name: "SaveAndSendReturnProjectTeam",
                    validateForm: true,
                    allowClose: true,
                    contentSelector: "#saveAndSendReturnProjectTeam",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                    actionOnClose: "showOperationStatusModal",
                    closeOnOverlay: false,
                    text: Localization.GetText("TC.Header.SaveAndSend")
                )
                .AddButton(
                    "cancel",
                    id: "saveAndSendReturnProjectTeam_Cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: ""
                )
                .AddButton(
                    "send",
                    id: "saveAndSendReturnProjectTeam_Send",
                    text: Localization.GetText("TC.Confirm"),
                    type: CssClass.Button01,
                    callback: "send",
                    closeAtEnd: true
                )
            )

            @Display.AddModalButton(
                new ModalViewModel(
                    name: "SaveAndSendWithdraw",
                    validateForm: true,
                    allowClose: true,
                    contentSelector: "#SaveAndSendWithdraw",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                    actionOnClose: "showOperationStatusModal",
                    closeOnOverlay: false,
                    text: Localization.GetText("TC.Header.SaveAndSend")
                )
                .AddButton(
                    "cancel",
                    id: "saveAndSendWithdraw_Cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: ""
                )
                .AddButton(
                    "send",
                    id: "saveAndSendWithdraw_Send",
                    text: Localization.GetText("TC.Confirm"),
                    type: CssClass.Button01,
                    callback: "send",
                    closeAtEnd: true
                )
            )
        </div>
    </div>
    
    @Display.AddModalButton(
        new ModalViewModel(
            name: "notifyCheckModalButton",
            validateForm: false,
            allowClose: true,
            contentSelector: "#notifyCheckModal",
            //type: CssClass.ModalWarning,
            title: Localization.GetText("TC.TCAbstractModalFundingProcess.Title"),
            actionOnClose: "showOperationStatusModal",
            closeOnOverlay: false
            //text: Localization.GetText("TC.Header.SaveAndSend")
        )
        .AddButton(
            "cancel",
            id: "notifyCheckModalButton_Cancel",
            text: Localization.GetText("TC.Cancel"),
            type: CssClass.ButtonLink,
            callback: "notifyCheckModalCancel"
        )
        .AddButton(
            "send",
            id: "notifyCheckModalButton_Send",
            text: Localization.GetText("TC.Confirm"),
            type: CssClass.Button01,
            callback: "notifyCheckModalSend",
            closeAtEnd: true
        )
    )
}