@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General

@if (ViewBag.WriteRole)
{
    <div id="headerButtons" class="float-right main-buttons validationButtons">
        <div data-pagemode="read">
            @Display.Button01(Localization.GetText("TC.Edit"), action: "editValidationTC")
        </div>
        <div data-pagemode="edit">
            @Display.ButtonLink(Localization.GetText("TC.Cancel"), action: "cancelEditValidationTC")

            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button05,
                    name: "SaveValidate",
                    allowClose: true,
                    validateForm: true,
                    contentSelector: "#saveAndSendValidateModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    text: Localization.GetText("TC.Save"))
                .AddButton("cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("send",
                    text: Localization.GetText("TC.Save"),
                    type: CssClass.Button05,
                    callback: "saveValidationTC",
                    closeAtEnd: true))

            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button05,
                    name: "SaveReturnToTLButton",
                    allowClose: true,
                    validateForm: true,
                    contentSelector: "#saveReturnTLModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSave.Title"),
                    text: Localization.GetText("TC.Save"))
                .AddButton("cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("send",
                    text: Localization.GetText("TC.Save"),
                    type: CssClass.Button05,
                    callback: "saveValidationTC",
                    closeAtEnd: true))

            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button01,
                    name: "SaveAndSendValidate",
                    allowClose: true,
                    validateForm: true,
                    contentSelector: "#saveAndSendValidateModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                    text: Localization.GetText("TC.Header.SaveAndSend"))
                .AddButton("cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("send",
                    text: Localization.GetText("TC.Header.SaveAndSend"),
                    type: CssClass.Button01,
                    callback: "saveAndSend",
                    closeAtEnd: true))

            @Display.AddModalButton(
                new ModalViewModel(
                    typeButton: CssClass.Button01,
                    name: "SaveAndSendReturnToTLButton",
                    allowClose: true,
                    validateForm: true,
                    contentSelector: "#saveAndSendReturnTLModal",
                    type: CssClass.ModalWarning,
                    title: Localization.GetText("TC.TCAbstractModalSend.Title"),
                    text: Localization.GetText("TC.Header.SaveAndSend"),
                    actionOnClose: "openModalReturnToTeamLeader",
                    closeOnOverlay: false)
                .AddButton("cancel",
                    text: Localization.GetText("TC.Cancel"),
                    type: CssClass.ButtonLink,
                    callback: "")
                .AddButton("send",
                    id: "ReturnToTeamLeader",
                    text: Localization.GetText("TC.Header.SaveAndSend"),
                    type: CssClass.Button01,
                    callback: "saveAndSend",
                    closeAtEnd: true))
        </div>
    </div>
}