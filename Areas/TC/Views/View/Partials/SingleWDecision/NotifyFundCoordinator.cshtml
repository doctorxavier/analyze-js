@using System.Collections.Generic

@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Models.Repeater
@using IDB.Presentation.MVC4.General
@using IDB.MVCControls.General.Helpers

@model List<NotifyFundCoordinatorRowViewModel>

<div class="row row-body-40">
    <div class="col-md-12">
        <div data-pagemode="edit">
            <div class="row row-header font-header repeater-item">
                <div class="col-md-5">
                    @Localization.GetText("TC.SingleWDecision.NotifyFundCoordinator.ApplicableFunds").HtmlEncode()
                </div>
                <div class="col-md-5">
                    @Localization.GetText("TC.SingleWDecision.NotifyFundCoordinator.Decision").HtmlEncode()
                </div>
                <div class="col-md-2">
                    @Localization.GetText("TC.SingleWDecision.NotifyFundCoordinator.Selected").HtmlEncode()
                </div>
            </div>
        </div>
        <div class="row row-body-40">
            <div class="col-md-12">
                @Html.Partial("~/Views/Shared/Controls/Repeater.cshtml",
                    new RepeaterModel<NotifyFundCoordinatorRowViewModel>
                    {
                        Name = "SWDecisionFundCoordinatorRepeater",
                        PartialViewName = "Partials/SingleWDecision/NotifyFundCoordinatorRow",
                        RepeaterModelData = Model,
                        ModelTemplate = new NotifyFundCoordinatorRowViewModel { ApplicableFundId = -1 },
                        PropertyNameId = "ApplicableFundId",
                        ButtonNewRowContainerStyle = "row row-body-40",
                        ButtonNewColContainerStyle = "col-md-10 text-center fundButton",
                        ButtonNewStyle = "button08 newNotifyFundCoordinatorDecision",
                        ButtonNewText = Localization.GetText("TC.SingleWDecision.NotifyFundCoordinator.New"),
                        ButtonNewPosition = "bottom",
                        ButtonDeleteClass = CssClass.ButtonDelete,
                        ButtonDeleteHasIcon = true,
                        ButtonDeletePosition = Position.Right,
                        ButtonDeleteAlign = Position.Top,
                        CanRemoveElement = x => true
                    })
                <input data-name="validatorForNumElements"
                       class="hide"
                       type="text"
                       data-force-parsley-validation="true"
                       data-parsley-numelementsrange-message="@Localization.GetText("TC.SingleWDecision.NotifyFundCoordinator.MessageValidation").HtmlEncode()"
                       data-parsley-numelementsrange="1;[name=selected]:checked:not([disabled]);2"
                       value="forceValidate" />
            </div>
        </div>
    </div>
</div>