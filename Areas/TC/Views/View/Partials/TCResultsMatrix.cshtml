@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.Presentation.MVC4.General
@using IDB.Presentation.MVC4.Models.Repeater

@model TCAbstractResultsMatrixViewModel

<div data-name="result-matrix-section">
    @if(Model.Outcomes.Any())
    {
        <div class="row row-header font-header">
            <div class="col-md-12">
                @Localization.GetText("TC.TCAbstract.ResultsMatrix.Outcomes")
                <span class="asteriskColor">*</span>
            </div>
        </div>
    }
    else
    {
        <div class="row row-header"></div>
    }

    @Html.Partial(
        "~/Views/Shared/Controls/Repeater.cshtml",
        new RepeaterModel<TCOutcomeViewModel>
        {
            Name = "TCOutcomes",
            PartialViewName = "Partials/TCOutcomes",
            RepeaterModelData = Model.Outcomes,
            ModelTemplate = new TCOutcomeViewModel { OutcomeId = -1 },
            PropertyNameId = "OutcomeId",
            ButtonNewRowContainerStyle = "row row-header",
            ButtonNewColContainerStyle = "col-md-12 text-right",
            ButtonNewStyle = "button01 buttonRepeaterMarginButtom",
            ButtonNewText = Localization.GetText("TC.TCAbstract.ResultsMatrix.NewOutcome"),
            ButtonNewPosition = "top",
            ButtonDeleteClass = CssClass.ButtonDelete,
            ButtonDeleteHasIcon = true,
            ButtonDeletePosition = Position.Right,
            ButtonDeleteAlign = Position.Top,
            CanRemoveElement = x => true
        })

    @Html.Partial(
        "~/Views/Shared/Controls/Repeater.cshtml",
        new RepeaterModel<ComponentViewModel>
        {
            Name = "TCComponents",
            PartialViewName = "Partials/TCComponents",
            RepeaterModelData = Model.Components,
            ExtraData = new Dictionary<string, string>() { { "asociated", "financingTable3" } },
            ModelTemplate = new ComponentViewModel
            {
                ComponentId = 0,
                Outputs = new List<TCOutputViewModel>()
            },
            PropertyNameId = "ComponentId",
            ButtonNewRowContainerStyle = "row row-header",
            ButtonNewColContainerStyle = "col-md-12 text-right",
            ButtonNewStyle = "button01 buttonRepeaterMarginButtom",
            ButtonNewText = Localization.GetText("TC.TCAbstract.ResultsMatrix.NewComponent"),
            ButtonNewItemAction = "newComponent",
            ButtonDeleteItemAction = "deleteComponent",
            ButtonNewPosition = "top",
            ButtonDeleteClass = CssClass.ButtonDelete,
            ButtonDeleteHasIcon = true,
            ButtonDeletePosition = Position.Right,
            ButtonDeleteAlign = Position.Top,
            CanRemoveElement = x => true
        })

    @{
        var valueRequiredComponent = string.Empty;
        if(Model.Components != null && Model.Components.Any())
        {
            valueRequiredComponent = "fill";
        }
    }

    @ControlTemplates.InputText(
        value: valueRequiredComponent,
        name: "validatorMinElementsFilled",
        htmlClass: "hide",
        required: true,
        dataAttributes: new Dictionary<string, string>
        {
            { "parsley-required-message", Localization.GetText("TC.TCAbstract.ResultsMatrix.Information.Required") },
            { "optional-required", "true" },
            { "label", Localization.GetText("TC.TCAbstract.ResultsMatrix.Title") }
        })
</div>