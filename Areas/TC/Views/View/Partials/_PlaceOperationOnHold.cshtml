@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.General
@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.MVCCommon
@using IDB.MW.Application.TCAbstractModule.Enums

@model IDB.MW.Application.TCAbstractModule.ViewModels.Shared.DecisionOnHoldViewModel

@{
    var attributesDictionary = new Dictionary<string, string>();
    attributesDictionary.Add("onChange", "selectReasonForOnHoldStatusItems(this)");
}

<div data-id="ModalRegion" class="modalBody hide">
    <div id="sendHoldModal" class="modalBody hide">
        @Localization.GetText("TC.EligibilityDecision.Message.Place.Operation.On.Hold")
    </div>
    <div id="operationStatusModal"></div>
</div>

<div data-id="HiddenButtonRegion" class="hide">
    @Display.AddModalButton(
        new ModalViewModel(
            name: "sendHold",
            allowClose: true,
            contentSelector: "#sendHoldModal",
            type: CssClass.ModalWarning,
            title: Localization.GetText("TC.TCAbstractModalSave.Title"),
            validateForm: true,
            actionOnClose: "showOperationStatusModal",
            closeOnOverlay: false)
        .AddButton(
            name: "cancel",
            id: "Hold_Cancel",
            text: Localization.GetText("TC.Cancel"),
            type: CssClass.ButtonLink,
            callback: "")
        .AddButton(
            name: "send",
            id: "Hold_Send",
            text: Localization.GetText("TC.AwardFundEligibility.Button.Hold"),
            type: CssClass.Button01,
            callback: "send",
            closeAtEnd: true))
</div>

<div class="row">
    <div class="col-md-12" id="placeOperationOnHold" style="display: none">
        <div class="row row-header font-header">
            <div class="col-md-4">
                <div data-pagemode="edit">
                    @Localization.GetText("TC.EligibilityDecision.ReasonForOnHoldStatus").HtmlEncode()
                </div>
            </div>
            <div class="col-md-8">
                <div data-pagemode="edit">
                    <span id="labelReasonForOnHoldExplanation">
                        @Localization.GetText("TC.DonorDecision.Justification").HtmlEncode()
                    </span>
                    <span class="asteriskColor">*</span>
                </div>
            </div>
        </div>
        <div class="row row-body-50 font-body">
            <div class="col-md-4">
                <div data-pagemode="edit">
                    @Input.DropDown(
                        ViewBag.EnumMapping[Model.ReasonForOnHold],
                        "reasonForOnHoldStatus",
                        ViewBag.ReasonForOnHoldStatusList,
                        showEmptyOption: false,
                        attributes: attributesDictionary)
                </div>
            </div>
            <div class="col-md-8">
                <div data-pagemode="edit">
                    @ControlTemplates.InputTextArea(
                        Model.JustificationForOnHold,
                        "justificationOnHold",
                        rows: 6,
                        required: true)
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function selectReasonForOnHoldStatusItems(origin) {
        var selectedItem = $(origin.value);
        var explanationCommentsLabel = $(origin).closest('[class=col-md-12]')
            .find('#labelReasonForOnHoldExplanation');
        switch (selectedItem.selector) {
            case '@MasterDefinitions.GetMaster(
                    "SW_REASON_HOLD_STATUS_PROJECT_TEAM_CHANGES").MasterId':
                explanationCommentsLabel.text('@Localization.GetText(
                    "TC.EligibilityDecision.SentToProjectTeam").HtmlEncode()');
                break;
            default:
                explanationCommentsLabel.text('@Localization.GetText(
                    "TC.DonorDecision.Justification").HtmlEncode()');
                break;
        }
    }

</script>
