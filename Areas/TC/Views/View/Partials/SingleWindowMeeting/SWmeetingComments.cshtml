@using System.Globalization
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Models.Repeater
@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.MW.Application.TCAbstractModule.Enums
@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.General

@model MeetingGeneralCommentsViewModel

@{
    var formatDate = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDate;
}



<div class="swMeeting-saveComment" data-pagemode="edit">
    <button class="btn btn-warning" data-action="saveGeneralComments">@Localization.GetText("TC.SingleWindowMeeting.SaveComments")</button>
    </div>

    <div id="SWMeetingGeneralCommentData" 
    data-parsley-validate="data-parsley-validate" 
    data-parsley-excluded="[disabled]"
    data-ignore-nullable-values="true"
             data-url="@Url.Action("SWMeetingGeneralComment", "Save", new { area = "TC" })">
        
    <input type="hidden" name="meetingGeneralCommetsVM" value="@ViewBag.SerializedViewModel" />

            @Html.Partial("~/Views/Shared/Controls/Repeater.cshtml",
                        new RepeaterModel<MeetingGeneralComment>
                {
			        Name = "SWGeneralComments-" + Model.TCAbstractId.ToString(CultureInfo.InvariantCulture),
                    PartialViewName = "Partials/SingleWindowMeeting/SWmeetingCommentsNew",
                    //RepeaterModelData = Model.GeneralComments,
                    RepeaterModelData = Model.SWCoordinatorComments ,
                    ModelTemplate = new MeetingGeneralComment
                    {
                        CommentId = -1,
                        TypeComment = MeetingTypeComment.SingleWindowCoordinator
                    },
			        ExtraData = null,
                    PropertyNameId = "CommentId",
                    ButtonNewRowContainerStyle = "row row-header font-header",
                    ButtonNewColContainerStyle = "col-md-12 text-right",
                    ButtonNewStyle = "button01",
                    ButtonNewText = Localization.GetText("TC.SingleWindowMeeting.GeneralComment.New"),
                    ButtonNewItemAction = null,
                    ButtonNewPosition = "top",
                    
                    ButtonDeletePosition = Position.Bottom,
                    ButtonDeleteAlign = Position.Left,
                    ButtonDeleteClass = CssClass.Button07_4,
                    ButtonDeleteHasIcon = true,
                    //ShowDeleteButton = true,
                    //CanRemoveOldElements = false,
                    CanRemoveElement = x => x.User == ViewBag.UserName,

                    RepeaterItemClass = "repeater-item-comment"

                })
        </div>
<div class="row row-header">
    <div class="col-md-12">
        @{
            var commentSource = new Dictionary<MeetingTypeComment , string>();
            commentSource.Add( MeetingTypeComment.FundCoordinator , Localization.GetText( "TC.SingleWindowMeeting.GeneralComment.Fund" ) );
            commentSource.Add( MeetingTypeComment.RegionalTeamLeader , Localization.GetText( "TC.SingleWindowMeeting.GeneralComment.RegionalTL" ) );
            commentSource.Add( MeetingTypeComment.SingleWindowCoordinator , Localization.GetText( "TC.SingleWindowMeeting.GeneralComment.SWCoordinator" ) );
            commentSource.Add( MeetingTypeComment.TeamLeader , Localization.GetText( "TC.SingleWindowMeeting.GeneralComment.TeamLeader" ) );
        }
        @foreach( var comment in Model.GeneralComments )
        {
            <div class="row row-header row-header-comment">
                <div class="col-md-12">
                    <span>@FormatHelper.Format( Convert.ToDateTime( comment.Date ) , formatDate ).HtmlEncode()</span>
                    <span>@comment.User.HtmlEncode()</span>
                    <span>@commentSource[ comment.TypeComment ]</span>
                </div>
                </div>
    
            <div class="row repeater-item-comment">
                <div class="col-md-12">
                    <div class="font-comment">
                        @comment.Comment.HtmlEncode()
                </div>
            </div>
            </div>

        }
    </div>
</div>
