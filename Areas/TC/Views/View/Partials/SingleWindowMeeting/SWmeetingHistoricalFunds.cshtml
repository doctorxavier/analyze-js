@using IDB.MVCControls.DataTable.Models
@using System.Globalization
@using IDB.Presentation.MVC4.Helpers
@using IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService
@using IDB.MW.Application.TCAbstractModule.ViewModels.SingleWindowMeeting
@using IDB.MW.Infrastructure.Configuration
@using IDB.MW.Infrastructure.Helpers
@using IDB.MW.Application.TCAbstractModule.Enums
@using IDB.Architecture.Language
@using IDB.MVCControls.General.Helpers
@using System.Collections.Generic
@using IDB.MVCControls.DataTable.Helpers

@model List<MeetingHistoricalFundRowViewModel>


    @{
        var formatDate = ConfigurationServiceFactory.Current.GetApplicationSettings().FormatDate;

        var config = Html.RenderDataTable(Model);
        config.Name("meetingHistoricalTable")
            .PrimaryKey(m => m.idMetting.ToString())
            .AddPrimaryKeyToName(false)
            .Columns(columns =>
            {

                //columns.Bound(c => FormatHelper.Format(c.meetingDate, formatDate)).Persistent().Header(@Localization.GetText("TC.DecisionSWO.DateSingleWindowMeeting.DateMeeting"));

                columns.Bound(c => c.fundCode).Persistent().Header(@Localization.GetText("TC.FilterFunds.FundCode"));

                columns.Template(c => GetDecisionEscDonorModal(c)).Persistent().Header(@Localization.GetText("TC.SingleWindowMeeting.SubInfo.DonorESCDecision"));

                columns.Bound(c => FormatHelper.Format(c.decisionDate, formatDate)).Persistent().Header(@Localization.GetText("TC.SingleWindowMeeting.SubInfo.Date"));

            });

        config.TableClass = "table-default";
    }


@helper  GetDecisionEscDonorModal(MeetingHistoricalFundRowViewModel viewModel) {
    
    if (viewModel.DonorEscDecision != null)
    {
        <span class="clickable-text" data-name="eventDonorEscDecision">
            @ModuleFunctions.GetLabelDecisionDonorEscDecisionHistorical(viewModel.DonorEscDecisionType).HtmlEncode() 
        </span>
    }else {
        <span>
            @ModuleFunctions.GetLabelDecisionDonorEscDecisionHistorical(viewModel.DonorEscDecisionType).HtmlEncode()
        </span>
    }

    if(viewModel.DonorEscDecision != null){
        <div data-name="overlay-fund-DecisionReason" class="hide">
            @if (viewModel.DonorEscDecision.CauseOrType != null)
            {
                <div class="row row-header font-header">
                    <div class="col-md-12">
                        @ModuleFunctions.GetLabelDecisionDonorEscDecisionHistorical(viewModel).HtmlEncode()
                    </div>
                </div>
                <div class="row row-body-40 font-body">
                    <div class="col-md-12">
                        @viewModel.DonorEscDecision.CauseOrType.HtmlEncode()
                    </div>
                </div>
            }
            @if (viewModel.DonorEscDecision != null && viewModel.DonorEscDecision.Description != null)
                {
                <div class="row row-header font-header">
                    <div class="col-md-12">
                        @ModuleFunctions.GetLabelDescriptionDonorEscDecisionHistorical(viewModel).HtmlEncode()
                    </div>
                </div>
                <div class="row row-body-40 font-body">
                    <div class="col-md-12">
                        @viewModel.DonorEscDecision.Description.HtmlEncode()
                    </div>
                </div>
            }
        </div>
    }
 }
 
@Html.Partial("Controls/DataTable", config)



