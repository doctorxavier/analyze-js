@using IDB.Presentation.MVC4.Models.Modal
@using IDB.Presentation.MVC4.General
@using IDB.MVCControls.General.Helpers

@model string

<div data-id="ModalRegion" class="modalBody hide">
    <div id="saveAndSendWithdrawModal" class="hide modalBody">
        @Localization.GetText("TC.Decision.StatusMessageWithdraw")
    </div>
</div>

<div data-id="hiddenButtonRegionWithdraw" class="hide">
    @Display.AddModalButton(
        new ModalViewModel(name: "sendWithdraw",
            allowClose: true,
            contentSelector: "#saveAndSendWithdrawModal",
            title: Localization.GetText("TC.TCAbstractModalSend.Title"),
            validateForm: true,
            type: CssClass.ModalWarning,
            actionOnClose: "showOperationStatusModal",
            closeOnOverlay: false,
            text: Localization.GetText("TC.Header.SaveAndSend"))
        .AddButton("cancel",
            id: "Withdraw_Cancel",
            text: Localization.GetText("TC.Cancel"),
            type: CssClass.ButtonLink,
            callback: "")
        .AddButton("send",
            id: "Withdrawn_Send",
            text: Localization.GetText("TC.Send"),
            type: CssClass.Button01,
            callback: "send",
            closeAtEnd: true)
    )
</div>

<div class="row">
    <div class="col-md-12" id="withdrawOperation" style="display: none">
        <div class="row row-header font-header" data-pagemode="edit">
            <div class="col-md-8">
                @Localization.GetText("TC.Decision.ReasonForWithdrawal").HtmlEncode()
                <span class="asteriskColor">*</span>
            </div>
        </div>
        <div class="row row-body-50 font-body" data-pagemode="edit">
            <div class="col-md-8">
                @ControlTemplates.InputTextArea(
                    Model,
                    "reasonForWithdrawal",
                    rows: 6,
                    required: true)
            </div>
        </div>
    </div>
</div>
