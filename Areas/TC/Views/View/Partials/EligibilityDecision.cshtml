@using IDB.MW.Application.TCAbstractModule.Enums
@using IDB.MW.Domain.Values
@using IDB.Presentation.MVC4.Areas.TC.Controllers
@using IDB.Presentation.MVC4.Areas.TC.Enums
@using IDB.Presentation.MVC4.Areas.TC.Models
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Application.TCAbstractModule.ViewModels.EligibilityDecision

@model EligibilityDecisionViewModel

@if (ViewBag.ReadRole)
{
    <div data-pagemode="edit">
        <input type="hidden"
               name="@SaveController.SAVE_CONTROLLER_SUBMITTYPE"
               value="@SaveControllerTypeEnum.Save" />
    </div>
    <input type="hidden" id="hidViewModel" value="@ViewBag.SerializedViewModel" />
    <div class="row">
        <div class="col-md-12">
            <h3 class="leftmarginh3">
                @Localization.GetText("TC.EligibilityDecision.EligibilityDecision").HtmlEncode()
            </h3>
        </div>
    </div>
    <div class="row row-body-40">
        <div class="col-md-12">
            <a class="hide" id="email_hide" href="#">enviar e-mail data</a>
            <div data-pagemode="read">
                <div>
                    @{
                        foreach (var option in Model.OptionsType)
                        {
                            if (option == EligibilityDecisionTypeEnum.SentToESC)
                            {
                                @ControlTemplates.InputRadioButtonNew(
                                    (ViewBag.EnumMapping[option]).ToString(),
                                    "decisionDisabled",
                                    disabled: true,
                                    required: false,
                                    isChecked: (Model.Type == option),
                                    label: ControlTemplates.DropDownGetSelectedString(ViewBag.EnumMapping[option],
                                    (List<SelectListItem>)ViewBag.EligibilityDecisionList),
                                    isDisplayBlock: false,
                                    htmlClass: "infoRadioButton")
                                <span>
                                    &nbsp;
                                    <button class="sendEmail" data-action="email"></button>
                                    <span class="informationEmail">
                                        @Localization.GetText("TC.EligibilityDecision.SentToESCInformation").HtmlEncode()
                                    </span>
                                </span>
                            }
                            else if (option == EligibilityDecisionTypeEnum.EligibilityByDelegation
                                && (Model.FundCode == FundCode.SVC || Model.FundCode == FundCode.CTY))
                            {
                                @ControlTemplates.InputRadioButtonNew(
                                    (ViewBag.EnumMapping[option]).ToString(),
                                    "decisionDisabled",
                                    disabled: true,
                                    required: false,
                                    isChecked: (Model.Type == option),
                                    label: ControlTemplates.DropDownGetSelectedString(ViewBag.EnumMapping[option],
                                    (List<SelectListItem>)ViewBag.EligibilityDecisionList),
                                    isDisplayBlock: false,
                                    htmlClass: "infoRadioButton")

                                @Html.Partial("Partials/Controls/DonorAndESCDecisionDownloadWordButton",
                                Model.TrustFundId)
                            }
                            else
                            {
                                @ControlTemplates.InputRadioButtonNew(
                                    (ViewBag.EnumMapping[option]).ToString(),
                                    "decisionDisabled",
                                    disabled: true,
                                    required: false,
                                    isChecked: (Model.Type == option),
                                    label: ControlTemplates.DropDownGetSelectedString(ViewBag.EnumMapping[option],
                                    (List<SelectListItem>)ViewBag.EligibilityDecisionList),
                                    isDisplayBlock: true)
                            }
                        }
                    }
                </div>
            </div>
            <div data-pagemode="edit">
                <div>
                    @{
                        foreach (var option in Model.OptionsType)
                        {
                            if (option == EligibilityDecisionTypeEnum.SentToESC)
                            {
                                @ControlTemplates.InputRadioButtonNew(
                                    (ViewBag.EnumMapping[option]).ToString(),
                                    "decision",
                                    disabled: false,
                                    required: true,
                                    isChecked: (Model.Type == option),
                                    label: ControlTemplates.DropDownGetSelectedString(ViewBag.EnumMapping[option],
                                    (List<SelectListItem>)ViewBag.EligibilityDecisionList),
                                    isDisplayBlock: false,
                                    htmlClass: "infoRadioButton")
                                <span>
                                    &nbsp;
                                    <button class="sendEmail" data-action="email"></button>
                                    <span class="informationEmail">
                                        @Localization.GetText("TC.EligibilityDecision.SentToESCInformation").HtmlEncode()
                                    </span>
                                </span>
                            }
                            else if (option == EligibilityDecisionTypeEnum.EligibilityByDelegation
                                && (Model.FundCode == FundCode.SVC || Model.FundCode == FundCode.CTY))
                            {
                                @ControlTemplates.InputRadioButtonNew(
                                    (ViewBag.EnumMapping[option]).ToString(),
                                    "decision",
                                    disabled: false,
                                    required: true,
                                    isChecked: (Model.Type == option),
                                    label: ControlTemplates.DropDownGetSelectedString(ViewBag.EnumMapping[option],
                                    (List<SelectListItem>)ViewBag.EligibilityDecisionList),
                                    isDisplayBlock: false,
                                    htmlClass: "infoRadioButton")

                                @Html.Partial("Partials/Controls/DonorAndESCDecisionDownloadWordButton",
                                Model.TrustFundId)
                            }
                            else
                            {
                                @ControlTemplates.InputRadioButtonNew(
                                    (ViewBag.EnumMapping[option]).ToString(),
                                    "decision",
                                    disabled: false,
                                    required: true,
                                    isChecked: (Model.Type == option),
                                    label: ControlTemplates.DropDownGetSelectedString(ViewBag.EnumMapping[option],
                                    (List<SelectListItem>)ViewBag.EligibilityDecisionList),
                                    isDisplayBlock: true)
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" id="placeOperation" style="display: none">
            <div class="row row-header font-header">
                <div class="col-md-4">
                    <div data-pagemode="edit">
                        @Localization.GetText("TC.EligibilityDecision.ReasonForOnHoldStatus").HtmlEncode()
                    </div>
                </div>
                <div class="col-md-8">
                    <div id="labelElegibilityExplanation" data-pagemode="edit">
                        @Localization.GetText("TC.EligibilityDecision.Explanation").HtmlEncode()
                        <span class="asteriskColor">*</span>
                    </div>
                    <div id="labelSentToProjectTeam" hidden data-pagemode="edit">
                        @Localization.GetText("TC.EligibilityDecision.SentToProjectTeam").HtmlEncode()
                        <span class="asteriskColor">*</span>
                    </div>
                </div>
            </div>
            <div class="row row-body-50 font-body">
                <div class="col-md-4">
                    <div data-pagemode="edit">
                        @{
                            var attributesDictionary = new Dictionary<string, string>();
                            attributesDictionary.Add("onChange", "selectReasonForOnHoldStatusItems(this)");
                        }
                        @Input.DropDown(
                            ViewBag.EnumMapping[Model.ReasonForOnHoldStatus],
                            "reasonForOnHoldStatus",
                            ViewBag.ReasonForOnHoldStatusList,
                            showEmptyOption: false,
                            attributes: attributesDictionary)
                    </div>
                </div>
                <div class="col-md-8">
                    <div data-pagemode="edit">
                        @ControlTemplates.InputTextArea(Model.Explanation, "explanation", rows: 6, required: true)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12" id="withdrawOperation" style="display: none">
            <div class="row row-header font-header" data-pagemode="edit">
                <div class="col-md-8">
                    @Localization.GetText("TC.Decision.ReasonForWithdrawal").HtmlEncode()
                    <span class="asteriskColor">*</span>
                </div>
            </div>
            <div class="row row-body-50 font-body" data-pagemode="edit">
                <div class="col-md-8">
                    @ControlTemplates.InputTextArea(
                    Model.Explanation,
                    "reasonForWithdrawal",
                    rows: 6,
                    required: true)
                </div>
            </div>
        </div>
    </div>

    if (Model.OptionsType.Any(o => o == EligibilityDecisionTypeEnum.EligibilityByDelegation))
    {
        @Html.Partial("Partials/_AwardFundElegibilitySubFundCheckBox", Model.AwardFundEligibility)

        <div id="elegibilityByDelegation" style="display:none">
            <div class="row">
                <div class="col-md-12">
                    <div data-id="awardFundEligibilityPartial"
                         data-loadurl="@Url.Action(
                                      "GetAwardFundEscDecision",
                                      "View",
                                      new
                                      {
                                          area = "TC",
                                          trustFundId = Model.TrustFundId,
                                          singleWindowsMeetingId = Model.SingleWindowsMeetingId
                                      })">

                        @Html.Partial(
                            "Partials/AwardFundEligibility/AwardFundEligibilityPartial",
                            Model.AwardFundEligibility)
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row row-body-40">
        <div class="col-md-12">
            @Html.Partial(
                "Partials/DataTables/DocumentsTable",
                new DocumentTableViewModel
                {
                    Documents = Model.Documents,
                    ShowAddButton = true,
                    DocumentTableName = "EligibilityDecisionDocuments",
                    DocumentsInstructions = null,
                    AddFunctionName = "AddDocuments",
                    CanDelete = true,
                    BeforeDeleteFuncionName = null
                })
        </div>
    </div>
}
