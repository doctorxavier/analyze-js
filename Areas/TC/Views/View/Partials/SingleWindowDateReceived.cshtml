@using IDB.MW.Infrastructure.Configuration
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var expRegDate = appSettings.ValidationDataPickerExpReg;
    var formatDate = appSettings.FormatDate;

}

@model IDB.MW.Application.TCAbstractModule.ViewModels.TCAbstractService.SingleWindowMeetingViewModel

<input type="hidden" name="fromDateCurrent" value="" />
<input type="hidden" name="toDateCurrent" value="" />


<div class="container-filter">
    <div class="row font-header ">
        <div class="col-md-1" style="min-width: 115px;">
            @Localization.GetText("TC.SingleWindowMeeting.DateReceived").HtmlEncode():
        </div>
        <div class="col-md-1 text-right">
            @Localization.GetText("TC.SingleWindowMeeting.From")
        </div>
        <div class="col-md-2">
            @ControlTemplates.InputDatePicker(Model.SWMDateFrom, "fromDateFilter", required: false, expReg: expRegDate,
                    format: formatDate, disabled: false,
                    dataAttributes: new Dictionary<string, string> { { "parsley-lessOrEqualDate", "[name=toDateFilter]" } })
        </div>

        <div class="col-md-1 text-right">
            @Localization.GetText("TC.SingleWindowMeeting.To")
        </div>
        <div class="col-md-2">
            @ControlTemplates.InputDatePicker(Model.SWMDateTo, "toDateFilter", required: false, expReg: expRegDate,
                    format: formatDate, disabled: false,
                    dataAttributes: new Dictionary<string, string> { { "parsley-greaterOrEqualDate", "[name=fromDateFilter]" } })
        </div>

        <div class="col-md-2 text-right">
            @Display.Button01(Localization.GetText("TC.SingleWindowMeeting.Filter"), attributes: new Dictionary<string, string>() { { "id", "buttonSingleWindowDateFilter" } })
        </div>
    </div>
</div>
