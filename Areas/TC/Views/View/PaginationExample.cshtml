@using IDB.MVCControls.DataTable.Helpers
@using IDB.MW.Application.Mocks.DataTable
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using System.Globalization
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Models
@{
    //Layout = null;
}


<div>

        <div>
                Filtrar por H name: <input type="text" name="filtro-name"/>
                <input type="button" name="buscar" value="Buscar" />
                <input type="button" name="limpiar" value="Limpiar" />
            </div>

            @{
                var config = Html.RenderDataTable(new List<DataTableMockViewModel>());
                config.Name("tablaEjemplo")
                    .PrimaryKey(m => m.Name)
                    .AddPrimaryKeyToName(false)
                    .AjaxLoadUrl(Url.Action("AjaxHandler", "View", new { area = "TC" }))
                    .Paginable()
                    .PageSize(3)
                    .CustomFilterAjax("getFilters")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.Name).Persistent().Header("H Name").ColumnName("Name").Orderable(true);
                        columns.Bound(c => c.Status).Persistent().Header("H Status").ColumnName("Status").Orderable(true);
                        columns.Bound(c => c.ObjetiveEn).Persistent().Header("H ObjetiveEn").ColumnName("ObjetiveEn");
                        columns.Bound(c => c.RequestReference).Persistent().Header("H RequestReference").ColumnName("RequestReference");
                    });
            }


            @Html.Partial("Controls/DataTable", config)
    </div>

<div class="row-body-50">
    <div>Dropdown normal</div>
    <div class="col-md-3">
        <span>Kendo:</span>
        @Input.DropDown( null , "dropdown-normal-kendo" , ViewBag.DropdownExampleList , id: "dnk1" , showEmptyOption: true , placeholder: "placeholder" )
    </div>
    <div class="col-md-3">
        <span>Actual:</span>
        @Input.DropDown( (string)null , "dropdown-normal-actual" , (List<SelectListItem>) ViewBag.DropdownExampleList )
    </div>
</div>

<div class="row-body-50">
    <div class="col-md-4">
        <p>Dropdown Cascada Ajax Kendo:</p>
          <p>
            @Input.DropDown( null , "dropdown-cascada-padre1" , ViewBag.DropDownExampleList , id: "padre-id",placeholder:"Choose" )
        </p>
    <p>
        @Input.DropDownAjax( null , "dropdown-cascada-hijo1" , Url.Action( "GetCascadaHijoKendo" , "View" , new { area = "TC" } ) , id: "hijo-id" , parentDropdownId: "padre-id" , placeholder: "Choose" )
    </p></div>
    <div class="col-md-4">
        <p>Dropdown Cascada Cliente Kendo:</p>
          <p>
            @Input.DropDown( null , "dropdown-cascada-padre2" , ViewBag.DropDownExampleList , id: "padre-client-id" , placeholder: "Choose" )
        </p>
    <p>
        @Input.DropDown( null , "dropdown-cascada-hijo2" , ViewBag.DropdownExampleHijoList , id:"hijo-client-id" , parentDropdownId:"padre-client-id",placeholder:"Choose" )
    </p></div>

    </div>



@section scripts{

    <script type="text/javascript">

        $(document).ready(function () {
          
          
            $(document).on("change", '[name=dropdown-normal-kendo]', function () {
                alert(this.value);
            });
        });
        function newComponentSustainabilityComponents(source) {
            // Acceder TR a clonar
            // Clonarla con el parametro false
            // Obtenemos el ID
            // Accedemos a los inputs (dropdown futuros)
            // Modificamos el ID concatenando el ID
            // invocar funcion kendodropdownlist
          

            var container = $("[data-parsley-validate]").first();
            container.parsley().destroy();
            var templateTr = $('#SustainabilityComponents tbody tr:first');

            var last = $('#SustainabilityComponents tbody tr:last');
            var clonedTr = templateTr.clone(false).appendTo("#SustainabilityComponents tbody");

            if (!last.hasClass('hide')) {
                tableClass(last, clonedTr);
            } else {
                clonedTr.attr('class', 'custom-even');
            }

            var newId = source.data("autoincrement") + 1;
            source.data("autoincrement", newId);

            clonedTr.find("input, select").attr('data-persist-new', newId);
            clonedTr.find('[name=validatorComponentsAmount]').removeAttr('disabled');
            clonedTr.find("input, select").removeAttr('disabled');

            clonedTr.find('[name=SustainabilityTypeId]').attr('name', 'SustainabilityTypeId' + newId);
            clonedTr.find('[name=ComponentId]').attr('data-dropdown-cascade', '[name=SustainabilityTypeId' + newId + ']')

            clonedTr.removeClass("hide");
            enterEditMode(false, clonedTr, false);
            clonedTr.attr("data-new-id", "new");
            bindHandlers(clonedTr);
            container.parsley();
        }


        function getFilters() {
            var filter1 = $("[name=filtro-name]").val();
            return { Name: filter1 };
        }

        registerCallback(function () {
            $(document).on('click', '[name=buscar]', function () {
                var table = $('#tablaEjemplo');
                table.data("fn-search")();
            });
            $(document).on('click', '[name=limpiar]', function () {
                var table = $('#tablaEjemplo');
                table.data("fn-clear")();
            });
          
        });
    </script>
}