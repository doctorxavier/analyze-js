@model IDB.MW.Domain.Models.FindingRecomendations.DelaysEditModel
@{
    string LoadOptions1 = "";
    var ListOutputs = new SelectList(ViewBag.ListOutputs, "Value", "Text");
    string LoadOptions2 = "";
    var ListOutcomes = new SelectList(ViewBag.ListOutcomes, "Value", "Text");
    bool first = true;
    foreach (var data in ListOutputs)
    {
        if (first)
        {
            LoadOptions1 += "<option value='" + data.Text + "' selected='selected'>" + data.Text + "</option>";
            first = false;
        }
        else
        {
            LoadOptions1 += "<option value='" + data.Text + "' >" + data.Text + "</option>";
        }
    }
    first = true;
    foreach (var data in ListOutcomes)
    {
        if (first)
        {
            LoadOptions2 += "<option value='" + data.Text + "' selected='selected'>" + data.Text + "</option>";
            first = false;
        }
        else
        {
            LoadOptions2 += "<option value='" + data.Text + "' >" + data.Text + "</option>";
        }
    }
    bool isLessTaskFive = ViewBag.isLessTaskFive ?? false;
}
@section JavaScript {

    <!-- CSS Files -->
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/kendo/kendo.common.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/DelaysEditCustom.css")" />
    <!-- JS Files -->
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/FindingRecomendations/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/FindingRecomendations/Custom/Delay/DelaysInAchievementScript.js")"></script>
    <!-- End Files Scripts -->
}
<script>
    var showfilter1 = false;
    var showfilter2 = false;
    $(document).ready(function () {

        /* V2.1: Remove Extra Modal Window After Save Changes */
        $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
        $(".ui-widget-overlay").remove();
        $(".k-overlay").remove();
        $(".k-window").remove();

        $("#buttonfilter1").click(function () {
            if (showfilter1) {
                showfilter1 = false;
                $("#filter1").addClass("hide");
                $("#buttonfilter1").val($("#showtext").val());
            } else {
                showfilter1 = true;
                $("#filter1").removeClass("hide");
                $("#buttonfilter1").val($("#hidetext").val());
            }
            
        });
        $("#buttonfilter2").click(function () {
            if (showfilter2) {
                showfilter2 = false;
                $("#filter2").addClass("hide");
                $("#buttonfilter2").val($("#showtext").val());
            } else {
                showfilter2 = true;
                $("#filter2").removeClass("hide");
                $("#buttonfilter2").val($("#hidetext").val());
            }
            
        });

        $("#Name").change(function () {
            var text = $("#Name option:selected").html();
            $("#Module").children().remove();
            if (text == $("#OutputSelected").val()) {
                var LoadOptions = $("#ListOutputs").val();
            }
            else if (text == $("#OutcomeSelected").val()) {
                var LoadOptions = $("#ListOutcomes").val();
            }
            else {
                var LoadOptions = $("#Nametext").val()
            }

            $("#Module").append(LoadOptions);
            $("#Module").kendoDropDownList();
        });


        $(".k-widget").css("height", "40px ");
        $(".k-dropdown-wrap").css("height", "36px");
        $(".k-input").css("padding-top", "2px");
        $(".k-input").css("padding-bottom", "5px");
        $(".k-select").css("height", "36px ");
        $(".k-icon").css("height", "36px ");

        $("#Module").children().remove();
        $("#Module").append($("#Nametext").val());
        $("#Module").kendoDropDownList();

        $(".btnClearFilters").click(function () {
            if ($(this).attr('data-route') == 'data') {
                var dropdownlist = $("#Name").data("kendoDropDownList");
                dropdownlist.select(0);
                var dropdownlist = $("#Module").data("kendoDropDownList");
                dropdownlist.select(0);
                var dropdownlist = $("#Namespace").data("kendoDropDownList");
                dropdownlist.select(0);
                var dropdownlist = $("#FullName").data("kendoDropDownList");
                dropdownlist.select(0);
                $("#Module").children().remove();
                $("#Module").append($("#Nametext").val());
                $("#Module").kendoDropDownList();
            } else {
                $("#ReflectedType").val("");
                $("#OtherDelays_0__Name").val("");
                var dropdownlist = $("#AssemblyQualifiedName").data("kendoDropDownList");
                dropdownlist.select(0);
                var dropdownlist = $("#BaseType").data("kendoDropDownList");
                dropdownlist.select(0);
            }
        });

        $(".btnFilter").click(function () {
            if ($(this).attr('data-route') == 'data') {
                var Name = $("#Module").val();
                var ListCycleSel = $("#TypeHandle").val();/////////////////
                if (Name == "") { Name = "Name"; }
                document.location = ($("#urlrute").val() + '&Type=' + $("#Name").val() + '&Name=' + Name + '&Solved=' + $("#Namespace").val() + '|0' + '&cycleIdList=' + $("#FullName").val());
            } else {
                var Name = $("#OtherDelays_0__Name").val();
                if (Name == "") { Name = "Name"; }
                document.location = ($("#urlrute").val() + '&Type=' + $("#ReflectedType").val() + '&Name=' + Name + '&Solved=' + $("#AssemblyQualifiedName").val() + '|1' + '&cycleIdList=' + $("#BaseType").val());
            }
        });

    });

    function showNotification(btnEdit) {

        var path = $(btnEdit).attr("data-route");

        $(window.parent.document).find('body').append('<div class="ui-widget-overlay ui-front"></div>');
        $("body").append('<div class="ui-widget-overlay ui-front"></div>');
        $("body").append('<div class="dinamicModal"><div class="loadingdatawarning"><br>Loading ...</div></div>');
        $(".k-overlay").remove();

        var title = "Warning";
        var dialog = $(".dinamicModal").kendoWindow({
            width: "800px",
            title: title,
            draggable: false,
            resizable: false,
            content: path,
            pinned: true,
            actions: [
                "Close"
            ],
            modal: true,
            visible: false,
            close: function () {
                $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                $(".ui-widget-overlay").remove();
                $(".k-window").remove();
            }
        }).data("kendoWindow");

        $(".k-window-titlebar").addClass("warning");
        $(".k-window-title").addClass("ico_warning");
        dialog.open();
        $(".k-overlay").remove();
    }

    function redirectEdit(btnEdit) {
        var route = $(btnEdit).attr("data-route");
        location.href = route;
    }
</script>
<input type="hidden" id="showtext" value="@Localization.GetText("Show Filter")" />
<input type="hidden" id="hidetext" value="@Localization.GetText("Hide Filter")" />
<input type="hidden" id="ListOutputs" value="@LoadOptions1" />
<input type="hidden" id="ListOutcomes" value="@LoadOptions2" />
<input type="hidden" id="urlrute" value="@(Url.Action("DetailsDelays", "FindingRecommendation", new { area = "FindingRecomendations", operationNumber = @Model.OperationNumber, State = 0 }))">
@Html.Hidden("OutputSelected", Localization.GetText("Output delay"))
@Html.Hidden("OutcomeSelected", Localization.GetText("Outcome delay"))
@Html.Hidden("Nametext", "<option value='" + Localization.GetText("Name") + "' >" + Localization.GetText("Name") + "</option>")


<div id="ui_fi_004" class="padding20 ">
    <div class="lineHeight2em verticalMargin20">
        <div class="inline-block w75">
            <h3 class="font2em">@Localization.GetText("Findings and recommendations")</h3>
        </div>
    </div>
    <div class="tabsContainer verticalMargin20">
        @*<div class="inline-block tabItem w17 p10 active" id="Clauses" data-route="@Url.Action("Index", "FindingRecommendation", new { area = "FindingRecomendations", operationNumber = @Model.OperationNumber })">@Localization.GetText("Contractual Clauses")</div>
            <div class="inline-block tabItem w17 p10" id="Matrixchanges" data-route="@Url.Action("DetailsMatrixChanges", "FindingRecommendation", new { area = "FindingRecomendations", operationNumber = @Model.OperationNumber })">@Localization.GetText("Changes to the Matrix")</div>*@
        <div class="inline-block tabItem w17 p10 active" id="Delays" data-route="@Url.Action("DetailsDelays", "FindingRecommendation", new { area = "FindingRecomendations", operationNumber = @Model.OperationNumber })">@Localization.GetText("Delays in Achievement")</div>
        @*<div class="inline-block tabItem w17 p10" id="Risk" data-route="@Url.Action("DetailsRiskManagement", "FindingRecommendation", new { area = "FindingRecomendations", operationNumber = @Model.OperationNumber })">@Localization.GetText("Risk Management")</div>*@
        <div class="inline-block tabItem w20 p10" id="Additional" data-route="@Url.Action("DetailsFindingRecommendation", "FindingRecommendation", new { area = "FindingRecomendations", operationNumber = @Model.OperationNumber })">@Localization.GetText("Overall Project Management")</div>
    </div>

    <div class="verticalMargin20-0-20 relative h50px">
        <div class="inline-block w48 leftAlign absolute">
            <div class="collapseControl" onclick="resizeiframeCloudTimeOut()">
                <label for="collapseControlButton" class="whiteDotContainer inline-block cursorPointer">
                    <span class="colorBackground relative">
                        <span class="whiteDot absolute">@Localization.GetText("White dot")</span>
                    </span>
                </label>
                <input id="collapseControlButton" name="collapseControlButton" type="button" value="@Localization.GetText("Expand All")" class="cursorPointer inline-block">
            </div>
        </div>
    </div>

    <div class="inline-block rightAlign " style="position:relative;top:-50px;width:60%;left:40%;">
        @if (ViewBag.RMAdministrator && Html.HasPermission("Findings Write") && Model.IsEditable)
        {
           
                if (ViewBag.IsCurrentCycleTableOne && ViewBag.IsCurrentCycleTableTwo)
                {
                    <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                           title=" @Localization.GetText("Edit") " onclick="redirectEdit(this)" 
                           data-route="@(Url.Action("DelaysEdit", "FindingRecommendation", 
                           new { area = "FindingRecomendations", operationNumber = Model.OperationNumber }))">
                }
                else
                {
                    <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                           title=" @Localization.GetText("Edit") " onclick=" shownotification(this)" 
                           data-route="@(Url.Action("Notification", "FindingRecommendation", new { area = "FindingRecomendations" }))">
                }
        }
        else if (isLessTaskFive && Html.HasPermission("Findings Write") && Model.IsEditable)
        {
               if (ViewBag.IsCurrentCycleTableOne && ViewBag.IsCurrentCycleTableTwo)
                {
                    <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" 
                           value=" @Localization.GetText("Edit") " title=" @Localization.GetText("Edit") " 
                           onclick="redirectEdit(this)" data-route="@(Url.Action("DelaysEdit", "FindingRecommendation", 
                           new { area = "FindingRecomendations", operationNumber = Model.OperationNumber }))">
                }
                else
                {
                    <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                           title=" @Localization.GetText("Edit") " onclick=" shownotification(this)" 
                           data-route="@(Url.Action("Notification", "FindingRecommendation", new { area = "FindingRecomendations" }))">
                }
           
        }
    </div>

    <div class="verticalMargin20">
        <div class="inline-block w80">
            <h3 class="font20px AlingTitles">@Localization.GetText("Delays in achievement of annual plans for Outputs and Outcomes")</h3>
        </div>

        <div class="inline-block rightAlign w19-4">
            <input type="button" id="buttonfilter1" class="button blueButton alingFilterButtonRigth" value=" @Localization.GetText("Show Filter") " title=" @Localization.GetText("Show Filter") ">
        </div>

    </div>

    <div class="filter hide" style="padding-bottom:10px;height: 210px;" id="filter1">
        <div class="cajaGeneralFilter2" style="padding-bottom:10px;height: 160px;">
            <div class="contenidoFilter5">
                <legend class="hide">@Localization.GetText("Datos de Filtro")</legend>
                <table style="width:100%;">
                    <tbody>
                        <tr>
                            <td>
                                <ul class="optionList">
                                    <li class="smallFilter2 dataTitle">
                                        @Html.ListBoxFor(x => x.GetType().Name, new SelectList(ViewBag.ListDelaysType, "Value", "Text"), new { @class = "kendoDropDown ListTypeDelay itemDelayTypeId", @style = "width: 200px;height:40px;" })
                                    </li>
                                </ul>
                                <span>&nbsp;</span>
                            </td>
                            <td>
                                <ul class="optionList">
                                    <li class="smallFilter2 dataTitle">
                                        @Html.ListBoxFor(x => x.GetType().Module, new SelectList(ViewBag.ListIsSolved, "Value", "Text"), new { @class = "kendoDropDown itemResultElementName", @style = "width: 500px;height:40px;" })
                                    </li>
                                </ul>
                                <span>&nbsp;</span>
                            </td>
                            <td>
                                <ul class="optionList">
                                    <li class="smallFilter2 dataTitle">
                                        @Html.ListBoxFor(x => x.GetType().Namespace, new SelectList(ViewBag.ListIsSolved, "Value", "Text"), new { @class = "kendoDropDown itemIsSolved", @style = "width: 250px;height:40px;" })
                                    </li>
                                </ul>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <div class="inline-block w65 verticalAlignMiddle">
                                    <label for="CyclesInFR" class="font08em inline-block w23 verticalAlignMiddle noPadding labelSelectNormalPMROperation">@Localization.GetText("PMR Cycle")</label>
                                    <br />
                                    @Html.ListBoxFor(x => x.GetType().FullName, new MultiSelectList(ViewBag.ListCycles, "Value", "Text"), new { style = "width: 300px; font-size: 16px; color: gray;", @class = "MultiSelectCustom" })
                                </div>
                            </td>
                            <td>
                                <div><span>&nbsp;</span></div>
                                <div class="editingButtonsEdit" style="padding-right: 0px;">
                                    <a href="javascript:void(0)" class="btn-primary filter-clauses btnClearFilters" style="min-height: 2em;" title="@Localization.GetText("Clear")" data-route="data">@Localization.GetText("Clear")</a>
                                    <a href="javascript:void(0)" class="btn-primary filter-clauses btnFilter" style="min-height: 2em;" title="@Localization.GetText("Filter")" style="margin-right: 2em;" data-route="data">@Localization.GetText("Filter")</a>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>

            </div>
        </div>
    </div>

    <div>
        <table id="tableSortUIFI004-1" class="grid w100 noInnerPadding fixedValues">
            <thead>
                <tr>
                    <th style="width:15%">@Localization.GetText("Cycle Name")</th>
                    <th style="width:15%">@Localization.GetText("Type of delay")</th>
                    <th style="width:37%">@Localization.GetText("Name")</th>
                    <th style="width:15%">@Localization.GetText("Is the issue solved?")</th>
                    <th style="width:15%">@Localization.GetText("Last update")</th>
                    <th style="width:3%"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var DelaysAchievement in Model.AchievementDelays)
                {
                    <tr>
                        <td colspan="6">
                            <table class="w100 innerGrid">
                                <tr>
                                    <td>@DelaysAchievement.NameCycle</td>
                                    <td>@DelaysAchievement.DelayType</td>
                                    <td>@DelaysAchievement.ResultElementName</td>
                                    <td>@DelaysAchievement.StateIsSolved</td>
                                    <td>
                                        <div class="inline-block w90">
                                            @String.Format("{0:dd MMM yyyy}", DelaysAchievement.LastUpdate)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="inline-block rightAlign">
                                            <input type="button" class="noBorder operationButton arrow cursorPointer" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="6">
                                        <div class="inline-block w30 marginRight3">
                                            <h6 class="boldFont verticalMargin10">@Localization.GetText("Explain both physical and financial delays")</h6>
                                            <p class="verticalMargin10">@DelaysAchievement.DelayReason</p>
                                        </div>
                                        <div class="inline-block w30 marginRight3">
                                            <h6 class="boldFont verticalMargin10">@Localization.GetText("Findings: Effects or implications (negative or positive) of the delays")</h6>
                                            <p class="verticalMargin10">@DelaysAchievement.Finding</p>
                                        </div>
                                        <div class="inline-block w33">
                                            <h6 class="boldFont verticalMargin10">@Localization.GetText("Recommendations: Actions or decisions recomend to replicate or to void")</h6>
                                            <p class="verticalMargin10">@DelaysAchievement.Recommendation</p>
                                        </div>
                                    </td>
                                </tr>

                            </table>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
        @if (Model.AchievementDelays.Count == 0)
        {
            <div>
                <br />
                <h2 style="margin-left: 1em">@Localization.GetText("No results can be found")</h2>
            </div>
        }
        <div class="verticalMargin40">
            <div class="informationStatement leftPadding40 AlingTitles">@Localization.GetText("For outputs explain both physical and financial delays")</div>
        </div>
        <div class="verticalMargin40">
            <div class="inline-block w80">
                <h3 class="font20px AlingTitles">@Localization.GetText("Other delays")</h3>
            </div>
            <div class="inline-block rightAlign w19-4">
                <input type="button" id="buttonfilter2" class="button blueButton alingFilterButtonRigth" value=" @Localization.GetText("Show Filter") " title=" @Localization.GetText("Show Filter") ">
            </div>

        </div>

        <div class="filter hide" style="padding-bottom:10px;height: 210px;" id="filter2">
            <div class="cajaGeneralFilter2" style="padding-bottom:10px;height: 160px;">
                <div class="contenidoFilter5">
                    <legend class="hide">@Localization.GetText("Datos de Filtro")</legend>
                    <table style="width:100%;">
                        <tbody>
                            <tr>
                                <td>
                                    <ul class="optionList">
                                        <li class="smallFilter2 dataTitle">
                                            <label for="clauseNumber">
                                                <input class="textoGrandeFilter2 no-margin dataTitle" type="text" name="ReflectedType" id="ReflectedType" placeholder="@Localization.GetText("Reason")" style="width: 350px;height:32px;background-color: rgb(255, 255, 255);border-color: rgb(204, 204, 204);border-style: solid;border-width: 1px;box-sizing: content-box;color: rgb(0, 0, 0);border-radius:5px;">
                                            </label>
                                            <!--@Html.ListBoxFor(x => x.GetType().ReflectedType, new SelectList(ViewBag.ListDelaysType, "Value", "Text"), new { @class = "kendoDropDown ListTypeDelay itemDelayTypeId", @style = "width: 200px;height:40px;" })-->
                                        </li>
                                    </ul>
                                    <span>&nbsp;</span>
                                </td>
                                <td>
                                    <ul class="optionList">
                                        <li class="smallFilter2 dataTitle">
                                            <label for="clauseNumber">
                                                <input class="textoGrandeFilter2 no-margin dataTitle" type="text" name="OtherDelays_0__Name" id="OtherDelays_0__Name" placeholder="@Localization.GetText("Name")" style="width: 350px;height:32px;background-color: rgb(255, 255, 255);border-color: rgb(204, 204, 204);border-style: solid;border-width: 1px;box-sizing: content-box;color: rgb(0, 0, 0);border-radius:5px;">
                                            </label>
                                        </li>
                                    </ul>
                                    <span>&nbsp;</span>
                                </td>
                                <td>
                                    <ul class="optionList">
                                        <li class="smallFilter2 dataTitle">
                                            @Html.ListBoxFor(x => x.GetType().AssemblyQualifiedName, new SelectList(ViewBag.ListIsSolved, "Value", "Text"), new { @class = "kendoDropDown itemIsSolved", @style = "width: 250px;height:40px;" })
                                        </li>
                                    </ul>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="inline-block verticalAlignMiddle">
                                        <label for="CyclesInFR" class="font08em inline-block w23 verticalAlignMiddle noPadding labelSelectNormalPMROperation">@Localization.GetText("PMR Cycle")</label>
                                        <br />
                                        @Html.ListBoxFor(x => x.GetType().BaseType, new MultiSelectList(ViewBag.ListCycles, "Value", "Text"), new { style = "width: 300px; font-size: 16px; color: gray;", @class = "MultiSelectCustom" })
                                    </div>
                                </td>
                                <td colspan="2">
                                    <div><span>&nbsp;</span></div>
                                    <div class="editingButtonsEdit" style="padding-right: 0px;">
                                        <a href="javascript:void(0)" class="btn-primary filter-clauses btnClearFilters" style="min-height: 2em;" title="@Localization.GetText("Clear")" data-route="nodata">@Localization.GetText("Clear")</a>
                                        <a href="javascript:void(0)" class="btn-primary filter-clauses btnFilter" style="min-height: 2em;" title="@Localization.GetText("Filter")" style="margin-right: 2em;" data-route="nodata">@Localization.GetText("Filter")</a>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </div>
        </div>

        <table id="tableSortUIFI004-2" class="grid w100 noInnerPadding fixedValues">
            <thead>
                <tr>
                    <th style="width:15%">@Localization.GetText("Cycle Name")</th>
                    <th style="width:15%">@Localization.GetText("Type of delay")</th>
                    <th style="width:37%">@Localization.GetText("Name")</th>
                    <th style="width:15%">@Localization.GetText("Is the issue solved?")</th>
                    <th style="width:15%">@Localization.GetText("Last update")</th>
                    <th style="width:3%"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var DelaysOthers in Model.OtherDelays)
                {
                    <tr>
                        <td colspan="6">
                            <table class="w100 innerGrid">
                                <tr>
                                    <td>@DelaysOthers.NameCycle</td>
                                    <td>@Localization.GetText("Other delays")</td>
                                    <td>@DelaysOthers.DelayName</td>
                                    <td>@DelaysOthers.StateIsSolved</td>
                                    <td>
                                        <div class="inline-block w90">
                                            @String.Format("{0:dd MMM yyyy}", DelaysOthers.LastUpdate)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="inline-block rightAlign">
                                            <input type="button" class="noBorder operationButton arrow cursorPointer" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="6">
                                        <div class="inline-block marginRight3">
                                            <h6 class="boldFont verticalMargin10">@Localization.GetText("Reason")</h6>
                                            <p class="verticalMargin10">@DelaysOthers.DelayReason</p>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (Model.OtherDelays.Count == 0)
        {
            <div>
                <br />
                <h2 style="margin-left: 1em">@Localization.GetText("No results can be found")</h2>
            </div>
        }
    </div>

    <div class="verticalMargin20 rightAlign">

        <div class="inline-block rightAlign w19-4">
        @if (ViewBag.RMAdministrator && Html.HasPermission("Findings Write") && Model.IsEditable)
        {          
                if (ViewBag.IsCurrentCycleTableOne && ViewBag.IsCurrentCycleTableTwo)
                {
                    <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                           title=" @Localization.GetText("Edit") " onclick="redirectEdit(this)" data-route="@(Url.Action("DelaysEdit", "FindingRecommendation", 
                           new { area = "FindingRecomendations", operationNumber = Model.OperationNumber }))">
                }
                else
                {
                    <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                           title=" @Localization.GetText("Edit") " onclick=" shownotification(this)" 
                           data-route="@(Url.Action("Notification", "FindingRecommendation", new { area = "FindingRecomendations" }))">
                }
        }
        else if (isLessTaskFive && Html.HasPermission("Findings Write") && Model.IsEditable)
        {
            if (ViewBag.IsCurrentCycleTableOne && ViewBag.IsCurrentCycleTableTwo)
            {
                <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                       title=" @Localization.GetText("Edit") " onclick="redirectEdit(this)" data-route="@(Url.Action("DelaysEdit", "FindingRecommendation", 
                       new { area = "FindingRecomendations", operationNumber = Model.OperationNumber }))">
            }
            else
            {
                <input type="button" class="button blueButton linkEditDelays alingFilterButtonRigth" value=" @Localization.GetText("Edit") " 
                       title=" @Localization.GetText("Edit") " onclick=" shownotification(this)" 
                       data-route="@(Url.Action("Notification", "FindingRecommendation", new { area = "FindingRecomendations" }))">
            }

        }
        </div>

    </div>
</div>
