@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.General.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using System.Globalization
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.DataTable.Models
@using IDB.Architecture.Language
@using IDB.MW.Application.MediaGalleryModule.ViewModels.MediaGallery
@using IDB.Presentation.MVC4.Models.Modal;
@using IDB.Presentation.MVC4.General;

<div class="format-edit-template container-filter filter-region mb20" name="contentFilterMediaGallery">
    <div class="row mb10">
        <div class="col-md-6">
            @Confluence.InputText(Model.MainFilter, name: "MainFilter", width: "100%", placeholder: Localization.GetText("MediaGallery.MainFilter.PlaceHolder"))
        </div>
        <div class="col-md-3" style="text-align: right;padding-right:0px !important;">
            @Confluence.InputDatePicker(Model.DateFrom, name: "DateFrom", placeholder: Localization.GetText("MediaGallery.From"))
        </div>
        <div class="col-md-3" style="text-align: right;">
            @Confluence.InputDatePicker(Model.DateTo, name: "DateTo", placeholder: Localization.GetText("MediaGallery.To"))
        </div>
    </div>
    <div class="row sub-row">
        <div class="col-md-12 textalign-right">
            @if (ViewBag.WriteRole)
            {
                @Display.AddModalButton(new ModalViewModel("#modalAddMediaFile",
                    type: CssClass.ModalSearchAddDocument,
                    title: Localization.GetText("MediaGallery.Modal.Title"),
                    typeButton: "buttonBlue",
                    text: Localization.GetText("MediaGallery.Button.Add"),
                    moveOriginalContent: true,
                    actionOnClose: "resetModal"))
            }
            else
            {
                <div class="hide">
                    @Display.AddModalButton(new ModalViewModel("#modalAddMediaFile",
                    type: CssClass.ModalSearchAddDocument,
                    title: Localization.GetText("MediaGallery.Modal.Title"),
                    typeButton: "buttonBlue",
                    text: Localization.GetText("MediaGallery.Button.Add"),
                    moveOriginalContent: true,
                    actionOnClose: "resetModal"))
                </div>
            }
            @Confluence.ButtonBlue(Localization.GetText("MediaGallery.Button.ApplyFilter"), 
            name: "ApplyFilter", 
            action: "applyFilter")
        </div>
    </div>
    <div class="hide">
        @Confluence.InputHidden(string.Empty, name: "filter-MainFilter", required: false)
        @Confluence.InputHidden(string.Empty, name: "filter-DateFrom", required: false)
        @Confluence.InputHidden(string.Empty, name: "filter-DateTo", required: false)
    </div>
</div>
<div class="row row-body-50">
    <div class="col-md-12" name="contentResultMediaGallery">
    </div>
</div>