@using IDB.Presentation.MVC4.Helpers
@using IDB.Architecture.Language;
@using IDB.MW.Application.OpusMissionsModule.ViewModels.Report;
@{
    ViewBag.Title = @Localization.GetText("OP.MS.ReportFilter.MissionsReport");
}

<input hidden data-idb-pagename="Missions-Report-Mode" />

<div class="header">
    <div class="row pb20">
        <div class="col-md-6">
            @Confluence.LabelMainTitle(Localization.GetText("OP.MS.ReportFilter.MissionsReport"), dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "lblMissionsReport" } })
        </div>
        <div class="col-md-6 text-right">
            @Confluence.ButtonBlue(text: Localization.GetText("OP.MS.Filter"), action: "filterReport", name: "filterReport", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnFilterReport" } })
        </div>
    </div>
</div>
<div class="page">
    <div class="row">
        <div id="report-filter" class="filterNormal col-md-12">
            @Html.Partial("Partials/MissionsReportFilterWidget")

            <div class="col-md-12 text-right pb10">
                @Confluence.ButtonBlue(text: Localization.GetText("OP.MS.ClearAll"), action: "clearAll", name: "btnclear", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnBtnClear" } })
                @Confluence.ButtonBlue(text: Localization.GetText("OP.MS.ReportFilter.ExportExcel"), action: "exportExcelReport", name: "btnExportExcelVisualizationOperationReport", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnBtnExportExcelVisualizationOperationReport" } })
                @Confluence.ButtonBlue(text: Localization.GetText("OP.MS.ReportFilter.ExportPDF"), action: "exportPdfReport", name: "btnExportPDFVisualizationOperationReport", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnBtnExportPDFVisualizationOperationReport" } })
                @Confluence.ButtonOrange(text: Localization.GetText("OP.MS.ReportFilter.Submit"), action: "submitMonitoringReport", name: "btnsubmit", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnBtnsubmit" } })
            </div>
        </div>
    </div>

    @if (ViewBag.ErrorMessage != null)
    {
        <div id="ReportMessageError">
            <input type="hidden" id="ReportMessageErrorId" value="@ViewBag.ErrorMessage">
        </div>
    }

</div>
<div class="page" id="resultSubmit"> </div>



@section scripts{
    <script type="text/javascript">

        (function showReportError() {
            if ($('#ReportMessageErrorId').val() != undefined) {
                var message = $('#ReportMessageErrorId').val();
                showMessage(message, false, null);
            }
        }());

        function clearAll(source) {
            window.location.reload();
        }

        function paramsReport(get) {
            var statusListFront = $('#statusListFront').val() != null ? $('#statusListFront').val() : get ? ['-1'] : $.map($('#statusListFront option'), function (e) { return e.value; });
            var allStatus = $('#statusListFront').val() != null ? false : true;

            var typeListFront = $('#typeListFront').val() != null ? $('#typeListFront').val() : get ? ['-1'] : $.map($('#typeListFront option'), function (e) { return e.value; });
            var allType = $('#typeListFront').val() != null ? false : true;

            var sectorDepartmentListFront = $('#sectorDepartmentListFront').val() != null ? $('#sectorDepartmentListFront').val() : get ? ['-1'] : $.map($('#sectorDepartmentListFront option'), function (e) { return e.value; });
            var allSectorDepartment = $('#sectorDepartmentListFront').val() != null ? false : true;

            var divisionListFront = $('#divisionListFront').val() != null ? $('#divisionListFront').val() : get ? ['-1'] : $.map($('#divisionListFront option'), function (e) { return e.value; });
            var allDivision = $('#divisionListFront').val() != null ? false : true;

            var divisionArray = [];
            if (!allSectorDepartment && allDivision) {
                $('#divisionListFront option[class!=hidden]').each(function () {
                    divisionArray.push($(this).val());
                });
                divisionListFront = divisionArray;
            }

            var countryDepartmentListFront = $('#countryDepartmentListFront').val() != null ? $('#countryDepartmentListFront').val() : get ? ['-1'] : $.map($('#countryDepartmentListFront option'), function (e) { return e.value; });
            var allCountryDepartment = $('#countryDepartmentListFront').val() != null ? false : true;

            var countryListFront = $('#countryListFront').val() != null ? $('#countryListFront').val() : get ? ['-1'] : $.map($('#countryListFront option'), function (e) { return e.value; });
            var allCountries = $('#countryListFront').val() != null ? false : true;

            var countryArray = [];
            if (!allCountryDepartment && allCountries) {
                $('#countryListFront option[class!=hidden]').each(function () {
                    countryArray.push($(this).val());
                });
                countryListFront = countryArray;
            }


            var operationNumber = $('input[name=txtMissionNumber]').val() != null ? $('input[name=txtMissionNumber]').val().replace(/\s/g, "_") : '';
            var missionMembers = $('input[name=txtMissionMembers]').val() != null ? $('input[name=txtMissionMembers]').val().replace(/\s/g, "_") : '';

            var startDate = $('input[name=txtStartDate]').val() != null ? $('input[name=txtStartDate]').val().replace(" ", "/").replace(" ", "/") : '';
            var endDate = $('input[name=txtEndDate]').val() != null ? $('input[name=txtEndDate]').val().replace(" ", "/").replace(" ", "/") : '';

            var url = "?statusListFront=" + statusListFront.join(',') + "&typeListFront=" + typeListFront.join(',') +
               "&countryDepartmentListFront=" + countryDepartmentListFront.join(',') + "&sectorDepartmentListFront=" + sectorDepartmentListFront.join(',') +
               "&countryListFront=" + countryListFront.join(',') + "&divisionListFront=" + divisionListFront.join(',') +
               "&allCountries=" + allCountries + "&allStatus=" + allStatus + "&allCountryDepartment=" + allCountryDepartment +
               "&allSectorDepartment=" + allSectorDepartment + "&allDivision=" + allDivision + "&allType=" + allType +
               "&operationNumber=" + operationNumber + "&missionMembers=" + missionMembers + "&startDate=" + startDate + "&endDate=" + endDate;
            return url;
        }

        function exportExcelReport(source) {
            var url = '@Url.Action("DownloadExcelReport", "MissionsReport", new { area = "OpusMissions" })';
            url = url + paramsReport(true);
            window.open(url, '_blank');
        }

        function exportPdfReport(source) {
            var url = '@Url.Action("DownloadPdfReport", "MissionsReport", new { area = "OpusMissions" })';
            url = url + paramsReport(true);
            window.open(url, '_blank');
        }

        function submitMonitoringReport(source) {
            var url = paramsReport(false);
            $("#resultSubmit").empty();
            $('#resultSubmit').load('@Url.Action("MissionReportFilterSubmit", "MissionsReport", new { area = "OpusMissions" })' + url);
            $("#tablaPaginationMission").paginationConfluense(10);
        }

        function filterReport(source) {
            var report = $('#report-filter');

            if (report.hasClass('hide')) {
                report.removeClass('hide');
            }
            else {
                report.addClass('hide');
            }

        }

        $(document).on('change', '[name=countryDepartmentListFront]', function () {
            var countryDepartment = $('#countryDepartmentListFront').val();
            var country = $('#countryListFront').children();

            $("#countryListFront option").each(function (index, element) {
                $(element).removeAttr("selected");
            });

            if (countryDepartment != null) {
                country.addClass('hidden');

                countryDepartment.forEach(function (item) {
                    country.toArray().forEach(function (c) {
                        if (item == c.getAttribute('data-parent-id')) {
                            c.className = '';
                        }
                    });
                });
            }
            else {
                country.removeClass('hidden');
            }
        });

        $(document).on('change', '[name=sectorDepartmentListFront]', function () {
            var sectorDepartment = $('#sectorDepartmentListFront').val();
            var division = $('#divisionListFront').children();

            $("#divisionListFront option").each(function (index, element) {
                $(element).removeAttr("selected");
            });

            if (sectorDepartment != null) {
                division.addClass('hidden');

                sectorDepartment.forEach(function (item) {
                    division.toArray().forEach(function (c) {
                        if (item == c.getAttribute('data-parent-id')) {
                            c.className = '';
                        }
                    });
                });
            }
            else {
                division.removeClass('hidden');
            }
        });

    </script>
}
