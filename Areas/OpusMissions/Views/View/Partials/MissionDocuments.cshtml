@using IDB.Presentation.MVC4.Helpers;
@using IDB.Architecture.Language;
@using IDB.MVCControls.General.Helpers;

@{
    var operationNumber = IDBContext.Current.Operation;
}

<div id="documentContent" data-url="@Url.Action("SaveDocuments", "Save", new { area = "OpusMissions" })"
     data-loadurl="@Url.Action("MissionDocuments", "View", new { area = "OpusMissions", missionId = Model.MissionId })"
     data-parsley-validate="data-parsley-validate"
     data-parsley-excluded="[disabled]"
     data-ignore-nullable-values="true" col-md-12>

    <div class="row row-body-40">
        <div class="col-md-12">
            <h4 class="subtitleGroup bold floatLeft">@Localization.GetText("OP.MS.Documents.Documents")</h4>
            @if (ViewBag.HasWritePermission)
            {
                <div class="floatRight">
                    <div class="col-md-12">
                        <div class="text-right pull-right">
                            @Confluence.ButtonBlue(text: Localization.GetText("DM.Add.Document"), name: "documentsAdd", dataAttributes: new Dictionary<string, string> { { "id", "MissionDocuments-add" }, { "modal-allowclose", "true" }, { "custom-modal", "MissionDocuments-modal-add" }, { "custom-modal-validate", "false" }, { "custom-modal-title", Localization.GetText("OP.AP.Documents.Search") }, { "idb-fieldname", "btnDocumentsAdd" } })
                        </div>
                        <div id="saveDocumentButton" class="hide text-right pull-right mr15">
                            @Confluence.ButtonBlue(text: Localization.GetText("OP.MS.SaveDocuments"), action: "saveDocumentsInViewMode", name: "saveDocumentsInViewMode", dataAttributes: new Dictionary<string, string> { { "idb-fieldname", "btnSaveDocumentsInViewMode" } })
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>

    <div data-pagemode="edit"><input type="hidden" id="hiddenMissionIdDocument" name="hiddenMissionIdDocument" /></div>
    
    <div class="row row-body-40" id="TableDocument">
        <div class="col-md-12">
            <table class="tableNormal beginSpacing endSpacing" id="tableDocuments" data-idb-fieldname="tblTableDocuments">
                <thead>
                    <tr>
                        <th>@Localization.GetText("OP.MS.Documents.User")</th>
                        <th>@Localization.GetText("OP.MS.Documents.Date")</th>
                        <th>@Localization.GetText("OP.MS.Documents.IDBDocNumber")</th>
                        <th>@Localization.GetText("OP.MS.Documents.Description")</th>
                        @if (ViewBag.HasWritePermission)
                        {
                        <th>@Localization.GetText("")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.DocumentMissionList)
                    {
                        <tr data-id="@item.DocumentId">
                            <td>@Confluence.Label(item.User)</td>
                            <td>@Confluence.LabelGetDate(item.Date)</td>
                            <td>@Confluence.Label(item.DocNumber)</td>
                            <td>@Confluence.Label(item.Description)</td>
                            @if (ViewBag.HasWritePermission)
                            {

                            <td>
                                @{
                                    bool helpDocument = item.Description != null ? ((string)item.Description).StartsWith("Aide Memoire") : false;
                                    bool TorDocument = item.Description != null ? ((string)item.Description).StartsWith("TOR")  : false;
                                }

                                @{
                                    var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(item.DocNumber);
                                }
                                <a href=@secureUrl target="_blank">@Confluence.ButtonDownload(text: "")</a>
                                @if (TorDocument || helpDocument)
                                {
                                        @Confluence.ButtonMail("", action: "sendDocumenttoMail", name: "sendDocumenttoMail", dataAttributes: new Dictionary<string, string> { { "docnumber", item.DocNumber }, { "isTOR", TorDocument.ToString() }, { "idb-fieldname", "btnSendDocumenttoMail" } })
                                }

                                @if (!TorDocument)
                                {
                                        @Confluence.ButtonTrash("", action: "verifyDeleteDocument", name: "deleteDocument", dataAttributes: new Dictionary<string, string> { { "docnumber", item.DocNumber }, { "docdescription", item.Description }, { "idb-fieldname", "btnDeleteDocument" } })
                                }
                            </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>
<div id="MissionDocuments-modal-add" class="hide">
    @Html.Partial("Controls/IDBDocsNew/AddIDBDoc", new IDB.Presentation.MVC4.Models.Documents.SearchDocumentModalViewModel { SearchModalId = "tableDocuments2", MultipleSelection = false, TargetFunction = "renderizeRow", BusinessAreaCode = "BA_MISSIONS", OperationNumber = operationNumber })
</div>