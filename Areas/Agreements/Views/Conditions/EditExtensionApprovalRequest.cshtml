@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "EditExtensionApprovalRequest";
    var errorAddingDocument = ViewBag.UploadFileError != null ? (string)ViewBag.UploadFileError : string.Empty;
}

@section CSS{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/esmartGeneral.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/FindingAndRecomendations/ui_fi_004_edit.css")"/>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Agreements/conditionLetterCss.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Modules/Agreements/warningSendRequest.css")" />
}

@section JavaScript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Document/addDocument.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/thumbnail/thumbnail.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/editApprovalRequest.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Clauses/addComment.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Global/GlobalScript.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablesorter.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/plugins/jquery.tablednd.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/FindingRecomendations/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js" + @System.Configuration.ConfigurationManager.AppSettings["cache"].ToString())"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Agreement/validationRequest.js")"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".optionSelect").kendoDropDownList();
            $(".datepicker").kendoDatePicker({
                format: "dd MMM yyyy"
            });
            var grid1 = new GridComponent(".grid1", 20, false, true);
            var grid2 = new GridComponent(".grid2", 20, false, true);
            
            $(".cancelEditRequest").click(function () {
                var route = $("#DetailsExtensionApprovalRequest").val();
                redirectPage(route);
            });
        });
    </script>

    @if (!string.IsNullOrWhiteSpace(errorAddingDocument))
    {
        <script type="text/javascript">
            $(document).ready(function () {

                function warningDocumentAddingError() {
                    event.preventDefault();
                    $(window.parent.document).find('body').append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="ui-widget-overlay ui-front"></div>');
                    $("body").append('<div class="dinamicModal"></div>');
                    $("#errorUploading").appendTo(".dinamicModal").removeClass("hide");
                    var title = $("#errorUploading").data("title");
                    var modal = $(".dinamicModal").kendoWindow({
                        width: "800px",
                        title: title,
                        draggable: false,
                        resizable: false,
                        pinned: true,
                        actions: [
                            "Close"
                        ],
                        modal: true,
                        visible: false,
                        activate: function () {
                            $("#ConfirmErrorWarning").click(functionCancel);
                        },
                        close: function () {
                            $(window.parent.document).find('body').find(".ui-widget-overlay").remove();
                            $("#errorUploading").appendTo("#ui_sp_001").addClass("hide");
                            $("body").find(".ui-widget-overlay").remove();
                            $(".ui-widget-overlay").remove();
                            $(".k-window").remove();
                        }
                    }).data("kendoWindow");
                    $(".k-window-titlebar").addClass("warning");
                    $(".k-window-title").addClass("ico_warning");
                    modal.center();
                    modal.open();
                };

                var functionCancel = function () {
                    event.preventDefault();
                    var modal = $(".dinamicModal").data("kendoWindow");
                    modal.close();
                    $(".ui-widget-overlay").remove();
                };

                warningDocumentAddingError();
            });
        </script>
    }

}

@Html.Hidden("DetailsExtensionApprovalRequest", Url.Action("DetailsExtensionApprovalRequest", "Conditions", new
{
    area = "Agreements",
    operationId = Model.OperationId,
    contractId = Model.Contracts[0].ContractId,
    clauseId = Model.Contracts[0].Clauses[0].ClauseId,
    clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId,
    clauseExtensionId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId,
    mainOperationNumber = Model.mainOperationNumber
}))
@Html.Hidden("TLSendRequestUrl", Url.Action("TLAnulationRequestAction", "Conditions", new { area = "Agreements" }))
@Html.Hidden("TLValidators", (object)ViewBag.SendRequest)

<h2 class="hide">Seccion central</h2>
<section class="central">
    <div class="mod_contenido_central generic_tasks">
        <input type="hidden" id="UserName" name="UserName" value="@IDBContext.Current.UserName" />
        @using (Html.BeginForm("EditExtensionApprovalRequest", "Conditions", FormMethod.Post, new { area = "Agreements", id = "target", @class = "bridge" }))
        {
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.OperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId)
            <!--contracts_and_clauses-->
            <h3 class="headingh2"><a href="@(Url.Action("Index", "Agreements", new { area = "Agreements", operationNumber = Model.mainOperationNumber }))" title=" @Localization.GetText("Contracts And Clauses") " class=" tipo1">@Localization.GetText("Contracts And Clauses")</a></h3>
            <div class="operationData">
                <div class="box_subtitle">
                    <h4 class="headingh2 title_tag">@Localization.GetText("Clause Extension Approval Request")</h4>
                    <div class="editingButtonsEdit up">
                        <label for="Cancel">
                            <input type="button" class="btn-secondary cancelEditRequest" value="@Localization.GetText("Cancel")">
                        </label>
                        <label for="Save">
                            <input type="submit" class="btn-primary_2 save" name="action:SaveExtensionRequest" value=" @Localization.GetText("Save") ">
                        </label>
                        <label for="Save&Send">
                            <input type="button" class="btn-primary_2 saveandrequest RequestEdit" 
                                name="CreateExtensionApprovalRequest" 
                                value="@Localization.GetText("Save and Request")" 
                                data-category="@Model.CategoryClause"
                                data-title="@Localization.GetText("Warning")">
                        </label>
                    </div>
                </div>
            </div>
            <h3 class="hide">Contenido central</h3>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Creation on")</p>
                    <p>@String.Format("{0:dd MMM yyy}", DateTime.Now)</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Due on")</p>
                    <p></p>
                </div>
                <div class="data2">
                    <p class="dataTitle">@Localization.GetText("Workflow")</p>
                    <p class="icon workflow">@Localization.GetText("Clause Extension Approval")</p>
                </div>

                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Workflow submitter")</p>
                    <p>@IDBContext.Current.UserName</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Priority")</p>
                    <p></p>
                </div>
            </div>
            <div class="operationData dataDetails marginTop2Bottom1">
                @{
            if (Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].RequestExtensionDate.ToString() != string.Empty)
            {
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Requested date")</p>
                    <p>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].RequestExtensionDate)</p>
                </div>
            }
            else
            {
                if (Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ExecutorRequest.ToString() != string.Empty)
                {
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("Requested months")</p>
                        <p>@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].IdbRequest</p>
                    </div>
                    <div class="data4">
                        <p class="dataTitle">@Localization.GetText("Executor Requested months")</p>
                        <p>@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ExecutorRequest</p>
                    </div>
                }
            }
                }
            </div>

            Html.RenderAction("AdditionalValidators", "Tasks", new
            {
                area = "Global",
                Code = "WF-CL-003",
                Editable = true,
                modelValidation = ViewBag.OperationRelatedModel
            });

            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="operationData min_padding_left dataSocial">
                    <div class="data8">
                        <p class="dataTitle">@Localization.GetText("Instructions")</p>
                        <p>@Localization.GetText("Initiate Validation Workflow for approving the extension.")</p>

                    </div>
                </div>
            </div>
            @*<div class="operationData dataDetails marginTop2Bottom1">
                    <div class="operationData min_padding_left dataSocial">
                        <div class="data8">
                            <p class="dataTitle">@Localization.GetText("Content")</p>

                            @if (Html.HasPermission("Extension Write"))
                            {
                                if (!ViewBag.Letter)
                                {
                                    <div id="GenerateLetterContainer" class="LetterContainer inline-block">

                                        <div class="SubContainerLetter inline-block">
                                            @Html.ListBoxFor(x => x.ValidatorWF, new SelectList(ViewBag.ListValidators, "Value", "Text"), new { @class = "kendoDropDown" })
                                        </div>

                                        <div class="SubContainerLetter inline-block">
                                            @Html.ListBoxFor(x => x.LanguageLetter, new SelectList(ViewBag.ListLanguages, "Value", "Text"), new { @class = "kendoDropDown" })
                                        </div>

                                        <div class="SubContainerLetter inline-block">
                                            <input id="PostLetter" type="hidden" data-route="@(Url.Action("GenerateLetter", "Clause", new { area = "Clauses", operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, contractNumber = Model.Contracts[0].ContractNumber, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, clauseExtensionId = ViewBag.ExtencionLetter, templateType = "LET_EXT" }))" />
                                            <input id="Btn_GenerateLetter" type="button" style="margin: 0px; padding: 0px; width: 200px;" class="btn-primary" data-route="" title="@Localization.GetText("Generate Letter")" value="@Localization.GetText("Generate Letter")" />
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>*@

            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3 cero_left">@Localization.GetText("Comments") </h4>
            </div>
            <div class="editingButtonsEdit" style="position: relative; right: 3%;">
                <a id="newCommentClauseExtensionApproval002"
                   href="javascript:void(0)"
                   class="btn-primary marginOff width-auto"
                   title="@Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")">
                    @Localization.GetText("OP.OD.TabBasicData.RelatedOperations.NewComments")
            </a>
            </div>
            <div id="commentslistdinamic" style="margin-bottom: 3%;">
                <table id="commentTableUIRI002_edit" class="grid w100 noInnerPadding fixedValues " style="position: relative; left: 2.6%">
                    <tbody id="comentContainer">
                        @for (int i = 0; i < Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments.Count(); i++)
                        {
                            if (Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].ModifiedBy == IDBContext.Current.UserName)
                            {
                                <tr>
                                    <td>
                                        <div class="padding10 leftAlign">
                                            <div class="verticalMargin10 w100 relative h50px" style="height: 0%;">
                                                <input type="button" value="@Localization.GetText("Delete")" class="deleteTextButtonExt verticalAlignTop absolute absRight">
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@(Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Modified == null ? string.Empty : Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Modified.Value.ToString("dd MMM yyyy"))</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].CreatedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="padding10">
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].UserCommentId)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Text)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].ModifiedBy)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Modified)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].CreatedBy)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Created)

                                                    @Html.TextAreaFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Text, new Dictionary<string, Object> { { "class", "txtDescriptionComent" }, { "data-val", "true;" }, { "data-val-required", "Please, complete the mandatory fields" }, { "maxlength", "500" } })
                                                    @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Text);}
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>
                                        <div class="padding10 leftAlign">
                                            <div class="verticalMargin10 w100">
                                                <div class="verticalMargin10 inline-block">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Modified.Value.ToString("dd MMM yyyy")</div>
                                                <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].CreatedBy</div>
                                            </div>
                                            <div class="verticalMargin10 w100">
                                                <div class="padding10">
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].UserCommentId)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Text)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].ModifiedBy)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Modified)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].CreatedBy)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Created)
                                                    @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Text)


                                                    <div class="verticalMargin10 inline-block bold marginLeft3">@Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].UserComments[i].Text</div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div class="operationData width_Off min_padding_left dataSocial  ">
                <h4 class="headingh3 cero_left">@Localization.GetText("Documents") </h4>
            </div>
            <div class="editingButtonsEdit" style="margin-bottom: 4%; position: relative; right: 3%;">
                <input type="button" class="btn-primary marginOff lnkModal" value="@Localization.GetText("DM.Add.Document")" title="@Localization.GetText("DM.Add.Document")" data-title="Add a Document" data-route="@(Url.Action("IndexDocumentRelationship", "Document", new { area = string.Empty, operationId = Model.OperationId, mainOperationNumber = Model.mainOperationNumber, parentEntityId = Model.Contracts[0].ContractId, subParentEntityId = Model.Contracts[0].Clauses[0].ClauseId, subsubParentEntityId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, entityRelated = "CLAUSE_INDIVIDUAL_EXTENSION", entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId, isFirstTime = true, businessAreaCode = "BA_CLAUSES" }))">
            </div>
            <div class="mod_tabla icon_entypo tableDocuments" style="width: 94%">
                <table class="grid w100 noInnerPadding fixedValues ">
                    <thead>
                        <tr>
                            <th class="btn_azul_oscuro_flecha" data-field="User">@Localization.GetText("User")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Date">@Localization.GetText("Date")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="IDBDocNum">@Localization.GetText("IDB Doc number")</th>
                            <th class="btn_azul_oscuro_flecha" data-field="Content">@Localization.GetText("Content")</th>
                            <th class="btn_azul_oscuro" data-field="Current">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var document in Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].Documents)
                        {
                            <tr>
                                <td>@document.CreatedBy</td>
                                <td>@String.Format("{0:dd MMM yyy}", document.Created)</td>
                                <td>@document.DocumentReference</td>
                                <td>@document.Description</td>
                                <td>
                                    @{
                                        var secureUrl = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(document.DocumentReference);
                                    }
                                    <a class="btn_entypo" title=" @Localization.GetText("Download")" href=@secureUrl target="_blank" style="position: relative; left 25%; min-height 0.9em; min-width 1.5em;">&#58544;</a>

                                    <a class="btn_entypo" onclick="deleteItem(this)" title=" @Localization.GetText("Delete") " data-route=" @Url.Action("DeleteItem", "Conditions", new { area = "Agreements", operationId = Model.OperationId, contractId = Model.Contracts[0].ContractId, clauseId = Model.Contracts[0].Clauses[0].ClauseId, clauseIndividualId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId, extensionId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId, RevolvingFund = 0, entityRelated = "CLAUSE_INDIVIDUAL_EXTENSION", year = 0, entityRegisterId = Model.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseExtension[0].ClauseExtensionId, visualProjectId = 0, visualProjectVersionId = 0, documentId = @document.DocumentId, userCommentId = 0, itemToDelete = "Document", mainOperationNumber = Model.mainOperationNumber }) " style=" position relative; left 25%; min-height 0.9em; min-width 1.5em;">&#59177;</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="editingButtonsEdit marginRight2Con5">
                <label for="Cancel">
                    <input type="button" class="btn-secondary cancelEditRequest" value="@Localization.GetText("Cancel")">
                </label>
                <label for="Save">
                    <input type="submit" class="btn-primary_2 save" name="action:SaveExtensionRequest" value=" @Localization.GetText("Save") ">
                </label>
                <label for="Save&Send">
                    <input type="button" class="btn-primary_2 saveandrequest RequestEdit" 
                        name="CreateExtensionApprovalRequest" 
                        value="@Localization.GetText("Save and Request")" 
                        data-category="@Model.CategoryClause"
                        data-title="@Localization.GetText("Warning")">
                </label>
            </div>
            if (!string.IsNullOrWhiteSpace(errorAddingDocument))
            {
                <div class="hide" id="errorUploading" data-title="@Localization.GetText("Warning")">
                    <div class="padding20 popupbody">
                        <div class="marginBottom2">
                            <div>
                                @errorAddingDocument
                            </div>
                            <div class="rightAlign absolute right1 verticalPadding10 w60">
                                <input type="button" class="button blueButton" id="ConfirmErrorWarning" value="@Localization.GetText("OK")" onclick="" />
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="hide" id="warningSendRequest" data-title="@Localization.GetText("Warning")">
                <div class="padding20 popupbody">
                    <div class="marginBottom2">
                        <div>
                            @Localization.GetText("Clauses.ApprovalRequest.TextWarning")
                            <br />
                        </div>
                        <div class="rightAlign absolute right1 verticalPadding10 w60 pie pieWarning pieReassign" style="margin-right:20px;padding-top:4px;margin-top: 5px;">
                            <input class="button blueButton buttonContinue" id="ConfirmAdvFulfillment"
                                value="@Localization.GetText("Continue")"  readonly="readonly" 
                                style=" width: 10%;margin-right: 11px;"
                                onclick="warningPopupSendRequest('@Url.Action("CreateExtensionApprovalRequest", "Conditions", Model)')" />
                            <input class="button blueButton buttonCancel" id="ConfirmAdvFulfillment" 
                                value="@Localization.GetText("Cancel")"
                                onclick="warningPopupClose(this)" 
                                style="width:10%;margin-top:5px;margin-right:0px;margin-left:0px;" readonly="readonly"  />
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</section>

