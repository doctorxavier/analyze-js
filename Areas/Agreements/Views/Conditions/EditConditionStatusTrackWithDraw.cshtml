@model IDB.MW.Application.Agreements.ViewModel.DetailsConditionViewModel
@using IDB.MW.Domain.Values

@{
    ViewBag.Title = "Edit Condition Track WithDraw";
}

@Styles.Render("~/Content/Confluence")

@section JavaScript {
    @Scripts.Render("~/bundles/ModalConfluenceScripts")
    @Scripts.Render("~/bundles/scripts2")
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/trackWithDraw.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/common.js")"></script>
}

<section class="central">
    <h2 class="hide">Seccion central de Contenido</h2>
    <div class="mod_contenido_central contracts_and_clauses col-md-12">
        @using (Html.BeginForm("EditConditionTrackWithDrawPost", "Conditions", FormMethod.Post, new { area = "Agreements", id = "target" }))
        {
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.MainOperationNumber)
            @Html.HiddenFor(x => x.Agreement.AgreementId)
            @Html.HiddenFor(x => x.Agreement.AgreementNumber)
            @Html.HiddenFor(x => x.ConditionId)
            for (int index = 0; index < Model.ConditionIndividuals.Count; index++)
            {
                @Html.HiddenFor(x => x.ConditionIndividuals[index].ConditionIndividualId)
            }
            @Html.HiddenFor(x => x.ConditionIndividuals[0].StatusId)
            @Html.HiddenFor(x => x.ConditionIndividuals[0].IsDeleted)

            <div class="mb20 ml20">
                <div class="col-md-12">
                    <div class="floatLeft">
                        <a href="@(Url.Action("Index", "Agreements", new { area = "Agreements", operationNumber = Model.MainOperationNumber }))">
                            @Confluence.LabelMainTitle(Localization.GetText("AG.AgreementsAndConditions.Text"), htmlClass: "tipo1")
                        </a>
                    </div>
                    <div class="float-right">
                        <button type="button" class="buttonLink" name="cancelTrackWithDraw"
                                data-route="@(Url.Action("Details", "Conditions", new
                                {
                                    area = "Agreements",
                                    operationId = Model.OperationId,
                                    agreementId = Model.Agreement.AgreementId,
                                    conditionId = Model.ConditionId,
                                    conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                                    mainOperationNumber = Model.MainOperationNumber
                                }))">
                            @Localization.GetText("Cancel")
                        </button>

                        <button type="button" class="buttonWhite" name="deleteTrackWithDraw"
                                data-route="@Url.Action("Delete", "Conditions", new
                                {
                                    area = "Agreements",
                                    operationNumber = Model.MainOperationNumber,
                                    conditionId = Model.ConditionId,
                                    conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId
                                })">
                            @Localization.GetText("Delete")
                        </button>

                        <button type="submit" class="buttonOrange" name="saveTrackWithDraw">@Localization.GetText("Save")</button>
                    </div>
                </div>
            </div>

            <div class="headerContainer ml20 col-md-12">
                <div class="row-header font-header">
                    <div class="col-md-12">
                        <h3 class="ml0">@Localization.GetText("Condition Track Withdraw Details")</h3>
                    </div>
                </div>

                <div class="row row-header font-header">
                    <div class="col-md-3">
                        @if (Model.Category.Code == AgreementsAndConditionsConstants.DONOR_CONDITION_CATEGORY_SIGN)
                        {
                            @Localization.GetText("Signature Fulfillment Condition")
                        }
                        else
                        {
                            @Localization.GetText("Common.Condition.Text")
                        }
                        @Confluence.LabelAsterisk()
                    </div>
                    <div class="col-md-3">
                        @Localization.GetText("Description")
                        @Confluence.LabelAsterisk()
                    </div>
                    <div class="col-md-3">
                        @Localization.GetText("AG.ConditionStatus.Text")
                    </div>
                    <div class="col-md-3">
                        @Model.Agreement.AgreementNumber
                    </div>
                </div>

                <div class="row row-body-50 font-body">
                    <div class="col-md-3">
                        @Confluence.InputText(
                            value: Model.ConditionNumber,
                            name: "ConditionNumber",
                            maxLength: 32,
                            width: "100%",
                            placeholder: Localization.GetText("AG.ConditionNumber.Text"),
                            id: "number",
                            required: true)
                    </div>
                    <div class="col-md-3">
                        @Confluence.InputTextArea(
                            value: Model.Description,
                            name: "Description",
                            placeholder: Localization.GetText("Condition descripcion"),
                            width: "100%",
                            height: "80px",
                            id: "Description",
                            required: true)
                    </div>
                    <div class="col-md-3">
                        @Model.ConditionStatusName
                    </div>
                    <div class="col-md-3">
                        @Model.Agreement.StatusAgreementName
                    </div>
                </div>

                <div class="row row-header font-header">
                    <div class="col-md-3">
                        @Localization.GetText("Type")
                        @Confluence.LabelAsterisk()
                    </div>
                    <div class="col-md-3">
                        @Localization.GetText("Category")
                        @Confluence.LabelAsterisk()
                    </div>
                    <div class="col-md-3">
                        @Localization.GetText("Original expiration date")
                    </div>
                    <div class="col-md-3">
                        @Localization.GetText("Current expiration date")
                        @if (Html.HasPermission(Permission.PSG_EXPIRATION_DATE_WRITE))
                        {
                            <label class="checkPadlock pl15" style="vertical-align:middle;">
                                <input type="checkbox" class="checkDate" checked="checked"
                                       data-route="@Url.Action("UpdateExpirationDate", "Conditions", new
                                        {
                                            area = "Agreements",
                                            conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId
                                        })">
                                <span class="iconPad"></span>
                            </label>
                        }
                    </div>
                </div>

                <div class="row row-body-50 font-body">
                    <div class="col-md-3">
                        @Confluence.InputDropDown(
                            value: Model.TypeId.ToString(),
                            name: "TypeId",
                            elements: Model.TypeItems,
                            width: "100%",
                            placeholder: null,
                            showEmptyOption: false)
                        @Html.HiddenFor(x => x.TypeId)
                    </div>
                    <div class="col-md-3">
                        @Confluence.InputDropDown(
                            value: Model.CategoryId.ToString(),
                            name: "CategoryId",
                            elements: Model.CategoryItems,
                            width: "100%",
                            placeholder: null,
                            showEmptyOption: false)
                        @Html.HiddenFor(x => x.CategoryId)
                    </div>
                    <div class="col-md-3">
                        @String.Format("{0:dd MMM yyy}", Model.OriginalExpirationDate)
                    </div>
                    <div class="col-md-3">
                        @if (Html.HasPermission(Permission.PSG_GCM_ADMIN_WRITE))
                        {
                            <div class="inlineBlock perw75 dateContainer">
                                <strong class="datePlain">@String.Format("{0:dd MMM yyy}", Model.CurrentExpirationDate)</strong>

                                <input name="DueDate" type="text" data-force-parsley-validation="true"
                                       class="inputText datepicker-default hasDatepicker pickerDate"
                                       value="@String.Format("{0:dd MMM yyy}", Model.CurrentExpirationDate)"
                                       data-parsley-required="true" placeholder="DD MMM YYYY"
                                       data-parsley-pattern="^(((0?[1-9])|([1-2][0-9])|3(0|1)) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4})$"
                                       style="display: none">
                            </div>
                        }
                        else
                        {
                            @String.Format("{0:dd MMM yyy}", Model.CurrentExpirationDate)
                        }
                    </div>
                </div>

                <div class="row row-header font-header">
                    <div class="col-md-3">
                        @Localization.GetText("Closing condition dependency")
                    </div>
                    <div class="col-md-3">
                        @{ string headerText = Localization.GetText("Submission Date"); }

                        @if (Model.ConditionIndividuals[0].StatusName == AgreementsAndConditionsConstants.STATUS_NAME_TRACK ||
                            Model.ConditionIndividuals[0].StatusName ==  AgreementsAndConditionsConstants.STATUS_NAME_TRACKWITHDRAW)
                        {
                            if (Model.Category.Code == AgreementsAndConditionsConstants.DONOR_CONDITION_CATEGORY_CLOSE)
                            {
                                { headerText = Localization.GetText("Fulfillment Date"); }
                            }
                        }
                        @headerText
                    </div>
                    <div class="col-md-3">
                        @Localization.GetText("Approval Date")
                    </div>
                </div>

                <div class="row row-body-50 font-body">
                    <div class="col-md-3">

                    </div>
                    <div class="col-md-3">
                        @String.Format("{0:dd MMM yyy}", Model.ConditionIndividuals[0].SubmissionDate)
                    </div>
                    <div class="col-md-3">
                        @String.Format("{0:dd MMM yyy}", Model.ConditionIndividuals[0].ValidateDate)
                    </div>
                </div>

            </div>

            if (Model.ConditionIndividuals.Count() > 1)
            {
                <div class="width_Off min_padding_left dataSocial">
                    <h4 class="headingh3 cero_left">@Localization.GetText("Multiples instances information")</h4>
                </div>
                <div class="mod_tabla" style="width: 95%">
                    <table class="grid2 tableNormal">
                        <thead>
                            <tr>
                                <th>@Localization.GetText("AG.ConditionNumber.Text")</th>
                                <th>@Localization.GetText("Suffix")</th>
                                <th>@Localization.GetText("Expiration date")</th>
                                <th>@Localization.GetText("Status")</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.ConditionIndividuals.Count(); i++)
                            {
                                @Html.HiddenFor(x => x.ConditionIndividuals[i].ConditionIndividualId)

                                <tr>
                                    <td>@Model.ConditionNumber</td>
                                    <td>
                                        @Html.TextBoxFor(x => x.ConditionIndividuals[i].Suffix,
                                            new Dictionary<string, Object>
                                            {
                                                { "class", "inputText" },
                                                { "style", "width: 100%;" },
                                                { "required", "required" }
                                            })
                                        @{Html.ValidateFor(x => x.ConditionIndividuals[i].Suffix);}
                                    </td>
                                    <td>@String.Format("{0:dd MMM yyy}", Model.ConditionIndividuals[i].CurrentExpirationDate)</td>
                                    <td><p>@Model.ConditionIndividuals[i].StatusName</p></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            <div class="col-md-12">
                <div class="float-right">
                    <button type="button" class="buttonLink" name="cancelTrackWithDraw"
                            data-route="@(Url.Action("Details", "Conditions", new
                            {
                                area = "Agreements",
                                operationId = Model.OperationId,
                                agreementId = Model.Agreement.AgreementId,
                                conditionId = Model.ConditionId,
                                conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                                mainOperationNumber = Model.MainOperationNumber
                            }))">
                        @Localization.GetText("Cancel")
                    </button>

                    <button type="button" class="buttonWhite" name="deleteTrackWithDraw"
                            data-route="@Url.Action("Delete", "Conditions", new
                            {
                                area = "Agreements",
                                operationNumber = Model.MainOperationNumber,
                                conditionId = Model.ConditionId,
                                conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId
                            })">
                        @Localization.GetText("Delete")
                    </button>

                    <button type="submit" class="buttonOrange" name="saveTrackWithDraw">@Localization.GetText("Save")</button>
                </div>
            </div>
        }
    </div>
</section>

<script type="text/javascript">
    MessageTranslation.text('deleteConditionMessage',
        '@Localization.GetText("This action cannot be undone, are you sure you wish to continue?")');
</script>