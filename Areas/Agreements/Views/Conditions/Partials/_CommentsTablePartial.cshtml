@model IDB.MW.Application.Agreements.ViewModel.DetailsConditionViewModel

<div id="commentslistdinamic">
    @for (int i = 0; i < Model.ConditionIndividuals[0].UserComments.Count(); i++)
    {
        if (Model.IsModeEditTask)
        {
            <table id="commentTableUIRI002_edit">
                <tbody id="comentContainer">
                    <tr>
                        <td class="lastRowCommentUserJS hidden">
                            @Model.ConditionIndividuals[0].UserComments[i].UserName
                        </td>
                    </tr>
                </tbody>
            </table>
        }

        <div class="userComment ml40 width94p" data-index="@i">
            @if (Model.IsModeEdit ||
                (Model.IsModeEditTask &&
                Model.ConditionIndividuals[0].UserComments[i].UserName == Model.CurrentUser))
            {
                @Confluence.InputCommentBox(
                    section1: Confluence.Label(Model.ConditionIndividuals[0].UserComments[i].Date.Value.ToString("dd MMM yy")),
                    section2: Confluence.Label(Model.ConditionIndividuals[0].UserComments[i].UserName),
                    section3: Confluence.ButtonTrash(
                        text: "",
                        action: "removeUserComment",
                        dataAttributes: new Dictionary<string, string>
                        {
                            { "commentId", Convert.ToString(Model.ConditionIndividuals[0].UserComments[i].UserCommentId) }
                        }),
                    value: Model.ConditionIndividuals[0].UserComments[i].Text,
                    name: "ConditionIndividuals[0].UserComments[" + @i + "].Text",
                    htmlClass: "txtDescriptionComent")

                <input type="hidden" name="@("ConditionIndividuals[0].UserComments[" + i + "].UserCommentId")"
                       value="@Model.ConditionIndividuals[0].UserComments[i].UserCommentId" />
                <input type="hidden" name="@("ConditionIndividuals[0].UserComments[" + i + "].IsDelete")"
                       value="@Model.ConditionIndividuals[0].UserComments[i].IsDelete" class="isDeleteComment" />
                <input type="hidden" name="@("ConditionIndividuals[0].UserComments[" + i + "].OldText")"
                       value="@Model.ConditionIndividuals[0].UserComments[i].Text" />
            }
            else
            {
                <span>
                    @Confluence.InputCommentBox(
                        section1: Confluence.Label(Model.ConditionIndividuals[0].UserComments[i].Date.Value.ToString("dd MMM yy")),
                        section2: Confluence.Label(Model.ConditionIndividuals[0].UserComments[i].UserName),
                        section3: null,
                        value: Model.ConditionIndividuals[0].UserComments[i].Text,
                        name: "ConditionIndividuals[0].UserComments[" + @i + "].Text",
                        htmlClass: "txtDescriptionComent",
                        isReadOnly: true)
                </span>
                <input type="hidden" name="@("ConditionIndividuals[0].UserComments[" + i + "].UserCommentId")"
                       value="@Model.ConditionIndividuals[0].UserComments[i].UserCommentId" />
                <input type="hidden" name="@("ConditionIndividuals[0].UserComments[" + i + "].OldText")"
                       value="@Model.ConditionIndividuals[0].UserComments[i].Text" />
            }
        </div>
    }
</div>