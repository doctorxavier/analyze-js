@using IDB.MW.Domain.Values;

@{
    if (Model.HasPermissionEdit)
    {
        <label for="edit">
            <a href="@(Url.Action("Edit", "Conditions",
                new
                {
                    area = "Agreements",
                    operationId = Model.Operation.OperationId,
                    agreementId = Model.Agreement.AgreementId,
                    conditionId = Model.ConditionId,
                    conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                    mainOperationNumber = Model.Operation.OperationNumber
                }))">
                @Confluence.ButtonWhite(
                    Localization.GetText(
                    Model.ConditionStatus.Code == AgreementsAndConditionsConstants.CONDITION_STATUS_TR ?
                    "CC.AddInformation" :
                    "Edit"))
            </a>
        </label>
    }

    if (Model.HasPermissionFulFilled || Model.HasPermissionUnFulFilled || Model.HasPermissionWaived)
    {
        foreach (var status in Model.FinalStatus)
        {
            var isFulfillStatus =
                status.Text == AgreementsAndConditionsConstants.FULFILLED && Model.HasPermissionFulFilled;
            var isUnFulfillOrWaived =
                status.Text != AgreementsAndConditionsConstants.FULFILLED &&
                (Model.HasPermissionUnFulFilled || Model.HasPermissionWaived);
            var isFulfillCode =
                status.Text == AgreementsAndConditionsConstants.FULFILLED;
            var attributeOnClick = "onclick=\"validateFulfill(this, '" + Model.ConditionNumber + "')\"";

            <label for="saveandrequest">
                <input
                    type="button"
                    class="buttonOrange saveandrequest @(isFulfillCode ? string.Empty : "changeConditionStatus")"
                    @(isFulfillCode ? Html.Raw(attributeOnClick) : string.Empty)
                    name="Request"
                    value="@Localization.GetText("CL.Conditions.Button." + status.Text)"
                    data-route="@Url.Action(
                        "ConditionFinalStatusValidationRequest",
                        "Conditions",
                        new
                        {
                            area = "Agreements",
                            operationId = Model.Operation.OperationId,
                            agreementId = Model.Agreement.AgreementId,
                            conditionId = Model.ConditionId,
                            conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                            finalStatusId = status.Value,
                            workflowEntityType = Model.WorkflowEntityType
                        })"
                    @(isFulfillStatus || isUnFulfillOrWaived ? string.Empty : "style=display:none;")>
            </label>
        }
    }
}