@model IDB.MW.Application.Agreements.ViewModel.DetailsConditionViewModel
@using IDB.MW.Domain.Values;

<div class="mod_tabla icon_entypo tableExtensions width94p">
    <table class="grid1 tableNormal">
        <thead>
            <tr>
                <th data-field="RequestDateGrid">@Localization.GetText("Requested date")</th>
                <th data-field="RequestMonthsGrid">@Localization.GetText("Request months")</th>
                <th data-field="ExtensionStatusGrid">@Localization.GetText("Extensions status")</th>
                <th data-field="SubmissionDateGrid">@Localization.GetText("Submission date")</th>
                <th data-field="ApprovalDateGrid">@Localization.GetText("Approval date")</th>
                <th class="w20" data-field="Delete">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
        @{
            foreach (var extension in Model.ConditionIndividuals[0].ConditionExtensions)
            {
                <tr>
                    <td>
                        @{
                            if (extension.ValidationStageCode == AgreementsAndConditionsConstants.APPROVED_CONDITION_STATUS)
                            {
                                <a href="@(Url.Action("EditExtension", "Conditions", new
                                    {
                                        area = "Agreements",
                                        operationId = Model.Operation.OperationId,
                                        agreementId = Model.Agreement.AgreementId,
                                        conditionId = Model.ConditionId,
                                        conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                                        conditionExtensionId = extension.ConditionExtensionId,
                                        mainOperationNumber = Model.Operation.OperationNumber,
                                        RequestDate = extension.RequestedExtensionDate.Value.ToString("dd MMM yyyy")
                                    }))">
                                    @(extension.RequestedExtensionDate.Value.ToString("dd MMM yyyy"))
                                </a>
                            }
                            else
                            {
                                if (extension.RequestedExtensionDate == null)
                                {
                                    <a href="@(Url.Action("EditExtension", "Conditions", new
                                        {
                                            area = "Agreements",
                                            operationId = Model.Operation.OperationId,
                                            agreementId = Model.Agreement.AgreementId,
                                            conditionId = Model.ConditionId,
                                            conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                                            conditionExtensionId = extension.ConditionExtensionId,
                                            mainOperationNumber = Model.Operation.OperationNumber,
                                            RequestDate = Convert.ToDateTime(Model.CurrentExpirationDate)
                                                .AddMonths((int)extension.RequestedExtensionMonths).ToString("dd MMM yyyy")
                                        }))">
                                        @(Convert.ToDateTime(Model.CurrentExpirationDate)
                                            .AddMonths((int)extension.RequestedExtensionMonths).ToString("dd MMM yyyy"))
                                    </a>
                                }
                                else
                                {
                                    <a href="@(Url.Action("EditExtension", "Conditions", new
                                        {
                                            area = "Agreements",
                                            operationId = Model.Operation.OperationId,
                                            agreementId = Model.Agreement.AgreementId,
                                            conditionId = Model.ConditionId,
                                            conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                                            conditionExtensionId = extension.ConditionExtensionId,
                                            mainOperationNumber = Model.Operation.OperationNumber,
                                            RequestDate = extension.RequestedExtensionDate.Value.ToString("dd MMM yyyy")
                                        }))">
                                        @(extension.RequestedExtensionDate.Value.ToString("dd MMM yyyy"))
                                    </a>
                                }
                            }
                        }
                    </td>

                    <td>@extension.RequestedExtensionMonths.GetValueOrDefault()</td>

                    <td>@extension.ValidationStageName</td>

                    <td>@String.Format("{0:dd MMM yyy}", extension.ValidateDate)</td>

                    <td>@String.Format("{0:dd MMM yyy}", extension.ValidateDate)</td>

                    <td>
                        @if (Model.IsModeEdit &&
                            extension.ValidationStageCode == AgreementsAndConditionsConstants.CONDITION_STATUS_DRAFT)
                        {
                            <button type="button" class="buttonTrash" onclick="deleteItem(this)"
                                    data-route="@Url.Action("DeleteExtension", "Conditions", new
                                    {
                                        area = "Agreements",
                                        operationId = Model.Operation.OperationId,
                                        agreementId = Model.Agreement.AgreementId,
                                        conditionId = Model.ConditionId,
                                        conditionIndividualId = Model.ConditionIndividuals[0].ConditionIndividualId,
                                        conditionExtensionId = extension.ConditionExtensionId
                                    })">
                                <span class="icon"></span>
                                <span></span>
                            </button>
                        }
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>