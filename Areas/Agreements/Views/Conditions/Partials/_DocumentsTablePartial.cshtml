@model IEnumerable<IDB.MW.Application.Agreements.ViewModel.UserDocumentConditionViewModel>
@using IDB.MW.Domain.Values

@{
    int index = 0;
 }

<table id="tableDocuments" class="tableNormal" data-entityrelated="@ViewBag.EntityRelated"
    data-getdatadocument="@Url.Action("GetDataDocument", "Conditions", new { area = "Agreements" })">
    <thead>
        <tr>
            <th data-field="User">@Localization.GetText("User")</th>
            <th data-field="Date">@Localization.GetText("Date")</th>
            <th data-field="IDBDocNum">@Localization.GetText("IDB Doc number")</th>
            <th data-field="Content">@Localization.GetText("Content")</th>
            <th data-field="Current" class="perw10">&nbsp;</th>
        </tr>
    </thead>
    <tbody>
            @foreach (var document in Model)
            {
                <tr data-index="@index">
                    <td>@document.UserName</td>
                    <td>@String.Format("{0:dd MMM yyy}", document.Date)</td>
                    <td>@document.DocumentReference</td>
                    <td>@document.Description</td>
                    <td>
                        @Confluence.ButtonDownload(
                            text: string.Empty,
                            name: "downloadDocument",
                            action: "downloadDocument",
                            dataAttributes: new Dictionary<string, string> { { "route", document.DownloadURL } })

                        @if (ViewBag.IsEdit != null && ViewBag.IsEdit)
                        {
                            @Confluence.ButtonTrash(
                                string.Empty,
                                action: "verifyDeleteDocument",
                                name: "deleteDocument",
                                dataAttributes: new Dictionary<string, string> {
                                    { "deletemessage", Localization.GetText("OP.MS.MissionCompleteView.Message.DeleteDocument") },
                                    { "docdescription", document.Description },
                                    { "idb-fieldname", "btnDeleteDocument" },
                                    { "route", Url.Action("DeleteDocument", "Conditions",
                                        new { entityRelated = document.EntityRelated, documentId = document.DocumentId }) }
                                })
                        }
                    </td>

                    @Confluence.InputHidden(
                        value: document.DocumentId.ToString(),
                        name: document.EntityRelated == AgreementsAndConditionsConstants.WF_ENTITY_TYPE_CONDITION_INDIVIVDUAL ?
                            "ConditionIndividuals[0].UserDocuments[" + index + "].DocumentId" :
                            "ConditionIndividuals[0].ConditionExtensions[0].UserDocuments[" + index + "].DocumentId")

                    @Confluence.InputHidden(
                        value: document.EntityRelated,
                        name: document.EntityRelated == AgreementsAndConditionsConstants.WF_ENTITY_TYPE_CONDITION_INDIVIVDUAL ?
                            "ConditionIndividuals[0].UserDocuments[" + index + "].EntityRelated" :
                            "ConditionIndividuals[0].ConditionExtensions[0].UserDocuments[" + index + "].EntityRelated")

                    <input type="hidden" value="false" class="IsDelete" 
                           name="@(document.EntityRelated == AgreementsAndConditionsConstants.WF_ENTITY_TYPE_CONDITION_INDIVIVDUAL ?
                               "ConditionIndividuals[0].UserDocuments[" + index + "].IsDelete" :
                               "ConditionIndividuals[0].ConditionExtensions[0].UserDocuments[" + index + "].IsDelete")" />
                </tr>

                index++;
            }
        </tbody>
</table>