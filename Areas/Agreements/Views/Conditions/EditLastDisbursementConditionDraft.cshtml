
@model IDB.MW.Domain.Models.Clauses.OperationRelatedModel
@{
    ViewBag.Title = "CreateLastDisbursement";
    bool isOA420 = !(Model.IsOA421Check ?? false);
}

@section JavaScript 
    {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/createLastDisbursement.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/scripts/modal/modal.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/concurrence.js"  + @System.Configuration.ConfigurationManager.AppSettings["cache"].ToString())"></script>
}


<section class="central">
    <h2 class="hide">Seccion central de Contenido</h2>
    <div class="mod_contenido_central contracts_and_clauses newClause">
        @using (Html.BeginForm("EditLastDisbursementClauseDraftPost", "Conditions", /*new { contractId = Model.Contracts[0].ContractId },*/ FormMethod.Post, new { area = "Agreements", id = "target" }))
        {
            @Html.Hidden("ChangedFulfillmentDateUrl", Url.Action("ConfirmChangedFulfillmentDate", "Conditions", new { area = "Agreements" }));
            
            @Html.HiddenFor(x => x.Contracts[0].Executor, new Dictionary<string, Object> { { "id", "executingAgency" } })
            @Html.HiddenFor(x => x.Contracts[0].SignatureDate, new Dictionary<string, Object> { { "id", "signatureDate" } })
            @Html.HiddenFor(x => x.Contracts[0].LegalEffectivenessDate, new Dictionary<string, Object> { { "id", "legalEffectivenessDate" } }) 
            @Html.HiddenFor(x => x.Contracts[0].CurrentDisbursementExpirationDate, new Dictionary<string, Object> { { "id", "CurrentExpirationdate" } }) 
            
            @Html.HiddenFor(x => x.OperationId)
            @Html.HiddenFor(x => x.mainOperationNumber)
            @Html.HiddenFor(x => x.Contracts[0].ContractId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseId)
            @Html.HiddenFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].ClauseIndividualId)
            <fieldset>
                <h3 class="headingh2"><a href="@(Url.Action("Index", "Agreements", new { area = "Agreements", operationNumber = Model.mainOperationNumber }))" title=" @Localization.GetText("Contracts And Clauses")" class="tipo1"> @Localization.GetText("Contracts And Clauses")</a></h3>
                <div class="editingButtonsEdit">
                    <a class="cancel" id="Cancelar1" href="@(Url.Action("Index", "Agreements", new { area = "Agreements", operationNumber = Model.mainOperationNumber }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                    <label for="Save">
                        <input type="button" class="btn-primary_2 save" value=" @Localization.GetText("Save")" id="Save">
                    </label>
                </div>

                <div class="desheadingh3">
                    <p class="title">@Model.OperationNumber <span class="draft">
                        @foreach (var masterData in ViewBag.ListContractStatus)
                        {
                            if (masterData.ConvergenceMasterDataId == @Model.Contracts[0].ContractClauseStatId)
                            {
                            @masterData.NameEn
                                break;
                            }
                        }
                    </span>
                        @if (Model.Contracts[0].LegalEffectivenessDate.HasValue && Model.Contracts[0].CurrentDisbursementExpirationDate.HasValue)
                        {
                            @String.Format("{0:dd MMM yyy}", Model.Contracts[0].LegalEffectivenessDate)<span class="titleTo"> to </span>@String.Format("{0:dd MMM yyy}", Model.Contracts[0].CurrentDisbursementExpirationDate)
                        }
                    </p>
                    <p class="description"><span class="descriptionBold">@Model.Contracts[0].ContractNumber</span> @Model.OperationNameEn</p>
                </div>
                <h4 class="headingh3">@Localization.GetText("Last Disbursement Clause")</h4>
                <div class="operationData">
                    <div class="custom operationData">
                        <label class=" editLabel input" for="Number">
                            <span class="dataTitle inputTitle">@Localization.GetText("Number")<span class="asteriscoRojo">*</span></span>
                            @Html.TextBoxFor(x => x.Contracts[0].Clauses[0].ClauseNumber, new Dictionary<string, Object> { { "class", "input normal" }, { "id", "Number" }, { "name", "Number" }, { "MaxLength", "32" }, { "placeholder", "Clause Number" } })
                            @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].ClauseNumber);}
                        </label>
                    </div>
                    <div class="custom operationData">
                        <div class="dateSelect">
                            <label for="datepicker06">
                                <span class="dataTitle inputTitle"> @Localization.GetText("Fulfillment date")</span>
                                @Html.TextBoxFor(x => x.Contracts[0].Clauses[0].ClauseIndividuals[0].SubmissionDate, "{0:dd MMM yyyy}", new Dictionary<string, Object> { { "id", "fulfilmentDate" }, { "class", "datepicker" }, { "name", "datePicker10" }, { "placeholder", "DD MM YYYY" } })
                            </label>
                        </div>
                    </div>
                </div>
                <div class="operationData">
                    <div class="custom operationData">
                        <label class="editLabel input" for="status">
                            <span class="dataTitle inputTitle">@Localization.GetText("Status")</span>
                            @ViewBag.ClauseStatus
                        </label>
                    </div>
                    <div class="custom operationData">
                        <div class="dateSelect">
                            <label for="datepicker06">
                                <span class="dataTitle inputTitle">@Localization.GetText("Expiration date")</span>
                                @if (Model.Contracts[0].CurrentDisbursementExpirationDate.HasValue)
                                {
                                    @String.Format("{0:dd MMM yyy}", Model.Contracts[0].CurrentDisbursementExpirationDate)
                                }
                            </label>
                        </div>
                    </div>
                </div>
                <div class="operationData">
                    <div class="custom operationData">
                        <label class=" editLabel input" for="Category">
                            <span class="dataTitle inputTitle"> @Localization.GetText("Category")</span>
                            @ViewBag.Category
                        </label>
                    </div>
                    <div class="custom operationData">
                        <ul class="optionList">
                            <li class="small">
                                <label class=" editLabel input" for="Type">
                                    <span class="dataTitle inputTitle"> @Localization.GetText("Type")</span>
                                    @ViewBag.ClauseType
                                </label>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="operationData">

                    <div class="operationData dropDown padding_drop ">
                        <ul class="optionList ">
                            <li class="small">
                                <span class="dataTitle inputTitle"> @Localization.GetText("Location")<span class="asteriscoRojo">*</span></span>
                                @Html.DropDownListFor(x => x.Contracts[0].Clauses[0].LocationId, new SelectList(ViewBag.ListClauseLocation2, "Value", "Text", Model.Contracts[0].Clauses[0].LocationId), new Dictionary<string, Object> { { "class", "optionSelect" } })
                                @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].LocationId);}
                            </li>
                        </ul>

                    </div>
                    <div class="custom operationData ">
                        <label class="editLabel paddingTop_label" for="specialcause">
                            @Html.CheckBoxFor(x => x.Contracts[0].Clauses[0].IsSpecial, new Dictionary<string, Object> { { "id", "specialcause" }, { "name", "specialcause" }, { "style", "display:none" }, { "data-caption", Localization.GetText("Special Clause Class") } })
                        </label>
                    </div>
                </div>
                <div class="operationData">
                    <div class="custom" style="width:40%">
                        <label class=" editLabel input" for="Description">
                            <span class="dataTitle inputTitle"> @Localization.GetText("Description")<span class="asteriscoRojo">*</span></span>
                            @Html.TextAreaFor(x => x.Contracts[0].Clauses[0].Description, new Dictionary<string, Object> { { "class", "input normal large" }, { "name", "Description" }, { "id", "Description" }, { "cols", "55" }, { "rows", "3" }, { "placeholder", "Clause Description" } })
                            @{Html.ValidateFor(x => x.Contracts[0].Clauses[0].Description);}
                        </label>
                    </div>
                     
                        <div class="operationData dropDown downPart marginRight3">
                            <ul class="optionList">
                                <li class="small">
                                    <p class="dataTitle inputTitle">@Localization.GetText("Trench")</p>
                                    <label>@Localization.GetText("Not applicable")</label> 
                                </li>
                            </ul>
                        </div>
                   
                </div>
                <div class="editingButtonsEdit">
                    <a class="cancel" id="Cancelar" href="@(Url.Action("Index", "Agreements", new { area = "Agreements", operationNumber = Model.mainOperationNumber }))" title="@Localization.GetText("Cancel")">@Localization.GetText("Cancel")</a>
                    <label for="Save5">
                        <input type="button" class="btn-primary_2 save" value=" @Localization.GetText("Save")" id="Save5">
                    </label>
                </div>
            </fieldset>
        }
    </div>
</section>
