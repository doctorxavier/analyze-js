@using IDB.MW.Domain.Values

@model IDB.MW.Application.Agreements.ViewModel.AgreementsAndConditionViewModel

@{
    ViewBag.Title = "Index";
}

@section CSS {
    <link href="@Url.Content("~/Content/Modules/Agreements/agreement.css")" rel="stylesheet" />
    @Styles.Render("~/Content/Confluence")
}

@section JavaScript {
    @Scripts.Render("~/bundles/ModalConfluenceScripts")
    @Scripts.Render("~/bundles/scripts2")
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/botonActivo.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/foldingTable/tableFold.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/foldingTable/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Condition/Filter/filter.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/Agreement/main.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Modules/Agreements/common.js")"></script>
}

<body>

    @{int cont = 0;}

    <section class="central">
        <h2 class="hide">Seccion central</h2>
        <div class="mod_contenido_central contracts_and_clauses">
            <h3 class="headingh2">@Localization.GetText("AG.AgreementsAndConditions.Text")</h3>

            @if (Model.IsPsgOperation)
            {
                <div class="filterContracts">
                    <div class="btn-action-group activo">
                        <label class="btn-action-fondo" for="btn-actionid">
                            <span class="btn-action-punto">@Localization.GetText("Punto Blanco")</span>
                        </label>
                        <input type="button" class="btn btn-action" value="@Localization.GetText("AG.CollapseAgreements.Text")" id="btn-actionid">
                    </div>

                    <div class="editingButtonsEdit">
                        <a href="javascript:void(0)" class="btn btn-primary filter-clauses"
                           title="@Localization.GetText("AG.ConditionFilter.Text")">
                            @Localization.GetText("AG.ConditionFilter.Text")
                        </a>
                    </div>
                    <div class="clearBoth"></div>
                </div>

                @Html.Partial("Partials/_FilterPartial")

                int counterAgreements = 1;

                foreach (var agreement in Model.Agreements)
                {
                    <div class="minimizeTable loanTables @agreement.AgreementNumber" id="@agreement.AgreementId">
                        <div class="minimizeBar">
                            <div class="trackOrder">
                                @counterAgreements @{counterAgreements++;}
                            </div>
                            <div data-contractindex="@agreement.AgreementId" class="tableOperator">
                                @Localization.GetText("Minimize/Maximize")
                            </div>
                        </div>
                        <div class="operatorBar"></div>
                        <h4 class="headingh3 plegableTitle">@agreement.AgreementNumber</h4>

                        <div class="selectContainer">
                            <p>@Localization.GetText(agreement.StatusName)</p>
                        </div>

                        <div class="operationBlock">
                            <h5 class="headingh4 plegableSubtitle">@Model.OperationNumber</h5>
                            <div class="clearBoth"></div>
                        </div>

                        <table class="tableInfo contractHeader headerContainer">
                            <tbody>
                                <tr class="headers">
                                    <th class="border-right">@Localization.GetText("TC.FundInformation.PendingPledges.Donor")</th>
                                    <th class="border-right">@Localization.GetText("CL.Header.CountryContract")</th>
                                    <th class="border-right">@Localization.GetText("Closing Date")</th>
                                    <th>
                                        <div class="inlineBlock perw75">
                                            @Localization.GetText("PSG.Agreement.DueDate")
                                            @if (Html.HasPermission(Permission.PSG_DUE_DATE_WRITE))
                                            {
                                                <label class="checkPadlock pl15 verticalAlignMiddle">
                                                    <input type="checkbox" class="checkDate" checked="checked"
                                                           data-route="@Url.Action("UpdateDueDate", "Agreements", new
                                                            {
                                                                area = "Agreements",
                                                                operationNumber = Model.OperationNumber,
                                                                agreementId = agreement.AgreementId
                                                            })">
                                                    <span class="iconPad"></span>
                                                </label>
                                            }
                                        </div>
                                    </th>
                                </tr>

                                <tr>
                                    <td class="border-right"><p>@agreement.FundDonorName</p></td>
                                    <td class="border-right"><p>@agreement.ContractCountry</p></td>
                                    <td class="border-right">
                                        <p>@String.Format("{0:dd MMM yyy}", agreement.ClosingDate)</p>
                                    </td>
                                    <td>
                                        <div class="inlineBlock perw75">
                                            @if (Html.HasPermission(Permission.PSG_DUE_DATE_WRITE))
                                            {
                                                <div class="inlineBlock perw75 dateContainer">
                                                    <p class="datePlain">@String.Format("{0:dd MMM yyy}", agreement.DueDate)</p>

                                                    <input name="DueDate" type="text" data-force-parsley-validation="true"
                                                           class="inputText datepicker-default hasDatepicker pickerDate"
                                                           value="@String.Format("{0:dd MMM yyy}", agreement.DueDate)"
                                                           data-parsley-required="true" placeholder="DD MMM YYYY"
                                                           data-parsley-pattern="^(((0?[1-9])|([1-2][0-9])|3(0|1)) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4})$"
                                                           style="display: none">
                                                </div>
                                            }
                                            else
                                            {
                                                @String.Format("{0:dd MMM yyy}", agreement.DueDate)
                                            }
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <div class="clearfix"></div>

                        <div class="mod_style mod_tabla_plegable mod_style_plegable">

                            @Html.Hidden("ConstantSentToTrack", Localization.GetText("Send to Track"))
                            @Html.Hidden("ConstantSentToTrackWidthDraw", Localization.GetText("Send to Track Withdraw"))
                            @Html.Hidden("ConstantDelete", Localization.GetText("AG.DeleteCondition.Text"))
                            @Html.Hidden("ConstantCreateCondition", Localization.GetText("Create Extension"))

                            @{cont++;}

                            <table class="grid2 tableNormal" data-contractindex="@agreement.AgreementId" id="@string.Concat("TABLE",cont)">
                                <thead>
                                    <tr>
                                        <th>@Localization.GetText("Common.Condition.Text")</th>
                                        <th>@Localization.GetText("Description")</th>
                                        <th class="w20">@Localization.GetText("Closing Dep.")</th>
                                        <th>@Localization.GetText("Category")</th>
                                        <th>@Localization.GetText("Type")</th>
                                        <th>@Localization.GetText("Expiration")</th>
                                        <th>@Localization.GetText("Submission")</th>
                                        <th>@Localization.GetText("Approval")</th>
                                        <th>@Localization.GetText("Status")</th>
                                    </tr>
                                </thead>
                                <tbody class="k-alt">
                                    @foreach (var condition in agreement.Conditions)
                                    {
                                        foreach (var individual in condition.ConditionIndividuals)
                                        {
                                            <tr class="backgroundColorWhite">
                                                <td class="tdStyle col-md-12">
                                                    <div class="col-md-4 circle-icon @(individual.ExpiredCode)"></div>
                                                    <div class="col-md-8"><a class="ml10" href="@(Url.Action("Details", "Conditions",
                                                        new
                                                        {
                                                            area = "Agreements",
                                                            operationId = agreement.OperationId,
                                                            agreementId = agreement.AgreementId,
                                                            conditionId = condition.ConditionId,
                                                            conditionIndividualId = individual.ConditionIndividualId
                                                        }))">@condition.ConditionNumber@individual.Suffix</a></div>
                                                </td>

                                                <td>@condition.ConditionDescription</td>

                                                @if (condition.CategoryName == "LASTCD")
                                                {
                                                    <td class="tdStyle">
                                                        <div class="lcd-Dependency-clause-icon lcd-dependency-icon lcdStyle"></div>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                                <td>@condition.CategoryName</td>

                                                <td>@condition.TypeName</td>

                                                <td>@String.Format("{0:dd MMM yyy}", individual.CurrentExpirationDate)</td>

                                                <td>@String.Format("{0:dd MMM yyy}", individual.SubmissionDate)</td>

                                                <td>@String.Format("{0:dd MMM yyy}", individual.ValidateDate)</td>

                                                <td>
                                                    @if (individual.ConditionStatus.Item1)
                                                    {
                                                        <p>@individual.ConditionStatus.Item2.ToUpper()</p>
                                                    }
                                                    else
                                                    {
                                                        @Confluence.InputDropDown(
                                                            value: individual.ConditionStatus.Item3.FirstOrDefault(x => x.Selected).Value,
                                                            name: "ConditionStatus",
                                                            elements: individual.ConditionStatus.Item3,
                                                            width: "100%",
                                                            required: false,
                                                            orderAsc: false,
                                                            showEmptyOption: false,
                                                            placeholder: null,
                                                            disabled: !Html.HasPermission(Permission.PSG_CHANGE_CONDITION_STATUS))
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>

                            <div class="k-toolbar mt15 mb15">
                                @if (agreement.CanCreateNewCondition)
                                {
                                    <button type="button" class="addNewRow addNewCondition"
                                            data-route="@(Url.Action("CreateNewCondition", "Conditions", new
                                            {
                                                area = "Agreements",
                                                operationNumber = Model.OperationNumber,
                                                agreementId = agreement.AgreementId
                                            }))">
                                        <span>+</span>
                                        <span>@Localization.GetText("New Condition")</span>
                                        <span>+</span>
                                    </button>
                                }
                            </div>

                            <div class="plegableSeparator"></div>

                        </div>
                    </div>
                }
            }
        </div>
    </section>

    <div>
        <table class="ml70">
            <tr>
                <td class="circle-icon circle-red"></td>
                <td class="tdIcon">@Localization.GetText("Expired")</td>
            </tr>
            <tr>
                <td class="circle-icon circle-orange"></td>
                <td class="tdIcon">@Localization.GetText("10 days to Expiration")</td>
            </tr>
            <tr>
                <td class="circle-icon circle-yellow"></td>
                <td class="tdIcon">@Localization.GetText("11 – 30 days to expiration")</td>
            </tr>
        </table>
    </div>

</body>

<script type="text/javascript">
    MessageTranslation.text('deleteConditionMessage',
        '@Localization.GetText("This action cannot be undone, are you sure you wish to continue?")');
</script>
