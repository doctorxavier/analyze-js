@using System.Globalization

@using IDB.MVCControls.General.Helpers
@using IDB.Presentation.MVC4.Helpers
@using IDB.MVCControls.DataTable.Helpers
@using IDB.MVCControls.DataTable.Models
@using IDB.Presentation.MVC4.Areas.Indicators.Enums
@using IDB.Presentation.MVC4.Areas.Indicators.Models
@using IDB.MW.Application.IndicatorsModuleNew.ViewModels.Core

@model MultiLevelAttributeViewModel


@{
    var config = Html.RenderDataTable(Model.Levels);
    config.Name(Model.Name + "-level")
    .PrimaryKey(x => x.LevelId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(false)
    .UsePageMode(false)
    .UseDataTableNet(false)
    .Columns(c =>
    {
        c.Template(x => White(x)).Persistent().HeaderTemplate(Confluence.ButtonExpandTable()).CssHeaderClass("tree icon").CssClass("tree");
        c.Bound(x => x.NameEn).Persistent().HeaderTemplate(LabelRequired("Common.Languaje.English", ( Model.LanguageRequired & LanguageTypeEnum.LevelLanguagueEnRequired ) == LanguageTypeEnum.LevelLanguagueEnRequired));
        c.Bound(x => x.NameEs).Persistent().HeaderTemplate(LabelRequired("Common.Languaje.Spanish", ( Model.LanguageRequired & LanguageTypeEnum.LevelLanguagueEsRequired ) == LanguageTypeEnum.LevelLanguagueEsRequired));
        c.Bound(x => x.NameFr).Persistent().HeaderTemplate(LabelRequired("Common.Languaje.French", ( Model.LanguageRequired & LanguageTypeEnum.LevelLanguagueFrRequired ) == LanguageTypeEnum.LevelLanguagueFrRequired));
        c.Bound(x => x.NamePt).Persistent().HeaderTemplate(LabelRequired("Common.Languaje.Portuguese", ( Model.LanguageRequired & LanguageTypeEnum.LevelLanguaguePtRequired ) == LanguageTypeEnum.LevelLanguaguePtRequired));
        c.Template(x => DrawActions(x)).Persistent().HeaderAttribute("style", "width: 100px; min-width:100px;");
    })
    .RowTemplates(x =>
    {
        x.Create(RowTemplateType.AllRows, y => DrawCategories(y));
    });

    config.TableClass = "tableNormal";
}

@helper DrawActions(AttributeLevelViewModel model)
{
    var textDisabled = Localization.GetText("Common.Disabled");
    @Confluence.InputCheckbox(!model.IsEnabled, Model.Name + "-level-disabled", label : textDisabled, disabled : true)
}

@helper DrawActions(AttributeCategoryViewModel model)
{
    var textDisabled = Localization.GetText("Common.Disabled");
    @Confluence.InputCheckbox(!model.IsEnabled, Model.Name + "-category-disabled", label : textDisabled, disabled : true)
}

@helper DrawCategories(AttributeLevelViewModel model)
{
    var table = Html.RenderDataTable(model.Categories);
    table.Name(Model.Name + "-category")
    .PrimaryKey(x => x.CategoryId.ToString(CultureInfo.InvariantCulture))
    .AddPrimaryKeyToName(true)
    .UsePageMode(false)
    .UseDataTableNet(false)
    .Columns(c =>
    {
        c.Template(x => White(x)).Persistent().CssClass("tree");
        c.Bound(x => x.NameEn).Persistent();
        c.Bound(x => x.NameEs).Persistent();
        c.Bound(x => x.NameFr).Persistent();
        c.Bound(x => x.NamePt).Persistent();
        c.Template(x => DrawActions(x)).Persistent();

    });

    table.TableClass = "tableNormal";
    table.UseCustomHeader = true;
    table.CustomHeader = (@<thead>
        <tr>
            <th class="tree icon">
                @Confluence.ButtonExpandTable())
            </th>
            <th colspan="5">
                @Localization.GetText(Model.CategoryKey).HtmlEncode()
            </th>
        </tr>
        <tr>
            <th class="tree"><span></span></th>
            <th>@LabelRequired("Common.Languaje.English", ( Model.LanguageRequired & LanguageTypeEnum.CategoryLanguagueEnRequired ) == LanguageTypeEnum.CategoryLanguagueEnRequired)</th>
            <th>@LabelRequired("Common.Languaje.Spanish", ( Model.LanguageRequired & LanguageTypeEnum.CategoryLanguagueEsRequired ) == LanguageTypeEnum.CategoryLanguagueEsRequired)</th>
            <th>@LabelRequired("Common.Languaje.French", ( Model.LanguageRequired & LanguageTypeEnum.CategoryLanguagueFrRequired ) == LanguageTypeEnum.CategoryLanguagueFrRequired)</th>
            <th>@LabelRequired("Common.Languaje.Portuguese", ( Model.LanguageRequired & LanguageTypeEnum.CategoryLanguaguePtRequired ) == LanguageTypeEnum.CategoryLanguaguePtRequired)</th>
            <th style="width: 100px; min-width:100px;"></th>
        </tr>
    </thead>);

    <tr class="">
        <td class="tree"><span></span></td>
        <td colspan="5" class="subnivel">
            @Html.Partial("Controls/DataTable", table)
            @*<br />*@
        </td>
    </tr>
}

@helper White(object model)
{
    <span></span>
    <span class="selected"></span>
}

@helper LabelRequired(string label, bool languageRequired)
{
    @Localization.GetText(label)
    if(languageRequired)
    {
        @Confluence.LabelAsterisk()
    }
}

<div class="row mb20">
    <div class="col-md-6">
        @if(Model.SubTitle)
        {
            @Confluence.LabelSubTitleGroup(Localization.GetText(Model.TitleKey));
        }
        else
        {
            @Confluence.LabelTitleGroup(Localization.GetText(Model.TitleKey));
        }
    </div>
</div>

<div class="row row-body-40 font-body">
    <div class="col-md-12">

        @Confluence.LabelsGroup(title : Localization.GetText(Model.LevelKey), contentAlways : string.Empty, asterisk : false)
        @Html.Partial("Controls/DataTable", config)

    </div>
</div>