@using System.Globalization;
@using IDB.MW.Infrastructure.Configuration
@using IDB.MVCControls.General.Helpers
@using IDB.MW.Application.IndicatorsModuleNew.ViewModels.Core.EditIndicators
@using IDB.MW.Application.IndicatorsModuleNew.ViewModels.Framework
@using IDB.Presentation.MVC4.Areas.Indicators.Models

@model EditIndicatorPageViewModel<FWBasicDataViewModel>

@{
    var appSettings = ConfigurationServiceFactory.Current.GetApplicationSettings();
    var formatDate = appSettings.FormatDate;

    bool hasExpired = (Model.Indicator.Common.ExpirationDate.HasValue && (Model.Indicator.Common.ExpirationDate.Value < DateTime.Today));
}

<div class="row mb16">
    <div class="col-md-12">
        @Confluence.LabelTitleGroup(Localization.GetText("IM.EditReadIndicator.BasicData.TemplateVersion"))
    </div>
</div>

<div class="row mb20 font-body">
    <div class="col-md-4">
        @Confluence.LabelGetDropDown(Model.Indicator.Common.TemplateVersionId, ViewBag.indicatorTemplateList, bold: true)
    </div>
</div>

<div class="row mb20">
    <div class="col-md-12">
        @Confluence.LabelTitleGroup(Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.Title"))
    </div>
</div>

<div class="row mb20">
    <div class="col-md-4 mb16">
        <div class="row mb16">
            <div class="col-md-12">
                @Confluence.InputCheckbox((hasExpired ? false : Model.Indicator.Specific.IsActive), "isActive", label: Localization.GetText("IM.EditReadIndicator.BasicData.Acitive"), disabled: true)
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("IM.EditReadIndicator.BasicData.AcitiveInstructionsCheckedIndicator"))
            </div>
        </div>
    </div>
    <div class="col-md-2 mb16">
        <div class="row mb16">
            <div class="col-md-12">
                @Confluence.InputCheckbox(Model.Indicator.Specific.IsContribution, "isContribution", label: Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.Contribution"), disabled: true)
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.InsturctionsContribution"))
            </div>
        </div>


    </div>
    <div class="col-md-2 mb16">
        <div class="row mb16">
            <div class="col-md-12">
                @Confluence.InputCheckbox(Model.Indicator.Specific.isAlignment, "isAlignment", label: Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.Alignment"), disabled: true)
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.InsturctionsAlignment"))
            </div>
        </div>

    </div>
    <div class="col-md-2 mb16">
        <div class="row mb16">
            <div class="col-md-12">
                @Confluence.InputCheckbox(Model.Indicator.Specific.IsStrategicAlignment, "isStrategicAlignment", label: Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.StrategicAlignment"), disabled: true)
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.InsturctionsStrategicAlignment"))
            </div>
        </div>
    </div>
    <div class="col-md-2 mb16">
        <div class="row mb16">
            <div class="col-md-12">
                @Confluence.InputCheckbox(
                    isChecked: Model.Indicator.Specific.IsRegionalContext,
                    name: "isRegionalContext",
                    label: Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.RegionalContext"),
                    disabled: true)
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.InstructionsRegionalContext"))
            </div>
        </div>
    </div>
</div>
<div class="row mb20">
    <div class="col-md-4 mb16">
        <div class="row mb16">
            <div class="col-md-12">
                @Confluence.InputCheckbox(Model.Indicator.Specific.IsRMIndicatorRequirement, "isRMIndicatorRequirement", label: Localization.GetText("SA.IndicatorDetails.RMIndicatorRequirement.Title"), disabled: true)
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("SA.IndicatorDetails.RMIndicatorRequirement.Description"))
            </div>
        </div>
    </div>
</div>
<div class="row mb20">
    <div class="col-md-12">
        @Confluence.LabelTitleGroup(Localization.GetText("IM.EditReadIndicator.BasicData.Mapping.Title"))
    </div>
</div>

<div class="row mb16">

    <div class="col-md-4">
        @Confluence.InputCheckbox(Model.Indicator.Specific.IsLinkToCS, "isLinkToCS", label: Localization.GetText("IM.EditReadIndicator.BasicData.Mapping.LinkCountryStrategyObjective"), disabled: true)
    </div>
</div>

<div class="row mb20">

    <div class="col-md-4">
        @Confluence.Label(Localization.GetText("IM.EditReadIndicator.BasicData.Relationship.InsturctionsLink"))
    </div>

</div>

<div class="row mb20">
    <div class="col-md-12">
        @Confluence.LabelTitleGroup(Localization.GetText("IM.EditReadIndicator.IndicatorProfile.Title"))
    </div>
</div>

<div class="grouping-section">
    <div class="col-md-3 mb20">

        <div class="col-md-12">
            <div class="LabelsGroup">
                <label class="lgTit">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.IndicatorName")</label>
            </div>
        </div>

        <div class="col-md-12 lblcontent">
            <label class="labelNormal">@Localization.GetText("Common.Languaje.English")</label>
            <span class="asteriskColor">*</span>
        </div>

        <div class="col-md-12 lblvalue bold">
            @Model.Indicator.Common.IndicatorNameEn
        </div>

        <div class="col-md-12 lblcontent">
            <label class="labelNormal">@Localization.GetText("Common.Languaje.Spanish")</label>
            <span class="asteriskColor">*</span>
        </div>
        <div class="col-md-12 lblvalue bold">
            @Model.Indicator.Common.IndicatorNameEs
        </div>
        <div class="col-md-12 lblcontent">
            <label class="labelNormal">@Localization.GetText("Common.Languaje.French")</label>
            <span class="asteriskColor">*</span>
        </div>
        <div class="col-md-12 lblvalue bold">
            @Model.Indicator.Common.IndicatorNameFr
        </div>
        <div class="col-md-12 lblcontent">
            <label class="labelNormal">@Localization.GetText("Common.Languaje.Portuguese")</label>
            <span class="asteriskColor">*</span>
        </div>
        <div class="col-md-12 lblvalue bold">
            @Model.Indicator.Common.IndicatorNamePt
        </div>

    </div>
</div>

<div class="grouping-section">
    <div class="col-md-3 lineGrayRight">
        <div class="row1">
            <div class="col-md-12">
                <div class="LabelsGroup">
                    <label class="lgTit">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.UnitMeasure")</label>
                </div>
            </div>

            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("Common.Languaje.English")</label>
                <span class="asteriskColor">*</span>
            </div>

            <div class="col-md-12 lblvalue">
                @Confluence.LabelGetDropDown(
                    Model.Indicator.Common.UnitMeasureId != null ?
                        Model.Indicator.Common.UnitMeasureId.Value.ToString(CultureInfo.InvariantCulture) :
                        null,
                    ViewBag.UnitMeasureList,
                    bold: true)
            </div>
        </div>

        <div class="row2">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.IndicatorNumber")</label>
                <span class="asteriskColor">*</span>
            </div>
            <div class="col-md-12 lblvalue bold ">
                @Model.Indicator.Common.IndicatorNumber
            </div>
        </div>

        <div class="row3">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.EffectiveDate")</label>
                <span class="asteriskColor">*</span>
            </div>
            <div class="col-md-12 lblvalue bold">
                @FormatHelper.Format(Model.Indicator.Common.EffectiveDate, formatDate)
            </div>
        </div>
    </div>

    <div class="col-md-3 ml16">
        <div class="row1">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.TypeIndicator")</label>
                <span class="asteriskColor">*</span>
            </div>
            <div class="col-md-12 lblvalue">
                @Confluence.LabelGetDropDown(Model.Indicator.Specific.TypeCRFId, ViewBag.TypeCRFList, bold: true)
            </div>
        </div>

        <div class="row2">
            <div class="col-md-12">

                @{
                    var items = (IEnumerable<MultiDropDownItem>)ViewBag.PriorityAreaList;
                    var selectedItems = items.GetSelectedText(Model.Indicator.Specific.PriorityAreaIds);
                    var listtext = new List<IHtmlString>();
                    foreach (var text in selectedItems)
                    {
                        listtext.Add(DrawPriorityAreaSelects(text));
                    }


                    string labelPriorityArea = "IM.EditReadIndicator.IndicatorProfile.PriorityArea.Title";

                    // ToDo Template 2012
                    var templateItems = (List<SelectListItem>)ViewBag.indicatorTemplateList;
                    var selectedTemplateItems = templateItems.SingleOrDefault(x => x.Value == Model.Indicator.Common.TemplateVersionId.ToString()).Text;
                    if (selectedTemplateItems.Contains("2012"))
                    {
                        labelPriorityArea = "IM.EditReadIndicator.IndicatorProfile.PriorityArea";
                    }
        // End ToDo Template 2012

                }

                @Confluence.LabelsGroupExtendAlways(title: new List<IHtmlString> { Localization.GetText(labelPriorityArea).HtmlEncode() },
                                                    contentAlways: listtext)
            </div>
        </div>

        <div class="row3">
            <div class="col-md-12 lblcontent">
                <label class="labelNormal">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.ExpirationDate")</label>
                <span class="asteriskColor">*</span>
            </div>
            <div class="col-md-12 lblvalue bold">
                @FormatHelper.Format(Model.Indicator.Common.ExpirationDate, formatDate)
            </div>

        </div>
    </div>
</div>

@if (Model.Indicator.Specific.IsActive && Model.Indicator.Specific.IsStrategicAlignment && !Model.Indicator.Specific.IsContribution && !Model.Indicator.Specific.isAlignment)
{
    <div class="row mt20 mb20" data-content="StrAlingImages">
        <div class="col-md-12 mb5">
            <label class="labelNormal bold">@Localization.GetText("IM.EditReadIndicator.IndicatorProfile.StrAligIndicatorImage")</label>
        </div>
        <div class="col-md-8">
            @{ if (Model.Indicator.Common.StrAlingImageId.HasValue){
                 if (Model.Indicator.Common.StrAlingImageId.ToString() == ViewBag.SocialInclusion)
                 {
                    <span class="strSInclusionImg"></span>
                 }
                 else if (Model.Indicator.Common.StrAlingImageId.ToString() == ViewBag.HighProductivity)
                 {
                    <span class="strAlignHProductivityImg"></span>
                 }
                 else if (Model.Indicator.Common.StrAlingImageId.ToString() == ViewBag.FullEconomic)
                 {
                    <span class="strAlignFullEconomicImg"></span>
                 }
                 else if (Model.Indicator.Common.StrAlingImageId.ToString() == ViewBag.ClimateChange)
                 {
                    <span class="strAlignClimateChangeImg"></span>
                 }
                 else if (Model.Indicator.Common.StrAlingImageId.ToString() == ViewBag.Equality)
                 {
                    <span class="strAlignEqualityImg"></span>
                 }
                 else if (Model.Indicator.Common.StrAlingImageId.ToString() == ViewBag.InstCapacity)
                 {
                    <span class="strAlignInstCapacityImg"></span>
                 }
             }}
        </div>
    </div>
}

@helper DrawPriorityAreaSelects(string text)
{
    <div>
        @Confluence.LabelBold(text: text)
    </div>
}
