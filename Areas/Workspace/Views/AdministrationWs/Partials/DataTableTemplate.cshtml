@using IDB.MVCControls.DataTable.Helpers
@model List<IDB.MW.Business.WorkSpaceModule.ViewModels.TemplateRowViewModel>
@Confluence.InputHidden(ViewBag.SerializedViewModel, "SerializedViewModel", id: "SerializedViewModel")
@Confluence.InputHidden(ViewBag.Type, "Type", id: "Type")
<div class="dataTable">
    @{
        var config = Html.RenderDataTable(Model);
        config.Name("TableRoles")
            .AddPrimaryKeyToName(false)
            .Columns(columns =>
            {
                columns.Bound(c => c.TemplateId).Hidden(true);
                columns.Template(c => Confluence.ButtonLink(c.Name, dataNavigation: Url.Action("TemplateEdit", "AdministrationWs", new {templateId = c.TemplateId})))
                    .Header(Localization.GetText(ViewBag.Type == "1" ? "Workspace.Filter.TemplateName" : "Workspace.Filter.UserName"));
                columns.Template(c => Confluence.ButtonBlue(Localization.GetText("Workspace.Buttons.Personalize"), "View", dataNavigation:
                    Url.Action("Personalize", "AdministrationWs", new { templateId = c.TemplateId, type = Convert.ToInt32(ViewBag.Type), val = 1 }))).CssHeaderClass("w130");
                columns.Bound(c => string.Empty)
                            .EditableTemplate(row => Confluence.ButtonTrash(null, "removeRow", "removeTemplate", dataAttributes: new Dictionary<string, string>() { { "idb-fieldname", "btnDelete" } })).CssHeaderClass("w130");
            });

        config.TableClass = "tableNormal endSpacing";

        @Html.Partial("Controls/DataTable", config)
    }
</div>
