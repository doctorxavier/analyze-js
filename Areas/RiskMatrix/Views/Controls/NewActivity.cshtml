@using IDB.Presentation.MVC4.Areas.RisksMatrix.Models
@using IDB.Presentation.MVC4.Helpers

@model RiskMatrixViewModel

@{
    int i;
    int l;
    if (Model.CodeGuid == null)
    {
        var selected = Model.Risks.Where(n => n.RiskId.ToString() == Model.SelectedRisk).FirstOrDefault();
        i = Model.Risks.IndexOf(selected);
        l = selected.ResponsePlanActivity.IndexOf(selected.ResponsePlanActivity.LastOrDefault());
    }
    else
    {
        var selected = Model.Risks.Where(n => n.CodeGuid == Model.CodeGuid).FirstOrDefault();
        i = Model.Risks.IndexOf(selected);
        l = selected.ResponsePlanActivity.IndexOf(selected.ResponsePlanActivity.LastOrDefault());
    }

    var guidActiviy = Guid.NewGuid();

    var activityId = "";

    if (Model.Risks[i].ResponsePlanActivity[l].ActivityId == default(int))
    {
        activityId = guidActiviy.ToString();
    }
    else
    {
        activityId = Model.Risks[i].ResponsePlanActivity[l].ActivityId.ToString();
    }
}

<tr data-id="@guidActiviy" data-description="firstRowResponsePlan" class="" data-risk-id="@Model.SelectedRisk">
    <td class="tree">
        <span class="high50"></span>
        <span class="selected topZero"></span>
    </td>
    <td class="text-left maxw170">
        @Confluence.InputDropDownMulti(string.Format("Risks[{0}].ResponsePlanActivity[{1}].ManagementStrategyValues", i, l),
                                  Html.BuildMultiSelectItemList(Model.RiskManagementStrategy, m => m.Text, m => m.Value), required: false,
                                  values: string.Join(",", Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy.Select(x => x.ManagementStrategyId)), width: "100%", maxHeight: "60px",
                                  dataAttributes: new Dictionary<string, string>() { { "name", "mddlManagementStrategy" }, { "id", "mddlManagementStrategy_" + activityId } }, htmlClass: "maxw300")
        @Html.HiddenFor(model => Model.Risks[i].ResponsePlanActivity[l].ActivityId)
        @Html.HiddenFor(model => Model.Risks[i].ResponsePlanActivity[l].ActivityCode)
    </td>
    <td class="text-left">
        @Confluence.InputTextArea(Model.Risks[i].ResponsePlanActivity[l].ActivityDescription, string.Format("Risks[{0}].ResponsePlanActivity[{1}].ActivityDescription", i, l),
                        id: string.Format("Risks_{0}__ResponsePlanActivity_{1}__ActivityDescription", i, l),
                        width: "100%", maxLength: 2000,
                        dataAttributes: new Dictionary<string, string>() { { "name", "activityDescription" }, { "id", "activityDescription_" + activityId } })
    </td>
    <td colspan="3">
        @Confluence.InputDropDown(Model.Risks[i].ResponsePlanActivity[l].ActvityStatusId.ToString(),
                      string.Format("Risks[{0}].ResponsePlanActivity[{1}].ActvityStatusId", i, l),
                      Html.BuildSelectItemList(Model.ActivityStatus, m => m.Text, m => m.Value), width: "100%", required: false,
                      dataAttributes: new Dictionary<string, string>() { { "name", "ddlActivityStatus" }, { "id", "ddlActivityStatus_" + activityId } })
    </td>
    <td align="center">
        @Confluence.ButtonShowRow()
    </td>
    <td>
        @Confluence.ButtonTrash(string.Empty, action: "deleteActivity", name: "btnDeleteAcitivty", required: false)
    </td>
</tr>
<tr data-row-parent-id="@guidActiviy" data-description="secondRowResponsePlan">
    <td class="tree"></td>
    <td colspan="7">
        <div class="col-md-4">
            @Confluence.Label(Localization.GetText("RISK.TRIGGER.EVENT.OR.MILESTONE"))
            <br />
            @Confluence.InputText(Model.Risks[i].ResponsePlanActivity[l].TriggerEventOrMilestone,
                         string.Format("Risks[{0}].ResponsePlanActivity[{1}].TriggerEventOrMilestone", i, l),
                         id: string.Format("Risks_{0}__ResponsePlanActivity_{1}__TriggerEventOrMilestone", i, l),
                         maxLength: 1000, required: false,
                         dataAttributes: new Dictionary<string, string>() { { "name", "expectedActDate" }, { "id", "expectedActDate_" + Model.Risks[i].ResponsePlanActivity[l].ActivityId.ToString() } }, width: "100%")
        </div>
        <div class="col-md-4">
            @Confluence.Label(Localization.GetText("RISK.BUDGET"))
            <br />
            @Confluence.InputDecimal(Model.Risks[i].ResponsePlanActivity[l].Budget, string.Format("Risks[{0}].ResponsePlanActivity[{1}].BudgetStr", i, l),
                               id: string.Format("Risks[{0}].ResponsePlanActivity[{1}].BudgetStr", i, l), required: false, width: "100%", decimalPrecision: 0,
                               dataAttributes: new Dictionary<string, string>() { { "name", "budgetActivity" }, { "id", "budgetActivity_" + activityId } })
        </div>
        <div class="col-md-4">
            @Confluence.Label(Localization.GetText("RISK.RESPONSIBLE"))
            <br />
            @Confluence.InputText(Model.Risks[i].ResponsePlanActivity[l].Responsible, string.Format("Risks[{0}].ResponsePlanActivity[{1}].Responsible", i, l), id:
                                                                    string.Format("Risks[{0}].ResponsePlanActivity[{1}].Responsible", i, l), maxLength: 1000, required: false, width: "100%",
                                                                    dataAttributes: new Dictionary<string, string>() { { "name", "responsibleActivity" }, { "id", "responsibleActivity_" + activityId } })
        </div>
        <div>
        </div>
    </td>
</tr>
<tr data-row-parent-id="@guidActiviy" data-description="thirdRowResponsePlan">
    <td class="tree"></td>
    <td colspan="7">
        <div class="col-md-4">
            @Confluence.Label(Localization.GetText("RISK.CURRENT.COMPLETION.DATE"))
            <br />
            @Confluence.InputDatePicker(Model.Risks[i].ResponsePlanActivity[l].CurrentCompletationDate,
                                                                string.Format("Risks[{0}].ResponsePlanActivity[{1}].CurrentCompletationDate", i, l),
                                                                id: string.Format("Risks_{0}__ResponsePlanActivity_{1}__CurrentCompletationDate", i, l),
                                                                dataAttributes: new Dictionary<string, string>() { { "name", "completionDateActv" }, { "id", "completionDateActv_" + activityId } }, required: false, width: "100%")
        </div>
        <div class="col-md-4">
            @Confluence.Label(Localization.GetText("RISK.FUNDING.SOURCE"))
            <br />
            @Confluence.InputDropDown(Model.Risks[i].ResponsePlanActivity[l].FundingSourceId.ToString(),
                                  string.Format("Risks[{0}].ResponsePlanActivity[{1}].FundingSourceId", i, l),
                                  Html.BuildSelectItemList(Model.RiskFundingSource, m => m.Text, m => m.Value), width: "100%", required: false,
                                  dataAttributes: new Dictionary<string, string>() { { "name", "ddlFundingSource" }, { "id", "ddlFundingSource_" + activityId } })
        </div>
        <div class="col-md-4">
            @Confluence.Label(Localization.GetText("RISK.INSTITUTION"))
            <br />
            @Confluence.InputText(Model.Risks[i].ResponsePlanActivity[l].Institution,
                                 string.Format("Risks[{0}].ResponsePlanActivity[{1}].Institution", i, l),
                                 id : string.Format("Risks_{0}__ResponsePlanActivity_{1}__Institution", i, l), required: false, width: "100%", maxLength: 2000,
                                 dataAttributes: new Dictionary<string, string>() { { "name", "institutioneActv" }, { "id", "institutioneActv_" + activityId } })
        </div>
        <div>
        </div>
    </td>
</tr>
<tr data-row-parent-id="@guidActiviy" data-description="quarterRowResponsePlan">
    <td class="tree"></td>
    <td colspan="7">
        <div class="col-md-8"></div>
        <div class="col-md-4">
            @{
                var it = Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy.FirstOrDefault();

                if (it == null)
                {
                    <div id="riskJustificationOutputs_@activityId" style="display:none;">
                        @Confluence.Label(Localization.GetText("RISK.ACTIVITY.JUSTIFICATION"))
                        <br />
                        @Confluence.InputTextArea(Model.Risks[i].ResponsePlanActivity[l].Justification,
                                                                                    string.Format("Risks[{0}].ResponsePlanActivity[{1}].Justification", i, l),
                                                                                    string.Format("Model.Risks_{0}__ResponsePlanActivity_{1}__Justification", i, l), width: "100%", required: false, height: "100px", maxLength: 2000,
                                                                                    dataAttributes: new Dictionary<string, string>() { { "name", "justificationActv" }, { "id", "justificationActv_" + activityId } })
                    </div>
                }
                else
                {
                    if (it.ManagementStrategyId == Model.IdAcceptStatus)
                    {
                        <div id="riskJustificationOutputs_@activityId">
                            @Confluence.Label(Localization.GetText("RISK.ACTIVITY.JUSTIFICATION"))
                            <br />
                            @Confluence.InputTextArea(Model.Risks[i].ResponsePlanActivity[l].Justification,
                                                                                       string.Format("Risks[{0}].ResponsePlanActivity[{1}].Justification", i, l),
                                                                                       string.Format("Model.Risks_{0}__ResponsePlanActivity_{1}__Justification", i, l), width: "100%", required: true, height: "100px", maxLength: 2000,
                                                                                       dataAttributes: new Dictionary<string, string>() { { "name", "justificationActv" }, { "id", "justificationActv_" + activityId } })
                        </div>
                    }
                    else
                    {
                        <div id="riskJustificationOutputs_@activityId" style="display:none;">
                            @Confluence.Label(Localization.GetText("RISK.ACTIVITY.JUSTIFICATION"))
                            <br />
                            @Confluence.InputTextArea(Model.Risks[i].ResponsePlanActivity[l].Justification,
                                                                                       string.Format("Risks[{0}].ResponsePlanActivity[{1}].Justification", i, l),
                                                                                       string.Format("Model.Risks_{0}__ResponsePlanActivity_{1}__Justification", i, l), width: "100%", required: false, height: "100px", maxLength: 2000,
                                                                                       dataAttributes: new Dictionary<string, string>() { { "name", "justificationActv" }, { "id", "justificationActv_" + activityId } })
                        </div>
                    }
                }
            }
        </div>
    </td>
</tr>