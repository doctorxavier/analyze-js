@using System.Web.Mvc.Html

@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.Helpers
@using IDB.Presentation.MVC4.Areas.RisksMatrix.Models

@model RiskMatrixViewModel

@{
    var selected = Model.Risks.Where(n => n.RiskId == 0 && n.CodeGuid == null).FirstOrDefault();
    int i = Model.Risks.IndexOf(selected);
    var guid = Guid.NewGuid();
    Model.Risks[i].CodeGuid = guid.ToString();
}

        <tr data-id="@guid" class="notCollapse customRowEven" data-desc="firstRowRisk" id="newRisk">
            <td class="tree icon">@RiskMatrixHelpers.ButtonShowRowExpandRiskMatrix(true, "", "selected topZero highZero", true)</td>
            <td class="text-right">
                @Html.HiddenFor(model => model.Risks[i].RiskId)
                @Html.HiddenFor(model => model.Risks[i].CodeGuid)
                @Html.HiddenFor(model => model.Risks[i].OperationRisksId)
                @Html.HiddenFor(model => model.Risks[i].RiskCode)
                @Model.Risks[i].RiskCode.ToString()
            </td>
            <td class="text-center">
            </td>
            <td class="text-center">
                @Model.Risks[i].OperationNumberForRisk
                @Html.HiddenFor(model => Model.Risks[i].OperationNumberForRisk)
            </td>
            <td class="text-left">
                @Confluence.InputDropDown(Model.Risks[i].RiskStatus.StatusId.ToString(), string.Format("Risks[{0}].RiskStatus.StatusId", i), Html.BuildSelectItemList(Model.RiskStatus, m => m.Text, m => m.Value), width: "110px", dataAttributes: new Dictionary<string, string>() { { "name", "ddlistStatus" }, { "id", "ddlistStatus_" + guid.ToString() } })
            </td>
            <td class="text-left" title="@Localization.GetText("RISK.RISK.DESCRIPTION.INFORMATION")">
                @Confluence.InputText(null, string.Format("Risks[{0}].Description", i), id: string.Format("Risks_{0}__Description", i), width: "100%", maxLength: 2000)
            </td>
            <td class="text-left">
                @Confluence.InputDropDown(Model.Risks[i].Probability.Description.ToString(), string.Format("Risks[{0}].Probability.Description", i), Html.BuildSelectItemList(Model.RiskProbability, m => m.Text, m => m.Value), width: "110px", dataAttributes: new Dictionary<string, string>() { { "name", "ddlistProbability" } })
            </td>
            <td class="text-left">
                @Confluence.InputDropDown(Model.Risks[i].Impact.Description.ToString(), string.Format("Risks[{0}].Impact.Description", i), Html.BuildSelectItemList(Model.RiskImpact, m => m.Text, m => m.Value), width: "110px", dataAttributes: new Dictionary<string, string>() { { "name", "ddlistImpact" } })
            </td>
            <td class="text-left">
                @Confluence.Label(Model.Risks[i].LevelName, dataAttributes: new Dictionary<string, string>() { { "name", guid.ToString() + "_RiskLevel" } })
            </td>
            <td class="text-left">
                @Confluence.InputDropDown(Model.Risks[i].TypeId.ToString(), string.Format("Risks[{0}].TypeId", i), Html.BuildSelectItemList(Model.RiskType, m => m.Text, m => m.Value), width: "110px", dataAttributes: new Dictionary<string, string>() { { "name", "ddlistTaxonomy" } })
            </td>
            <td align="center">
                @Confluence.ButtonShowRow()
            </td>
            <td class="text-center">
                @Confluence.ButtonTrash(string.Empty, action: "deleteRisk", name: "btnDeleteRisk", required: false)
            </td>
        </tr>
        <tr data-row-parent-id="@guid" id="secondRowRisk" data-desc="secondRowRisk" data-id="secondLineNewRisk">
            <td id="lastRowRiskSubLevel" class="tree"></td>
            <td colspan="11" class="subnivel pl0 pr0 pt0 pb0">
                <div>
                    <table class="tableNormal">
                        <tbody>
                            <tr class="notCollapse">
                                <td colspan="3" class="text-left maxw200">
                                    @Confluence.Label(Localization.GetText("RISK.OUTPUT"))
                                    <br />
                                    @Confluence.InputDropDownMulti(string.Format("Risks[{0}].OutputValue", i), Html.BuildMultiSelectItemList(Model.OutPuts, m => m.Text, m => m.Value), required: false, values: string.Join(",", Model.Risks[i].Output.Select(o => o.OutputId)), width: "100%", maxHeight: "100px")
                                </td>
                                <td colspan="4" class="text-left maxw150">
                                    @Confluence.Label(Localization.GetText("RISK.SOURCE.RISK"))
                                    <br />
                                    @Confluence.InputDropDown(Model.Risks[i].SourceRiskId.ToString(), string.Format("Risks[{0}].SourceRiskId", i), Html.BuildSelectItemList(Model.RiskProbabilityFactor, m => m.Text, m => m.Value), width: "100%", required: false, dataAttributes: new Dictionary<string, string>() { { "name", "ddlProbabilyFactor" } })
                                </td>
                                <td colspan="3" class="text-left maxw200">
                                    @Confluence.Label(Localization.GetText("RISK.TYPE.IMPACT"))
                                    <br />
                                    @Confluence.InputDropDownMulti(string.Format("Risks[{0}].RiskTypeImpactValue", i), Html.BuildMultiSelectItemList(Model.ImpactScope, m => m.Text, m => m.Value), width: "100%", maxHeight: "100px", required: false, values: string.Join(",", Model.Risks[i].RiskTypeImpact.Select(o => o.RiskTypeImpactId)), dataAttributes: new Dictionary<string, string>() { { "name", "ddlTypeImpact" } })
                                </td>
                            </tr>
                            <tr class="notCollapse">
                                <td colspan="3" class="text-left maxw200" style="vertical-align:baseline">
                                    @Confluence.Label(Localization.GetText("RISK.OUTCOMES"))
                                    <br />
                                    @Confluence.InputDropDownMulti(string.Format("Risks[{0}].OutcomeValue", i), Html.BuildMultiSelectItemList(Model.OutComes, m => m.Text, m => m.Value), required: false, values: string.Join(",", Model.Risks[i].Outcome.Select(o => o.OutcomeId)), width: "100%", maxHeight: "100px")
                                </td>
                                <td colspan="4" class="text-left">
                                    @Confluence.Label(Localization.GetText("RISK.CAUSES"))
                                    <br />
                                    @Html.TextAreaFor(model => Model.Risks[i].Causes, new { @class = "inputTextarea", style = "width:100%;height:100px;overflow-y:auto;", maxLength = 2000 })
                                </td>
                                <td colspan="3" class="text-left">
                                    @Confluence.Label(Localization.GetText("RISK.PROBABILITY.FACTOR"))
                                    <br />
                                    @Html.TextAreaFor(model => model.Risks[i].ProbabilyFactor, new { @class = "inputTextarea", style = "width:100%;height:100px;overflow-y:auto;", maxLength = 2000 })
                                </td>
                            </tr>
                            <tr class="notCollapse">
                                <td colspan="3" class="text-left maxw200">
                                    @Confluence.Label(Localization.GetText("RISK.DESCRIPTION.IMPACT"))
                                    <br />
                                    @Html.TextAreaFor(model => model.Risks[i].DescriptionImpact, new { @class = "inputTextarea", style = "width:100%;height:100px;overflow-y:auto;", maxLength = 2000 })
                                </td>
                                <td colspan="4" class="text-left">
                                    
                                </td>
                                <td colspan="3" class="text-left">
                                    <div id="riskJustification_@guid" style="display:none">
                                        @Confluence.Label(Localization.GetText("RISK.JUSTIFICATION"))
                                        @Confluence.LabelAsterisk()
                                        <br />
                                        @Confluence.InputTextArea(Model.Risks[i].Justification, string.Format("Risks[{0}].Justification", i), required: false, maxLength: 2000, width: "100%", height: "100px")
                                    </div>
                                </td>
                                <td colspan="3"></td>
                            </tr>
                            <tr class="notCollapse">
                                <td colspan="3" class="text-left"></td>
                                <td colspan="4" class="text-left"></td>
                                <td class="text-left" colspan="3"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
        <tr data-risk-id="@guid" id="secondRowRisk" data-row-response-plan="@guid" data-risk-line="thirdLineNewRisk" class="hide">
            <td id="lastTdRisk" data-description="firtTdResponsePlan"></td>
            <td colspan="10" class="subnivel">
                <div class="mb20 notShowResponsePlan" id="divResponsePlan_@guid" >
                    <table id="tblActivity_@guid" class="tableNormal skinLigthBlue tblRiskResponsePlan">
                        <thead>
                            @Confluence.LabelBold(Localization.GetText("RISK.RESPONSE.ACTION"), htmlClass: "tittleResponsePlan")
                            <tr>
                                <th class="tree icon">@RiskMatrixHelpers.ButtonExpandTableRiskMatrix()</th>
                                <th width="15%">@Localization.GetText("RISK.MANAGEMENT.STRATEGY")</th>
                                <th colspan="3">@Localization.GetText("RISK.ACTIVITY.DESCRIPTION")</th>
                                <th width="12%">@Localization.GetText("RISK.ACTIVITY.STATUS")</th>
                                <th width="4%">@Localization.GetText("RISK.DETAILS")</th>
                                <th width="4%">@Localization.GetText("RISK.ACTIONS")</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="col-md-12 mb10 mt10" align="center" id="buttonAdNewAcitivty">
            @Confluence.ButtonAddNewRows(Localization.GetText("RISK.ADD.ACTIVITY"), "tblActivity_" + @guid, name: "btnAddActivity", action: "addNewRowActivity", htmlClass: "")
                </div>
            </td>
            @Confluence.InputHidden(null, name: string.Format("Risks[{0}].DescriptionIssue", i), id: string.Format("Risks_0__.DescriptionIssue", i), dataAttributes: new Dictionary<string, string>() { { "description-issue", guid.ToString() } }, required: false)
        </tr>