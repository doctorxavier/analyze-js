@using System.Web.Mvc.Html

@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.Areas.RiskMatrix.Models
@using IDB.Presentation.MVC4.Helpers

@model RiskMaterializedViewModel
@{ 
    int i = Model.MaterializedRisks.IndexOf(Model.MaterializedRisks.Last());
    var guid = Guid.NewGuid();
}
<tr data-id="@guid">
    <td align="right">
        @Confluence.LabelBold(Model.MaterializedRisks[i].MaterializedCode.ToString())
        @Html.HiddenFor(model => Model.MaterializedRisks[i].MaterializedCode)
        @Html.HiddenFor(model => Model.MaterializedRisks[i].MaterializedId)
    </td>
    <td align="left">        
        @Confluence.InputTextArea(Model.MaterializedRisks[i].Description, string.Format("MaterializedRisks[{0}].Description", i), string.Format("MaterializedRisks_{0}__Description", i), width: "100%", required: true, maxLength: 2000)
    </td>
    <td align="center">
        <button class="buttonShowRow" onclick="CollapseRowTable(this)" type="button">
            <span class="caret"></span>
        </button>
    </td>
    <td>
        @Confluence.ButtonTrash(string.Empty, action: "deleteMaterialized", name: "btnDeleteMaterialized", required: false)
    </td>
</tr>
@*Hidden Expandable area*@
<tr data-row-parent-id="@guid">
    <td colspan="4">
        <div id="materizalizedDetail_@guid" class="col-md-12 mb10">
            <div class="col-md-4">
                @Confluence.Label(Localization.GetText("RISK.ASSOCIATED.RISK"))
                <br />
                @Confluence.LabelBold(Model.MaterializedRisks[i].RiskId.ToString())
                @Html.HiddenFor(model => Model.MaterializedRisks[i].RiskId)
            </div>
            <div class="col-md-4">
                @Confluence.Label(Localization.GetText("RISK.ACTIONS.MATERIALIZED"))
                <br />
                @Confluence.InputTextArea(Model.MaterializedRisks[i].Actions, string.Format("MaterializedRisks[{0}].Actions", i), string.Format("MaterializedRisks_{0}__Actions", i), width: "100%", required: false, height: "100px", maxLength: 2000)
            </div>
            <div class="col-md-4">
                @Confluence.Label(Localization.GetText("RISK.ISSUE.EXPECTED.COMPLETION.DATE"))
                <br />
                @Confluence.InputDatePicker(Model.MaterializedRisks[i].ExpectedCompletationDate, name: string.Format("MaterializedRisks[{0}].ExpectedCompletationDate", i), id: string.Format("MaterializedRisks_{0}__ExpectedCompletationDate", i), required: false)
            </div>
        </div>
        <div id="materizalizedDetail_@guid" class="col-md-12 mb10">
            <div class="col-md-4">
                @Confluence.Label(Localization.GetText("RISK.OPERATION.IMPACT"))
                <br />
                @Html.TextAreaFor(model => model.MaterializedRisks[i].OperationImpact, new { @class = "inputTextarea", style = "width:100%;height:100px;overflow-y:auto;", maxLength = 2000 })
            </div>
            <div class="col-md-4">

            </div>
            <div class="col-md-4">
                @Confluence.Label(Localization.GetText("RISK.ISSUE.CURRENT.COMPLETION.DATE"))
                <br />
                @Confluence.InputDatePicker(Model.MaterializedRisks[i].CurrentCompletationDate, name: string.Format("MaterializedRisks[{0}].CurrentCompletationDate", i), id: string.Format("MaterializedRisks_{0}__CurrentCompletationDate", i), required: false)
            </div>
        </div>
        <div id="materizalizedDetail_@guid" class="col-md-12 mb10">
            <div class="col-md-12">
                @Confluence.Label(Localization.GetText("RISK.QUESTION"))
                <br />
                @Html.TextAreaFor(model => model.MaterializedRisks[i].Question, new { @class = "inputTextarea", style = "width:100%;height:100px;overflow-y:auto;", maxLength = 2000 })
            </div>
        </div>
        <div id="materizalizedDetail_@guid" class="col-md-12 mb10">
            <div class="col-md-4">
                @Confluence.InputCheckbox(Model.MaterializedRisks[i].FindingsRecommendations, value: true, name: string.Format("MaterializedRisks[{0}].FindingsRecommendations", i), id: string.Format("MaterializedRisks_{0}__FindingsRecommendations", i), label: Localization.GetText("RISK.FINDINGS.RECOMMENDATION"), htmlClass: "riskMaterializedOptionsSectionSelector", dataAttributes: new Dictionary<string, string> { { "issueId", @guid.ToString() }, { "validateFr", "False"} })
                @{
                    var display = Model.MaterializedRisks[i].FindingsRecommendations == true ? "block" : "none";
                }
            </div>
            <div class="col-md-4">
                <div id="riskMaterializedDelay_@guid" style="display:@display">
                    @Confluence.InputCheckbox(Model.MaterializedRisks[i].Causes, value: true, name: string.Format("MaterializedRisks[{0}].Causes", i), id: string.Format("MaterializedRisks_{0}__Causes", i), label: Localization.GetText("RISK.CAUSED.DELAY"))
                </div>
            </div>
            <div class="col-md-4">

            </div>
        </div>       
        <div id="riskMaterializedOptionsSection_@guid" style="display:@display" class="col-md-12 mt10">
            <div class="col-md-4">
                <div class="mb10">@Confluence.Label(Localization.GetText("RISK.STAGE"))</div>
                @Confluence.InputDropDown(Model.MaterializedRisks[i].StageId.ToString(),string.Format("MaterializedRisks[{0}].StageId", i), Html.BuildSelectItemList(Model.Stages, m => m.Text, m => m.Value), width: "100%", dataAttributes: new Dictionary<string, string>() { { "name", "ddlMaterializedStages" } }, required: false)
            </div>
            <div class="col-md-8" id="frCategories">
                <div>@Confluence.Label(Localization.GetText("RISK.CATEGORY"))</div>
                @Html.HiddenFor(model => Model.MaterializedRisks[i].FindingRecommendationVM.FindingRecommendationId)
                @Html.HiddenFor(model => Model.MaterializedRisks[i].FindingRecommendationId)
                @{ int count = 0;}
                @for (int j = 0; j < Model.MaterializedCategoryTitles.Count; j++)
                {
                    <div class="col-md-6 mt10">
                        @Confluence.LabelBold(Model.MaterializedCategoryTitles[j].NameEn)
                        @{ var childCategories = Model.MaterializedRisks[i].FindingRecommendationVM.CategoriesRelated.Where(p => p.ParentId == Model.MaterializedCategoryTitles[j].MasterDataId).ToList();}
                        @for (int k = 0; k < childCategories.Count(); k++)
                        {
                            <br />
                            @Confluence.InputCheckbox(childCategories[k].Selected, string.Format("MaterializedRisks[{0}].FindingRecommendationVM.CategoriesRelated[{1}].Selected", i, count), string.Format("MaterializedRisks_{0}__FindingRecommendationVM.CategoriesRelated_{1}__Selected", i, count), value: true, forceValidation: true, label: childCategories[k].CategoryName, dataAttributes: new Dictionary<string, string>() { { "id", Model.MaterializedRisks[i].FindingRecommendationVM.CategoriesRelated[count].CategoryId.ToString() } })
                            @Html.HiddenFor(model => Model.MaterializedRisks[i].FindingRecommendationVM.CategoriesRelated[count].CategoryId)
                            count++;
                        }
                    </div>
                }
            </div>

        </div>

    </td>
</tr>