@using System.Configuration
@using System.Web.Mvc.Html
@using IDB.Presentation.MVC4.MVCExtensions

@using IDB.Architecture.Language
@using IDB.Presentation.MVC4.Areas.RisksMatrix.Models

@model RiskMatrixViewModel

@{
    List<string> tables = new List<string>();
    for (int i = 0; i < Model.Risks.Count; i++)
    {
        tables.Add(string.Format("tblRisk-{0}", i));
    }
}

@Html.Partial("~/Areas/RiskMatrix/Views/Modals/RiskMatrixEditModals.cshtml", Model)

@using (Ajax.BeginForm("Edit", "RiskMatrix", new { operationNumber = Model.OperationNumber }, new AjaxOptions() { UpdateTargetId = "mainLayoutOperationContent", HttpMethod = "Post", OnComplete = "riskMatrixAjaxOnComplete", OnBegin = "riskMatrixAjaxOnBegin", OnFailure = "riskMatrixAjaxOnFailure" }, new { id = "frmRiskMatrixViewMode" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.OperationNumber)
    @Html.HiddenFor(model => model.IsEdit)
    @Html.HiddenFor(model => model.OperationRiskId)
    @Html.HiddenFor(model => model.StrAccept)
    @Html.HiddenFor(model => model.IdMaterialized)
    @Html.HiddenFor(model => model.IdCompletedStatus)
    @Html.HiddenFor(model => model.CodeStatusHigh)
    @Html.HiddenFor(model => model.CodeStatusMediumHigh)
    @Html.HiddenFor(model => model.CodeStatusMediumLow)
    @Html.HiddenFor(model => model.CodeStatusLow)
    @Html.HiddenFor(model => model.CodeStatusMedium)

    <div class="col-md-10 mt10">
        <h2 class="titlePrincipal">@Localization.GetText("RISK.TITLE")</h2>
    </div>
    <div class="col-md-2 mt10">
        @if (SecureControlHelper.IsAuthorizedControl(Model.ScreenSecurity.PageName, "btnRiskMatrixEdit", Model.ScreenSecurity.Security) && Model.IsEditableRiskMatrix)
        {
            <button class="buttonBlue pull-right mr0" type="submit" id="btnRiskMatrixEdit">@Localization.GetText("RISK.EDIT")</button>
        }
    </div>

    @Html.Partial("~/Areas/RiskMatrix/Views/Partials/RiskHeader.cshtml", Model.HeaderInfo)
    @Html.HiddenFor(model => model.HeaderInfo.PmrCycle)
    @Html.HiddenFor(model => model.HeaderInfo.EsgClassfication)
    @Html.HiddenFor(model => model.HeaderInfo.PmrValidationStage)
    for (int i = 0; i < Model.HeaderInfo.ExecutingAgencies.Count; i++)
    {
        @Html.HiddenFor(model => model.HeaderInfo.ExecutingAgencies[i])
    }

    @Html.HiddenFor(model => model.HeaderInfo.LastUpdatedRisk)
    @Html.HiddenFor(model => model.HeaderInfo.PmrValidatedClassification)
    @Html.HiddenFor(model => model.HeaderInfo.SafeguardPerformance)

    <div class="col-md-12">
        @if (SecureControlHelper.IsAuthorizedControl(Model.ScreenSecurity.PageName, "btnExcel", Model.ScreenSecurity.Security))
        {
            @Confluence.ButtonExcel("btnExcel", "ExportFileRiskReport", clase: "pull-right mr0", dataAttributes: new Dictionary<string, string> { { "fileType", "xls" } })
        }
        @if (SecureControlHelper.IsAuthorizedControl(Model.ScreenSecurity.PageName, "btnWord", Model.ScreenSecurity.Security))
        {
            @Confluence.ButtonWord("btnWord", "ExportFileRiskReport", clase: "pull-right mr0", dataAttributes: new Dictionary<string, string> { { "fileType", "doc" } })
        }
        @if (SecureControlHelper.IsAuthorizedControl(Model.ScreenSecurity.PageName, "btnPDF", Model.ScreenSecurity.Security))
        {
            @Confluence.ButtonPdf("btnPDF", "ExportFileRiskReport", clase: "pull-right", dataAttributes: new Dictionary<string, string> { { "fileType", "pdf" } })
        }
    </div>
    <div class="col-md-12">
        <ul class="tabs">
            <li class="active">
                @Ajax.ActionLink(Localization.GetText("RISK.MATRIX.TAB"), "Index", "RiskMatrix", new { operationNumber = Model.OperationNumber }, new AjaxOptions { UpdateTargetId = "mainLayoutOperationContent", OnComplete = "riskMatrixAjaxOnComplete", OnBegin = "riskMatrixAjaxOnBegin", OnFailure = "riskMatrixAjaxOnFailure" }, new { })
            </li>
            <li>
                @Ajax.ActionLink(@Localization.GetText("RISK.MATERIALIZED.TAB"), "Index", "Materialized", new { operationNumber = Model.OperationNumber }, new AjaxOptions { UpdateTargetId = "mainLayoutOperationContent", OnComplete = "riskMatrixAjaxOnComplete", OnBegin = "riskMatrixAjaxOnBegin", OnFailure = "riskMatrixAjaxOnFailure" }, new { })
            </li>
        </ul>
    </div>

    <div class="col-md-12">
        <div class="col-md-3">
            @Confluence.LabelBold(Localization.GetText("RISK.MATRIX.TITLE"))
        </div>
        <div class="col-md-9">
            <div class="floatRight">
                @RiskMatrixHelpers.ButtonColapseAllRiskMatrix(new List<string> { "tblRisk" }, isCollapsed: true)
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <table id="tblRisk" class="tableNormal">
            <thead>
                <tr>
                    <th class="noBackground"></th>
                    <th class="sort" order-type="numeric" width="10%">@Localization.GetText("RISK.RISK.ID")</th>
                    <th class="sort maxw50" width="10%">@Localization.GetText("RISK.MATRIX.ICONO.HEAD")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.OPERATION.NUMBER")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.RISK.STATUS")</th>
                    <th class="sort" width="20%">@Localization.GetText("RISK.RISK.DESCRIPTION")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.PROBABILITY")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.IMPACT")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.RISK.LEVEL")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.RISK.TAXONOMY")</th>
                    <th width="5%">@Localization.GetText("RISK.DETAILS")</th>
                    <th width="5%">@Localization.GetText("RISK.ACTIONS")</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Risks.Count; i++)
                {

                    bool lastRowRisk = default(bool);
                    if (i + 1 == Model.Risks.Count)
                    {
                        lastRowRisk = true;
                    }


                    <tr data-id="@Model.Risks[i].RiskId" class="notCollapse">
                        @{
                            if (lastRowRisk)
                            {
                                if (Model.Risks[i].ResponsePlanActivity.Count > 0)
                                {
                                    <td class="tree icon">@RiskMatrixHelpers.ButtonShowRowExpandRiskMatrix(false, "", "selected topZero highZero", true)</td>
                                }
                                else
                                {
                                    <td class="tree"><span class="high50 lineRisksImportant"></span><span class="selected topZero lineRisksImportant"></span></td>
                                }

                            }
                            else
                            {
                                if (Model.Risks[i].ResponsePlanActivity.Count > 0)
                                {
                                    <td class="noBackground tree icon">@RiskMatrixHelpers.ButtonShowRowExpandRiskMatrix(false)</td>
                                }
                                else
                                {
                                    <td class="tree"><span class="lineRisksImportant"></span><span class="selected lineRisksImportant"></span></td>
                                }

                            }
                        }
                        <td class="text-right">
                            @Html.HiddenFor(model => model.Risks[i].RiskId)
                            @Html.HiddenFor(model => model.Risks[i].OperationRisksId)
                            @Html.HiddenFor(model => model.Risks[i].RiskCode)
                            @Html.HiddenFor(model => model.Risks[i].IsValidated)
                            @Html.HiddenFor(model => model.Risks[i].IsCriticalPath)
                            @Model.Risks[i].RiskCode.ToString()
                        </td>
                        <td class="text-center">
                            @{
                                if (Model.Risks[i].IsCriticalPath)
                                {
                                    @Confluence.Information()
                                }
                            }
                        </td>
                        <td class="text-center">
                            @Model.Risks[i].OperationNumberForRisk
                            @Html.HiddenFor(model => model.Risks[i].OperationNumberForRisk)
                        </td> @*Reemplazar por el numero de operación*@
                        <td class="text-left">
                            @Model.Risks[i].RiskStatus.StatusName
                            @Html.HiddenFor(model => model.Risks[i].RiskStatus.RiskStatusId)
                            @Html.HiddenFor(model => model.Risks[i].RiskStatus.StatusId)
                            @Html.HiddenFor(model => model.Risks[i].RiskStatus.Description)
                            @Html.HiddenFor(model => model.Risks[i].RiskStatus.StatusName)
                        </td> @*Reemplazar por status del text*@
                        <td class="text-left" title="@Localization.GetText("RISK.RISK.DESCRIPTION.INFORMATION")">
                            @Model.Risks[i].Description
                            @Html.HiddenFor(model => model.Risks[i].Description)
                        </td>
                        <td class="text-left">
                            @Model.Risks[i].ProbabilityName
                            @Html.HiddenFor(model => model.Risks[i].ProbabilityName)
                            @Html.HiddenFor(model => model.Risks[i].Probability.Value)
                            @Html.HiddenFor(model => model.Risks[i].Probability.RiskMeasureId)
                            @Html.HiddenFor(model => model.Risks[i].Probability.Description)
                        </td>
                        <td class="text-left">
                            @Model.Risks[i].ImpactName
                            @Html.HiddenFor(model => model.Risks[i].Impact.Value)
                            @Html.HiddenFor(model => model.Risks[i].Impact.RiskMeasureId)
                            @Html.HiddenFor(model => model.Risks[i].Impact.Description)
                        </td>
                        <td class="text-left">
                            @{
                                switch (Model.Risks[i].RiskLevelClass)
                                {
                                    case "statusHigh":
                                        @Confluence.CircleRed()
                                        break;
                                    case "statusMedHigh":
                                        @Confluence.CircleOrange()
                                        break;
                                    case "statusMedlow":
                                        @Confluence.CircleYellow()
                                        break;
                                    case "statuslow":
                                        @Confluence.CircleGreen()
                                        break;
                                }
                            }

                            @Model.Risks[i].LevelName
                            @Html.HiddenFor(model => model.Risks[i].LevelName)
                            @Html.HiddenFor(model => model.Risks[i].LevelValue)
                            @Html.HiddenFor(model => model.Risks[i].LevelCode)
                            @Html.HiddenFor(model => model.Risks[i].RiskLevelClass)
                        </td>
                        <td class="text-left">
                            @Model.Risks[i].TypeValue
                            @Html.HiddenFor(model => model.Risks[i].TypeId)
                            @Html.HiddenFor(model => model.Risks[i].TypeValue)
                        </td>
                        <td align="center">
                            @Confluence.ButtonShowRow()
                        </td>
                        <td class="text-center"></td>
                    </tr>
                    <tr data-row-parent-id="@Model.Risks[i].RiskId" class="">
                        @{
                            if (lastRowRisk)
                            {
                                <td class="tree"></td>
                            }
                            else
                            {

                                <td class="tree"><span></span></td>
                            }
                        }

                        <td colspan="11" class="subnivel pl0 pr0 pt0 pb0">
                            <div>
                                <table class="tableNormal">
                                    <tbody>
                                        <tr class="notCollapse">
                                            <td colspan="3" class="text-left maxw200">
                                                @Confluence.Label(Localization.GetText("RISK.OUTPUT"))
                                                <br />
                                                <ul class="pl15">
                                                    @for (int j = 0; j < Model.Risks[i].Output.Count; j++)
                                                    {
                                                        <li>
                                                            @Confluence.LabelBold(Model.Risks[i].Output[j].Definition)
                                                        </li>
                                                        @Html.HiddenFor(model => model.Risks[i].Output[j].OutputId)
                                                        @Html.HiddenFor(model => model.Risks[i].Output[j].Definition)
                                                    }
                                                </ul>
                                            </td>
                                            <td colspan="4" class="text-left">
                                                @Confluence.Label(Localization.GetText("RISK.SOURCE.RISK"))
                                                <br />
                                                @Confluence.LabelBold(@Model.Risks[i].SourceProbabilityValue)
                                                @Html.HiddenFor(model => model.Risks[i].SourceProbabilityValue)
                                                @Html.HiddenFor(model => model.Risks[i].SourceRiskId)
                                            </td>
                                            <td colspan="3" class="text-left">
                                                @Confluence.Label(Localization.GetText("RISK.TYPE.IMPACT"))
                                                <br />
                                                <ul class="pl15">
                                                    @for (int j = 0; j < Model.Risks[i].RiskTypeImpact.Count; j++)
                                                    {
                                                        <li>
                                                            @Confluence.LabelBold(Model.Risks[i].RiskTypeImpact[j].Description)
                                                        </li>
                                                        @Html.HiddenFor(model => model.Risks[i].RiskTypeImpact[j].RiskTypeImpactId)
                                                        @Html.HiddenFor(model => model.Risks[i].RiskTypeImpact[j].Description)
                                                    }
                                                </ul>

                                            </td>
                                        </tr>
                                        <tr class="notCollapse">
                                            <td colspan="3" class="text-left maxw200">
                                                @Confluence.Label(Localization.GetText("RISK.OUTCOMES"))
                                                <br />
                                                <ul class="pl15">
                                                    @for (int k = 0; k < Model.Risks[i].Outcome.Count; k++)
                                                    {
                                                        <li>
                                                            @Confluence.LabelBold(Model.Risks[i].Outcome[k].Statement)
                                                        </li>
                                                        @Html.HiddenFor(model => model.Risks[i].Outcome[k].OutcomeId)
                                                        @Html.HiddenFor(model => model.Risks[i].Outcome[k].Statement)
                                                    }
                                                </ul>
                                            </td>
                                            <td colspan="4" class="text-left">
                                                @Confluence.Label(Localization.GetText("RISK.CAUSES"))
                                                <br />
                                                @Confluence.LabelBold(Model.Risks[i].Causes)
                                                @Html.HiddenFor(model => model.Risks[i].Causes)
                                            </td>
                                            <td colspan="3" class="text-left">
                                                @Confluence.Label(Localization.GetText("RISK.PROBABILITY.FACTOR"))
                                                <br />
                                                @Confluence.LabelBold(Model.Risks[i].ProbabilyFactor)
                                                @Html.HiddenFor(model => model.Risks[i].ProbabilyFactor)
                                            </td>
                                        </tr>
                                        <tr class="notCollapse">
                                            <td colspan="3" class="text-left">
                                                @Confluence.Label(Localization.GetText("RISK.DESCRIPTION.IMPACT"))
                                                <br />
                                                @Confluence.LabelBold(@Model.Risks[i].DescriptionImpact)
                                                @Html.HiddenFor(model => model.Risks[i].DescriptionImpact)

                                            </td>
                                            <td colspan="4" class="text-left"></td>
                                            <td class="text-left" colspan="3">
                                                @if (Model.Risks[i].RiskStatus.StatusId == Model.IdInactiveStatus)
                                                {
                                                    <div>
                                                        @Confluence.Label(Localization.GetText("RISK.JUSTIFICATION"))
                                                        <br />
                                                        @Confluence.LabelBold(Model.Risks[i].Justification)
                                                        @Html.HiddenFor(model => model.Risks[i].Justification)
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="3" class="text-left"></td>
                                            <td colspan="4" class="text-left"></td>
                                            <td class="text-left" colspan="3"></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </td>
                    </tr>
                            if (Model.Risks[i].ResponsePlanActivity.Count > 0)
                            {
                                <tr data-row-response-plan="@Model.Risks[i].RiskId" class="hide">
                                    @{
                                        if (lastRowRisk)
                                        {
                                            <td></td>
                                        }
                                        else
                                        {

                                            <td class="tree"><span></span></td>
                                        }
                                    }
                                    <td colspan="10" class="subnivel">
                                        <div class="mb20">
                                            <table class="tableNormal skinLigthBlue tblRiskResponsePlan" id="tblRiskResponsePlan">
                                                <thead>
                                                    @Confluence.LabelBold(Localization.GetText("RISK.RESPONSE.ACTION"), htmlClass: "tittleResponsePlan")
                                                    <tr>
                                                        <th class="tree icon">@RiskMatrixHelpers.ButtonExpandTableRiskMatrix(isCollapsed: true)</th>
                                                        <th width="15%">@Localization.GetText("RISK.MANAGEMENT.STRATEGY")</th>
                                                        <th colspan="3">@Localization.GetText("RISK.ACTIVITY.DESCRIPTION")</th>
                                                        <th width="10%">@Localization.GetText("RISK.ACTIVITY.STATUS")</th>
                                                        <th width="5%">@Localization.GetText("RISK.DETAILS")</th>
                                                        <th width="5%">@Localization.GetText("RISK.ACTIONS")</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @for (int l = 0; l < Model.Risks[i].ResponsePlanActivity.Count; l++)
                                                    {
                                                        <tr data-id="@Model.Risks[i].ResponsePlanActivity[l].ActivityId" class="">
                                                            @{
                                                                bool lastRow = default(bool);
                                                                if (l + 1 == Model.Risks[i].ResponsePlanActivity.Count)
                                                                {
                                                                    lastRow = true;
                                                                }

                                                                if (lastRow)
                                                                {
                                                                    <td class="tree"><span class="high50"></span><span class="selected topZero"></span></td>
                                                                }
                                                                else
                                                                {
                                                                    <td class="tree"><span></span><span class="selected"></span></td>
                                                                }
                                                            }
                                                            <td class="text-left">
                                                                <ul class="pl15">
                                                                    @for (int j = 0; j < Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy.Count; j++)
                                                                    {
                                                                        <li>
                                                                            @Confluence.Label(Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy[j].Description)
                                                                        </li>
                                                                        @Html.HiddenFor(model => Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy[j].ManagementStrategyId)
                                                                        @Html.HiddenFor(model => Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy[j].RiskActivityId)
                                                                    }
                                                                </ul>

                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].ActivityCode)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].ActivityId)
                                                            </td>
                                                            <td colspan="3" class="text-left">
                                                                @Model.Risks[i].ResponsePlanActivity[l].ActivityDescription
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].ActivityDescription)
                                                            </td>
                                                            <td class="text-left">
                                                                @Confluence.Label(Model.Risks[i].ResponsePlanActivity[l].StatusValue)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].StatusValue)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].ActvityStatusId)
                                                            </td>
                                                            <td align="center">
                                                                @Confluence.ButtonShowRow()
                                                            </td>
                                                            <td></td>
                                                        </tr>
                                                        <tr data-row-parent-id="@Model.Risks[i].ResponsePlanActivity[l].ActivityId">
                                                            @{
                                                                if (lastRow)
                                                                {
                                                                    <td class="tree"></td>
                                                                }
                                                                else
                                                                {
                                                                    <td class="tree"><span></span><span class=""></span></td>
                                                                }
                                                            }
                                                            <td colspan="2" width="35%" class="text-left maxw360">
                                                                @Confluence.Label(Localization.GetText("RISK.TRIGGER.EVENT.OR.MILESTONE"))
                                                                <br />
                                                                @Confluence.LabelBold(Model.Risks[i].ResponsePlanActivity[l].TriggerEventOrMilestone)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].TriggerEventOrMilestone)
                                                            </td>
                                                            <td colspan="1" width="30%" class="text-left">
                                                                @Confluence.Label(Localization.GetText("RISK.BUDGET"))
                                                                <br />
                                                                @Confluence.LabelInteger(Model.Risks[i].ResponsePlanActivity[l].Budget, true)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].Budget)
                                                            </td>
                                                            <td colspan="4" width="35%" class="text-left">
                                                                @Confluence.Label(Localization.GetText("RISK.RESPONSIBLE"))
                                                                <br />
                                                                @Confluence.LabelBold(Model.Risks[i].ResponsePlanActivity[l].Responsible)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].Responsible)
                                                            </td>
                                                        </tr>
                                                        <tr data-row-parent-id="@Model.Risks[i].ResponsePlanActivity[l].ActivityId">
                                                            @{

                                                                if (lastRow)
                                                                {
                                                                    <td class="tree"></td>
                                                                }
                                                                else
                                                                {
                                                                    <td class="tree"><span></span><span class=""></span></td>
                                                                }
                                                            }
                                                            <td colspan="2" class="text-left">
                                                                @Confluence.Label(Localization.GetText("RISK.CURRENT.COMPLETION.DATE"))
                                                                <br />
                                                                @Confluence.LabelGetDate(Model.Risks[i].ResponsePlanActivity[l].CurrentCompletationDate, true)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].CurrentCompletationDate)
                                                            </td>
                                                            <td colspan="1" class="text-left">
                                                                @Confluence.Label(Localization.GetText("RISK.FUNDING.SOURCE"))
                                                                <br />
                                                                @Confluence.LabelBold(Model.Risks[i].ResponsePlanActivity[l].FundingSourceValue)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].FundingSourceValue)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].FundingSourceId)
                                                            </td>
                                                            <td colspan="4" class="text-left">
                                                                @Confluence.Label(Localization.GetText("RISK.INSTITUTION"))
                                                                <br />
                                                                @Confluence.LabelBold(Model.Risks[i].ResponsePlanActivity[l].Institution)
                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].Institution)
                                                            </td>
                                                        </tr>
                                                        <tr data-row-parent-id="@Model.Risks[i].ResponsePlanActivity[l].ActivityId">
                                                            @{

                                                                if (lastRow)
                                                                {
                                                                    <td class="tree"></td>
                                                                }
                                                                else
                                                                {
                                                                    <td class="tree"><span></span><span class="high50"></span></td>
                                                                }
                                                            }
                                                            <td colspan="3"></td>
                                                            <td class="text-left" colspan="4">
                                                                @{
                                                                    var it = Model.Risks[i].ResponsePlanActivity[l].ManagementStrategy.FirstOrDefault();

                                                                    if (it == null)
                                                                    {
                                                                        <div id="riskJustificationOutputs_@Model.Risks[i].ResponsePlanActivity[l].ActivityId" style="display:none;">
                                                                            @Confluence.Label(Localization.GetText("RISK.ACTIVITY.JUSTIFICATION"))
                                                                            <br />
                                                                            @Confluence.LabelBold(Model.Risks[i].Justification)
                                                                            @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].Justification)
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        if (it.ManagementStrategyId == Model.IdAcceptStatus)
                                                                        {
                                                                            <div id="riskJustificationOutputs_@Model.Risks[i].ResponsePlanActivity[l].ActivityId">
                                                                                @Confluence.Label(Localization.GetText("RISK.ACTIVITY.JUSTIFICATION"))
                                                                                <br />
                                                                                @Confluence.LabelBold(Model.Risks[i].ResponsePlanActivity[l].Justification)
                                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].Justification)
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div id="riskJustificationOutputs_@Model.Risks[i].ResponsePlanActivity[l].ActivityId" style="display:none;">
                                                                                @Confluence.Label(Localization.GetText("RISK.ACTIVITY.JUSTIFICATION"))
                                                                                <br />
                                                                                @Confluence.LabelBold(Model.Risks[i].ResponsePlanActivity[l].Justification)
                                                                                @Html.HiddenFor(model => model.Risks[i].ResponsePlanActivity[l].Justification)
                                                                            </div>
                                                                        }
                                                                    }
                                                                }

                                                            </td>
                                                        </tr>
                                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                                                                        }
                                                                    }

            </tbody>
        </table>
    </div>

    <div class="col-md-12 ml30 pt10 pr10 pb0 pl0 mt20" name="noteFather">
        <div class="col-md-8 mb10 pl0">
            @Confluence.LabelBold(Localization.GetText("RISK.COMMENTS"))
        </div>
        <div class="col-md-4">
            @*Button in edit mode*@
        </div>
        <br />
        <div class="col-md-12 mt15 pr0 pl0">
            <div class="col-md-12 pr0 pl0 textAreaNote textAreaNewNote"></div>
            @for (int j = 0; j < Model.UserComments.Count; j++)
            {
                <div class="col-md-12 pr0 pl0 textAreaNote">
                    <div class="col-md-12 pl0 pr0 internalNote">
                        <div class="col-md-4">
                            @Confluence.Label(Model.UserComments[j].CreatedBy, htmlClass: "ml20 mr20")
                        </div>
                        <div class="col-md-2">
                            @Confluence.LabelGetDate(Model.UserComments[j].Created)
                        </div>
                        <div class="col-md-6">
                            @Confluence.InputCheckbox(Model.UserComments[j].IsRmgComment, string.Format("UserComments[{0}].IsRmgComment", j), string.Format("UserComments_{0}__IsRmgComment", j), Localization.GetText("RISK.RMG.COMMENT"), labelBold: true, value: true, disabled: true)
                        </div>
                        <br /><br />
                        @Confluence.InputTextArea(Model.UserComments[j].Text, null, width: "100%", height: "100px", htmlClass: "", disabled: true, required: false)
                        @Html.HiddenFor(model => model.UserComments[j].Text)
                        <br /><br />
                        @Html.HiddenFor(model => model.UserComments[j].UserCommentId)
                        @Html.HiddenFor(model => model.UserComments[j].IsRmgComment)
                        @Html.HiddenFor(model => model.UserComments[j].Created)
                        @Html.HiddenFor(model => model.UserComments[j].CreatedBy)
                        @Html.HiddenFor(model => model.UserComments[j].Modified)
                        @Html.HiddenFor(model => model.UserComments[j].ModifiedBy)
                    </div>
                </div>
            }
        </div>
    </div>


    <div class="col-md-12 mt20">
        <div class="col-md-10 mb10">
            @Confluence.LabelBold(Localization.GetText("RISK.DOCUMENTS"))
        </div>
        <div class="col-md-2">
            @*Button*@
        </div>
    </div>
    <div class="col-md-12">
        <table class="tableNormal">
            <thead>
                <tr>
                    <th class="sort" width="10%">@Localization.GetText("RISK.USER")</th>
                    <th class="sort" width="10%">@Localization.GetText("RISK.DOCUMENT.DATE")</th>
                    <th class="sort" width="20%">@Localization.GetText("RISK.DOCUMENT.NUMBER")</th>
                    <th class="sort" width="50%">@Localization.GetText("RISK.DESCRIPTION")</th>
                    <th width="10%">@Localization.GetText("RISK.ACTIONS")</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Documents != null)
                {
                    for (int k = 0; k < Model.Documents.Count; k++)
                    {
                        <tr data-id="@Model.Documents[k].DocumentId">
                            <td>
                                @Model.Documents[k].CreatedBy
                                @Html.HiddenFor(model => model.Documents[k].CreatedBy)
                            </td>
                            <td>
                                @Confluence.LabelGetDate(Model.Documents[k].Created)
                                @Html.HiddenFor(model => model.Documents[k].Created)
                            </td>
                            <td>
                                @Model.Documents[k].DocumentReference
                                @Html.HiddenFor(model => model.Documents[k].DocumentReference)
                                @Html.HiddenFor(model => model.Documents[k].DocumentId)
                            </td>
                            <td>
                                @Model.Documents[k].Description
                                @Html.HiddenFor(model => model.Documents[k].Description)
                            </td>
                            <td align="center">
                                @{var secureDownload = IDB.MW.Domain.EntityHelpers.DownloadDocumentHelper.GetDocumentLink(Model.Documents[k].DocumentReference);}

                                <a href="@Html.Encode(secureDownload)" target="_blank">
                                    <div class="buttonDownload documentDownloadSize">
                                        <span class="icon"></span>
                                        <span></span>
                                    </div>
                                </a>
                            </td>
                        </tr>
                                        }
                                    }
            </tbody>
        </table>
    </div>
            <div class="col-md-12 mt20 mb20">
                @if (SecureControlHelper.IsAuthorizedControl(Model.ScreenSecurity.PageName, "btnRiskMatrixEdit", Model.ScreenSecurity.Security) && Model.IsEditableRiskMatrix)
                {
                    <button class="buttonBlue pull-right mr0" type="submit" id="btnRiskMatrixEdit">@Localization.GetText("RISK.EDIT")</button>
                }
            </div>
                                    }