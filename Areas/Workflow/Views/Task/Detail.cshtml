@model IDB.MW.GenericWorkflow.Models.TaskDetailViewModel
@{
    ViewBag.Title = "Index";
}

@{
    var k2Mode = IDB.MW.Infrastructure.Configuration.ConfigurationServiceFactory.Current.GetApplicationSettings().IsK2Mode;
    @Confluence.InputHidden(value: ViewBag.principalTaskName, name: "principalTaskName", required: false)
}
@section CSS
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/loading.css")" />
    @Styles.Render("~/Content/Confluence")
}

@Html.Hidden("hdnSaveChangesUrl", Url.Action("Message", "Tasks", new { area = "Global" }))

@section JavaScript
{
<script type="text/javascript">
    $(document).ready(function () {
        initializeSplitViewState();
        $("#layoutLoadingDiv").show();
    });
    
    initializeGlobalLoader();
    var ValueObjGW = {};
</script>

@{ Html.RenderPartial("../Partials/WorkflowInputValue", Model); }

    @Scripts.Render("~/bundles/scripts")
    @Scripts.Render("~/Scripts/Modules/GenericWorkflow/ModalsGW.js")
    @Scripts.Render("~/Scripts/Modules/GenericWorkflow/SaveGW.js")

    @if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
    {
        <script type="text/javascript">
        ShowMessageFunctions.CurrentFunction = ShowMessageFunctions.GenericFunction;
        registerCallback(function () {
            showMessage("@ViewBag.ErrorMessage", false);
        });
    </script>
    }
    else
    {
        <script type="text/javascript">
        ShowMessageFunctions.CurrentFunction = ShowMessageFunctions.GenericFunction;
        </script>
    }
    @Scripts.Render("~/Scripts/Modules/GenericWorkflow/DetailGW.js")
}

<input type="hidden" id="hdnValidationMessagePath" value="@Url.Action("ValidationMessage", "Tasks")" />
<input type="hidden" id="clasification_" value="0" /><input type="hidden" id="Accept_" value="0" />
<input type="hidden" id="Reject_" value="0" /><input type="hidden" id="Edit_" value="0" />
<input type="hidden" id="EditMessage_" value="0" />
<input type="hidden" id="workflowInstanceId" value="@Model.WorkflowInstanceId" />
<input type="hidden" id="editModeModel" value="@Model.IsEditMode.ToString()" />

<section class="central">
    <div id="fullTaskContainer" class="mod_contenido_central generic_tasks">
        <!--contracts_and_clauses-->
        <h3 class="headingh2">
            <a class="tipo1" href="javascript:void(0)" title="Tasks">@Localization.GetText("Tasks")</a>
        </h3>
        <!--Actions Save-->
        <a id="UrlPostClauseExtension" href="@Url.Action("SaveExtensionClauseTask", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPostClauseFinalStatus" href="@Url.Action("SaveFinalAprovalClauseTask", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPostClauseEligibility" href="@Url.Action("SavePostEligibilityClause", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPostClauseRevolving" href="@Url.Action("SavePostRevolvingClause", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPostSeptember" href="@Url.Action("SaveTask", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPostMarch" href="@Url.Action("SaveTask", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPostSupervisionPlan" href="@Url.Action("SaveSupervisionPlanVersionComments", "Tasks", new {area = "Global"})"></a>
        <a id="UrlPMIFinishTask" href="@Url.Action("FinishPMITask", "Tasks")" hidden="hidden"></a>
        <a id="UrlFinishPMITaskAndSave" href="@Url.Action("FinishPMITaskAndSave", "Tasks")" hidden="hidden"></a>
        <a id="caseFinishRoute" href="javascript:void(0)" hidden="hidden"></a>
        @Html.HiddenFor(x => x.Code)
        @Html.HiddenFor(x => x.TaskId)

        <div class="row row-body-40">
            <div class="col-md-12 pt20">
                <div class="pull-left box_subtitle"><h4 class="headingh2 title_tag">@Model.TaskName</h4></div>
                <div class="pull-right">
                    @Html.Partial("../Partials/Controls/WorkflowTaskButtons", Model)
                </div>
            </div>
        </div>
        <div class="taskBodyContainer">
            <h3 class="hide">Contenido central</h3>
            <div class="operationData dataDetails marginTop2Bottom1">
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Creation on")</p>
                    <p>@(Model.Created.HasValue ? Model.Created.Value.Date.ToString("dd MMMM yyyy") : "-")</p>
                </div>
                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Due on") </p>
                    <p>@(Model.Due.HasValue ? Model.Due.Value.ToString("dd MMMM yyyy") : "-")</p>
                </div>
                <div class="data2">
                    <p class="dataTitle">@Localization.GetText("Workflow")</p>
                    <p class="icon workflow">@Localization.GetText(Model.TaskWorkflow)</p>
                </div>

                <div class="data4">
                    <p class="dataTitle">@Localization.GetText("Priority")</p>
                    @switch (@Model.TaskPriority)
                    {
                        case 0:
                            <p class="item icon low"></p>
                            break;
                        case 1:
                            <p class="item icon medium"></p>
                            break;
                        case 2:
                            <p class="item icon hight"></p>
                            break;
                    }
                </div>
            </div>

            <div class="operationData dataDetails marginTop2Bottom1">
                @{
                    if (ViewBag.ConvarIdbRequest != null)
                    {
                        <div class="data4">
                            <p class="dataTitle">@Localization.GetText("Requested months")</p>
                            <p>@ViewBag.ConvarIdbRequest</p>
                        </div>
                            <div class="data4">
                                <p class="dataTitle">@Localization.GetText("Executor Requested months")</p>
                                <p>@ViewBag.ConvarExecutorRequest</p>
                            </div>
                    }
                    else
                    {
                        <br>
                        if (ViewBag.ConvarRequestedDate != null)
                        {
                            <div class="data4">
                                <p class="dataTitle">@Localization.GetText("Requested date")</p>
                                <p>@String.Format("{0:dd MMM yyy}", @ViewBag.ConvarRequestedDate.ToString())</p>
                            </div>
                        }

                    }
                }
            </div>
            <div class="taskBodyContainer">
                <div>
                    <div>

                        <div>
                            @{ Html.RenderPartial("../Partials/WorkflowTaskData"); }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(Model.SplitViewUrl))
    {
        <div class="splitView">
            <iframe name="splitFrame" 
                    src="@Model.SplitViewUrl" 
                    seamless="seamless" width="100%" scrolling="no" height="auto">
            </iframe>
        </div>
    }
</section>