@model IDB.MW.Business.BusinessRulesModule.DTOs.BRERuleDTO
@{
    Layout = null;
}

<div class="row mb15">
    <div class="col-md-6">
        @Confluence.LabelMainTitle("Back-End Rule Editor")
    </div>
    <div class="col-md-6 ">
        <div data-pagemode="read" class="pull-right">
            @Confluence.ButtonBlue("Back", "Back", dataNavigation: @Url.Action("BusinessRulesEngine", "View"))
            @Confluence.ButtonBlue("Edit", "Edit", "editForm")
        </div>
        <div data-pagemode="edit" class="pull-right">
            @Confluence.ButtonOrange("Compile", "Compile", "Compile")
            @Confluence.ButtonOrange("Save", "Save", "saveForm")
            @Confluence.ButtonLink("Cancel", "Cancel", dataNavigation: @Url.Action("BusinessRulesEngine", "View"))
        </div>
    </div>
</div>

<input type="hidden" id="hidViewModel" value="@ViewBag.SerializedViewModel" />


@if (Model != null)
{
    <div class="row mb10">
        <div class="col-md-2">
            @Confluence.LabelsGroup(title: "Code",
                contentRead: Confluence.LabelBold(Model.Code),
                contentEdit: Confluence.InputText(Model.Code, "Code", id: "Code", width: "100%"),
                asterisk: true
                )
        </div>
        <div class="col-md-2">
            @Confluence.LabelsGroup(title: "Name",
                contentRead: Confluence.LabelBold(Model.Name),
                contentEdit: Confluence.InputText(Model.Name, "Name", id: "Name" , width: "100%"),
                asterisk: true
                )
        </div>
        <div class="col-md-2">
            @Confluence.LabelsGroup(title: "Start Date",
                contentRead: Confluence.LabelBold(Model.StartDate.ToString("dd MMM yyyy")),
                contentEdit: Confluence.InputDatePicker(Model.StartDate, "StartDate", id: "StartDate", width: "100%"),
                asterisk: true
                )
        </div>
        <div class="col-md-2">
            @Confluence.LabelsGroup(title: "End Date",
                contentRead: Confluence.LabelBold(Model.EndDate.ToString("dd MMM yyyy")),
                contentEdit: Confluence.InputDatePicker(Model.EndDate, "EndDate", id: "EndDate", width: "100%"),
                asterisk: true
                )
        </div>
        <div class="col-md-2">
            @Confluence.LabelsGroup(title: "Version",
                contentRead: Confluence.LabelBold(Model.Version),
                contentEdit: Confluence.InputText(Model.Version, "Version", id: "Version", width: "100%"),
                asterisk: true
                )
        </div>

        <div class="col-md-2">
            @Confluence.LabelsGroup(title: "",
                contentRead: Confluence.InputCheckbox(Model.IsEnabled, "IsEnabled", label: "Is Enable?", disabled: true),
                contentEdit: Confluence.InputCheckbox(Model.IsEnabled, "IsEnabled", label: "Is Enable?", id: "IsEnabled")
                )
        </div>
    </div>

    <div class="row mb10">
        <div class="col-md-12">
            @Confluence.LabelsGroup(title: "Description",
                contentRead: Confluence.LabelBold(Model.Description),
             contentEdit: Confluence.InputTextArea(Model.Description, "Description",
                    Model.Description, null,
                    false, false, null, false, null, null,
                    width: "100%", height: "60px"),
                asterisk: true
                )
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <div>
                <label class="lgTit">C# Source Code @Confluence.LabelAsterisk()</label>
                <div data-pagemode="read" class="lgCont mt15">
                    <textarea class="text-box multi-line mt10" id="SourceCodeRead" name="SourceCodeRead">@Html.Raw(Model.SourceCode)</textarea>
                </div>
                <div data-pagemode="edit" class="lgCont mt15">
                    <input type="hidden" id="hiddenSourceCode" name="hiddenSourceCode" value="" />
                    <textarea class="text-box multi-line " id="SourceCodeEdit" name="SourceCodeEdit">@Html.Raw(Model.SourceCode)</textarea>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            @Confluence.LabelsGroup(title: "Input params",
                contentRead: Confluence.LabelBold(""),
                contentEdit: Confluence.InputTextArea("", "InputParams",
                    "", null,
                    false, false, null, false, null, null,
                    width: "100%", height: "200px"),
                asterisk: true
                )

            @Confluence.LabelsGroup(title: "Output params",
                contentRead: Confluence.LabelBold(""),
                contentEdit: Confluence.InputTextArea("", "OutputParams",
                    "", null,
                    false, false, null, false, null, null,
                    width: "100%", height: "200px"),
                asterisk: true
                )
        </div>
    </div>


    <div class="row" data-pagemode="edit">
        <div class="col-md-12">
            <div>
                <label class="lgTit">Compiler output</label>
                <div data-pagemode="read" class="lgCont">
                </div>
                <div data-pagemode="edit" class="lgCont">
                    @Confluence.InputTextArea("", "CompilerOutput", "CompilerOutput", required: false, width: "100%", height: "100px")
                </div>
            </div>
        </div>
    </div>
}